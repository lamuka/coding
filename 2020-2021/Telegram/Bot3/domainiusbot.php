<?php




//$dir=dirname(__FILE__);
//$date=date('dm');
//$time=date('h');

/* if (file_exists(''.dirname(__FILE__).'/filestemp1/')==FALSE) { mkdir(''.dirname(__FILE__).'/filestemp1/'); }
if (file_exists(''.dirname(__FILE__).'/filestemp2/')==FALSE) { mkdir(''.dirname(__FILE__).'/filestemp2/'); }
if (file_exists(''.dirname(__FILE__).'/photos/')==FALSE) { mkdir(''.dirname(__FILE__).'/photos/'); } */

/* if(file_exists(''.dirname(__FILE__).'/include789924953.php'))
{
	require(''.dirname(__FILE__).'/include789924953.php');
}	 */

//array_map('require', glob(''.dirname(__FILE__).'/include*.php'));

/* $filesdir1=''.dirname(__FILE__).'/';
$files=glob(''.$filesdir1.'include*.php');
$cnt2=count($files);
for($o2=0;$o2<$cnt2;$o2++)
{
	require($files[$o2]);
} */
			
			
class TelegramBot{

	public $mainchannel='-1001666944517';  //‚úàÔ∏èPack Itüõç–ë–ê–†–ê–•–û–õ–ö–ê (–ö–ê–ù–ê–õ)
	
	
	public $chatidadmin='000000000';
	public $adminusernames=["xxxxxxx"];
	public $adminchatids=["000000000"];


	//////////////////////////////////
	public $arraybuttonstype=['üß•–û–¥–µ–∂–¥–∞', 'üë†–û–±—É–≤—å', 'üëú–°—É–º–∫–∏', 'üëì–ê–∫—Å–µ—Å—Å—É–∞—Ä—ã', 'üß∏–ò–≥—Ä—É—à–∫–∏', 'üíÑ–ö–æ—Å–º–µ—Ç–∏–∫–∞', 'üõç–ü—Ä–æ—á–µe'];
	public $arraycallbacktype=['clothes', 'shoes', 'bags', 'accessories', 'toys', 'cosmetics', 'other1'];
	
	///
	public $arraybuttonsclothes=['ü•º–í–µ—Ä—Ö–Ω—è—è –æ–¥–µ–∂–¥–∞', 'üß•–ü–∏–¥–∂–∞–∫–∏', 'ü¶∫–ö–æ—Ñ—Ç—ã', 'üëï–§—É—Ç–±–æ–ª–∫–∏', 'üëö–†—É–±–∞—à–∫–∏', 'üëô–ù–∏–∂–Ω–µ–µ –±–µ–ª—å–µ', 'üëñ–î–∂–∏–Ω—Å—ã', 'üëñ–®—Ç–∞–Ω—ã', 'üëó–ü–ª–∞—Ç—å—è', 'ü©≥–ü–ª—è–∂–Ω–∞—è –æ–¥–µ–∂–¥–∞', 'üëó–Æ–±–∫–∏', 'üõç–ü—Ä–æ—áee'];
	public $arraycallbackclothes=['jackets', 'blazers', 'sweatshirts', 'tshirts', 'shirts', 'underwear', 'jeans', 'pants', 'dress', 'beachwear', 'skirts', 'other2'];
	
	public $arraybuttonsshoes=['ü•æ–ë–æ—Ç–∏–Ω–∫–∏', 'üëû–¢—É—Ñ–ª–∏', 'üëü–ö—Ä–æ—Å—Å–æ–≤–∫–∏', 'ü©¥–õ–µ—Ç–Ω—è—è –æ–±—É–≤—å', 'üë¢–°–∞–ø–æ–≥–∏', 'üõç–ü—Äo—á–µ–µ'];
	public $arraycallbackshoes=['boots', 'tufels', 'sneakers', 'summerfoot', 'sapogi', 'other3'];
	
	public $arraybuttonsaccessories=['–ß–∞—Å—ã', '–ì–æ–ª–æ–≤–Ω—ã–µ —É–±–æ—Ä—ã', '–ë–∏–∂—É—Ç–µ—Ä–∏—è', '–ó–æ–Ω—Ç—ã', '–û—á–∫–∏', '–ü–µ—Ä—á–∞—Ç–∫–∏', '–ü–æ—è—Å–∞', '–ê–∫—Å–µ—Å—Å—É–∞—Ä—ã –¥–ª—è –≤–æ–ª–æ—Å', '–üp–æ—á–µ–µ'];
	public $arraycallbackaccessories=['watches', 'hats', 'jewelry', 'umbrellas', 'glasses', 'gloves', 'belts', 'hair', 'other4'];
	
	public $arraybuttonstoys=['–ú—è–≥–∫–∏–µ –∏–≥—Ä—É—à–∫–∏', '–ö–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä—ã', '–ö—É–∫–ª—ã', '–≠–ª–µ–∫—Ç—Ä–æ–Ω–Ω—ã–µ –∏–≥—Ä—É—à–∫–∏', '–ù–∞—Å—Ç–æ–ª—å–Ω—ã–µ –∏–≥—Ä—ã', '–ù–∞–±–æ—Ä—ã', '–ì–æ–ª–æ–≤–æ–ª–æ–º–∫–∏', '–°–ø–æ—Ä—Ç–∏–≤–Ω—ã–µ —Ç–æ–≤–∞—Ä—ã', '–ü—Äo—á–µe'];
	public $arraycallbacktoys=['stuffed', 'kits', 'dolls', 'electro', 'boards', 'sets', 'puzzles', 'sports', 'other5'];
	
	public $arraybuttonsbags=['–†—é–∫–∑–∞–∫–∏', '–ö–æ—à–µ–ª—å–∫–∏', '–†—É—á–Ω—ã–µ —Å—É–º–∫–∏', '–î–æ—Ä–æ–∂–Ω—ã–µ —Å—É–º–∫–∏', '–î–ª—è –Ω–æ—É—Ç–±—É–∫–æ–≤', '–üp–æ—á–µe'];
	public $arraycallbackbags=['backpacks', 'wallets', 'handbags', 'roadbags', 'notebook', 'other6'];
	
	public $arraybuttonscosmetics=['–ì–∏–≥–∏–µ–Ω–∞', 'Make Up', '–£—Ö–æ–¥', '–ü—Äo—áe–µ'];
	public $arraycallbackcosmetics=['hygiene', 'makeup', 'nursing', 'other7'];
	
	public $arraybuttonsother=['üõç–üp–æ—áe–µ'];
	public $arraycallbackother=['other8'];
	
	///
	public $arraybuttonsgender=['–ú—É–∂—á–∏–Ω—ã', '–ñ–µ–Ω—â–∏–Ω—ã', '–î–µ—Ç–∏', '–£–Ω–∏—Å–µ–∫—Å'];
	public $arraycallbackgender=['male', 'female', 'kids', 'unisex'];
	
	///
	public $arraybuttonsgender1=['–ú–∞–ª—å—á–∏–∫–∏', '–î–µ–≤–æ—á–∫–∏', '–£–Ω–∏—Åe–∫—Å'];
	public $arraycallbackgender1=['boys', 'girls', 'unisex1'];
	
	///
	public $arraybuttonscond=['–ù–æ–≤–æ–µ', '–ë/—É'];
	public $arraycallbackcond=['new', 'used'];
	//////////////////////////////////
	
	
	
	
	protected $token = null; 
	protected $bot_name = null;
	public    $api = null;
	protected $result = null;
	protected $commands = [
			"/start" => "cmd_start",
			"/help" => "cmd_help",
			"/admin" => "cmd_admin",
			"/buy" => "cmd_buy",
			"/sell" => "cmd_sell",
			"/main" => "cmd_main",
			
			/* "üõí–ö–£–ü–ò–¢–¨" => "cmd_buy_main_keyboard",
			"üí∞–ü–†–û–î–ê–¢–¨" => "cmd_sell_main_keyboard",
			"üëÅ‚Äçüó®–ê–î–ú–ò–ù" => "cmd_admin_main_keyboard", */
			];
	public $proxy = "";
		
	public $keyboards = 
	[	
		//'default_user' => [  'keyboard' => [['üõí–ö–£–ü–ò–¢–¨', 'üí∞–ü–†–û–î–ê–¢–¨']]  ],
		//'default_admin' => [  'keyboard' => [ ['üõí–ö–£–ü–ò–¢–¨', 'üí∞–ü–†–û–î–ê–¢–¨'], ['üëÅ‚Äçüó®–ê–î–ú–ò–ù']]   ],
		
		'inline_ask_admin' => [  [['text' => 'üü¢–î–∞', 'callback_data' => 'admin_yes'], ['text' => 'üî¥–ù–µ—Ç', 'callback_data' => 'admin_no']], [['text' => '‚§¥Ô∏è–í—ã–π—Ç–∏', 'callback_data' => 'admin_exit_main']]	],
		
		'inline_ask_admin_channel' => [  [['text' => '‚ÑπÔ∏è–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å', 'callback_data' => 'admin_ask_channel_see']], [['text' => '‚ÑπÔ∏è–£–¥–∞–ª–∏—Ç—å', 'callback_data' => 'admin_ask_channel_delete']], [['text' => '‚ÑπÔ∏è–û—Ç–ø—Ä–∞–≤–∏—Ç—å –≤ –∫–∞–Ω–∞–ª', 'callback_data' => 'admin_ask_channel_send']], [['text' => '‚§¥Ô∏è–í—ã–π—Ç–∏', 'callback_data' => 'admin_exit_main']]	],
		
		'inline_ask_admin_buy' => [  [['text' => '‚ÑπÔ∏è–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å', 'callback_data' => 'admin_ask_buy_see'], ['text' => '‚ÑπÔ∏è–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å', 'callback_data' => 'admin_ask_buy_approve']], [['text' => '‚ÑπÔ∏è–û—Ç–∫–∞–∑–∞—Ç—å', 'callback_data' => 'admin_ask_buy_deny']], [['text' => '‚§¥Ô∏è–í—ã–π—Ç–∏', 'callback_data' => 'admin_exit_main']]	],
		
		'inline_phone_user' => [ [['text'=>'üìû–û—Ç–ø—Ä–∞–≤–∏—Ç—å –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞', 'request_contact'=>true]] ],
		
		'inline_want_user' => [  [['text' => 'üì£–û—Ç–ø—Ä–∞–≤–∏—Ç—å –∑–∞–ø—Ä–æ—Å', 'callback_data' => 'admin_default_newuser'], ['text' => '‚§¥Ô∏è–û—Ç–º–µ–Ω–∞', 'callback_data' => 'exit_want_user']]	],
		
		'inline_default_admin' => [  [['text' => 'üõí–ö–£–ü–ò–¢–¨', 'callback_data' => 'default_buy'], ['text' => 'üí∞–ü–†–û–î–ê–¢–¨', 'callback_data' => 'default_sell']], [['text' => 'üëÅ‚Äçüó®–ê–î–ú–ò–ù', 'callback_data' => 'default_admin']]  ],
		
		'inline_admin_main' => [  [['text' => '‚úÖ–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏', 'callback_data' => 'admin_users'], ['text' => '‚úÖ–û–±—ä—è–≤–ª–µ–Ω–∏—è', 'callback_data' => 'admin_records']], [['text' => '‚¨ÖÔ∏è–ù–∞–∑–∞–¥', 'callback_data' => 'admin_back_main'], ['text' => '‚§¥Ô∏è–í—ã–π—Ç–∏', 'callback_data' => 'admin_exit_main']]	],
		
		'inline_admin_users' => [  [['text' => '‚úÖ–£—Ç–≤–µ—Ä–∂–¥–µ–Ω–Ω—ã–µ', 'callback_data' => 'admin_approvedusers']], [['text' => '‚úÖ–í—Å–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏', 'callback_data' => 'admin_allusers']], [['text' => '‚ùî–û—Ç–∫–∞–∑–∞–Ω–Ω—ã–µ', 'callback_data' => 'admin_deniedusers']], [['text' => '‚ùå–ó–∞–±–∞–Ω–µ–Ω–Ω—ã–µ', 'callback_data' => 'admin_bannedusers'], ['text' => '‚ùî–ó–∞–ø—Ä–æ—Å–∏–≤—à–∏–µ', 'callback_data' => 'admin_wantusers']], [['text' => '‚¨ÖÔ∏è–ù–∞–∑–∞–¥', 'callback_data' => 'admin_back_users'], ['text' => '‚§¥Ô∏è–í—ã–π—Ç–∏', 'callback_data' => 'admin_exit_allusers']]	],
		
		'inline_admin_approvedusers' => [  [['text' => '‚ÑπÔ∏è–ò–Ω—Ñ–æ –Ω–∞ —ç–∫—Ä–∞–Ω', 'callback_data' => 'admin_showapprovedusers'], ['text' => '‚ÑπÔ∏è–ò–Ω—Ñ–æ –≤ —Ñ–∞–π–ª', 'callback_data' => 'admin_showapprovedusers_file']], [['text' => '‚ÑπÔ∏è–û–±—ä—è–≤–ª–µ–Ω–∏—è –¥–ª—è –∫–∞–Ω–∞–ª–∞', 'callback_data' => 'admin_showallrecordsapprovedusers'], ['text' => '‚ÑπÔ∏è–¢–æ–≤–∞—Ä—ã –≤ –∫–∞–Ω–∞–ª–µ', 'callback_data' => 'admin_showchannelrecordsapprovedusers']], [['text' => '‚ÑπÔ∏è–£–¥–∞–ª–∏—Ç—å –¥–ª—è –∫–∞–Ω–∞–ª–∞', 'callback_data' => 'admin_deleterecordsapprovedusers'], ['text' => '‚ÑπÔ∏è–£–¥–∞–ª–∏—Ç—å –∏–∑ –∫–∞–Ω–∞–ª–∞', 'callback_data' => 'admin_deleterecordsapprovedusers_channel']], [['text' => '‚ÑπÔ∏è–†–∞–∑–º–µ—Å—Ç–∏—Ç—å –≤ –∫–∞–Ω–∞–ª–µ', 'callback_data' => 'admin_sendchannelapprovedusers'], ['text' => '‚ÑπÔ∏è–û—Ç–º–µ—Ç–∏—Ç—å –ø—Ä–æ–¥–∞–∂—É', 'callback_data' => 'admin_send_sold_channel']], [['text' => '‚ÑπÔ∏è–ó–∞–±–∞–Ω–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è', 'callback_data' => 'admin_banapprovedusers']], [['text' => '‚ÑπÔ∏è–û—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –≤—Å–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º', 'callback_data' => 'admin_sendmessageapprovedusers']], [['text' => '‚¨ÖÔ∏è–ù–∞–∑–∞–¥', 'callback_data' => 'admin_back_main_menu'], ['text' => '‚§¥Ô∏è–í—ã–π—Ç–∏', 'callback_data' => 'admin_exit_main']]	],
		
		'inline_admin_allusers' => [  [['text' => '‚ÑπÔ∏è–ò–Ω—Ñ–æ –Ω–∞ —ç–∫—Ä–∞–Ω', 'callback_data' => 'admin_showallusers'], ['text' => '‚ÑπÔ∏è–ò–Ω—Ñ–æ –≤ —Ñ–∞–π–ª', 'callback_data' => 'admin_showallusers_file']], [['text' => '‚ÑπÔ∏è–ó–∞–±–∞–Ω–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è', 'callback_data' => 'admin_banallusers']],[['text' => '‚¨ÖÔ∏è–ù–∞–∑–∞–¥', 'callback_data' => 'admin_back_main_menu'], ['text' => '‚§¥Ô∏è–í—ã–π—Ç–∏', 'callback_data' => 'admin_exit_main']]	],
		
		'inline_admin_deniedusers' => [  [['text' => '‚ÑπÔ∏è–ü–æ–∫–∞–∑–∞—Ç—å –æ—Ç–∫–∞–∑–∞–Ω–Ω—ã—Ö', 'callback_data' => 'admin_showdeniedusers'], ['text' => '‚ÑπÔ∏è–£—Ç–≤–µ—Ä–¥–∏—Ç—å –æ—Ç–∫–∞–∑–∞–Ω–Ω—ã—Ö', 'callback_data' => 'admin_unbandeniedusers']], [['text' => '‚¨ÖÔ∏è–ù–∞–∑–∞–¥', 'callback_data' => 'admin_back_main_menu'], ['text' => '‚§¥Ô∏è–í—ã–π—Ç–∏', 'callback_data' => 'admin_exit_main']]	],
		
		'inline_admin_bannedusers' => [  [['text' => '‚ÑπÔ∏è–ü–æ–∫–∞–∑–∞—Ç—å –∑–∞–±–∞–Ω–µ–Ω–Ω—ã—Ö', 'callback_data' => 'admin_showbannedusers'], ['text' => '‚ÑπÔ∏è–†–∞–∑–±–∞–Ω–∏—Ç—å –∑–∞–±–∞–Ω–µ–Ω–Ω—ã—Ö', 'callback_data' => 'admin_unbanbannedusers']], [['text' => '‚¨ÖÔ∏è–ù–∞–∑–∞–¥', 'callback_data' => 'admin_back_main_menu'], ['text' => '‚§¥Ô∏è–í—ã–π—Ç–∏', 'callback_data' => 'admin_exit_main']]	],
		
		'inline_admin_wantusers' => [  [['text' => '‚ÑπÔ∏è–ü–æ–∫–∞–∑–∞—Ç—å –∑–∞–ø—Ä–æ—Å–∏–≤—à–∏—Ö', 'callback_data' => 'admin_showwantusers'], ['text' => '‚èπ–£—Ç–≤–µ—Ä–¥–∏—Ç—å –∑–∞–ø—Ä–æ—Å–∏–≤—à–∏—Ö', 'callback_data' => 'admin_approvewantusers'], ['text' => '‚èπ–û—Ç–∫–∞–∑–∞—Ç—å –∑–∞–ø—Ä–æ—Å–∏–≤—à–∏–º', 'callback_data' => 'admin_denywantusers']], [['text' => '‚¨ÖÔ∏è–ù–∞–∑–∞–¥', 'callback_data' => 'admin_back_main_menu'], ['text' => '‚§¥Ô∏è–í—ã–π—Ç–∏', 'callback_data' => 'admin_exit_main']]	],
		
		'inline_admin_records' => [  [['text' => '‚ÑπÔ∏è–ü–æ–∫–∞–∑–∞—Ç—å —Ç–æ–≤–∞—Ä –ø–æ ID', 'callback_data' => 'admin_show_records_channel']], [['text' => '‚ÑπÔ∏è–í—Å–µ —Ç–æ–≤–∞—Ä—ã –≤ —Ñ–∞–π–ª', 'callback_data' => 'admin_show_records_channel_file'], ['text' => '‚ÑπÔ∏è–£–¥–∞–ª–∏—Ç—å —Ç–æ–≤–∞—Ä—ã', 'callback_data' => 'admin_delete_records_channel']], [['text' => '‚ÑπÔ∏è–û—Ç–º–µ—Ç–∏—Ç—å –ø—Ä–æ–¥–∞–∂—É', 'callback_data' => 'admin_sendsold_records_channel'], ['text' => '‚ÑπÔ∏è–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∑–∞–∫–∞–∑—ã', 'callback_data' => 'admin_orders_records_channel']], [['text' => '‚ÑπÔ∏è–ü—Ä–æ–¥–∞–Ω–Ω—ã–µ —Ç–æ–≤–∞—Ä—ã', 'callback_data' => 'admin_sold_records_channel']], [['text' => '‚¨ÖÔ∏è–ù–∞–∑–∞–¥', 'callback_data' => 'admin_back_records_menu'], ['text' => '‚§¥Ô∏è–í—ã–π—Ç–∏', 'callback_data' => 'admin_exit_records_menu']]	],
		
		'inline_admin_orders_records_channel' => [  [['text' => '‚ÑπÔ∏è–ù–∞ —ç–∫—Ä–∞–Ω', 'callback_data' => 'admin_orders_records_channel_display'], ['text' => '‚ÑπÔ∏è–§–∞–π–ª', 'callback_data' => 'admin_orders_records_channel_file']], [['text' => '‚¨ÖÔ∏è–ù–∞–∑–∞–¥', 'callback_data' => 'admin_back_orders_records_channel'], ['text' => '‚§¥Ô∏è–í—ã–π—Ç–∏', 'callback_data' => 'admin_exit_orders_records_channel']]	],
		
		'inline_admin_sold_records_channel' => [  [['text' => '‚ÑπÔ∏è–ù–∞ —ç–∫—Ä–∞–Ω', 'callback_data' => 'admin_sold_records_channel_display'], ['text' => '‚ÑπÔ∏è–§–∞–π–ª', 'callback_data' => 'admin_sold_records_channel_file']], [['text' => '‚¨ÖÔ∏è–ù–∞–∑–∞–¥', 'callback_data' => 'admin_back_sold_records_channel'], ['text' => '‚§¥Ô∏è–í—ã–π—Ç–∏', 'callback_data' => 'admin_exit_sold_records_channel']]	],
		
		
		
		

		'inline_default' => [  [['text' => 'üõí–ö–£–ü–ò–¢–¨', 'callback_data' => 'default_buy'], ['text' => 'üí∞–ü–†–û–î–ê–¢–¨', 'callback_data' => 'default_sell']]  ],
		
		//'inline_buy_default' => [  [['text' => '‚ÑπÔ∏è–ü–æ–∫–∞–∑–∞—Ç—å', 'callback_data' => 'ready_buy']], [['text' => '‚ÑπÔ∏è–ö—É–ø–∏—Ç—å –ø–æ ID —Ç–æ–≤–∞—Ä–∞', 'callback_data' => 'byrecordid_default_buy']], [['text' => '‚ÑπÔ∏è–§–∏–ª—å—Ç—Ä', 'callback_data' => 'filter_default_buy'], ['text' => 'üîÄ–°–±—Ä–æ—Å–∏—Ç—å —Ñ–∏–ª—å—Ç—Ä—ã', 'callback_data' => 'resetfilters_default_buy']], [['text' => '‚¨ÖÔ∏è–ù–∞–∑–∞–¥', 'callback_data' => 'buy_back_main'], ['text' => '‚§¥Ô∏è–í—ã–π—Ç–∏', 'callback_data' => 'buy_exit_main']]  ],
		
		'inline_buy_default' => [  [['text' => '‚ÑπÔ∏è–í—ã–±—Ä–∞—Ç—å', 'callback_data' => 'choose_default_buy']], [['text' => '‚ÑπÔ∏è–ö—É–ø–∏—Ç—å –ø–æ ID —Ç–æ–≤–∞—Ä–∞', 'callback_data' => 'byrecordid_default_buy']], [['text' => '‚¨ÖÔ∏è–ù–∞–∑–∞–¥', 'callback_data' => 'buy_back_main'], ['text' => '‚§¥Ô∏è–í—ã–π—Ç–∏', 'callback_data' => 'buy_exit_main']]  ],
		
		'inline_buy_filter' => [  [['text' => 'üìñ–ö–∞—Ç–µ–≥–æ—Ä–∏—è', 'callback_data' => 'filter_buy_type'], ['text' => 'üßæ–í–∏–¥', 'callback_data' => 'filter_buy_cat'], ['text' => 'üë®‚Äçüë©‚Äçüë¶–ü–æ–ª', 'callback_data' => 'filter_buy_gender']], [['text' => 'üéè–°–æ—Å—Ç–æ—è–Ω–∏–µ', 'callback_data' => 'filter_buy_cond'], ['text' => 'üíµ–¶–µ–Ω–∞', 'callback_data' => 'filter_buy_price']], [['text' => 'üîÄ–°–±—Ä–æ—Å–∏—Ç—å —Ñ–∏–ª—å—Ç—Ä—ã', 'callback_data' => 'filter_resetfilters_buy']], [['text' => '‚¨ÖÔ∏è–ù–∞–∑–∞–¥', 'callback_data' => 'filter_buy_back_main'], ['text' => '‚§¥Ô∏è–í—ã–π—Ç–∏', 'callback_data' => 'filter_buy_exit_main']]  ],
		
		'inline_sell' => [  [['text' => '‚úÖ–°–æ–∑–¥–∞—Ç—å –æ–±—ä—è–≤–ª–µ–Ω–∏–µ', 'callback_data' => 'sell_add']], [['text' => 'üñã–ò–∑–º–µ–Ω–∏—Ç—å –æ–±—ä—è–≤–ª–µ–Ω–∏–µ', 'callback_data' => 'sell_change']], [['text' => '‚¨ÖÔ∏è–ù–∞–∑–∞–¥', 'callback_data' => 'back_sell_main'], ['text' => '‚§¥Ô∏è–í—ã–π—Ç–∏', 'callback_data' => 'exit_sell_main']]  ],
		
		//'inline_change' => [  [['text' => 'üî£–û–±—ä—è–≤–ª–µ–Ω–∏—è –≤ –∫–∞–Ω–∞–ª–µ', 'callback_data' => 'change_channel_records'], ['text' => 'üî§–í—Å–µ –æ–±—ä—è–≤–ª–µ–Ω–∏—è', 'callback_data' => 'change_all_records']], [['text' => 'üî£–£–¥–∞–ª–∏—Ç—å –æ–±—ä—è–≤–ª–µ–Ω–∏—è –≤ –∫–∞–Ω–∞–ª–µ', 'callback_data' => 'change_delete_records_channel'], ['text' => 'üî£–£–¥–∞–ª–∏—Ç—å –¥—Ä—É–≥–∏–µ –æ–±—ä—è–≤–ª–µ–Ω–∏—è', 'callback_data' => 'change_delete_records_other']], [['text' => 'üî§–†–∞–∑–º–µ—Å—Ç–∏—Ç—å –≤ –∫–∞–Ω–∞–ª–µ', 'callback_data' => 'change_send_channel'], ['text' => 'üî§–û—Ç–º–µ—Ç–∏—Ç—å –ø—Ä–æ–¥–∞–∂—É', 'callback_data' => 'change_send_sold']], [['text' => '‚¨ÖÔ∏è–ù–∞–∑–∞–¥', 'callback_data' => 'change_back_main'], ['text' => '‚§¥Ô∏è–í—ã–π—Ç–∏', 'callback_data' => 'change_exit_main']]  ],
		
		'inline_change' => [  [['text' => 'üìÉ–ú–æ–∏ —Ä–∞–∑–º–µ—â–µ–Ω–Ω—ã–µ –æ–±—ä—è–≤–ª–µ–Ω–∏—è', 'callback_data' => 'change_channel_records']], [['text' => 'üíæ–ú–æ–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–µ –¥–ª—è –ø—É–±–ª–∏–∫–∞—Ü–∏–∏', 'callback_data' => 'change_all_records']], [['text' => 'üóë–£–¥–∞–ª–∏—Ç—å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–µ –¥–ª—è –ø—É–±–ª–∏–∫–∞—Ü–∏–∏', 'callback_data' => 'change_delete_records_other']], [['text' => 'üöÄ–û–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–µ –¥–ª—è –ø—É–±–ª–∏–∫–∞—Ü–∏–∏', 'callback_data' => 'change_askadmin_send_channel']], [['text' => '‚¨ÖÔ∏è–ù–∞–∑–∞–¥', 'callback_data' => 'change_back_main'], ['text' => '‚§¥Ô∏è–í—ã–π—Ç–∏', 'callback_data' => 'change_exit_main']]  ],
		
		
		'inline_photo' => [  [['text' => '‚úÖ–î–∞', 'callback_data' => 'inline_photo_yes'], ['text' => '‚ùå–ù–µ—Ç', 'callback_data' => 'inline_photo_no']], [['text' => 'üîÑ–ò–∑–º–µ–Ω–∏—Ç—å —Ñ–æ—Ç–æ', 'callback_data' => 'change_sell_add_photo']], [['text' => '‚¨ÖÔ∏è–ù–∞–∑–∞–¥', 'callback_data' => 'back_sell_add_photo'], ['text' => '‚§¥Ô∏è–í—ã–π—Ç–∏', 'callback_data' => 'exit_sell_add_photo']]	],
		
		'inline_sell_moderate' => [  [['text' => 'üöÄ–û—Ç–ø—Ä–∞–≤–∏—Ç—å –≤ –∫–∞–Ω–∞–ª', 'callback_data' => 'inline_add_send_moderate']], [['text' => 'üóë–£–¥–∞–ª–∏—Ç—å –æ–±—ä—è–≤–ª–µ–Ω–∏–µ', 'callback_data' => 'inline_add_send_delete']], [['text' => '‚è≥–°–æ—Ö—Ä–∞–Ω–∏—Ç—å –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –ø–æ–∑–∂–µ', 'callback_data' => 'inline_add_send_later']], [['text' => '‚§¥Ô∏è–í—ã–π—Ç–∏', 'callback_data' => 'exit_sell_add_photo']]	],
		
	];
	
	
	
	public $pre='<pre>                                                                                                       ‚ùóÔ∏è</pre>';
	
/////	
	public function clean($uncleaned) 
	{
		$uncleaned=preg_replace('/^\h*\v+/m', '', $uncleaned);
		$uncleaned=preg_replace('/^[ \t]+|[ \t]+$/m', '', $uncleaned);
		$uncleaned=preg_replace('/\A[ \t]*\r?\n|\r?\n[ \t]*\Z/m', '', $uncleaned);
		$uncleaned=ltrim($uncleaned);
		$uncleaned=rtrim($uncleaned);
		$uncleaned=preg_replace('/\s{2,}/', ' ', $uncleaned);
		return($uncleaned);
	}

/////	
	public function convert_rus($input) 
	{
		$arraybuttons=array_merge($this->arraybuttonstype, $this->arraybuttonsclothes, $this->arraybuttonsshoes, $this->arraybuttonsaccessories, $this->arraybuttonstoys, $this->arraybuttonsbags, $this->arraybuttonscosmetics, $this->arraybuttonsother, $this->arraybuttonsgender, $this->arraybuttonsgender1, $this->arraybuttonscond);
		$arraycallback=array_merge($this->arraycallbacktype, $this->arraycallbackclothes, $this->arraycallbackshoes, $this->arraycallbackaccessories, $this->arraycallbacktoys, $this->arraycallbackbags, $this->arraycallbackcosmetics, $this->arraycallbackother, $this->arraycallbackgender, $this->arraycallbackgender1, $this->arraycallbackcond);

		$count=count($arraycallback);
		
		for($i=0;$i<$count;$i++)
		{
			if($input==$arraycallback[$i])
			{
				$output=$arraybuttons[$i];
				break;
			}
		}
		return $output;
	}
	
/////	
	public function convert_en($input) 
	{
		$arraybuttons=array_merge($this->arraybuttonstype, $this->arraybuttonsclothes, $this->arraybuttonsshoes, $this->arraybuttonsaccessories, $this->arraybuttonstoys, $this->arraybuttonsbags, $this->arraybuttonscosmetics, $this->arraybuttonsother, $this->arraybuttonsgender, $this->arraybuttonsgender1, $this->arraybuttonscond);
		$arraycallback=array_merge($this->$arraycallbacktype, $this->arraycallbackclothes, $this->arraycallbackshoes, $this->arraycallbackaccessories, $this->arraycallbacktoys, $this->arraycallbackbags, $this->arraycallbackcosmetics, $this->arraycallbackother, $this->arraycallbackgender, $this->arraycallbackgender1, $this->arraycallbackcond);

		$count=count($arraybuttons);
		for($i=0;$i<$count;$i++)
		{
			if($input==$arraybuttons[$i])
			{
				$output=$arraycallback[$i];
				break;
			}
		}
		return $output;
	}
	
/////	
	public function convert_type_cat($input) 
	{
		if($input=='clothes')
		{
			$arraybuttons=$this->arraybuttonsclothes;
			$arraycallback=$this->arraycallbackclothes;
		}
		elseif($input=='shoes')
		{
			$arraybuttons=$this->arraybuttonsshoes;
			$arraycallback=$this->arraycallbackshoes;
		}
		elseif($input=='accessories')
		{
			$arraybuttons=$this->arraybuttonsaccessories;
			$arraycallback=$this->arraycallbackaccessories;
		}
		elseif($input=='toys')
		{
			$arraybuttons=$this->arraybuttonstoys;
			$arraycallback=$this->arraycallbacktoys;
		}
		elseif($input=='bags')
		{
			$arraybuttons=$this->arraybuttonsbags;
			$arraycallback=$this->arraycallbackbags;
		}
		elseif($input=='cosmetics')
		{
			$arraybuttons=$this->arraybuttonscosmetics;
			$arraycallback=$this->arraycallbackcosmetics;
		}
		elseif($input=='other8')
		{
			$arraybuttons=$this->arraybuttonsother;
			$arraycallback=$this->arraycallbackother;
		}
		
		
		
		$arraybuttons=array_merge($this->arraybuttonstype, $this->arraybuttonsclothes, $this->arraybuttonsshoes, $this->arraybuttonsaccessories, $this->arraybuttonstoys, $this->arraybuttonsbags, $this->arraybuttonscosmetics, $this->arraybuttonsother, $this->arraybuttonsgender, $this->arraybuttonscond);
		$arraycallback=array_merge($this->$arraycallbacktype, $this->arraycallbackclothes, $this->arraycallbackshoes, $this->arraycallbackaccessories, $this->arraycallbacktoys, $this->arraycallbackbags, $this->arraycallbackcosmetics, $this->arraycallbackother, $this->arraycallbackgender, $this->arraycallbackcond);

		$count=count($arraybuttons);
		for($i=0;$i<$count;$i++)
		{
			if($input==$arraybuttons[$i])
			{
				$output=$arraycallback[$i];
				break;
			}
		}
		return $output;
	}
	
/////
	public function cmd_sql()
	{		
		$host='127.0.0.1'; 
		$user='xxxxxxx'; 
		$pass='xxxxxxx'; 
		$dbn='baraholka';
	
		$con_sql1=mysqli_connect($host, $user, $pass);
		if(mysqli_query($con_sql1, 'CREATE DATABASE '.$dbn.'')) 
		{ 
			mysqli_close($con_sql1);
		}
		
		$con_sql2=mysqli_connect($host, $user, $pass, $dbn);
		if (mysqli_connect_errno()) 
		{
			printf('Connect failed: %s\n', mysqli_connect_error());
			exit;
		}
		

		mysqli_set_charset($con_sql2, 'utf8mb4');
		
		return $con_sql2;
	}
	

/////


/////
	public function cmd_sql_createchatidtable($table)
	{		
		$con_sql2=$this->cmd_sql();
		
		if(mysqli_query($con_sql2, 'SELECT 1 FROM '.$table.' LIMIT 1')==FALSE)
		{
			mysqli_query($con_sql2, 'CREATE TABLE '.$table.' (id INT(4) UNSIGNED AUTO_INCREMENT PRIMARY KEY,chatid VARCHAR(15),firstname VARCHAR(50),lastname VARCHAR(50),username VARCHAR(50),phone VARCHAR(15),fio VARCHAR(100)) ENGINE = InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;');
			usleep(100000);
		}
	}


/////
	public function cmd_sql_searchchatidtable($table, $chatid)
	{	
		
		$con_sql2=$this->cmd_sql();

		$query=mysqli_query($con_sql2, 'SELECT DISTINCT chatid FROM '.$table.'');
		usleep(100000);
		$con=mysqli_num_rows($query);
		usleep(50000);
		
		for($i=0;$i<$con;$i++)
		{
			mysqli_data_seek($query, $i);
			usleep(50000);
			$row[$i]=mysqli_fetch_row($query);
			usleep(50000);
		}
		
		if($this->cmd_arraysearch($row, $chatid))
		//if(in_array($chatid, $row))
		{
			return true;
		}
		
		return false;
	}

/////
	public function cmd_arraysearch($array, $value)
	{
		if(is_array($array))
		{
			if(!empty($array))
			{
				$arrayvalues=array_values($array);
				
				foreach($arrayvalues as $arrayvalue)
				{
					if(is_array($arrayvalue))
					{
						if(!empty($arrayvalue))
						{
							if($this->cmd_arraysearch($arrayvalue, $value))
							{
								return true;
							}
						}
					}
					else
					{
						if(in_array($value, $arrayvalues))
						{
							return true;
						}
					}
				}
			}
		}
		
		return false;
	}


/////	
	public function cmd_buy_main_keyboard()
	{
		$con_sql2=$this->cmd_sql();
		
		$tab='tabtype'.$this->api->chatId.'';
		
		if(mysqli_query($con_sql2, 'SELECT 1 FROM '.$tab.' LIMIT 1'))
		{
			$query1=mysqli_query($con_sql2, 'DROP TABLE '.$tab.'');
			usleep(250000);	
		}
		
		$tab='tabcat'.$this->api->chatId.'';
		
		if(mysqli_query($con_sql2, 'SELECT 1 FROM '.$tab.' LIMIT 1'))
		{
			$query1=mysqli_query($con_sql2, 'DROP TABLE '.$tab.'');
			usleep(250000);	
		}
		
		$tab='tabgender'.$this->api->chatId.'';
		
		if(mysqli_query($con_sql2, 'SELECT 1 FROM '.$tab.' LIMIT 1'))
		{
			$query1=mysqli_query($con_sql2, 'DROP TABLE '.$tab.'');
			usleep(250000);	
		}
	
		$tab='tabprice'.$this->api->chatId.'';
		
		if(mysqli_query($con_sql2, 'SELECT 1 FROM '.$tab.' LIMIT 1'))
		{
			$query1=mysqli_query($con_sql2, 'DROP TABLE '.$tab.'');
			usleep(250000);	
		}
		
		$tab='tabservice'.$this->api->chatId.'';
		
		if(mysqli_query($con_sql2, 'SELECT 1 FROM '.$tab.' LIMIT 1'))
		{
			$query1=mysqli_query($con_sql2, 'DROP TABLE '.$tab.'');
			usleep(250000);	
		}
		

		$query1=mysqli_query($con_sql2, 'SHOW TABLES LIKE "tabmain%"');
		$con1=mysqli_num_rows($query1);
		
		if($con1!=0)
		{	
		
			$table=[];
			$check=0;
			
			for($i=0;$i<$con1;$i++)
			{
				mysqli_data_seek($query1, $i);
				$row1[$i]=mysqli_fetch_row($query1);
				$tab=$row1[$i][0];
				
				$query=mysqli_query($con_sql2, 'SELECT * FROM '.$tab.' WHERE messid!="0" ORDER by id ASC');
				usleep(100000);
				$con=mysqli_num_rows($query);
					
				if($con!=0)
				{	
					$check=1;
					break;
				}
			}
			
			if($check==1)
			{
			
				$text='–í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ –º–µ–Ω—é <b>–ö—É–ø–∏—Ç—å</b>.'.PHP_EOL.'–î–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ —Ç–æ–≤–∞—Ä–æ–≤ –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É <b>–í—ã–±—Ä–∞—Ç—å</b>'.PHP_EOL.'–î–ª—è –ø–æ–∫—É–ø–∫–∏ —Ç–æ–≤–∞—Ä–∞ –ø–æ –Ω–æ–º–µ—Ä—É ID –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É <b>–ö—É–ø–∏—Ç—å –ø–æ ID —Ç–æ–≤–∞—Ä–∞.</b>'.$this->pre.'';
				
				$this->api->sendMessage([
				'text' => $text,
				'reply_markup' => json_encode( ['inline_keyboard'=>$this->keyboards['inline_buy_default']]),
				'disable_notification' => TRUE,
				'disable_web_page_preview' => TRUE,
				'parse_mode'=> "HTML"
				]);
				usleep(100000);
				//$this->callbackAnswer( $text, $this->keyboards['inline_buy_default']);
			}
			else
			{

				if($this->cmd_isadmin())
				{
					$text='–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é –≤ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç <b>–Ω–µ—Ç —Ç–æ–≤–∞—Ä–æ–≤ –≤ –ø—Ä–æ–¥–∞–∂–µ</b>.'.PHP_EOL.'–í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ –≥–ª–∞–≤–Ω–æ–º –º–µ–Ω—é.'.$this->pre.'';
					$this->api->sendMessage([
					'text' => $text,
					'reply_markup' => json_encode( ['inline_keyboard'=>$this->keyboards['inline_default_admin']]),
					'disable_notification' => TRUE,
					'disable_web_page_preview' => TRUE,
					'parse_mode'=> "HTML"
					]);
					
					//$this->callbackAnswer( $text, $this->keyboards['inline_default_admin']);
					usleep(100000);
				}
				else
				{
					$text='–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é –≤ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç <b>–Ω–µ—Ç —Ç–æ–≤–∞—Ä–æ–≤ –≤ –ø—Ä–æ–¥–∞–∂–µ</b>.'.PHP_EOL.'–í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ –≥–ª–∞–≤–Ω–æ–º –º–µ–Ω—é.'.$this->pre.'';
					
					$this->api->sendMessage([
					'text' => $text,
					'reply_markup' => json_encode( ['inline_keyboard'=>$this->keyboards['inline_default']]),
					'disable_notification' => TRUE,
					'disable_web_page_preview' => TRUE,
					'parse_mode'=> "HTML"
					]);
					//$this->callbackAnswer( $text, $this->keyboards['inline_default']);
					usleep(100000);
				}
					
			}
			
		}
		else
		{
			if($this->cmd_isadmin())
			{
				$text='–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é –≤ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç <b>–Ω–µ—Ç —Ç–æ–≤–∞—Ä–æ–≤ –≤ –ø—Ä–æ–¥–∞–∂–µ</b>.'.PHP_EOL.'–í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ –≥–ª–∞–≤–Ω–æ–º –º–µ–Ω—é.'.$this->pre.'';
				$this->api->sendMessage([
					'text' => $text,
					'reply_markup' => json_encode( ['inline_keyboard'=>$this->keyboards['inline_default_admin']]),
					'disable_notification' => TRUE,
					'disable_web_page_preview' => TRUE,
					'parse_mode'=> "HTML"
					]);
				//$this->callbackAnswer( $text, $this->keyboards['inline_default_admin']);
				usleep(100000);
			}
			else
			{
				$text='–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é –≤ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç <b>–Ω–µ—Ç —Ç–æ–≤–∞—Ä–æ–≤ –≤ –ø—Ä–æ–¥–∞–∂–µ</b>.'.PHP_EOL.'–í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ –≥–ª–∞–≤–Ω–æ–º –º–µ–Ω—é.'.$this->pre.'';
				$this->api->sendMessage([
					'text' => $text,
					'reply_markup' => json_encode( ['inline_keyboard'=>$this->keyboards['inline_default']]),
					'disable_notification' => TRUE,
					'disable_web_page_preview' => TRUE,
					'parse_mode'=> "HTML"
					]);
				//$this->callbackAnswer( $text, $this->keyboards['inline_default']);
				usleep(100000);
			}
		}
		
	}
	
/////	
	public function cmd_sell_main_keyboard()
	{
		$con_sql2=$this->cmd_sql();
		
		$tabserviceadd='tabserviceadd'.$this->api->chatId.'';
		if(mysqli_num_rows(mysqli_query($con_sql2, 'SELECT 1 FROM '.$tabserviceadd.' WHERE id LIKE "%" LIMIT 1'))!=0)
		{
			mysqli_query($con_sql2, 'TRUNCATE TABLE '.$tabserviceadd.'');
			usleep(100000);
		}
		
		$tabtempphoto='tabtempphoto'.$this->api->chatId.'';
		//if(mysqli_num_rows(mysqli_query($con_sql2, 'SELECT 1 FROM '.$tabtempphoto.' WHERE id LIKE "%" LIMIT 1'))!=0)
		if(mysqli_query($con_sql2, 'SELECT 1 FROM '.$tabtempphoto.' LIMIT 1'))
		{
			mysqli_query($con_sql2, 'DROP TABLE '.$tabtempphoto.'');
			usleep(100000);
		}
		
		$tabserviceuser='tabserviceuser'.$this->api->chatId.'';
		if(mysqli_num_rows(mysqli_query($con_sql2, 'SELECT 1 FROM '.$tabserviceuser.' WHERE id LIKE "%" LIMIT 1'))!=0)
		{
			mysqli_query($con_sql2, 'TRUNCATE TABLE '.$tabserviceuser.'');
			usleep(100000);
		}
		
		if($this->cmd_isadmin())
		{
			$tabserviceadmin='tabserviceadmin'.$this->api->chatId.'';
			if(mysqli_query($con_sql2, 'TRUNCATE TABLE '.$tabserviceadmin.''))
			{
				usleep(100000);
			}
		}
		
		$text='–í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ –≥–ª–∞–≤–Ω–æ–º –º–µ–Ω—é üí∞<b>–ü—Ä–æ–¥–∞—Ç—å</b>.'.$this->pre.'';
		
		$this->api->sendMessage([
		'text' => $text,
		'reply_markup' => json_encode( ['inline_keyboard'=>$this->keyboards['inline_sell']]),
		'disable_notification' => TRUE,
		'disable_web_page_preview' => TRUE,
		'parse_mode'=> "HTML"
		]);
		usleep(100000);
	}
	
/////	
	public function cmd_admin_main_keyboard()
	{
		$con_sql2=$this->cmd_sql();
		$tabserviceadmin='tabserviceadmin'.$this->api->chatId.'';
		if(mysqli_query($con_sql2, 'TRUNCATE TABLE '.$tabserviceadmin.''))
		{
			usleep(100000);
		}
		$tabserviceadd='tabserviceadd'.$this->api->chatId.'';
		if(mysqli_query($con_sql2, 'TRUNCATE TABLE '.$tabserviceadd.''))
		{
			usleep(100000);
		}
		
		$tabserviceuser='tabserviceuser'.$this->api->chatId.'';
		if(mysqli_query($con_sql2, 'TRUNCATE TABLE '.$tabserviceuser.''))
		{
			usleep(100000);
		}
		
		$tabservicefio='tabservicefio'.$this->api->chatId.'';
		if(mysqli_query($con_sql2, 'TRUNCATE TABLE '.$tabservicefio.''))
		{
			usleep(100000);
		}
		
		$tabtempphoto='tabtempphoto'.$this->api->chatId.'';
		//if(mysqli_num_rows(mysqli_query($con_sql2, 'SELECT 1 FROM '.$tabtempphoto.' WHERE id LIKE "%" LIMIT 1'))!=0)
		if(mysqli_query($con_sql2, 'DROP TABLE '.$tabtempphoto.''))
		{
			usleep(100000);
		}
		
		$tab='tabtype'.$this->api->chatId.'';
		if(mysqli_query($con_sql2, 'DROP TABLE '.$tab.''))
		{
			usleep(100000);
		}
		$tab='tabcat'.$this->api->chatId.'';
		if(mysqli_query($con_sql2, 'DROP TABLE '.$tab.''))
		{
			usleep(100000);
		}
		$tab='tabgender'.$this->api->chatId.'';
		if(mysqli_query($con_sql2, 'DROP TABLE '.$tab.''))
		{
			usleep(100000);
		}
		$tab='tabcond'.$this->api->chatId.'';
		if(mysqli_query($con_sql2, 'DROP TABLE '.$tab.''))
		{
			usleep(100000);		
		}
		$tab='tabprice'.$this->api->chatId.'';
		if(mysqli_query($con_sql2, 'DROP TABLE '.$tab.''))
		{
			usleep(100000);	
		}
		$tab='tabservice'.$this->api->chatId.'';
		if(mysqli_query($con_sql2, 'DROP TABLE '.$tab.''))
		{
			usleep(100000);
		}
			
		$text='–í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ –≥–ª–∞–≤–Ω–æ–º –º–µ–Ω—é üëÅ‚Äçüó®<b>–ê–¥–º–∏–Ω</b>.'.$this->pre.'';
		
		$this->api->sendMessage([
		'text' => $text,
		'reply_markup' => json_encode( ['inline_keyboard'=>$this->keyboards['inline_admin_main']]),
		'disable_notification' => TRUE,
		'disable_web_page_preview' => TRUE,
		'parse_mode'=> "HTML"
		]);
		usleep(100000);
	}
	

/////
	public function cmd_isadmin()
	{
		
		if(isset($this->api->username))
		{
			if(in_array($this->api->username, $this->adminusernames))
			{
				return true;
			}
			else
			{
				return false;
			}
		}
		else
		{
			if(in_array($this->api->chatId, $this->adminchatids))
			{
				return true;
			}
			else
			{
				return false;
			}
		}
		
	}
	
	
/////
	public function cmd_isadmin1($chatid)
	{
		
			if(in_array($chatid, $this->adminchatids))
			{
				return true;
			}
			else
			{
				return false;
			}
		
		
	}
/////
	public function cmd_user_get_fio($chatid)
	{
		$con_sql2=$this->cmd_sql();
		$tabserviceusers='tabserviceusers';
		
		$query=mysqli_query($con_sql2, 'SELECT * FROM '.$tabserviceusers.' WHERE chatid="'.$chatid.'"');
		usleep(250000);
		$con=mysqli_num_rows($query);
		
		for($i=0;$i<$con;$i++)
		{
			mysqli_data_seek($query, $i);
			$row[$i]=mysqli_fetch_row($query);
		}
		
		$userfio=$row[0][6];
		
		return $userfio;
		
	}

/////
	public function cmd_user_get_chatid_fio($userfio)
	{
		$con_sql2=$this->cmd_sql();
		$tabserviceusers='tabserviceusers';
		
		$query=mysqli_query($con_sql2, 'SELECT * FROM '.$tabserviceusers.' WHERE fio="'.$userfio.'"');
		usleep(250000);
		$con=mysqli_num_rows($query);
		
		for($i=0;$i<$con;$i++)
		{
			mysqli_data_seek($query, $i);
			$row[$i]=mysqli_fetch_row($query);
		}
		
		$userchatid=$row[0][1];
		
		return $userchatid;
		
	}
	
/////
	public function cmd_user_get_phone($chatid)
	{
		$con_sql2=$this->cmd_sql();
		$tabserviceusers='tabserviceusers';
		
		$query=mysqli_query($con_sql2, 'SELECT * FROM '.$tabserviceusers.' WHERE chatid="'.$chatid.'"');
		usleep(250000);
		$con=mysqli_num_rows($query);
		
		for($i=0;$i<$con;$i++)
		{
			mysqli_data_seek($query, $i);
			$row[$i]=mysqli_fetch_row($query);
		}
		
		$userphone=$row[0][5];
		
		return $userphone;
		
	}
	
/////
	public function cmd_user_get_chatid_phone($userphone)
	{
		$con_sql2=$this->cmd_sql();
		$tabserviceusers='tabserviceusers';
		
		$query=mysqli_query($con_sql2, 'SELECT * FROM '.$tabserviceusers.' WHERE phone="'.$userphone.'"');
		usleep(250000);
		$con=mysqli_num_rows($query);
		
		for($i=0;$i<$con;$i++)
		{
			mysqli_data_seek($query, $i);
			$row[$i]=mysqli_fetch_row($query);
		}
		
		$userchatid=$row[0][1];
		
		return $userchatid;
		
	}
	
/////
	public function cmd_user_get_fiophone($chatid)
	{
		$con_sql2=$this->cmd_sql();
		$tabserviceusers='tabserviceusers';
		
		$query=mysqli_query($con_sql2, 'SELECT * FROM '.$tabserviceusers.' WHERE chatid="'.$chatid.'"');
		usleep(250000);
		$con=mysqli_num_rows($query);
		
		for($i=0;$i<$con;$i++)
		{
			mysqli_data_seek($query, $i);
			$row[$i]=mysqli_fetch_row($query);
		}
		
		$userfio=$row[0][6];
		$userphone=$row[0][5];
		$userfiophone=''.$userfio.' ('.$userphone.')';
		
		return $userfiophone;
	}
	
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////	
/////////////////////////////////////////////////////////////START//////////////////////////////////////////////////////	
//////////
	public function cmd_start()
	{
				
		$tabserviceapproved='tabserviceapproved';
		$tabservicewant='tabservicewant';
		$tabserviceusers='tabserviceusers';
		$tabservicebanned='tabservicebanned';
		$tabservicedenied='tabservicedenied';
		
		$userinfo=''.$this->api->firstname.' '.$this->api->lastname.'';

		if($this->cmd_isadmin())
		{
			$con_sql2=$this->cmd_sql();
			
			if($this->cmd_sql_createchatidtable($tabserviceapproved))
			{
				usleep(100000);
			}
			if($this->cmd_sql_createchatidtable($tabservicewant))
			{
				usleep(100000);
			}
			if($this->cmd_sql_createchatidtable($tabserviceusers))
			{
				usleep(100000);
			}
			if($this->cmd_sql_createchatidtable($tabservicebanned))
			{
				usleep(100000);
			}
			if($this->cmd_sql_createchatidtable($tabservicedenied))
			{
				usleep(100000);
			}


			$tabserviceadmin='tabserviceadmin'.$this->api->chatId.'';
			if(mysqli_query($con_sql2, 'TRUNCATE TABLE '.$tabserviceadmin.''))
			{
				usleep(100000);
			}
			$tabserviceadd='tabserviceadd'.$this->api->chatId.'';
			if(mysqli_query($con_sql2, 'TRUNCATE TABLE '.$tabserviceadd.''))
			{
				usleep(100000);
			}
			
			$tabserviceuser='tabserviceuser'.$this->api->chatId.'';
			if(mysqli_query($con_sql2, 'TRUNCATE TABLE '.$tabserviceuser.''))
			{
				usleep(100000);
			}
		
			$tabservicefio='tabservicefio'.$this->api->chatId.'';
			if(mysqli_query($con_sql2, 'TRUNCATE TABLE '.$tabservicefio.''))
			{
				usleep(100000);
			}
			
			$tabtempphoto='tabtempphoto'.$this->api->chatId.'';
			//if(mysqli_num_rows(mysqli_query($con_sql2, 'SELECT 1 FROM '.$tabtempphoto.' WHERE id LIKE "%" LIMIT 1'))!=0)
			if(mysqli_query($con_sql2, 'DROP TABLE '.$tabtempphoto.''))
			{
				usleep(100000);
			}
			
			$tab='tabtype'.$this->api->chatId.'';
			if(mysqli_query($con_sql2, 'DROP TABLE '.$tab.''))
			{
				usleep(100000);
			}
			$tab='tabcat'.$this->api->chatId.'';
			if(mysqli_query($con_sql2, 'DROP TABLE '.$tab.''))
			{
				usleep(100000);
			}
			$tab='tabgender'.$this->api->chatId.'';
			if(mysqli_query($con_sql2, 'DROP TABLE '.$tab.''))
			{
				usleep(100000);
			}
			$tab='tabcond'.$this->api->chatId.'';
			if(mysqli_query($con_sql2, 'DROP TABLE '.$tab.''))
			{
				usleep(100000);		
			}
			$tab='tabprice'.$this->api->chatId.'';
			if(mysqli_query($con_sql2, 'DROP TABLE '.$tab.''))
			{
				usleep(100000);	
			}
			$tab='tabservice'.$this->api->chatId.'';
			if(mysqli_query($con_sql2, 'DROP TABLE '.$tab.''))
			{
				usleep(100000);
			}
			
			$result=json_decode($this->getChat(''.$this->api->chatId.''), true);
			$result=$result['result'];
				
			if($this->cmd_sql_searchchatidtable($tabserviceusers, $this->api->chatId)==FALSE)
			{
				mysqli_query($con_sql2, 'INSERT INTO '.$tabserviceusers.' (chatid, firstname, lastname, username, phone, fio) VALUES ("'.$this->api->chatId.'", "'.$result['first_name'].'", "'.$result['last_name'].'", "'.$result['username'].'", "admin", "admin")');
				usleep(100000);
			}
			
			if(file_exists(''.dirname(__FILE__).'/usersall.txt'))
			{
				if(preg_match('/'.$this->api->chatId.'/', file_get_contents(''.dirname(__FILE__).'/usersall.txt'))==FALSE)
				{
					file_put_contents(''.dirname(__FILE__).'/usersall.txt', $this->api->chatId . PHP_EOL,FILE_APPEND);
				}
			}
			else
			{
				file_put_contents(''.dirname(__FILE__).'/usersall.txt', $this->api->chatId . PHP_EOL,FILE_APPEND);
			}
			
			
			if($this->cmd_sql_searchchatidtable($tabserviceapproved, $this->api->chatId)==FALSE)
			{
				mysqli_query($con_sql2, 'INSERT INTO '.$tabserviceapproved.' (chatid, firstname, lastname, username, phone, fio) VALUES ("'.$this->api->chatId.'", "'.$result['first_name'].'", "'.$result['last_name'].'", "'.$result['username'].'", "admin", "admin")');
				usleep(100000);
			}
			
			if(file_exists(''.dirname(__FILE__).'/usersapproved.txt'))
			{
				if(preg_match('/'.$this->api->chatId.'/', file_get_contents(''.dirname(__FILE__).'/usersapproved.txt'))==FALSE)
				{
					file_put_contents(''.dirname(__FILE__).'/usersapproved.txt', $this->api->chatId . PHP_EOL,FILE_APPEND);
				}
			}
			else
			{
				file_put_contents(''.dirname(__FILE__).'/usersapproved.txt', $this->api->chatId . PHP_EOL,FILE_APPEND);
			}
			
			
			
			$text='–ü—Ä–∏–≤–µ—Ç, <b>'.$userinfo.'!</b>'.PHP_EOL.''.PHP_EOL.'–û –º–æ–π –ë–æ–≥, —ç—Ç–æ –∂–µ –ê–î–ú–ò–ù!'.PHP_EOL.''.PHP_EOL.'–ñ–º–∏ –Ω–∞ –∫–Ω–æ–ø–∫–∏ —Å–Ω–∏–∑—É!'.$this->pre.'';
			
			/* $this->api->sendMessage([
				'text' => $text,
				//'reply_markup' => json_encode( ['keyboard'=>$this->keyboards['default_admin'], 'resize_keyboard' => true] ),
				'reply_markup' => json_encode($this->keyboards['default_admin']),
				'disable_notification' => TRUE,
				'disable_web_page_preview' => TRUE,
				'parse_mode'=> "HTML"
				]); */
			
			
			$this->api->sendMessage([
				'text' => $text,
				'reply_markup' => json_encode( ['inline_keyboard'=>$this->keyboards['inline_default_admin']]),
				'disable_notification' => TRUE,
				'disable_web_page_preview' => TRUE,
				'parse_mode'=> "HTML"
				]);
			usleep(100000);
		}
		else
		{
			$con_sql2=$this->cmd_sql();
			
			$tabserviceadd='tabserviceadd'.$this->api->chatId.'';
			if(mysqli_query($con_sql2, 'TRUNCATE TABLE '.$tabserviceadd.''))
			{
				usleep(100000);
			}
			
			$tabservicefio='tabservicefio'.$this->api->chatId.'';
			if(mysqli_query($con_sql2, 'TRUNCATE TABLE '.$tabservicefio.''))
			{
				usleep(100000);
			}
			
			$tabtempphoto='tabtempphoto'.$this->api->chatId.'';
			//if(mysqli_num_rows(mysqli_query($con_sql2, 'SELECT 1 FROM '.$tabtempphoto.' WHERE id LIKE "%" LIMIT 1'))!=0)
			if(mysqli_query($con_sql2, 'TRUNCATE TABLE '.$tabtempphoto.''))
			{
				usleep(100000);
			}
			
			$tab='tabtype'.$this->api->chatId.'';
			if(mysqli_query($con_sql2, 'DROP TABLE '.$tab.''))
			{
				usleep(100000);
			}
			$tab='tabcat'.$this->api->chatId.'';
			if(mysqli_query($con_sql2, 'DROP TABLE '.$tab.''))
			{
				usleep(100000);
			}
			$tab='tabgender'.$this->api->chatId.'';
			if(mysqli_query($con_sql2, 'DROP TABLE '.$tab.''))
			{
				usleep(100000);
			}
			$tab='tabcond'.$this->api->chatId.'';
			if(mysqli_query($con_sql2, 'DROP TABLE '.$tab.''))
			{
				usleep(100000);		
			}
			$tab='tabprice'.$this->api->chatId.'';
			if(mysqli_query($con_sql2, 'DROP TABLE '.$tab.''))
			{
				usleep(100000);	
			}
			$tab='tabservice'.$this->api->chatId.'';
			if(mysqli_query($con_sql2, 'DROP TABLE '.$tab.''))
			{
				usleep(100000);
			}
			
			
			/* $this->api->sendMessage([
				'text' => "dgfhmdghmdghm",
				'disable_notification' => TRUE,
				'disable_web_page_preview' => TRUE,
				'parse_mode'=> "HTML"
				]); */
				
			if($this->cmd_sql_searchchatidtable($tabserviceusers, $this->api->chatId))
			{

				$query=mysqli_query($con_sql2, 'SELECT fio FROM '.$tabserviceusers.' WHERE chatid="'.$this->api->chatId.'"');
				usleep(100000);
				$con=mysqli_num_rows($query);
					
				for($i=0;$i<$con;$i++)
				{
					mysqli_data_seek($query, $i);
					$row[$i]=mysqli_fetch_row($query);
				}
				usleep(100000);
				$userinfo=$row[0][0];
				
				$text='–ü—Ä–∏–≤–µ—Ç, <b>'.$userinfo.'!</b>'.PHP_EOL.''.PHP_EOL.'–ü—Ä–∏—Å—Ç—É–ø–∏–º! –í—ã —Ö–æ—Ç–∏—Ç–µ –∫—É–ø–∏—Ç—å –∏–ª–∏ –ø—Ä–æ–¥–∞—Ç—å —Ç–æ–≤–∞—Ä?üëá'.$this->pre.'';
				
				/* $this->api->sendMessage([
				'text' => $text,
				'reply_markup' => json_encode($this->keyboards['default_user']),
				'disable_notification' => TRUE,
				'disable_web_page_preview' => TRUE,
				'parse_mode'=> "HTML"
				]); */
				
				$this->api->sendMessage([
					'text' => $text,
					'reply_markup' => json_encode( ['inline_keyboard'=>$this->keyboards['inline_default']]),
					'disable_notification' => TRUE,
					'disable_web_page_preview' => TRUE,
					'parse_mode'=> "HTML"
					]);
				usleep(100000);
			}
			/* elseif($this->cmd_sql_searchchatidtable($tab2, $this->api->chatId))
			{
				$text='–í—ã —É–∂–µ –≤–Ω–µ—Å–ª–∏ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –∏ –æ—Ç–ø—Ä–∞–≤–∏–ª–∏ –∑–∞–ø—Ä–æ—Å –∞–¥–º–∏–Ω—É. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ—Ç–µ—Ä–ø–∏—Ç–µ –Ω–µ–º–Ω–æ–≥–æ!';
		
				$this->api->sendMessage([
				'text' => $text,
				//'reply_markup' => json_encode( ['inline_keyboard'=>$this->keyboards['inline_default']]),
				'disable_notification' => TRUE,
				'disable_web_page_preview' => TRUE,
				'parse_mode'=> "HTML"
				]);
			} */
			/* elseif($this->cmd_sql_searchchatidtable($tab3, $this->api->chatId))
			{
				$text='–í—ã —É–∂–µ –≤–Ω–µ—Å–ª–∏ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞, —Ç–µ–ø–µ—Ä—å –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –∑–∞–ø—Ä–æ—Å –∞–¥–º–∏–Ω—É!';
		
				$this->api->sendMessage([
				'text' => $text,
				'reply_markup' => json_encode( ['inline_keyboard'=>$this->keyboards['inline_want_user']]),
				'disable_notification' => TRUE,
				'disable_web_page_preview' => TRUE,
				'parse_mode'=> "HTML"
				]);
			} */
			else
			{
				$text='–í—ã —è–≤–ª—è–µ—Ç–µ—Å—å –Ω–æ–≤—ã–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º, –ø–æ—ç—Ç–æ–º—É –í–∞–º <b>–Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –∞–≤—Ç–æ—Ä–∏–∑–∏—Ä–æ–≤–∞—Ç—å—Å—è</b>. –î–ª—è —ç—Ç–æ–≥–æ —É–∫–∞–∂–∏—Ç–µ –í–∞—à <b>–Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞</b>, –Ω–∞–∂–∞–≤ –Ω–∞ –∫–Ω–æ–ø–∫—É —Å–Ω–∏–∑—Éüëá';
				
				$this->api->sendMessage([
					'text' => $text,
					'reply_markup' => json_encode( [
						'keyboard'=>$this->keyboards['inline_phone_user'], 
						'resize_keyboard' => true, 
						'one_time_keyboard' => true, 
						'input_field_placeholder' => '–Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É —Å–Ω–∏–∑—É'
						] ),
					'disable_notification' => TRUE,
					'disable_web_page_preview' => TRUE,
					'parse_mode'=> "HTML"
					]);
			}
		
		}
	}



/////	
	public function cmd_help()
	{
		
		if($this->cmd_isadmin())
		{
			$text = '–ü–æ–º–æ—â—å –¥–ª—è –∞–¥–º–∏–Ω–∞:'.PHP_EOL.'–ë–ª–∞-–±–ª–∞-–±–ª–∞'.$this->pre.'';
			
			$this->api->sendMessage([
				'text' => $text,
				'reply_markup' => json_encode(['inline_keyboard'=>$this->keyboards['inline_default_admin']]),
				'disable_notification' => TRUE,
				'disable_web_page_preview' => TRUE,
				'parse_mode'=> "HTML"
				]);
			usleep(100000);
		}
		else
		{
			
			if(preg_match('/'.$this->api->chatId.'/', file_get_contents(''.dirname(__FILE__).'/usersapproved.txt')))
			{
				
				$text = '–ü–æ–º–æ—â—å –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:'.PHP_EOL.'–ë–ª–∞-–±–ª–∞-–±–ª–∞'.$this->pre.'';
				
				$this->api->sendMessage([
					'text' => $text,
					'reply_markup' => json_encode( ['inline_keyboard'=>$this->keyboards['inline_default']]),
					'disable_notification' => TRUE,
					'disable_web_page_preview' => TRUE,
					'parse_mode'=> "HTML"
					]);
				usleep(100000);
			}
			
		}
	}


/////	
	public function cmd_buy()
	{
		
		$con_sql2=$this->cmd_sql();
		
		$tab='tabtype'.$this->api->chatId.'';
		
		//if(mysqli_query($con_sql2, 'SELECT 1 FROM '.$tab.' LIMIT 1'))
		//{
			mysqli_query($con_sql2, 'DROP TABLE '.$tab.'');
			usleep(100000);
		//}
		
		$tab='tabcat'.$this->api->chatId.'';
		
		//if(mysqli_query($con_sql2, 'SELECT 1 FROM '.$tab.' LIMIT 1'))
		//{
			mysqli_query($con_sql2, 'DROP TABLE '.$tab.'');
			usleep(100000);	
		//}
		
		$tab='tabgender'.$this->api->chatId.'';
		
		//if(mysqli_query($con_sql2, 'SELECT 1 FROM '.$tab.' LIMIT 1'))
		//{
			mysqli_query($con_sql2, 'DROP TABLE '.$tab.'');
			usleep(100000);
		//}
	
		$tab='tabprice'.$this->api->chatId.'';
		
		//if(mysqli_query($con_sql2, 'SELECT 1 FROM '.$tab.' LIMIT 1'))
		//{
			mysqli_query($con_sql2, 'DROP TABLE '.$tab.'');
			usleep(100000);
		//}
		
		$tab='tabservice'.$this->api->chatId.'';
		
		//if(mysqli_query($con_sql2, 'SELECT 1 FROM '.$tab.' LIMIT 1'))
		//{
			mysqli_query($con_sql2, 'DROP TABLE '.$tab.'');
			usleep(100000);
		//}
		

		$query1=mysqli_query($con_sql2, 'SHOW TABLES LIKE "tabmain%"');
		$con1=mysqli_num_rows($query1);
		
		if($con1!=0)
		{	
		
			$table=[];
			$check=0;
			
			for($i=0;$i<$con1;$i++)
			{
				mysqli_data_seek($query1, $i);
				$row1[$i]=mysqli_fetch_row($query1);
				$tab=$row1[$i][0];
				
				$query=mysqli_query($con_sql2, 'SELECT * FROM '.$tab.' WHERE messid!="0" ORDER by id ASC');
				usleep(100000);
				$con=mysqli_num_rows($query);
					
				if($con!=0)
				{	
					$check=1;
					break;
				}
			}
			
			if($check==1)
			{
			
				$text='–í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ –º–µ–Ω—é <b>–ö—É–ø–∏—Ç—å</b>.'.PHP_EOL.'–î–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ —Ç–æ–≤–∞—Ä–æ–≤ –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É <b>–í—ã–±—Ä–∞—Ç—å</b>.'.PHP_EOL.'–î–ª—è –ø–æ–∫—É–ø–∫–∏ —Ç–æ–≤–∞—Ä–∞ –ø–æ –Ω–æ–º–µ—Ä—É ID –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É <b>–ö—É–ø–∏—Ç—å –ø–æ ID —Ç–æ–≤–∞—Ä–∞.</b>'.$this->pre.'';
				
				$this->api->sendMessage([
				'text' => $text,
				'reply_markup' => json_encode( ['inline_keyboard'=>$this->keyboards['inline_buy_default']]),
				'disable_notification' => TRUE,
				'disable_web_page_preview' => TRUE,
				'parse_mode'=> "HTML"
				]);
				usleep(100000);
				
				//$this->callbackAnswer( $text, $this->keyboards['inline_buy_default']);
			}
			else
			{

				if($this->cmd_isadmin())
				{
					$text='–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é –≤ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç <b>–Ω–µ—Ç —Ç–æ–≤–∞—Ä–æ–≤ –≤ –ø—Ä–æ–¥–∞–∂–µ</b>.'.PHP_EOL.'–í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ <b>–ì–ª–∞–≤–Ω–æ–º –º–µ–Ω—é</b>.'.$this->pre.'';
					$this->api->sendMessage([
					'text' => $text,
					'reply_markup' => json_encode( ['inline_keyboard'=>$this->keyboards['inline_default_admin']]),
					'disable_notification' => TRUE,
					'disable_web_page_preview' => TRUE,
					'parse_mode'=> "HTML"
					]);
					usleep(100000);
					
					//$this->callbackAnswer( $text, $this->keyboards['inline_default_admin']);
					
				}
				else
				{
					$text='–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é –≤ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç <b>–Ω–µ—Ç —Ç–æ–≤–∞—Ä–æ–≤ –≤ –ø—Ä–æ–¥–∞–∂–µ</b>.'.PHP_EOL.'–í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ <b>–ì–ª–∞–≤–Ω–æ–º –º–µ–Ω—é</b>.'.$this->pre.'';
					$this->api->sendMessage([
					'text' => $text,
					'reply_markup' => json_encode( ['inline_keyboard'=>$this->keyboards['inline_default']]),
					'disable_notification' => TRUE,
					'disable_web_page_preview' => TRUE,
					'parse_mode'=> "HTML"
					]);
					usleep(100000);
					
					//$this->callbackAnswer( $text, $this->keyboards['inline_default']);
					
				}
					
			}
		}
		else
		{
			if($this->cmd_isadmin())
			{
				$text='–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é –≤ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç <b>–Ω–µ—Ç —Ç–æ–≤–∞—Ä–æ–≤ –≤ –ø—Ä–æ–¥–∞–∂–µ</b>.'.PHP_EOL.'–í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ <b>–ì–ª–∞–≤–Ω–æ–º –º–µ–Ω—é</b>.'.$this->pre.'';
				$this->api->sendMessage([
				'text' => $text,
				'reply_markup' => json_encode( ['inline_keyboard'=>$this->keyboards['inline_default_admin']]),
				'disable_notification' => TRUE,
				'disable_web_page_preview' => TRUE,
				'parse_mode'=> "HTML"
				]);
				usleep(100000);
				
				//$this->callbackAnswer( $text, $this->keyboards['inline_default_admin']);
				
			}
			else
			{
				$text='–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é –≤ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç <b>–Ω–µ—Ç —Ç–æ–≤–∞—Ä–æ–≤ –≤ –ø—Ä–æ–¥–∞–∂–µ</b>.'.PHP_EOL.'–í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ <b>–ì–ª–∞–≤–Ω–æ–º –º–µ–Ω—é</b>.'.$this->pre.'';
				$this->api->sendMessage([
				'text' => $text,
				'reply_markup' => json_encode( ['inline_keyboard'=>$this->keyboards['inline_default']]),
				'disable_notification' => TRUE,
				'disable_web_page_preview' => TRUE,
				'parse_mode'=> "HTML"
				]);
				usleep(100000);
				
				//$this->callbackAnswer( $text, $this->keyboards['inline_default']);
				
			}
		}
			
	}
	


	public function cmd_sell()
	{
		
		$con_sql2=$this->cmd_sql();
		$tabserviceapproved='tabserviceapproved';
		$tabservicewant='tabservicewant';
		$tabserviceusers='tabserviceusers';
		$tabservicebanned='tabservicebanned';
		$tabservicedenied='tabservicedenied';
		

		if(preg_match('/'.$this->api->chatId.'/', file_get_contents(''.dirname(__FILE__).'/usersapproved.txt')))
		{
		
		
			$tabserviceadd='tabserviceadd'.$this->api->chatId.'';
			//if(mysqli_num_rows(mysqli_query($con_sql2, 'SELECT 1 FROM '.$tabserviceadd.' WHERE id LIKE "%" LIMIT 1'))!=0)
			//{
				mysqli_query($con_sql2, 'TRUNCATE TABLE '.$tabserviceadd.'');
				usleep(100000);
			//}
			
			$tabtempphoto='tabtempphoto'.$this->api->chatId.'';
			//if(mysqli_num_rows(mysqli_query($con_sql2, 'SELECT 1 FROM '.$tabtempphoto.' WHERE id LIKE "%" LIMIT 1'))!=0)
			//if(mysqli_query($con_sql2, 'SELECT 1 FROM '.$tabtempphoto.' LIMIT 1'))
			//{
				mysqli_query($con_sql2, 'TRUNCATE TABLE '.$tabtempphoto.'');
				usleep(100000);
			//}
			
			$tabserviceuser='tabserviceuser'.$this->api->chatId.'';
			//if(mysqli_num_rows(mysqli_query($con_sql2, 'SELECT 1 FROM '.$tabserviceuser.' WHERE id LIKE "%" LIMIT 1'))!=0)
			//{
				mysqli_query($con_sql2, 'TRUNCATE TABLE '.$tabserviceuser.'');
				usleep(100000);
			//}
			
			if($this->cmd_isadmin())
			{
				$tabserviceadmin='tabserviceadmin'.$this->api->chatId.'';
				mysqli_query($con_sql2, 'TRUNCATE TABLE '.$tabserviceadmin.'');
				usleep(100000);
			}
			
			$text='–í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ –º–µ–Ω—é <b>–ü—Ä–æ–¥–∞—Ç—å</b>. <b>–í—ã–±–µ—Ä–∏—Ç–µ, —á—Ç–æ –í—ã —Ö–æ—Ç–∏—Ç–µ —Å–¥–µ–ª–∞—Ç—å</b>üëá'.$this->pre.'';
			
			//$this->callbackAnswer( $text, $this->keyboards['inline_sell']);
			
			$this->api->sendMessage([
				'text' => $text,
				'reply_markup' => json_encode( ['inline_keyboard'=>$this->keyboards['inline_sell']]),
				'disable_notification' => TRUE,
				'disable_web_page_preview' => TRUE,
				'parse_mode'=> "HTML"
				]);
	
		}
		elseif(preg_match('/'.$this->api->chatId.'/', file_get_contents(''.dirname(__FILE__).'/usersall.txt')))
		{
			if($this->cmd_sql_searchchatidtable($tabservicedenied, $this->api->chatId))
			{
				$text='–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –í–∞–º <b>–±—ã–ª–æ –æ—Ç–∫–∞–∑–∞–Ω–æ</b> –≤ –ø—Ä–∞–≤–µ —Ä–∞–∑–º–µ—â–∞—Ç—å –æ–±—ä—è–≤–ª–µ–Ω–∏—è –≤ –∫–∞–Ω–∞–ª–µ!'.$this->pre.'';
				//$this->callback_inline_close($this->api->messageid);
				//$this->callbackAnswer( $text, $this->keyboards['inline_default']);
				
				$this->api->sendMessage([
				'text' => $text,
				'reply_markup' => json_encode( ['inline_keyboard'=>$this->keyboards['inline_default']]),
				'disable_notification' => TRUE,
				'disable_web_page_preview' => TRUE,
				'parse_mode'=> "HTML"
				]);
			}
			elseif($this->cmd_sql_searchchatidtable($tabservicewant, $this->api->chatId))
			{
				$text='–í—ã <b>—É–∂–µ –æ—Ç–ø—Ä–∞–≤–∏–ª–∏ –∑–∞–ø—Ä–æ—Å –∞–¥–º–∏–Ω—É</b> –Ω–∞ –ø–æ–ª—É—á–µ–Ω–∏–µ –ø—Ä–∞–≤–∞ —Ä–∞–∑–º–µ—â–∞—Ç—å –æ–±—ä—è–≤–ª–µ–Ω–∏—è –≤ –∫–∞–Ω–∞–ª–µ! –í—ã –ø–æ–ª—É—á–∏—Ç–µ —Å–ª—É–∂–µ–±–Ω–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞—Ö.'.$this->pre.'';
				//$this->callbackAnswer3( $text );
				//$this->callbackAnswer( $text, $this->keyboards['inline_default']);
				
				$this->api->sendMessage([
				'text' => $text,
				'reply_markup' => json_encode( ['inline_keyboard'=>$this->keyboards['inline_default']]),
				'disable_notification' => TRUE,
				'disable_web_page_preview' => TRUE,
				'parse_mode'=> "HTML"
				]);
			}
			else
			{
				$text='–ß—Ç–æ–±—ã —Ä–∞–∑–º–µ—â–∞—Ç—å –æ–±—ä—è–≤–ª–µ–Ω–∏—è –≤ –∫–∞–Ω–∞–ª–µ, –í–∞–º –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ <b>–ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –∞–¥–º–∏–Ω–∞.</b>'.PHP_EOL.'–í—ã –º–æ–∂–µ—Ç–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –∑–∞–ø—Ä–æ—Å –∞–¥–º–∏–Ω—É, –Ω–∞–∂–∞–≤ –∫–Ω–æ–ø–∫—É üì£<b>–û—Ç–ø—Ä–∞–≤–∏—Ç—å –∑–∞–ø—Ä–æ—Å</b> —Å–Ω–∏–∑—Éüëá'.$this->pre.'';
				
				$this->api->sendMessage([
				'text' => $text,
				'reply_markup' => json_encode( ['inline_keyboard'=>$this->keyboards['inline_want_user']]),
				'disable_notification' => TRUE,
				'disable_web_page_preview' => TRUE,
				'parse_mode'=> "HTML"
				]);
			
			}
		}
	}
	

	/////	
/* 	public function cmd_sell()
	{
		
		$con_sql2=$this->cmd_sql();
		$tab='tabmain'.$this->api->chatId.'';
		
		$tabserviceadd='tabserviceadd'.$this->api->chatId.'';
		//if(mysqli_num_rows(mysqli_query($con_sql2, 'SELECT 1 FROM '.$tabserviceadd.' WHERE id LIKE "%" LIMIT 1'))!=0)
		//{
			mysqli_query($con_sql2, 'TRUNCATE TABLE '.$tabserviceadd.'');
			usleep(100000);
		//}
		
		$tabtempphoto='tabtempphoto'.$this->api->chatId.'';
		//if(mysqli_num_rows(mysqli_query($con_sql2, 'SELECT 1 FROM '.$tabtempphoto.' WHERE id LIKE "%" LIMIT 1'))!=0)
		//if(mysqli_query($con_sql2, 'SELECT 1 FROM '.$tabtempphoto.' LIMIT 1'))
		//{
			mysqli_query($con_sql2, 'TRUNCATE TABLE '.$tabtempphoto.'');
			usleep(100000);
		//}
		
		$tabserviceuser='tabserviceuser'.$this->api->chatId.'';
		//if(mysqli_num_rows(mysqli_query($con_sql2, 'SELECT 1 FROM '.$tabserviceuser.' WHERE id LIKE "%" LIMIT 1'))!=0)
		//{
			mysqli_query($con_sql2, 'TRUNCATE TABLE '.$tabserviceuser.'');
			usleep(100000);
		//}

		if($this->cmd_isadmin())
		{
			$text = '–í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ —Ä–∞–∑–¥–µ–ª–µ <b>–ü—Ä–æ–¥–∞—Ç—å</b>.'.$this->pre.'';
			
			$this->api->sendMessage([
				'text' => $text,
				'reply_markup' => json_encode( ['inline_keyboard'=>$this->keyboards['inline_sell']]),
				'disable_notification' => TRUE,
				'disable_web_page_preview' => TRUE,
				'parse_mode'=> "HTML"
				]);
			usleep(100000);
		}
		else
		{
			$text = '–í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ —Ä–∞–∑–¥–µ–ª–µ <b>–ü—Ä–æ–¥–∞—Ç—å</b>.'.$this->pre.'';
			
			$this->api->sendMessage([
				'text' => $text,
				'reply_markup' => json_encode( ['inline_keyboard'=>$this->keyboards['inline_sell']]),
				'disable_notification' => TRUE,
				'disable_web_page_preview' => TRUE,
				'parse_mode'=> "HTML"
				]);
			usleep(100000);
		}
	} */
	
	/////	
	public function cmd_main()
	{
		

		if($this->cmd_isadmin())
		{
			$text = '–í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ <b>–ì–ª–∞–≤–Ω–æ–º –º–µ–Ω—é</b>.'.$this->pre.'';
			
			$this->api->sendMessage([
				'text' => $text,
				'reply_markup' => json_encode( ['inline_keyboard'=>$this->keyboards['inline_default_admin']]),
				'disable_notification' => TRUE,
				'disable_web_page_preview' => TRUE,
				'parse_mode'=> "HTML"
				]);
			usleep(100000);
		}
		else
		{
			$text = '–í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ <b>–ì–ª–∞–≤–Ω–æ–º –º–µ–Ω—é</b>.'.$this->pre.'';
			
			$this->api->sendMessage([
				'text' => $text,
				'reply_markup' => json_encode( ['inline_keyboard'=>$this->keyboards['inline_default']]),
				'disable_notification' => TRUE,
				'disable_web_page_preview' => TRUE,
				'parse_mode'=> "HTML"
				]);
			usleep(100000);
		}
	}
/////	
	public function callback_inline_close($id)
	{
				
		for($i=1;$i<100;$i++)
		{
			$this->api->deleteMessage(($id-$i));
			usleep(50000);
		}
	}



/////
	public function cmd_admin_add_phone()
	{
		
		$phone=$this->api->body["message"]["contact"]["phone_number"];
		$firstname=$this->api->firstname;
		$lastname=$this->api->lastname;
		$chatid=$this->api->chatId;
		
		if(isset($this->api->body["message"]["chat"]["username"] ) )
		{
			$username=$this->api->username;
		}
		else
		{
			$username='–Ω–µ—Ç –¥–∞–Ω–Ω—ã—Ö';
		}
		

		$tabserviceusers='tabserviceusers';
		$tabservicefio='tabservicefio'.$this->api->chatId.'';
		
		$con_sql2=$this->cmd_sql();
		
		/* if($this->cmd_sql_searchchatidtable($tabserviceusers, $this->api->chatId))
		{
	
			if($this->cmd_sql_searchchatidtable($tabserviceapproved, $this->api->chatId))
			{
				$text='–í—ã —É–∂–µ —É—Ç–≤–µ—Ä–∂–¥–µ–Ω—ã –∞–¥–º–∏–Ω–æ–º.';
		
				$this->api->sendMessage([
					'text' => $text,
					'reply_markup' => json_encode( ['inline_keyboard'=>$this->keyboards['inline_default']]),
					'disable_notification' => TRUE,
					'disable_web_page_preview' => TRUE,
					'parse_mode'=> "HTML"
					]);

			}
			elseif($this->cmd_sql_searchchatidtable($tabservicewant, $this->api->chatId))
			{
				$text='–í—ã —É–∂–µ –≤–Ω–µ—Å–ª–∏ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞, –§–ò–û –∏ –æ—Ç–ø—Ä–∞–≤–∏–ª–∏ –∑–∞–ø—Ä–æ—Å –∞–¥–º–∏–Ω—É. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ—Ç–µ—Ä–ø–∏—Ç–µ –Ω–µ–º–Ω–æ–≥–æ!';
		
				$this->api->sendMessage([
				'text' => $text,
				//'reply_markup' => json_encode( ['inline_keyboard'=>$this->keyboards['inline_default']]),
				'disable_notification' => TRUE,
				'disable_web_page_preview' => TRUE,
				'parse_mode'=> "HTML"
				]);
			}
			elseif($this->cmd_sql_searchchatidtable($tabservicewant, $this->api->chatId)==FALSE)
			{
				$text='–í—ã —É–∂–µ –≤–Ω–µ—Å–ª–∏ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –∏ –§–ò–û, —Ç–µ–ø–µ—Ä—å –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –∑–∞–ø—Ä–æ—Å –∞–¥–º–∏–Ω—É!';
		
				$this->api->sendMessage([
				'text' => $text,
				'reply_markup' => json_encode( ['inline_keyboard'=>$this->keyboards['inline_want_user']]),
				'disable_notification' => TRUE,
				'disable_web_page_preview' => TRUE,
				'parse_mode'=> "HTML"
				]);
			}

		}
		else
		{ */
			
			
			if($this->cmd_sql_searchchatidtable($tabserviceusers, $this->api->chatId)==FALSE)
			{
				
				$queue='INSERT INTO '.$tabserviceusers.' (chatid, firstname, lastname, username, phone, fio) VALUES ("'.$chatid.'", "'.$firstname.'", "'.$lastname.'", "'.$username.'", "'.$phone.'", "0")';
				mysqli_query($con_sql2, $queue);
				usleep(100000);
			}
			
			/* $text='–û—Ç–ª–∏—á–Ω–æ! –í–∞—à –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –ø–æ–ª—É—á–µ–Ω!';
			$this->api->sendMessage([
				'text' => $text,
				'reply_markup' => json_encode( ['remove_keyboard' => true] ),
				'disable_notification' => TRUE,
				'disable_web_page_preview' => TRUE,
				'parse_mode'=> "HTML"
				]);
			usleep(100000); */
			
			
			$text='–î–ª—è –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—Ç—ã, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏—Ç–µ –í–∞—à–∏ –∏–º—è –∏ —Ñ–∞–º–∏–ª–∏—éüì£';
			
			$this->api->sendMessage([
			'text' => $text,
			'reply_markup' => json_encode( ['force_reply' => true, 'input_field_placeholder' => '–£–∫–∞–∂–∏—Ç–µ –í–∞—à–∏ –∏–º—è –∏ —Ñ–∞–º–∏–ª–∏—é'] ),
			'disable_notification' => TRUE,
			'disable_web_page_preview' => TRUE,
			'parse_mode'=> "HTML"
			]);
			usleep(100000);
			
			if(mysqli_query($con_sql2, 'SELECT 1 FROM '.$tabservicefio.' LIMIT 1')==FALSE)
			{
				$query1='CREATE TABLE '.$tabservicefio.' (id INT(4) UNSIGNED AUTO_INCREMENT PRIMARY KEY,fio VARCHAR(50)) ENGINE = InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;';
				mysqli_query($con_sql2, $query1);
				usleep(250000);
			}
				
		//}
	}




/////
	public function cmd_admin_add_fio()
	{
		$con_sql2=$this->cmd_sql();
		$tabserviceusers='tabserviceusers';
		$tabservicefio='tabservicefio'.$this->api->chatId.'';
		
		$fio=$this->api->textmessage;
		
		if(strlen($fio)>50)
		{
			
			$text='–í—ã –≤–≤–µ–ª–∏ —Å–ª–∏—à–∫–æ–º –¥–ª–∏–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç. –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è –¥–ª–∏–Ω–∞ 50 —Å–∏–º–≤–æ–ª–æ–≤.'.PHP_EOL.'–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏—Ç–µ –í–∞—à–∏ –∏–º—è –∏ —Ñ–∞–º–∏–ª–∏—éüì£';
			
			$this->api->sendMessage([
			'text' => $text,
			'reply_markup' => json_encode( ['force_reply' => true, 'input_field_placeholder' => '–£–∫–∞–∂–∏—Ç–µ –í–∞—à–∏ –∏–º—è –∏ —Ñ–∞–º–∏–ª–∏—é'] ),
			'disable_notification' => TRUE,
			'disable_web_page_preview' => TRUE,
			'parse_mode'=> "HTML"
			]);
			usleep(100000);
		}
		else
		{
			$query=mysqli_query($con_sql2, 'SELECT * FROM '.$tabserviceusers.' WHERE chatid="'.$this->api->chatId.'"');
			usleep(100000);
			$con=mysqli_num_rows($query);
			
			for($i=0;$i<$con;$i++)
			{
				mysqli_data_seek($query, $i);
				$row[$i]=mysqli_fetch_row($query);
			}
			usleep(250000);
			
			
			$query='UPDATE '.$tabserviceusers.' SET fio = REPLACE(fio, "'.$row[0][6].'", "'.$fio.'") WHERE chatid="'.$this->api->chatId.'"'; 
			mysqli_query($con_sql2, $query);
			usleep(250000);
			
			mysqli_query($con_sql2, 'DROP TABLE '.$tabservicefio.'');
			usleep(250000);	
			
			
			if(file_exists(''.dirname(__FILE__).'/usersall.txt'))
			{
				if(preg_match('/'.$this->api->chatId.'/', file_get_contents(''.dirname(__FILE__).'/usersall.txt'))==FALSE)
				{
					file_put_contents(''.dirname(__FILE__).'/usersall.txt', $this->api->chatId . PHP_EOL,FILE_APPEND);
				}
			}
			else
			{
				file_put_contents(''.dirname(__FILE__).'/usersall.txt', $this->api->chatId . PHP_EOL,FILE_APPEND);
			}
			
			//$text='–¢–µ–ø–µ—Ä—å –≤—ã –º–æ–∂–µ—Ç–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –∑–∞–ø—Ä–æ—Å –∞–¥–º–∏–Ω—É, –Ω–∞–∂–∞–≤ —Å–Ω–∏–∑—É –Ω–∞ –∫–Ω–æ–ø–∫—É üì£<b>–û—Ç–ø—Ä–∞–≤–∏—Ç—å –∑–∞–ø—Ä–æ—Å</b>.';
				
			/* $this->api->sendMessage([
			'text' => $text,
			'reply_markup' => json_encode( ['inline_keyboard'=>$this->keyboards['inline_want_user']]),
			'disable_notification' => TRUE,
			'disable_web_page_preview' => TRUE,
			'parse_mode'=> "HTML"
			]);
			usleep(100000); */
			
			$this->cmd_start();
		
		}
	}


/////
	public function callback_admin_default_newuser()
	{

		$tabserviceapproved='tabserviceapproved';
		$tabservicewant='tabservicewant';
		$tabserviceusers='tabserviceusers';
		$tabservicebanned='tabservicebanned';
		$tabservicedenied='tabservicedenied';
		
		if($this->cmd_sql_searchchatidtable($tabservicedenied, $this->api->chatId))
		{
			$text='–í–∞–º <b>—É–∂–µ –æ—Ç–∫–∞–∑–∞–ª–∏</b> –≤ –ø—Ä–∞–≤–µ —Ä–∞–∑–º–µ—â–∞—Ç—å –æ–±—ä—è–≤–ª–µ–Ω–∏—è –≤ –∫–∞–Ω–∞–ª–µ!'.$this->pre.'';
			//$this->callback_inline_close($this->api->messageid);
			$this->callbackAnswer( $text, $this->keyboards['inline_default']);
			
		}
		elseif($this->cmd_sql_searchchatidtable($tabserviceapproved, $this->api->chatId))
		{
			$text='–í–∞–º <b>—É–∂–µ –¥–∞–ª–∏ –ø—Ä–∞–≤–æ</b>—Ä–∞–∑–º–µ—â–∞—Ç—å –æ–±—ä—è–≤–ª–µ–Ω–∏—è –≤ –∫–∞–Ω–∞–ª–µ!'.$this->pre.'';
			//$this->callbackAnswer3( $text );
			$this->callbackAnswer( $text, $this->keyboards['inline_default']);
		}
		
		elseif($this->cmd_sql_searchchatidtable($tabservicewant, $this->api->chatId))
		{
			$text='–í—ã —É–∂–µ <b>–æ—Ç–ø—Ä–∞–≤–∏–ª–∏ –∑–∞–ø—Ä–æ—Å –∞–¥–º–∏–Ω—É!</b> –í—ã –ø–æ–ª—É—á–∏—Ç–µ —Å–ª—É–∂–µ–±–Ω–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞—Ö.'.$this->pre.'';
			//$this->callbackAnswer3( $text );
			//$this->callbackAnswer6( $text );
			$this->callbackAnswer( $text, $this->keyboards['inline_default']);
		}
		else
		{
			
			$con_sql2=$this->cmd_sql();
			
			$query=mysqli_query($con_sql2, 'SELECT * FROM '.$tabserviceusers.' WHERE chatid="'.$this->api->chatId.'"');
			usleep(100000);
			$con=mysqli_num_rows($query);
			
			for($i1=0;$i1<$con;$i1++)
			{
				mysqli_data_seek($query, $i1);
				$row[$i1]=mysqli_fetch_row($query);
				$chatid=$row[0][1];
				$firstname=$row[0][2];
				$lastname=$row[0][3];
				$username=$row[0][4];
				$phone=$row[0][5];
				$fio=$row[0][6];
			}
			
			if($this->cmd_sql_searchchatidtable($tabservicewant, $this->api->chatId)==FALSE)
			{
				mysqli_query($con_sql2, 'INSERT INTO '.$tabservicewant.' (chatid, firstname, lastname, username, phone, fio) SELECT chatid, firstname, lastname, username, phone, fio FROM '.$tabserviceusers.' WHERE chatid="'.$this->api->chatId.'"');
			}
			
			
			if(isset($this->api->body['callback_query']["id"]))
			{
				$callback_query_id=$this->api->body['callback_query']["id"];
				$this->api->answerCallbackQuery($callback_query_id);
			}	
			
			$text='–í—ã <b>—É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–∏–ª–∏ –∑–∞–ø—Ä–æ—Å –∞–¥–º–∏–Ω—É</b>. –í—ã –ø–æ–ª—É—á–∏—Ç–µ —Å–ª—É–∂–µ–±–Ω–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞—Ö.'.$this->pre.'';
			$this->api->sendMessage([
			'text' => $text,
			'parse_mode' => "HTML",
			'reply_markup' => json_encode( ['inline_keyboard'=>$this->keyboards['inline_default']]),
			]);
			usleep(100000);
			
			if(isset($this->api->body['callback_query']["id"]))
			{
				$callback_query_id=$this->api->body['callback_query']["id"];
				$this->api->answerCallbackQuery($callback_query_id);
			}	

			
			if(preg_match('/–Ω–µ—Ç –¥–∞–Ω–Ω—ã—Ö/', $username)==FALSE)
			{
				$text='–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å <b>'.$fio.'</b> –æ—Ç–ø—Ä–∞–≤–∏–ª –∑–∞–ø—Ä–æ—Å –Ω–∞ –ø—Ä–∞–≤–æ <b>—Ä–∞–∑–º–µ—â–µ–Ω–∏—è –æ–±—ä—è–≤–ª–µ–Ω–∏–π –≤ –∫–∞–Ω–∞–ª–µ.</b>'.PHP_EOL.''.PHP_EOL.'<b>–î–æ–±–∞–≤–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è?</b>'.PHP_EOL.''.PHP_EOL.'–ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ —Ç–µ–ª–µ–≥—Ä–∞–º–µ - <b>@'.$username.'</b>'.PHP_EOL.'–ò–º—è –≤ —Ç–µ–ª–µ–≥—Ä–∞–º–µ - <b>'.$firstname.'</b>'.PHP_EOL.'–§–∞–º–∏–ª–∏—è –≤ —Ç–µ–ª–µ–≥—Ä–∞–º–µ - <b>'.$lastname.'</b>'.PHP_EOL.''.PHP_EOL.'–¢–µ–ª–µ—Ñ–æ–Ω - <b>'.$phone.'</b>'.PHP_EOL.'–§–ò–û - <b>'.$fio.'</b>'.PHP_EOL.'id –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è - '.$chatid.''.$this->pre.'';
			}
			else
			{
				$text='–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å <b>'.$fio.'</b> –æ—Ç–ø—Ä–∞–≤–∏–ª –∑–∞–ø—Ä–æ—Å –Ω–∞ –ø—Ä–∞–≤–æ <b>—Ä–∞–∑–º–µ—â–µ–Ω–∏—è –æ–±—ä—è–≤–ª–µ–Ω–∏–π –≤ –∫–∞–Ω–∞–ª–µ.</b>'.PHP_EOL.''.PHP_EOL.'<b>–î–æ–±–∞–≤–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è?</b>'.PHP_EOL.''.PHP_EOL.'–ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ —Ç–µ–ª–µ–≥—Ä–∞–º–µ - <b>'.$username.'</b>'.PHP_EOL.'–ò–º—è –≤ —Ç–µ–ª–µ–≥—Ä–∞–º–µ - <b>'.$firstname.'</b>'.PHP_EOL.'–§–∞–º–∏–ª–∏—è –≤ —Ç–µ–ª–µ–≥—Ä–∞–º–µ - <b>'.$lastname.'</b>'.PHP_EOL.''.PHP_EOL.'–¢–µ–ª–µ—Ñ–æ–Ω - <b>'.$phone.'</b>'.PHP_EOL.'–§–ò–û - <b>'.$fio.'</b>'.PHP_EOL.'id –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è - '.$chatid.''.$this->pre.'';
			}
			
			$this->api->sendMessage([
			'chat_id' => $this->chatidadmin,
			'text' => $text,
			'parse_mode' => "HTML",
			'reply_markup' => json_encode( ['inline_keyboard'=>$this->keyboards['inline_ask_admin']]),
			]);
			usleep(100000);
			
			
			
		}
		
	}


/////
	public function callback_exit_want_user()
	{
		if(isset($this->api->body['callback_query']["id"]))
		{
			$callback_query_id=$this->api->body['callback_query']["id"];
			$this->api->answerCallbackQuery($callback_query_id);
		}
		
		$this->cmd_start();
	}
	
	
	
/////	
	public function callback_admin_yes()
	{	

		$tabserviceapproved='tabserviceapproved';
		$tabservicewant='tabservicewant';
		
		$text1=$this->api->textmessage;
		
		preg_match_all('/id –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è - .*\d/', $text1, $out);
		$chatid1=preg_replace('/id –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è - /', '', $out[0][0]);
		$chatid1=$this->clean($chatid1);
		$fio=$this->cmd_user_get_fio($chatid1);
		$phone=$this->cmd_user_get_phone($chatid1);
		
		if($this->cmd_sql_searchchatidtable($tabserviceapproved, $chatid1)==FALSE)
		{
			$con_sql2=$this->cmd_sql();
			
			mysqli_query($con_sql2, 'INSERT INTO '.$tabserviceapproved.' (chatid, firstname, lastname, username, phone, fio) SELECT chatid, firstname, lastname, username, phone, fio FROM '.$tabservicewant.' WHERE chatid="'.$chatid1.'"');
			usleep(100000);
			
			mysqli_query($con_sql2, 'DELETE FROM '.$tabservicewant.' WHERE chatid="'.$chatid1.'"');
			usleep(100000);
				
			if(file_exists(''.dirname(__FILE__).'/usersapproved.txt'))
			{
				if(preg_match('/'.$chatid1.'/', file_get_contents(''.dirname(__FILE__).'/usersapproved.txt'))==FALSE)
				{
					file_put_contents(''.dirname(__FILE__).'/usersapproved.txt', $chatid1 . PHP_EOL,FILE_APPEND);
				}
			}
			else
			{
				file_put_contents(''.dirname(__FILE__).'/usersapproved.txt', $chatid1 . PHP_EOL,FILE_APPEND);
			}
			
			
			$text2='–í—ã <b>—É—Å–ø–µ—à–Ω–æ –¥–∞–ª–∏ –ø—Ä–∞–≤–æ</b> –Ω–∞ —Ä–∞–∑–º–µ—â–µ–Ω–∏–µ –æ–±—ä—è–≤–ª–µ–Ω–∏–π –≤ –∫–∞–Ω–∞–ª–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é üë§<b>'.$fio.' ('.$phone.').</b>'.$this->pre.'';
			
			/* if(isset($this->api->body['callback_query']["id"]))
			{
				$callback_query_id=$this->api->body['callback_query']["id"];
				$this->api->answerCallbackQuery($callback_query_id);
			}

			$this->api->sendMessage([
			'text' => $text2,
			'reply_markup' => json_encode( ['inline_keyboard'=>$this->keyboards['inline_default_admin']]),
			'disable_notification' => TRUE,
			'disable_web_page_preview' => TRUE,
			'parse_mode'=> "HTML"
			]);
			usleep(100000); */

			$this->callbackAnswer( $text2, $this->keyboards['inline_default_admin']);
			//$this->callbackAnswer6($text2);

			$text3='–¢–µ–ø–µ—Ä—å –í—ã <b>–∏–º–µ–µ—Ç–µ –ø—Ä–∞–≤–æ —Ä–∞–∑–º–µ—â–∞—Ç—å –æ–±—ä—è–≤–ª–µ–Ω–∏—è –≤ –∫–∞–Ω–∞–ª–µ!</b>'.PHP_EOL.'–ü—Ä–∏—Å—Ç—É–ø–∏–º! –í—ã —Ö–æ—Ç–∏—Ç–µ –∫—É–ø–∏—Ç—å –∏–ª–∏ –ø—Ä–æ–¥–∞—Ç—å —Ç–æ–≤–∞—Ä?üëá'.$this->pre.'';
			
			$this->api->sendMessage([

				'chat_id' => $chatid1,
				'text' => $text3,
				'reply_markup' => json_encode( ['inline_keyboard'=>$this->keyboards['inline_default']]),
				'parse_mode' => "HTML",
				]);
			usleep(100000);
			
			
				
				/* $this->api->sendMessage([
				'chat_id' => $chatid1,
				'text' => $text3,
				'reply_markup' => json_encode($this->keyboards['default_user']),
				'disable_notification' => TRUE,
				'disable_web_page_preview' => TRUE,
				'parse_mode'=> "HTML"
				]); */
			
			
		}
		else
		{
			$text2='–í—ã <b>—É–∂–µ –¥–∞–ª–∏ –ø—Ä–∞–≤–æ</b> –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é <b>'.$fio.' ('.$phone.')</b> —Ä–∞–∑–º–µ—â–∞—Ç—å –æ–±—ä—è–≤–ª–µ–Ω–∏—è –≤ –∫–∞–Ω–∞–ª–µ.'.$this->pre.'';
			$this->callbackAnswer6($text2);
		}
		
	}
	
	/////	
	public function callback_admin_no()
	{

		$tabservicewant='tabservicewant';
		$tabservicedenied='tabservicedenied';
		
		$text1=$this->api->textmessage;
		
		preg_match_all('/id –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è - .*\d/', $text1, $out);
		$chatid1=preg_replace('/id –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è - /', '', $out[0][0]);
		$chatid1=$this->clean($chatid1);
		$fio=$this->cmd_user_get_fio($chatid1);
		$phone=$this->cmd_user_get_phone($chatid1);
		
		$con_sql2=$this->cmd_sql();
		//if($this->cmd_sql_searchchatidtable($tab, $chatid1)==FALSE)
		//{
			//$con_sql2=$this->cmd_sql();
			
			/* mysqli_query($con_sql2, 'INSERT INTO '.$tab.' (chatid, firstname, lastname, username, phone, fio) SELECT chatid, firstname, lastname, username, phone, fio FROM '.$tab1.' WHERE chatid="'.$chatid1.'"');
			usleep(100000); */
			
			/* $queue='DELETE FROM '.$tab1.' WHERE chatid="'.$chatid1.'"';
			$result=mysqli_query($con_sql2, $queue);
			usleep(100000); */
			
			//$text2='–í—ã <b>–æ—Ç–∫–∞–∑–∞–ª–∏ –∏ –∑–∞–±–∞–Ω–∏–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è '.$chatid1.'.</b>';
			
		if($this->cmd_sql_searchchatidtable($tabservicedenied, $chatid1)==FALSE)
		{
			mysqli_query($con_sql2, 'INSERT INTO '.$tabservicedenied.' (chatid, firstname, lastname, username, phone, fio) SELECT chatid, firstname, lastname, username, phone, fio FROM '.$tabservicewant.' WHERE chatid="'.$chatid1.'"');
			usleep(100000); 
		
			$queue='DELETE FROM '.$tabservicewant.' WHERE chatid="'.$chatid1.'"';
			$result=mysqli_query($con_sql2, $queue);
			usleep(100000);
		
			
			
			$text2='–í—ã <b>–æ—Ç–∫–∞–∑–∞–ª–∏</b> –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é üë§<b>'.$fio.' ('.$phone.')</b> –≤ –ø—Ä–∞–≤–µ –Ω–∞ —Ä–∞–∑–º–µ—â–µ–Ω–∏–µ –æ–±—ä—è–≤–ª–µ–Ω–∏–π –≤ –∫–∞–Ω–∞–ª–µ.'.$this->pre.'';
			
			/* if(isset($this->api->body['callback_query']["id"]))
			{
				$callback_query_id=$this->api->body['callback_query']["id"];
				$this->api->answerCallbackQuery($callback_query_id);
			}
			
			$this->api->sendMessage([
			'text' => $text2,
			'reply_markup' => json_encode( ['inline_keyboard'=>$this->keyboards['inline_default_admin']]),
			'disable_notification' => TRUE,
			'disable_web_page_preview' => TRUE,
			'parse_mode'=> "HTML"
			]);
			usleep(100000); */
			
			$this->callbackAnswer( $text2, $this->keyboards['inline_default_admin']);

			$text3='–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –í–∞–º <b>–Ω–µ –¥–∞–ª–∏ –ø—Ä–∞–≤–æ</b> —Ä–∞–∑–º–µ—â–∞—Ç—å –æ–±—ä—è–≤–ª–µ–Ω–∏—è –≤ –∫–∞–Ω–∞–ª–µ!'.$this->pre.'';
			
			$this->api->sendMessage([
			'chat_id' => $chatid1,
			'text' => $text3,
			'reply_markup' => json_encode( ['inline_keyboard'=>$this->keyboards['inline_default']]),
			'parse_mode' => "HTML"
			]);
			usleep(100000);
		}
		else
		{
			$text2='–í—ã <b>—É–∂–µ –æ—Ç–∫–∞–∑–∞–ª–∏</b> –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é <b>'.$fio.' ('.$phone.')</b>  –≤ –ø—Ä–∞–≤–µ –Ω–∞ —Ä–∞–∑–º–µ—â–µ–Ω–∏–µ –æ–±—ä—è–≤–ª–µ–Ω–∏–π –≤ –∫–∞–Ω–∞–ª–µ.'.$this->pre.'';
			$this->callbackAnswer6($text2);
		}
	}

///////////////////////////////////////////////////////////////ADMIN//////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////
	public function callback_default_admin()
	{
		
		$text='–í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ <b>–ì–ª–∞–≤–Ω–æ–º –º–µ–Ω—é</b>. –û –º–æ–π <b>–ê–¥–º–∏–Ω</b>, –í—ã–±–∏—Ä–∏—Ç–µ –Ω–µ–æ–±—Ö–æ–¥–º—ã–π —Ä–∞–∑–¥–µ–ª.'.$this->pre.'';
		
		/* $this->api->sendMessage([
			'text' => $text,
			'reply_markup' => json_encode( ['inline_keyboard'=>$this->keyboards['inline_admin_main']]),
			'disable_notification' => TRUE,
			'disable_web_page_preview' => TRUE,
			'parse_mode'=> "HTML"
		]); */
		
		$this->callbackAnswer( $text, $this->keyboards['inline_admin_main']);
	}

/////	
	public function callback_admin_back_main()
	{		
		
		$text='–í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –≤ <b>–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é</b>.'.$this->pre.'';
		$this->callbackAnswer( $text, $this->keyboards['inline_default_admin']);
	
	}
	
/////	
	public function callback_admin_back_main_menu()
	{		
		
		$text='–í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –≤ <b>–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞</b>.'.$this->pre.'';
		$this->callbackAnswer( $text, $this->keyboards['inline_admin_users']);	
	
	}
	
/////	
	public function callback_admin_exit_main()
	{		
		
		$text='–í—ã –≤—ã—à–ª–∏ –≤ <b>–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é</b>.'.$this->pre.'';
		//$this->callbackAnswer( $text, $this->keyboards['inline_default_admin']);
		
		if(isset($this->api->body['callback_query']["id"]))
		{
			$callback_query_id=$this->api->body['callback_query']["id"];
			$this->api->answerCallbackQuery($callback_query_id);
		}
		
		$this->api->sendMessage([
			'text' => $text,
			'reply_markup' => json_encode( ['inline_keyboard'=>$this->keyboards['inline_default_admin']]),
			'disable_notification' => TRUE,
			'disable_web_page_preview' => TRUE,
			'parse_mode'=> "HTML"
			]);
			usleep(100000);
	}
	
	
//////////////////////////////////////////////////////////////////////USERS/////////////////////////////////////////////////////////////	
public function callback_admin_users()
	{		
		$con_sql2=$this->cmd_sql();
		
		$tab='tabserviceusers';
		
		if(mysqli_num_rows(mysqli_query($con_sql2, 'SELECT 1 FROM '.$tab.' WHERE id LIKE "%" LIMIT 1'))==0)
		{
			$text='–í –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç <b>–Ω–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π!</b>'.PHP_EOL.'–í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ <b>–≥–ª–∞–≤–Ω–æ–º –º–µ–Ω—é –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞</b>.'.$this->pre.'';
			$this->callbackAnswer( $text, $this->keyboards['inline_admin_main']);
		}
		else
		{
			$text='–í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ —Ä–∞–∑–¥–µ–ª–µ <b>–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏</b>. –í—ã–±–µ—Ä–∏—Ç–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–π –ø–æ–¥—Ä–∞–∑–¥–µ–ª, –Ω–∞–∂–∞–≤ –Ω–∞ –∫–Ω–æ–ø–∫–∏ –Ω–∏–∂–µ.'.$this->pre.'';
			$this->callbackAnswer( $text, $this->keyboards['inline_admin_users']);
		}
		
	}
	
/////	
	public function callback_admin_back_users()
	{		
		
		$text='–í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é —Ä–∞–∑–¥–µ–ª–∞ <b>–ê–¥–º–∏–Ω</b>.'.$this->pre.'';
		$this->callbackAnswer( $text, $this->keyboards['inline_admin_main']);
	
	}

/////	
	public function callback_admin_exit_allusers()
	{		
		
		$text='–í—ã –≤—ã—à–ª–∏ –≤ <b>–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é.</b>'.$this->pre.'';
		//$this->callbackAnswer( $text, $this->keyboards['inline_default_admin']);
		
		if(isset($this->api->body['callback_query']["id"]))
		{
			$callback_query_id=$this->api->body['callback_query']["id"];
			$this->api->answerCallbackQuery($callback_query_id);
		}
		
		$this->api->sendMessage([
			'text' => $text,
			'reply_markup' => json_encode( ['inline_keyboard'=>$this->keyboards['inline_default_admin']]),
			'disable_notification' => TRUE,
			'disable_web_page_preview' => TRUE,
			'parse_mode'=> "HTML"
			]);
			usleep(100000);
	}
	
		
///////////////////////////////////////////////////////////ALL USERS/////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////	
/////	
	public function callback_admin_allusers()
	{		
		$text='–í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ —Ä–∞–∑–¥–µ–ª–µ <b>–í—Å–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏</b>. –í—ã–±–µ—Ä–∏—Ç–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–π –ø–æ–¥—Ä–∞–∑–¥–µ–ª, –Ω–∞–∂–∞–≤ –Ω–∞ –∫–Ω–æ–ø–∫–∏ –Ω–∏–∂–µ.'.$this->pre.'';
		$this->callbackAnswer( $text, $this->keyboards['inline_admin_allusers']);
	}
	
/////	
	public function callback_admin_showallusers()
	{		
		
		$merge=$this->cmd_admin_showallusers();
		usleep(100000);
		
		if (array_filter($merge) !== [])
		{
			$merge[] = [['text' => '‚¨ÖÔ∏è–ù–∞–∑–∞–¥', 'callback_data' => 'admin_back_allusers'], ['text' => '‚§¥Ô∏è–í—ã–π—Ç–∏', 'callback_data' => 'admin_exit_main']];
			$text='–í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ <b>–ü–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π</b>. –í—ã–±–µ—Ä–∏—Ç–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, —á—Ç–æ–±—ã –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –Ω–µ–º.'.$this->pre.'';
			$this->callbackAnswer( $text, $merge);
		}
		else
		{
			$text='–í –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç <b>–Ω–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π!</b>'.PHP_EOL.'–í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ <b>–≥–ª–∞–≤–Ω–æ–º –º–µ–Ω—é –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞</b>.'.$this->pre.'';
			$this->callbackAnswer( $text, $this->keyboards['inline_admin_main']);
		}
			
		
	}


/////
	public function callback_admin_back_allusers()
	{
		$text='–í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –≤ –ø–æ–¥—Ä–∞–∑–¥–µ–ª <b>–í—Å–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏</b>.'.$this->pre.'';
		$this->callbackAnswer( $text, $this->keyboards['inline_admin_allusers']);
	}
	
	
/////
	public function cmd_admin_showallusers()
	{
		$adminid=$this->chatidadmin;		
		$con_sql2=$this->cmd_sql();
		
		$tab='tabserviceusers';
		
		
			$query1=mysqli_query($con_sql2, 'SELECT DISTINCT chatid FROM '.$tab.'');
			$con1=mysqli_num_rows($query1);
		
			$table=[];
			
			for($i=0;$i<$con1;$i++)
			{
				mysqli_data_seek($query1, $i);
				$row1[$i]=mysqli_fetch_row($query1);
				$table[]=$row1[$i][0];	
			}
	
			$cnt=count($table);
			$maxbuttons=1;
			$ceil=ceil($cnt/$maxbuttons);
			
			
			
			$include=''.dirname(__FILE__).'/include'.$this->api->chatId.'.php';
			
			if(file_exists($include)==FALSE)
			{
				touch($include);
				
				$insert='<?php
		
		
				class TelegramBotfunc{';
				file_put_contents($include, $insert . PHP_EOL,FILE_APPEND);
				
			}
			else
			{
				$getinclude=file($include);
				unset($getinclude[array_key_last($getinclude)]);
				file_put_contents($include, $getinclude);
			}
			
			$u=0;
			$merge=[];
			
			for($i1=0;$i1<$ceil;$i1++)
			{
				$put=[];
				for($i2=0;$i2<$maxbuttons;$i2++)
				{	
					if(isset($table[$u]) && $this->cmd_isadmin1($table[$u])==FALSE)
					{
						$buttext='üë§'.$this->cmd_user_get_fiophone($table[$u]).'';
						
						$put[]=["text" => "$buttext", "callback_data" => "admin_showalluser_$table[$u]"];
						
						if(preg_match('/callback_admin_showalluser_'.$table[$u].'/', file_get_contents($include))==FALSE)
						{
							$insert='
							public function callback_admin_showalluser_'.$table[$u].'()
							{	
					
								$bot = new TestBot;
								$bot->api->getWebhookUpdate();
												
								$con_sql2=$bot->cmd_sql();
								$tab=&#039;tabserviceusers&#039;;
								$tabserviceapproved=&#039;tabserviceapproved&#039;;
								$tabservicewant=&#039;tabservicewant&#039;;
								$tabservicedenied=&#039;tabservicedenied&#039;;


								$query=mysqli_query($con_sql2, &#039;SELECT * FROM &#039;.$tab.&#039; WHERE chatid="'.$table[$u].'"&#039;);
								usleep(100000);
								$con=mysqli_num_rows($query);
								
								for($i1=0;$i1<$con;$i1++)
								{
									mysqli_data_seek($query, $i1);
									$row[$i1]=mysqli_fetch_row($query);
									$chatid=$row[0][1];
									$firstname=$row[0][2];
									$lastname=$row[0][3];
									$username=$row[0][4];
									$phone=$row[0][5];
									$fio=$row[0][6];
									

									if(preg_match(&#039;/'.$table[$u].'/&#039;, file_get_contents(&#039;&#039;.dirname(__FILE__).&#039;/usersapproved.txt&#039;)))
									{
										if($bot->cmd_isadmin1('.$table[$u].'))
										{
											$status="–ê–¥–º–∏–Ω";
										}
										else
										{
											$status="–ü—Ä–µ–º–∏—É–º";
										}
									}
									elseif($bot->cmd_sql_searchchatidtable($tabservicewant, '.$table[$u].'))
									{
										$status="–û–±—ã—á–Ω—ã–π (+–ø—Ä–µ–º–∏—É–º)";
									}
									elseif($bot->cmd_sql_searchchatidtable($tabservicedenied, '.$table[$u].'))
									{
										$status="–û–±—ã—á–Ω—ã–π (-–ø—Ä–µ–º–∏—É–º)";
									}
									else
									{
										$status="–û–±—ã—á–Ω—ã–π";
									}
								}
								
								if($username==&#039;–Ω–µ—Ç –¥–∞–Ω–Ω—ã—Ö&#039;)
								{
									$text=&#039;–ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: <b>&#039;.$username.&#039;</b>&#039;.PHP_EOL.&#039;–ò–º—è: <b>&#039;.$firstname.&#039;</b>&#039;.PHP_EOL.&#039;–§–∞–º–∏–ª–∏—è: <b>&#039;.$lastname.&#039;</b>&#039;.PHP_EOL.&#039;–ß–∞—Ç: <b>&#039;.$chatid.&#039;</b>&#039;.PHP_EOL.&#039;&#039;.PHP_EOL.&#039;–¢–µ–ª–µ—Ñ–æ–Ω: <b>&#039;.$phone.&#039;</b>&#039;.PHP_EOL.&#039;–§–ò–û: <b>&#039;.$fio.&#039;</b>&#039;.PHP_EOL.&#039;–°—Ç–∞—Ç—É—Å: <b>&#039;.$status.&#039;</b>&#039;.PHP_EOL.&#039;&#039;.PHP_EOL.&#039;–í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ –ü–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π. –í—ã–±–µ—Ä–∏—Ç–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, —á—Ç–æ–±—ã –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –Ω–µ–º.&#039;.$bot->pre.&#039;&#039;;
								}
								else
								{
									$text=&#039;–ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: <b>@&#039;.$username.&#039;</b>&#039;.PHP_EOL.&#039;–ò–º—è: <b>&#039;.$firstname.&#039;</b>&#039;.PHP_EOL.&#039;–§–∞–º–∏–ª–∏—è: <b>&#039;.$lastname.&#039;</b>&#039;.PHP_EOL.&#039;–ß–∞—Ç: <b>&#039;.$chatid.&#039;</b>&#039;.PHP_EOL.&#039;&#039;.PHP_EOL.&#039;–¢–µ–ª–µ—Ñ–æ–Ω: <b>&#039;.$phone.&#039;</b>&#039;.PHP_EOL.&#039;–§–ò–û: <b>&#039;.$fio.&#039;</b>&#039;.PHP_EOL.&#039;–°—Ç–∞—Ç—É—Å: <b>&#039;.$status.&#039;</b>&#039;.PHP_EOL.&#039;&#039;.PHP_EOL.&#039;–í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ –ü–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π. –í—ã–±–µ—Ä–∏—Ç–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, —á—Ç–æ–±—ã –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –Ω–µ–º.&#039;.$bot->pre.&#039;&#039;;
								}
								
								
								$merge=$bot->cmd_admin_showallusers();

								usleep(100000);
								$merge[] = [[&#039;text&#039; => &#039;‚¨ÖÔ∏è–ù–∞–∑–∞–¥&#039;, &#039;callback_data&#039; => &#039;admin_back_allusers_show&#039;], [&#039;text&#039; => &#039;‚§¥Ô∏è–í—ã–π—Ç–∏&#039;, &#039;callback_data&#039; => &#039;admin_exit_main&#039;]];
								
								
								if(isset($bot->api->body[&#039;callback_query&#039;]["id"]))
								{
									$callback_query_id=$bot->api->body[&#039;callback_query&#039;]["id"];
									$bot->api->answerCallbackQuery($callback_query_id);
								}
								
								$bot->api->sendMessage([
									&#039;text&#039; => $text,
									&#039;reply_markup&#039; => json_encode( [&#039;inline_keyboard&#039;=>$merge]),
									&#039;disable_notification&#039; => TRUE,
									&#039;disable_web_page_preview&#039; => TRUE,
									&#039;parse_mode&#039;=> "HTML"
								]);
								
								
								usleep(100000);
								
							}';
							file_put_contents($include, html_entity_decode($insert, ENT_QUOTES) . PHP_EOL . PHP_EOL,FILE_APPEND);
						}
						
					}	
					$u++;	
				}
					
				$merge[]=$put;
				unset($put);
				
			}
			
			$insert='}';
			file_put_contents($include, $insert,FILE_APPEND);

			return $merge;

	}

/////
	public function callback_admin_back_allusers_show()
	{
		$text='–í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –≤ –ø–æ–¥—Ä–∞–∑–¥–µ–ª <b>–í—Å–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏</b>.'.$this->pre.'';
		$this->callbackAnswer( $text, $this->keyboards['inline_admin_allusers']);
	}		



///////	
	public function callback_admin_showallusers_file()
	{
		$con_sql2=$this->cmd_sql();
		$tabserviceusers='tabserviceusers';
		$tabservicewant='tabservicewant';
		$tabservicedenied='tabservicedenied';
		
		$query1=mysqli_query($con_sql2, 'SELECT * FROM '.$tabserviceusers.' WHERE id LIKE "%"');
		$con1=mysqli_num_rows($query1);
		

		require_once(''.dirname(__FILE__).'/pdf/tcpdf.php');
		$pdf = new TCPDF('L', PDF_UNIT, PDF_PAGE_FORMAT, true, 'UTF-8', false);
		
		$pdf->SetCreator(PDF_CREATOR);
		
		$pdf->SetHeaderData(PDF_HEADER_LOGO, PDF_HEADER_LOGO_WIDTH, PDF_HEADER_TITLE.' 001', PDF_HEADER_STRING, array(0,0,0), array(0,0,0));
		$pdf->setFooterData(array(0,0,0), array(0,0,0));
		
		
		$pdf->setHeaderFont(Array(PDF_FONT_NAME_MAIN, '', PDF_FONT_SIZE_MAIN));
		$pdf->setFooterFont(Array(PDF_FONT_NAME_DATA, '', PDF_FONT_SIZE_DATA));
		$pdf->setPrintHeader(false);
		$pdf->setPrintFooter(false);
		
		$pdf->SetDefaultMonospacedFont(PDF_FONT_MONOSPACED);
		
		$pdf->SetAutoPageBreak(false, PDF_MARGIN_BOTTOM);
		
		$pdf->setImageScale(PDF_IMAGE_SCALE_RATIO);
		
		if (@file_exists(dirname(__FILE__).'/pdf/lang/eng.php')) {
			require_once(dirname(__FILE__).'/pdf/lang/eng.php');
			$pdf->setLanguageArray($l);
		}
		
		$pdf->SetFont('dejavusans', '', 8, '', true);
		
		$pdf->AddPage();
		$date=date('d.m.Y');
		$time=date('G:i:s');
		
		$htmladd='
<div style="align: center; font-size: 16px; text-align: center"><b>–í—Å–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –ø–æ —Å–æ—Å—Ç–æ—è–Ω–∏—é –Ω–∞ '.$date.' '.$time.'</b></div><br><br>
<table border="1" cellspacing="0">
<tr style="line-height: 50px;">
<td align="center" valign="middle" width="60px"><b>‚Ññ</b></td>
<td align="center" valign="middle" width="90px"><b>–ß–∞—Ç ID</b></td>
<td align="center" valign="middle" width="100px"><b>–ò–º—è</b></td>
<td align="center" valign="middle" width="100px"><b>–§–∞–º–∏–ª–∏—è</b></td>
<td align="center" valign="middle" width="120px"><b>–ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è</b></td>
<td align="center" valign="middle" width="120px"><b>–¢–µ–ª–µ—Ñ–æ–Ω</b></td>
<td align="center" valign="middle" width="220px"><b>–§–ò–û</b></td>
<td align="center" valign="middle" width="200px"><b>–°—Ç–∞—Ç—É—Å</b></td>
</tr>';

		for($i1=0;$i1<$con1;$i1++)
		{
			mysqli_data_seek($query1, $i1);
			$row1[$i1]=mysqli_fetch_row($query1);
			
			$htmladd=''.$htmladd.''.PHP_EOL.'<tr>';
							
			$put='<td style="text-align: center; valign: middle; font-size: 10px;">'.$row1[$i1][0].'</td>';
			$htmladd=''.$htmladd.''.PHP_EOL.''.$put.'';
			
			$put='<td style="text-align: center; valign: middle; font-size: 10px;">'.$row1[$i1][1].'</td>';
			$htmladd=''.$htmladd.''.PHP_EOL.''.$put.'';
			
			$put='<td style="text-align: center; valign: middle; font-size: 10px;">'.$row1[$i1][2].'</td>';
			$htmladd=''.$htmladd.''.PHP_EOL.''.$put.'';
			
			$put='<td style="text-align: center; valign: middle; font-size: 10px;">'.$row1[$i1][3].'</td>';
			$htmladd=''.$htmladd.''.PHP_EOL.''.$put.'';
			
			$put='<td style="text-align: center; valign: middle; font-size: 10px;">'.$row1[$i1][4].'</td>';
			$htmladd=''.$htmladd.''.PHP_EOL.''.$put.'';
			
			$put='<td style="text-align: center; valign: middle; font-size: 10px;">'.$row1[$i1][5].'</td>';
			$htmladd=''.$htmladd.''.PHP_EOL.''.$put.'';
			
			$put='<td style="text-align: center; valign: middle; font-size: 10px;"><b>'.$row1[$i1][6].'</b></td>';
			$htmladd=''.$htmladd.''.PHP_EOL.''.$put.'';
			
			
			if(preg_match('/'.$row1[$i1][1].'/', file_get_contents(''.dirname(__FILE__).'/usersapproved.txt')))
			{
				if($this->cmd_isadmin1($row1[$i1][1]))
				{
					$status="–ê–¥–º–∏–Ω";
				}
				else
				{
					$status="–ü—Ä–µ–º–∏—É–º";
				}
			}
			elseif($this->cmd_sql_searchchatidtable($tabservicewant, $row1[$i1][1]))
			{
				$status="–û–±—ã—á–Ω—ã–π (+–ø—Ä–µ–º–∏—É–º)";
			}
			elseif($this->cmd_sql_searchchatidtable($tabservicedenied, $row1[$i1][1]))
			{
				$status="–û–±—ã—á–Ω—ã–π (-–ø—Ä–µ–º–∏—É–º)";
			}
			else
			{
				$status="–û–±—ã—á–Ω—ã–π";
			}
			
			
			$put='<td style="text-align: center; valign: middle; font-size: 10px;"><b>'.$status.'</b></td>';
			$htmladd=''.$htmladd.''.PHP_EOL.''.$put.'';
			
			$htmladd=''.$htmladd.''.PHP_EOL.'</tr>';
		}
				
			
			
		$htmladd=''.$htmladd.''.PHP_EOL.'</table>';
$html=<<<EOD
$htmladd
EOD;
			
		array_map('unlink', glob(''.dirname(__FILE__).'/pdf/allusers*.pdf'));
		usleep(250000);
		
		$time=date('G.i.s');
		
		$pdf->writeHTMLCell(0, 0, '', '', $html, 0, 1, 0, true, '', true);
		$pdf->Output(''.dirname(__FILE__).'/pdf/allusers_'.$date.'_'.$time.'.pdf', 'F');
		usleep(250000);
		
		$this->api->sendDocument([
			'document' => 'https://domain.com/pdf/allusers_'.$date.'_'.$time.'.pdf',
			'disable_notification' => TRUE,
			'parse_mode'=> "HTML"
			]);
		usleep(250000);
		
		
		$text='–í–∞–º –±—ã–ª –≤—ã—Å–ª–∞–Ω —Ñ–∞–π–ª —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è—Ö.'.PHP_EOL.'–í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ —Ä–∞–∑–¥–µ–ª–µ <b>–í—Å–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏</b>.'.$this->pre.'';
			
		if(isset($this->api->body['callback_query']["id"]))
		{
			$callback_query_id=$this->api->body['callback_query']["id"];
			$this->api->answerCallbackQuery($callback_query_id);
		}
		
		$this->api->sendMessage([
			'text' => $text,
			'reply_markup' => json_encode( ['inline_keyboard'=>$this->keyboards['inline_admin_allusers']]),
			'disable_notification' => TRUE,
			'disable_web_page_preview' => TRUE,
			'parse_mode'=> "HTML"
			]);
		usleep(100000);
				
	}




///////	
	public function callback_admin_banallusers()
	{		

		$merge=$this->cmd_admin_banallusers();
		usleep(100000);
		
		$merge[] = [['text' => '‚¨ÖÔ∏è–ù–∞–∑–∞–¥', 'callback_data' => 'admin_back_allusers'], ['text' => '‚§¥Ô∏è–í—ã–π—Ç–∏', 'callback_data' => 'admin_exit_main']];
		$text='–í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ <b>–ó–∞–±–∞–Ω–∏—Ç—å –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π</b>.'.PHP_EOL.'–í—ã–±–µ—Ä–∏—Ç–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, —á—Ç–æ–±—ã –∑–∞–±–∞–Ω–∏—Ç—å –µ–≥–æ.'.$this->pre.'';
		$this->callbackAnswer( $text, $merge);

	}
	
/////	
	public function cmd_admin_banallusers()
	{
		$adminid=$this->chatidadmin;		
		$con_sql2=$this->cmd_sql();
		

		$tab='tabserviceapproved';
		$tab1='tabservicebanned';
		$tab2='tabserviceusers';
		
		$tabserviceapproved='tabserviceapproved';
		$tabservicebanned='tabservicebanned';
		$tabserviceusers='tabserviceusers';
		$tabservicewant='tabservicewant';
		
		
			$query1=mysqli_query($con_sql2, 'SELECT DISTINCT chatid FROM '.$tabserviceusers.'');
			usleep(100000);
			$con1=mysqli_num_rows($query1);
		
			$table=[];
			
			for($i=0;$i<$con1;$i++)
			{
				mysqli_data_seek($query1, $i);
				$row1[$i]=mysqli_fetch_row($query1);
				$table[]=$row1[$i][0];	
			}
	
			$cnt=count($table);
			$maxbuttons=1;
			$ceil=ceil($cnt/$maxbuttons);
			
			
			
			$include=''.dirname(__FILE__).'/include'.$this->api->chatId.'.php';
			
			if(file_exists($include)==FALSE)
			{
				touch($include);
				
				$insert='<?php
		
		
				class TelegramBotfunc{';
				file_put_contents($include, $insert . PHP_EOL,FILE_APPEND);
				
			}
			else
			{
				$getinclude=file($include);
				unset($getinclude[array_key_last($getinclude)]);
				file_put_contents($include, $getinclude);
			}
			
			$u=0;
			$merge=[];
			
			for($i1=0;$i1<$ceil;$i1++)
			{
				$put=[];
				for($i2=0;$i2<$maxbuttons;$i2++)
				{	
					if(isset($table[$u]) && $this->cmd_isadmin1($table[$u])==FALSE)
					{	

						//$buttext="üë§$table[$u]";
						$buttext='üë§'.$this->cmd_user_get_fiophone($table[$u]).'';
						
						$put[]=["text" => "$buttext", "callback_data" => "admin_banalluser_$table[$u]"];
						
						if(preg_match('/callback_admin_banalluser_'.$table[$u].'/', file_get_contents($include))==FALSE)
						{
							$insert='
							public function callback_admin_banalluser_'.$table[$u].'()
							{	
					
								$bot = new TestBot;
								$bot->api->getWebhookUpdate();
								$callback_query_id=$bot->api->body[&#039;callback_query&#039;]["id"];
								
								$con_sql2=$bot->cmd_sql();
								$tabserviceusers=&#039;tabserviceusers&#039;;

									
								mysqli_query($con_sql2, &#039;INSERT INTO '.$tabservicebanned.' (chatid, firstname, lastname, username, phone, fio) SELECT chatid, firstname, lastname, username, phone, fio FROM '.$tabserviceusers.' WHERE chatid="'.$table[$u].'"&#039;);
								usleep(250000);
								
								mysqli_query($con_sql2, &#039;DELETE FROM '.$tabserviceusers.' WHERE chatid="'.$table[$u].'"&#039;);
								usleep(100000);
								mysqli_query($con_sql2, &#039;DELETE FROM '.$tabserviceapproved.' WHERE chatid="'.$table[$u].'"&#039;);
								usleep(100000);
								mysqli_query($con_sql2, &#039;DELETE FROM '.$tabservicewant.' WHERE chatid="'.$table[$u].'"&#039;);
								usleep(100000);
								
								$get=file_get_contents(&#039;&#039;.dirname(__FILE__).&#039;/usersall.txt&#039;);
								$get=str_replace("'.$table[$u].'", "", $get);
								$get=$bot->clean($get);
								file_put_contents(&#039;&#039;.dirname(__FILE__).&#039;/usersall.txt&#039;, $get . PHP_EOL);
								
								$get=file_get_contents(&#039;&#039;.dirname(__FILE__).&#039;/usersapproved.txt&#039;);
								$get=str_replace("'.$table[$u].'", "", $get);
								$get=$bot->clean($get);
								file_put_contents(&#039;&#039;.dirname(__FILE__).&#039;/usersapproved.txt&#039;, $get . PHP_EOL);
								
								
								$text="–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –í—ã –±—ã–ª–∏ <b>–∑–∞–±–∞–Ω–µ–Ω—ã –∞–¥–º–∏–Ω–æ–º!</b>";
								
								$bot->api->sendMessage([
									&#039;chat_id&#039; => '.$table[$u].',
									&#039;text&#039; => $text,
									&#039;disable_notification&#039; => TRUE,
									&#039;disable_web_page_preview&#039; => TRUE,
									&#039;parse_mode&#039;=> "HTML"
								]);
								usleep(100000);
								
								$text=&#039;–í—ã <b>—É—Å–ø–µ—à–Ω–æ –∑–∞–±–∞–Ω–∏–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è '.$buttext.'</b>.&#039;.PHP_EOL.&#039;–í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ <b>–ó–∞–±–∞–Ω–∏—Ç—å –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π</b>.&#039;.PHP_EOL.&#039;–í—ã–±–µ—Ä–∏—Ç–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, —á—Ç–æ–±—ã –∑–∞–±–∞–Ω–∏—Ç—å –µ–≥–æ.&#039;.$bot->pre.&#039;&#039;;
								
								$merge=$bot->cmd_admin_banallusers();
								usleep(100000);
								
								if (array_filter($merge) !== [])
								{
								
									$merge[] = [[&#039;text&#039; => &#039;‚¨ÖÔ∏è–ù–∞–∑–∞–¥&#039;, &#039;callback_data&#039; => &#039;admin_back_allusers&#039;], [&#039;text&#039; => &#039;‚§¥Ô∏è–í—ã–π—Ç–∏&#039;, &#039;callback_data&#039; => &#039;admin_exit_main&#039;]];
								
									$bot->api->answerCallbackQuery($callback_query_id);
									$bot->api->editMessageText([
										&#039;chat_id&#039; => $bot->api->body[&#039;callback_query&#039;][&#039;message&#039;][&#039;chat&#039;]["id"],
										&#039;message_id&#039; => $bot->api->body[&#039;callback_query&#039;][&#039;message&#039;][&#039;message_id&#039;],
										&#039;text&#039; => $text,
										&#039;parse_mode&#039; => "HTML",
										&#039;reply_markup&#039; => json_encode( [&#039;inline_keyboard&#039;=>$merge] ),
									]);
									usleep(100000);
								}
								else
								{
									$text=&#039;–í –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç <b>–Ω–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π!</b>&#039;.PHP_EOL.&#039;&#039;.PHP_EOL.&#039;–í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ <b>–≥–ª–∞–≤–Ω–æ–º –º–µ–Ω—é –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞</b>.&#039;.$bot->pre.&#039;&#039;;
									$bot->api->answerCallbackQuery($callback_query_id);
									$bot->api->editMessageText([
									&#039;chat_id&#039; => $bot->api->body[&#039;callback_query&#039;][&#039;message&#039;][&#039;chat&#039;]["id"],
									&#039;message_id&#039; => $bot->api->body[&#039;callback_query&#039;][&#039;message&#039;][&#039;message_id&#039;],
									&#039;text&#039; => $text,
									&#039;parse_mode&#039; => "HTML",
									&#039;reply_markup&#039; => json_encode( [&#039;inline_keyboard&#039;=>$bot->keyboards[&#039;inline_admin_main&#039;]] ),
								]);
								usleep(100000);
								}

							}';
							file_put_contents($include, html_entity_decode($insert, ENT_QUOTES) . PHP_EOL . PHP_EOL,FILE_APPEND);
						}
						
					}	
					$u++;	
				}
					
				$merge[]=$put;
				unset($put);
				
			}
			
			$insert='}';
			file_put_contents($include, $insert,FILE_APPEND);
			
			return $merge;
		
		
		
	}





/////	
	public function callback_admin_deniedusers()
	{		
		$text='–í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ —Ä–∞–∑–¥–µ–ª–µ <b>–û—Ç–∫–∞–∑–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏</b>. –í—ã–±–µ—Ä–∏—Ç–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–π –ø–æ–¥—Ä–∞–∑–¥–µ–ª, –Ω–∞–∂–∞–≤ –Ω–∞ –∫–Ω–æ–ø–∫–∏ –Ω–∏–∂–µ.'.$this->pre.'';
		$this->callbackAnswer( $text, $this->keyboards['inline_admin_deniedusers']);
	}
	
/////	
	public function callback_admin_showdeniedusers()
	{		
		
		$merge=$this->cmd_admin_showdeniedusers();
		usleep(100000);
		
		if (array_filter($merge) !== [])
		{
			$merge[] = [['text' => '‚¨ÖÔ∏è–ù–∞–∑–∞–¥', 'callback_data' => 'admin_back_allusers'], ['text' => '‚§¥Ô∏è–í—ã–π—Ç–∏', 'callback_data' => 'admin_exit_main']];
			$text='–í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ <b>–ü–æ–∫–∞–∑–∞—Ç—å –æ—Ç–∫–∞–∑–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π</b>. –í—ã–±–µ—Ä–∏—Ç–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, —á—Ç–æ–±—ã –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –Ω–µ–º.'.$this->pre.'';
			$this->callbackAnswer( $text, $merge);
		}
		else
		{
			$text='–í –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç <b>–Ω–µ—Ç –æ—Ç–∫–∞–∑–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π!</b>'.PHP_EOL.'–í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ <b>–≥–ª–∞–≤–Ω–æ–º –º–µ–Ω—é –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞</b>.'.$this->pre.'';
			$this->callbackAnswer( $text, $this->keyboards['inline_admin_main']);
		}
			
		
	}


/////
	public function cmd_admin_showdeniedusers()
	{
		$adminid=$this->chatidadmin;		
		$con_sql2=$this->cmd_sql();
		
		$tab='tabservicedenied';
		
		$query1=mysqli_query($con_sql2, 'SELECT DISTINCT chatid FROM '.$tab.'');
		$con1=mysqli_num_rows($query1);
		
		$table=[];
		
		for($i=0;$i<$con1;$i++)
		{
			mysqli_data_seek($query1, $i);
			$row1[$i]=mysqli_fetch_row($query1);
			$table[]=$row1[$i][0];	
		}
		
		$cnt=count($table);
		$maxbuttons=1;
		$ceil=ceil($cnt/$maxbuttons);
		
		
		
		$include=''.dirname(__FILE__).'/include'.$this->api->chatId.'.php';
		
		if(file_exists($include)==FALSE)
		{
			touch($include);
			
			$insert='<?php
		
		
			class TelegramBotfunc{';
			file_put_contents($include, $insert . PHP_EOL,FILE_APPEND);
			
		}
		else
		{
			$getinclude=file($include);
			unset($getinclude[array_key_last($getinclude)]);
			file_put_contents($include, $getinclude);
		}
		
		$u=0;
		$merge=[];
		
		for($i1=0;$i1<$ceil;$i1++)
		{
			$put=[];
			for($i2=0;$i2<$maxbuttons;$i2++)
			{	
				if(isset($table[$u]) && $this->cmd_isadmin1($table[$u])==FALSE)
				{
					$buttext='üë§'.$this->cmd_user_get_fiophone($table[$u]).'';
					
					$put[]=["text" => "$buttext", "callback_data" => "admin_showdenieduser_$table[$u]"];
					
					if(preg_match('/callback_admin_showdenieduser_'.$table[$u].'/', file_get_contents($include))==FALSE)
					{
						$insert='
						public function callback_admin_showdenieduser_'.$table[$u].'()
						{	
				
							$bot = new TestBot;
							$bot->api->getWebhookUpdate();
											
							$con_sql2=$bot->cmd_sql();
							$tab=&#039;tabservicedenied&#039;;
							
							$query1=mysqli_query($con_sql2, &#039;SELECT 1 FROM &#039;.$tab.&#039; WHERE id LIKE "%" LIMIT 1&#039;);
							$con1=mysqli_num_rows($query1);
							usleep(100000);
							
							if($con1!=0)
							{
								
								$query=mysqli_query($con_sql2, &#039;SELECT * FROM &#039;.$tab.&#039; WHERE chatid="'.$table[$u].'"&#039;);
								usleep(100000);
								$con=mysqli_num_rows($query);
								
								for($i1=0;$i1<$con;$i1++)
								{
									mysqli_data_seek($query, $i1);
									$row[$i1]=mysqli_fetch_row($query);
									$chatid=$row[0][1];
									$firstname=$row[0][2];
									$lastname=$row[0][3];
									$username=$row[0][4];
									$phone=$row[0][5];
									$fio=$row[0][6];
								}
								
								$status="–û–±—ã—á–Ω—ã–π (-–ø—Ä–µ–º–∏—É–º)";
								
								if($username==&#039;–Ω–µ—Ç –¥–∞–Ω–Ω—ã—Ö&#039;)
								{
									$text=&#039;–ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: <b>&#039;.$username.&#039;</b>&#039;.PHP_EOL.&#039;–ò–º—è: <b>&#039;.$firstname.&#039;</b>&#039;.PHP_EOL.&#039;–§–∞–º–∏–ª–∏—è: <b>&#039;.$lastname.&#039;</b>&#039;.PHP_EOL.&#039;–ß–∞—Ç: <b>&#039;.$chatid.&#039;</b>&#039;.PHP_EOL.&#039;&#039;.PHP_EOL.&#039;–¢–µ–ª–µ—Ñ–æ–Ω: <b>&#039;.$phone.&#039;</b>&#039;.PHP_EOL.&#039;–§–ò–û: <b>&#039;.$fio.&#039;</b>&#039;.PHP_EOL.&#039;–°—Ç–∞—Ç—É—Å: <b>&#039;.$status.&#039;</b>&#039;.PHP_EOL.&#039;&#039;.PHP_EOL.&#039;–í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ –ü–æ–∫–∞–∑–∞—Ç—å –æ—Ç–∫–∞–∑–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π. –í—ã–±–µ—Ä–∏—Ç–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, —á—Ç–æ–±—ã –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –Ω–µ–º.&#039;.$bot->pre.&#039;&#039;;
								}
								else
								{
									$text=&#039;–ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: <b>@&#039;.$username.&#039;</b>&#039;.PHP_EOL.&#039;–ò–º—è: <b>&#039;.$firstname.&#039;</b>&#039;.PHP_EOL.&#039;–§–∞–º–∏–ª–∏—è: <b>&#039;.$lastname.&#039;</b>&#039;.PHP_EOL.&#039;–ß–∞—Ç: <b>&#039;.$chatid.&#039;</b>&#039;.PHP_EOL.&#039;&#039;.PHP_EOL.&#039;–¢–µ–ª–µ—Ñ–æ–Ω: <b>&#039;.$phone.&#039;</b>&#039;.PHP_EOL.&#039;–§–ò–û: <b>&#039;.$fio.&#039;</b>&#039;.PHP_EOL.&#039;–°—Ç–∞—Ç—É—Å: <b>&#039;.$status.&#039;</b>&#039;.PHP_EOL.&#039;&#039;.PHP_EOL.&#039;–í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ –ü–æ–∫–∞–∑–∞—Ç—å –æ—Ç–∫–∞–∑–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π. –í—ã–±–µ—Ä–∏—Ç–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, —á—Ç–æ–±—ã –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –Ω–µ–º.&#039;.$bot->pre.&#039;&#039;;
								}
								
								
								$merge=$bot->cmd_admin_showdeniedusers();
								
								if (array_filter($merge) !== [])
								{
									usleep(100000);
									$merge[] = [[&#039;text&#039; => &#039;‚¨ÖÔ∏è–ù–∞–∑–∞–¥&#039;, &#039;callback_data&#039; => &#039;admin_back_approvedusers&#039;], [&#039;text&#039; => &#039;‚§¥Ô∏è–í—ã–π—Ç–∏&#039;, &#039;callback_data&#039; => &#039;admin_exit_main&#039;]];
									
									
									if(isset($bot->api->body[&#039;callback_query&#039;]["id"]))
									{
										$callback_query_id=$bot->api->body[&#039;callback_query&#039;]["id"];
										$bot->api->answerCallbackQuery($callback_query_id);
									}
		
									$bot->api->sendMessage([
										&#039;text&#039; => $text,
										&#039;reply_markup&#039; => json_encode( [&#039;inline_keyboard&#039;=>$merge]),
										&#039;disable_notification&#039; => TRUE,
										&#039;disable_web_page_preview&#039; => TRUE,
										&#039;parse_mode&#039;=> "HTML"
									]);
									usleep(100000);
								}
								else
								{
									$text=&#039;–í –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç <b>–Ω–µ—Ç –æ—Ç–∫–∞–∑–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π!</b>&#039;.PHP_EOL.&#039;&#039;.PHP_EOL.&#039;–í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ <b>–≥–ª–∞–≤–Ω–æ–º –º–µ–Ω—é –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞</b>.&#039;.$bot->pre.&#039;&#039;;
		
									$bot->api->answerCallbackQuery($callback_query_id);
									$bot->api->editMessageText([
									&#039;chat_id&#039; => $bot->api->body[&#039;callback_query&#039;][&#039;message&#039;][&#039;chat&#039;]["id"],
									&#039;message_id&#039; => $bot->api->body[&#039;callback_query&#039;][&#039;message&#039;][&#039;message_id&#039;],
									&#039;text&#039; => $text,
									&#039;parse_mode&#039; => "HTML",
									&#039;reply_markup&#039; => json_encode( [&#039;inline_keyboard&#039;=>$bot->keyboards[&#039;inline_admin_main&#039;]] ),
									]);
									usleep(100000);
								}
							}
							else
							{
								$text=&#039;–í –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç <b>–Ω–µ—Ç –æ—Ç–∫–∞–∑–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π!</b>&#039;.PHP_EOL.&#039;&#039;.PHP_EOL.&#039;–í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ <b>–≥–ª–∞–≤–Ω–æ–º –º–µ–Ω—é –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞</b>.&#039;.$bot->pre.&#039;&#039;;
								
								if(isset($bot->api->body[&#039;callback_query&#039;]["id"]))
									{
										$callback_query_id=$bot->api->body[&#039;callback_query&#039;]["id"];
										$bot->api->answerCallbackQuery($callback_query_id);
									}
									
								$bot->api->editMessageText([
									&#039;chat_id&#039; => $bot->api->body[&#039;callback_query&#039;][&#039;message&#039;][&#039;chat&#039;]["id"],
									&#039;message_id&#039; => $bot->api->body[&#039;callback_query&#039;][&#039;message&#039;][&#039;message_id&#039;],
									&#039;text&#039; => $text,
									&#039;parse_mode&#039; => "HTML",
									&#039;reply_markup&#039; => json_encode( [&#039;inline_keyboard&#039;=>$bot->keyboards[&#039;inline_admin_main&#039;]] ),
								]);
								usleep(100000);
							}
							
						}';
						file_put_contents($include, html_entity_decode($insert, ENT_QUOTES) . PHP_EOL . PHP_EOL,FILE_APPEND);
					}
					
				}	
				$u++;	
			}
				
			$merge[]=$put;
			unset($put);
			
		}
		
		$insert='}';
		file_put_contents($include, $insert,FILE_APPEND);
		
		return $merge;

		
	}



/////	
	public function callback_admin_unbandeniedusers()
	{		
		$con_sql2=$this->cmd_sql();
		
		$tab='tabservice–≤—É—Ç—à—É–≤';
		
		
		
			$merge=$this->cmd_admin_unbandeniedusers();
			usleep(100000);
			if (array_filter($merge) !== [])
			{
				
				$merge[] = [['text' => '‚¨ÖÔ∏è–ù–∞–∑–∞–¥', 'callback_data' => 'admin_back_allusers'], ['text' => '‚§¥Ô∏è–í—ã–π—Ç–∏', 'callback_data' => 'admin_exit_main']];
				$text='–í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ <b>–£—Ç–≤–µ—Ä–¥–∏—Ç—å –æ—Ç–∫–∞–∑–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π</b>. –í—ã–±–µ—Ä–∏—Ç–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, —á—Ç–æ–±—ã —É—Ç–≤–µ—Ä–¥–∏—Ç—å –µ–≥–æ.'.$this->pre.'';
				$this->callbackAnswer( $text, $merge);
			}
			else
			{
				$text='–í –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç <b>–Ω–µ—Ç –æ—Ç–∫–∞–∑–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π!</b>'.PHP_EOL.'–í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ <b>–≥–ª–∞–≤–Ω–æ–º –º–µ–Ω—é –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞</b>.'.$this->pre.'';
				$this->callbackAnswer( $text, $this->keyboards['inline_admin_main']);
			}
			
		
	}


/////
	public function cmd_admin_unbandeniedusers()
	{
		$adminid=$this->chatidadmin;		
		$con_sql2=$this->cmd_sql();
		
		$tab='tabservicedenied';
		$tab1='tabserviceapproved';
		
		$tabservicedenied='tabservicedenied';
		$tabserviceapproved='tabserviceapproved';
		
		$query1=mysqli_query($con_sql2, 'SELECT DISTINCT chatid FROM '.$tabservicedenied.'');
		usleep(100000);
		$con1=mysqli_num_rows($query1);
		
		$table=[];
		
		for($i=0;$i<$con1;$i++)
		{
			mysqli_data_seek($query1, $i);
			$row1[$i]=mysqli_fetch_row($query1);
			$table[]=$row1[$i][0];	
		}
		usleep(100000);
		
		$cnt=count($table);
		$maxbuttons=1;
		$ceil=ceil($cnt/$maxbuttons);
		
		
		
		$include=''.dirname(__FILE__).'/include'.$this->api->chatId.'.php';
		
		if(file_exists($include)==FALSE)
		{
			touch($include);
			
			$insert='<?php
		
		
			class TelegramBotfunc{';
			file_put_contents($include, $insert . PHP_EOL,FILE_APPEND);
			
		}
		else
		{
			$getinclude=file($include);
			unset($getinclude[array_key_last($getinclude)]);
			file_put_contents($include, $getinclude);
		}
		
		$u=0;
		$merge=[];
		
		for($i1=0;$i1<$ceil;$i1++)
		{
			$put=[];
			for($i2=0;$i2<$maxbuttons;$i2++)
			{	
				if(isset($table[$u]))
				{
					
					$buttext='üë§'.$this->cmd_user_get_fiophone($table[$u]).'';
					
					$put[]=["text" => "$buttext", "callback_data" => "admin_unbandenieduser_$table[$u]"];
					
					if(preg_match('/callback_admin_unbandenieduser_'.$table[$u].'/', file_get_contents($include))==FALSE)
					{
						$insert='
						public function callback_admin_unbandenieduser_'.$table[$u].'()
						{	
				
							$bot = new TestBot;
							$bot->api->getWebhookUpdate();
							$callback_query_id=$bot->api->body[&#039;callback_query&#039;]["id"];
							
							$con_sql2=$bot->cmd_sql();
							
							$query1=mysqli_query($con_sql2, &#039;SELECT 1 FROM '.$tabservicedenied.' WHERE chatid="'.$table[$u].'"&#039;);
							usleep(100000);
							$con1=mysqli_num_rows($query1);
							
							if($con1!=0)
							{
								
								mysqli_query($con_sql2, &#039;INSERT INTO '.$tabserviceapproved.' (chatid, firstname, lastname, username, phone, fio) SELECT chatid, firstname, lastname, username, phone, fio FROM '.$tabservicedenied.' WHERE chatid="'.$table[$u].'"&#039;);
								usleep(250000);
								
								$queue=&#039;DELETE FROM '.$tabservicedenied.' WHERE chatid="'.$table[$u].'"&#039;;
								mysqli_query($con_sql2, &#039;DELETE FROM '.$tabservicedenied.' WHERE chatid="'.$table[$u].'"&#039;);
								usleep(100000);
								
								file_put_contents(&#039;&#039;.dirname(__FILE__).&#039;/usersapproved.txt&#039;, &#039;'.$table[$u].'&#039; . PHP_EOL,FILE_APPEND);
								
								$text="–¢–µ–ø–µ—Ä—å –í—ã <b>–∏–º–µ–µ—Ç–µ –ø—Ä–∞–≤–æ —Ä–∞–∑–º–µ—â–∞—Ç—å –æ–±—ä—è–≤–ª–µ–Ω–∏—è –≤ –∫–∞–Ω–∞–ª–µ!</b>&#039;.$bot->pre.&#039;";

								$bot->api->sendMessage([
									&#039;chat_id&#039; => '.$table[$u].',
									&#039;text&#039; => $text,
									&#039;reply_markup&#039; => json_encode( [&#039;inline_keyboard&#039;=>$bot->keyboards[&#039;inline_default&#039;]]),
									//&#039;disable_notification&#039; => TRUE,
									&#039;disable_web_page_preview&#039; => TRUE,
									&#039;parse_mode&#039;=> "HTML"
								]);
								usleep(100000);
								
								$text="–í—ã <b>—É—Å–ø–µ—à–Ω–æ –¥–∞–ª–∏ –ø—Ä–∞–≤–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é '.$buttext.'</b> —Ä–∞–∑–º–µ—â–∞—Ç—å –æ–±—ä—è–≤–ª–µ–Ω–∏—è –≤ –∫–∞–Ω–∞–ª–µ.&#039;.PHP_EOL.&#039;–í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ <b>–£—Ç–≤–µ—Ä–¥–∏—Ç—å –æ—Ç–∫–∞–∑–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π</b>. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–∏—Ä–∏—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, —á—Ç–æ–±—ã —É—Ç–≤–µ—Ä–¥–∏—Ç—å –µ–≥–æ.&#039;.$bot->pre.&#039;";
								
								$merge=$bot->cmd_admin_unbandeniedusers();
								usleep(100000);
								if (array_filter($merge) !== [])
								{
									$merge[] = [[&#039;text&#039; => &#039;‚¨ÖÔ∏è–ù–∞–∑–∞–¥&#039;, &#039;callback_data&#039; => &#039;admin_back_allusers&#039;], [&#039;text&#039; => &#039;‚§¥Ô∏è–í—ã–π—Ç–∏&#039;, &#039;callback_data&#039; => &#039;admin_exit_main&#039;]];
								
									$bot->api->answerCallbackQuery($callback_query_id);
									$bot->api->editMessageText([
									&#039;chat_id&#039; => $bot->api->body[&#039;callback_query&#039;][&#039;message&#039;][&#039;chat&#039;]["id"],
									&#039;message_id&#039; => $bot->api->body[&#039;callback_query&#039;][&#039;message&#039;][&#039;message_id&#039;],
									&#039;text&#039; => $text,
									&#039;parse_mode&#039; => "HTML",
									&#039;reply_markup&#039; => json_encode( [&#039;inline_keyboard&#039;=>$merge] ),
									]);
									usleep(100000);
								}
								else
								{
									$text=&#039;–í—ã <b>—É—Å–ø–µ—à–Ω–æ –¥–∞–ª–∏ –ø—Ä–∞–≤–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é '.$buttext.'</b> —Ä–∞–∑–º–µ—â–∞—Ç—å –æ–±—ä—è–≤–ª–µ–Ω–∏—è –≤ –∫–∞–Ω–∞–ª–µ.&#039;.PHP_EOL.&#039;.–í –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç <b>–Ω–µ—Ç –æ—Ç–∫–∞–∑–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π!</b>&#039;.PHP_EOL.&#039;&#039;.PHP_EOL.&#039;–í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ <b>–≥–ª–∞–≤–Ω–æ–º –º–µ–Ω—é –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞</b>.&#039;.$bot->pre.&#039;&#039;;
									
									$bot->api->answerCallbackQuery($callback_query_id);
									$bot->api->editMessageText([
									&#039;chat_id&#039; => $bot->api->body[&#039;callback_query&#039;][&#039;message&#039;][&#039;chat&#039;]["id"],
									&#039;message_id&#039; => $bot->api->body[&#039;callback_query&#039;][&#039;message&#039;][&#039;message_id&#039;],
									&#039;text&#039; => $text,
									&#039;parse_mode&#039; => "HTML",
									&#039;reply_markup&#039; => json_encode( [&#039;inline_keyboard&#039;=>$bot->keyboards[&#039;inline_admin_main&#039;]] ),
									]);
									usleep(100000);
								}
							}
							else
							{
								$text=&#039;–í –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç <b>–Ω–µ—Ç –æ—Ç–∫–∞–∑–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π!</b>&#039;.PHP_EOL.&#039;&#039;.PHP_EOL.&#039;–í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ <b>–≥–ª–∞–≤–Ω–æ–º –º–µ–Ω—é –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞</b>.&#039;.$bot->pre.&#039;&#039;;
								
								$bot->api->answerCallbackQuery($callback_query_id);
								$bot->api->editMessageText([
								&#039;chat_id&#039; => $bot->api->body[&#039;callback_query&#039;][&#039;message&#039;][&#039;chat&#039;]["id"],
								&#039;message_id&#039; => $bot->api->body[&#039;callback_query&#039;][&#039;message&#039;][&#039;message_id&#039;],
								&#039;text&#039; => $text,
								&#039;parse_mode&#039; => "HTML",
								&#039;reply_markup&#039; => json_encode( [&#039;inline_keyboard&#039;=>$bot->keyboards[&#039;inline_admin_main&#039;]] ),
								]);
								usleep(100000);
							}
							
		
						}';
						file_put_contents($include, html_entity_decode($insert, ENT_QUOTES) . PHP_EOL . PHP_EOL,FILE_APPEND);
					}
					
				}	
				$u++;	
			}
				
			$merge[]=$put;
			unset($put);
			
		}
		
		$insert='}';
		file_put_contents($include, $insert,FILE_APPEND);
		
		
		return $merge;
		
			
	}














































///////////////////////////////////////////////////////////APPROVED USERS/////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////	
	public function callback_admin_approvedusers()
	{		
		$con_sql2=$this->cmd_sql();
		
		$tab='tabserviceapproved';
		
		if(mysqli_num_rows(mysqli_query($con_sql2, 'SELECT 1 FROM '.$tab.' WHERE id LIKE "%" LIMIT 1'))==0)
		{
			$text='–í –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç <b>–Ω–µ—Ç —É—Ç–≤–µ—Ä–∂–¥–µ–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π!</b>'.PHP_EOL.'–í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ <b>–≥–ª–∞–≤–Ω–æ–º –º–µ–Ω—é –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞</b>.'.$this->pre.'';
			$this->callbackAnswer( $text, $this->keyboards['inline_admin_main']);
		}
		else
		{
			$text='–í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ —Ä–∞–∑–¥–µ–ª–µ <b>–£—Ç–≤–µ—Ä–∂–¥–µ–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏</b>. –í—ã–±–µ—Ä–∏—Ç–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–π –ø–æ–¥—Ä–∞–∑–¥–µ–ª, –Ω–∞–∂–∞–≤ –Ω–∞ –∫–Ω–æ–ø–∫–∏ –Ω–∏–∂–µ.'.$this->pre.'';
			$this->callbackAnswer( $text, $this->keyboards['inline_admin_approvedusers']);
		}
		
	}


///////////////////////////////////////////////////////////–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ/////////////////////////////////////////////////////////////////////////
	
/////	
	public function callback_admin_showapprovedusers()
	{		
		$con_sql2=$this->cmd_sql();
		
		$tab='tabserviceapproved';
		
		if(mysqli_num_rows(mysqli_query($con_sql2, 'SELECT 1 FROM '.$tab.' WHERE id LIKE "%" LIMIT 1'))==0)
		{
			$text='–í –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç <b>–Ω–µ—Ç —É—Ç–≤–µ—Ä–∂–¥–µ–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π!</b>'.PHP_EOL.'–í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ <b>–≥–ª–∞–≤–Ω–æ–º –º–µ–Ω—é –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞</b>.'.$this->pre.'';
			$this->callbackAnswer( $text, $this->keyboards['inline_admin_main']);
		}
		else
		{
			$merge=$this->cmd_admin_showapprovedusers();
			usleep(100000);
			
			if (array_filter($merge) !== [])
			{
				$merge[] = [['text' => '‚¨ÖÔ∏è–ù–∞–∑–∞–¥', 'callback_data' => 'admin_back_approvedusers'], ['text' => '‚§¥Ô∏è–í—ã–π—Ç–∏', 'callback_data' => 'admin_exit_main']];
				$text='–í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ <b>–ü–æ–∫–∞–∑–∞—Ç—å —É—Ç–≤–µ—Ä–∂–¥–µ–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π</b>. –í—ã–±–µ—Ä–∏—Ç–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, —á—Ç–æ–±—ã –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –Ω–µ–º.'.$this->pre.'';
				$this->callbackAnswer( $text, $merge);
			}
			else
			{
				$text='–í –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç <b>–Ω–µ—Ç —É—Ç–≤–µ—Ä–∂–¥–µ–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π!</b>'.PHP_EOL.'–í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ <b>–≥–ª–∞–≤–Ω–æ–º –º–µ–Ω—é –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞</b>.'.$this->pre.'';
				$this->callbackAnswer( $text, $this->keyboards['inline_admin_main']);
			}
			
		}
	}


/////
	public function cmd_admin_showapprovedusers()
	{
		$adminid=$this->chatidadmin;		
		$con_sql2=$this->cmd_sql();
		
		$tab='tabserviceapproved';
		
		if(mysqli_num_rows(mysqli_query($con_sql2, 'SELECT 1 FROM '.$tab.' WHERE id LIKE "%" LIMIT 1'))==0)
		{
			
			$text='–í –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç <b>–Ω–µ—Ç —É—Ç–≤–µ—Ä–∂–¥–µ–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π!</b>'.PHP_EOL.'–í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ <b>–≥–ª–∞–≤–Ω–æ–º –º–µ–Ω—é –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞</b>.'.$this->pre.'';
			
			$this->api->sendMessage([
				'text' => $text,
				'reply_markup' => json_encode( ['inline_keyboard'=>$this->keyboards['inline_admin_main']]),
				'disable_notification' => TRUE,
				'disable_web_page_preview' => TRUE,
				'parse_mode'=> "HTML"
				]);
			usleep(100000);
		}
		else
		{
			$query1=mysqli_query($con_sql2, 'SELECT DISTINCT chatid FROM '.$tab.'');
			$con1=mysqli_num_rows($query1);
		
			$table=[];
			
			for($i=0;$i<$con1;$i++)
			{
				mysqli_data_seek($query1, $i);
				$row1[$i]=mysqli_fetch_row($query1);
				$table[]=$row1[$i][0];	
			}
	
			$cnt=count($table);
			$maxbuttons=1;
			$ceil=ceil($cnt/$maxbuttons);
			
			
			
			$include=''.dirname(__FILE__).'/include'.$this->api->chatId.'.php';
			
			if(file_exists($include)==FALSE)
			{
				touch($include);
				
				$insert='<?php
		
		
				class TelegramBotfunc{';
				file_put_contents($include, $insert . PHP_EOL,FILE_APPEND);
				
			}
			else
			{
				$getinclude=file($include);
				unset($getinclude[array_key_last($getinclude)]);
				file_put_contents($include, $getinclude);
			}
			
			$u=0;
			$merge=[];
			
			for($i1=0;$i1<$ceil;$i1++)
			{
				$put=[];
				for($i2=0;$i2<$maxbuttons;$i2++)
				{	
					if(isset($table[$u]) && $this->cmd_isadmin1($table[$u])==FALSE)
					{
						$buttext='üë§'.$this->cmd_user_get_fiophone($table[$u]).'';
						
						$put[]=["text" => "$buttext", "callback_data" => "admin_showapproveduser_$table[$u]"];
						
						if(preg_match('/callback_admin_showapproveduser_'.$table[$u].'/', file_get_contents($include))==FALSE)
						{
							$insert='
							public function callback_admin_showapproveduser_'.$table[$u].'()
							{	
					
								$bot = new TestBot;
								$bot->api->getWebhookUpdate();
									/* if(file_exists(&#039;&#039;.dirname(__FILE__).&#039;/include&#039;.$bot->api->chatId.&#039;.php&#039;))
									{
										include_once(&#039;&#039;.dirname(__FILE__).&#039;/include&#039;.$bot->api->chatId.&#039;.php&#039;);
									}	 */						
								$con_sql2=$bot->cmd_sql();
								$tab=&#039;tabserviceapproved&#039;;
								
								$query1=mysqli_query($con_sql2, &#039;SELECT 1 FROM &#039;.$tab.&#039; WHERE id LIKE "%" LIMIT 1&#039;);
								$con1=mysqli_num_rows($query1);
								usleep(100000);
								
								if($con1!=0)
								{
									
									$query=mysqli_query($con_sql2, &#039;SELECT * FROM &#039;.$tab.&#039; WHERE chatid="'.$table[$u].'"&#039;);
									usleep(100000);
									$con=mysqli_num_rows($query);
									
									for($i1=0;$i1<$con;$i1++)
									{
										mysqli_data_seek($query, $i1);
										$row[$i1]=mysqli_fetch_row($query);
										$chatid=$row[0][1];
										$firstname=$row[0][2];
										$lastname=$row[0][3];
										$username=$row[0][4];
										$phone=$row[0][5];
										$fio=$row[0][6];
									}
									
									if($username==&#039;–Ω–µ—Ç –¥–∞–Ω–Ω—ã—Ö&#039;)
									{
										$text=&#039;–ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: <b>&#039;.$username.&#039;</b>&#039;.PHP_EOL.&#039;–ò–º—è: <b>&#039;.$firstname.&#039;</b>&#039;.PHP_EOL.&#039;–§–∞–º–∏–ª–∏—è: <b>&#039;.$lastname.&#039;</b>&#039;.PHP_EOL.&#039;–ß–∞—Ç: <b>&#039;.$chatid.&#039;</b>&#039;.PHP_EOL.&#039;&#039;.PHP_EOL.&#039;–¢–µ–ª–µ—Ñ–æ–Ω: <b>&#039;.$phone.&#039;</b>&#039;.PHP_EOL.&#039;–§–ò–û: <b>&#039;.$fio.&#039;</b>&#039;.PHP_EOL.&#039;&#039;.PHP_EOL.&#039;–í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ –ü–æ–∫–∞–∑–∞—Ç—å —É—Ç–≤–µ—Ä–∂–¥–µ–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π. –í—ã–±–µ—Ä–∏—Ç–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, —á—Ç–æ–±—ã –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –Ω–µ–º.&#039;.$bot->pre.&#039;&#039;;
									}
									else
									{
										$text=&#039;–ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: <b>@&#039;.$username.&#039;</b>&#039;.PHP_EOL.&#039;–ò–º—è: <b>&#039;.$firstname.&#039;</b>&#039;.PHP_EOL.&#039;–§–∞–º–∏–ª–∏—è: <b>&#039;.$lastname.&#039;</b>&#039;.PHP_EOL.&#039;–ß–∞—Ç: <b>&#039;.$chatid.&#039;</b>&#039;.PHP_EOL.&#039;&#039;.PHP_EOL.&#039;–¢–µ–ª–µ—Ñ–æ–Ω: <b>&#039;.$phone.&#039;</b>&#039;.PHP_EOL.&#039;–§–ò–û: <b>&#039;.$fio.&#039;</b>&#039;.PHP_EOL.&#039;&#039;.PHP_EOL.&#039;–í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ –ü–æ–∫–∞–∑–∞—Ç—å —É—Ç–≤–µ—Ä–∂–¥–µ–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π. –í—ã–±–µ—Ä–∏—Ç–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, —á—Ç–æ–±—ã –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –Ω–µ–º.&#039;.$bot->pre.&#039;&#039;;
									}
									
									/* $result=json_decode($bot->getChat(&#039;'.$table[$u].'&#039;), true);
									$result=$result[&#039;result&#039;]; 
									if(isset($result[&#039;username&#039;]))
									{
										$text=&#039;–ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: <b>@&#039;.$result[&#039;username&#039;].&#039;</b>&#039;.PHP_EOL.&#039;–ò–º—è: <b>&#039;.$result[&#039;first_name&#039;].&#039;</b>&#039;.PHP_EOL.&#039;–§–∞–º–∏–ª–∏—è: <b>&#039;.$result[&#039;last_name&#039;].&#039;</b>&#039;.PHP_EOL.&#039;–ß–∞—Ç: <b>'.$table[$u].'</b>&#039;.PHP_EOL.&#039;&#039;.PHP_EOL.&#039;–í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ –ü–æ–∫–∞–∑–∞—Ç—å —É—Ç–≤–µ—Ä–∂–¥–µ–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π. –í—ã–±–µ—Ä–∏—Ç–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, —á—Ç–æ–±—ã –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –Ω–µ–º.&#039;.$bot->pre.&#039;&#039;;
									}
									else
									{
										$text=&#039;–ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: <b>–Ω–µ —É–∫–∞–∑–∞–Ω–æ</b>&#039;.PHP_EOL.&#039;–ò–º—è: <b>&#039;.$result[&#039;first_name&#039;].&#039;</b>&#039;.PHP_EOL.&#039;–§–∞–º–∏–ª–∏—è: <b>&#039;.$result[&#039;last_name&#039;].&#039;</b>&#039;.PHP_EOL.&#039;–ß–∞—Ç: <b>'.$table[$u].'</b>&#039;.PHP_EOL.&#039;&#039;.PHP_EOL.&#039;–í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ –ü–æ–∫–∞–∑–∞—Ç—å —É—Ç–≤–µ—Ä–∂–¥–µ–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π. –í—ã–±–µ—Ä–∏—Ç–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, —á—Ç–æ–±—ã –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –Ω–µ–º.&#039;.$bot->pre.&#039;&#039;;
									} */
	
									
									$merge=$bot->cmd_admin_showapprovedusers();
									
									if (array_filter($merge) !== [])
									{
										usleep(100000);
										$merge[] = [[&#039;text&#039; => &#039;‚¨ÖÔ∏è–ù–∞–∑–∞–¥&#039;, &#039;callback_data&#039; => &#039;admin_back_approvedusers&#039;], [&#039;text&#039; => &#039;‚§¥Ô∏è–í—ã–π—Ç–∏&#039;, &#039;callback_data&#039; => &#039;admin_exit_main&#039;]];
										
										
										if(isset($bot->api->body[&#039;callback_query&#039;]["id"]))
										{
											$callback_query_id=$bot->api->body[&#039;callback_query&#039;]["id"];
											$bot->api->answerCallbackQuery($callback_query_id);
										}

										$bot->api->sendMessage([
											&#039;text&#039; => $text,
											&#039;reply_markup&#039; => json_encode( [&#039;inline_keyboard&#039;=>$merge]),
											&#039;disable_notification&#039; => TRUE,
											&#039;disable_web_page_preview&#039; => TRUE,
											&#039;parse_mode&#039;=> "HTML"
										]);
			
			
										/* $bot->api->answerCallbackQuery($callback_query_id);
										$bot->api->editMessageText([
											&#039;chat_id&#039; => $bot->api->body[&#039;callback_query&#039;][&#039;message&#039;][&#039;chat&#039;]["id"],
											&#039;message_id&#039; => $bot->api->body[&#039;callback_query&#039;][&#039;message&#039;][&#039;message_id&#039;],
											&#039;text&#039; => $text,
											&#039;parse_mode&#039; => "HTML",
											&#039;reply_markup&#039; => json_encode( [&#039;inline_keyboard&#039;=>$merge] ),
										]); */
										
										
										usleep(100000);
									}
									else
									{
										$text=&#039;–í –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç <b>–Ω–µ—Ç —É—Ç–≤–µ—Ä–∂–¥–µ–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π!</b>&#039;.PHP_EOL.&#039;&#039;.PHP_EOL.&#039;–í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ <b>–≥–ª–∞–≤–Ω–æ–º –º–µ–Ω—é –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞</b>.&#039;.$bot->pre.&#039;&#039;;

										$bot->api->answerCallbackQuery($callback_query_id);
										$bot->api->editMessageText([
										&#039;chat_id&#039; => $bot->api->body[&#039;callback_query&#039;][&#039;message&#039;][&#039;chat&#039;]["id"],
										&#039;message_id&#039; => $bot->api->body[&#039;callback_query&#039;][&#039;message&#039;][&#039;message_id&#039;],
										&#039;text&#039; => $text,
										&#039;parse_mode&#039; => "HTML",
										&#039;reply_markup&#039; => json_encode( [&#039;inline_keyboard&#039;=>$bot->keyboards[&#039;inline_admin_main&#039;]] ),
										]);
										usleep(100000);
									}
								}
								else
								{
									$text=&#039;–í –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç <b>–Ω–µ—Ç —É—Ç–≤–µ—Ä–∂–¥–µ–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π!</b>&#039;.PHP_EOL.&#039;&#039;.PHP_EOL.&#039;–í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ <b>–≥–ª–∞–≤–Ω–æ–º –º–µ–Ω—é –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞</b>.&#039;.$bot->pre.&#039;&#039;;
									
									if(isset($bot->api->body[&#039;callback_query&#039;]["id"]))
										{
											$callback_query_id=$bot->api->body[&#039;callback_query&#039;]["id"];
											$bot->api->answerCallbackQuery($callback_query_id);
										}
										
									$bot->api->editMessageText([
										&#039;chat_id&#039; => $bot->api->body[&#039;callback_query&#039;][&#039;message&#039;][&#039;chat&#039;]["id"],
										&#039;message_id&#039; => $bot->api->body[&#039;callback_query&#039;][&#039;message&#039;][&#039;message_id&#039;],
										&#039;text&#039; => $text,
										&#039;parse_mode&#039; => "HTML",
										&#039;reply_markup&#039; => json_encode( [&#039;inline_keyboard&#039;=>$bot->keyboards[&#039;inline_admin_main&#039;]] ),
									]);
									usleep(100000);
								}
								
							}';
							file_put_contents($include, html_entity_decode($insert, ENT_QUOTES) . PHP_EOL . PHP_EOL,FILE_APPEND);
						}
						
					}	
					$u++;	
				}
					
				$merge[]=$put;
				unset($put);
				
			}
			
			$insert='}';
			file_put_contents($include, $insert,FILE_APPEND);

			return $merge;
		}
		
		
	}



///////	
	public function callback_admin_showapprovedusers_file()
	{
		$con_sql2=$this->cmd_sql();
		$tabserviceapproved='tabserviceapproved';
		
		if(mysqli_num_rows(mysqli_query($con_sql2, 'SELECT 1 FROM '.$tabserviceapproved.' WHERE id LIKE "%"'))!=0)
		{
			
			$query1=mysqli_query($con_sql2, 'SELECT * FROM '.$tabserviceapproved.'  WHERE id LIKE "%"');
			$con1=mysqli_num_rows($query1);
		
		
			
			require_once(''.dirname(__FILE__).'/pdf/tcpdf.php');
			$pdf = new TCPDF('L', PDF_UNIT, PDF_PAGE_FORMAT, true, 'UTF-8', false);

			$pdf->SetCreator(PDF_CREATOR);
			
			$pdf->SetHeaderData(PDF_HEADER_LOGO, PDF_HEADER_LOGO_WIDTH, PDF_HEADER_TITLE.' 001', PDF_HEADER_STRING, array(0,0,0), array(0,0,0));
			$pdf->setFooterData(array(0,0,0), array(0,0,0));
			
			
			$pdf->setHeaderFont(Array(PDF_FONT_NAME_MAIN, '', PDF_FONT_SIZE_MAIN));
			$pdf->setFooterFont(Array(PDF_FONT_NAME_DATA, '', PDF_FONT_SIZE_DATA));
			$pdf->setPrintHeader(false);
			$pdf->setPrintFooter(false);
			
			$pdf->SetDefaultMonospacedFont(PDF_FONT_MONOSPACED);
			
			$pdf->SetAutoPageBreak(false, PDF_MARGIN_BOTTOM);

			$pdf->setImageScale(PDF_IMAGE_SCALE_RATIO);
			
			if (@file_exists(dirname(__FILE__).'/pdf/lang/eng.php')) {
				require_once(dirname(__FILE__).'/pdf/lang/eng.php');
				$pdf->setLanguageArray($l);
			}
			
			$pdf->SetFont('dejavusans', '', 8, '', true);

			$pdf->AddPage();
			$date=date('d.m.Y');
			$time=date('G:i:s');
			
			$htmladd='
<div style="align: center; font-size: 16px; text-align: center"><b>–£—Ç–≤–µ—Ä–∂–¥–µ–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –Ω–∞ '.$date.' '.$time.'</b></div><br><br>
<table border="1" cellspacing="0">
<tr style="line-height: 50px;">
<td align="center" valign="middle" width="60px"><b>‚Ññ</b></td>
<td align="center" valign="middle" width="100px"><b>–ß–∞—Ç ID</b></td>
<td align="center" valign="middle" width="120px"><b>–ò–º—è</b></td>
<td align="center" valign="middle" width="120px"><b>–§–∞–º–∏–ª–∏—è</b></td>
<td align="center" valign="middle" width="150px"><b>–ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è</b></td>
<td align="center" valign="middle" width="150px"><b>–¢–µ–ª–µ—Ñ–æ–Ω</b></td>
<td align="center" valign="middle" width="250px"><b>–§–ò–û</b></td>
</tr>';

				for($i1=0;$i1<$con1;$i1++)
				{
					mysqli_data_seek($query1, $i1);
					$row1[$i1]=mysqli_fetch_row($query1);
					
					$htmladd=''.$htmladd.''.PHP_EOL.'<tr>';
									
					$put='<td style="text-align: center; valign: middle; font-size: 10px;">'.$row1[$i1][0].'</td>';
					$htmladd=''.$htmladd.''.PHP_EOL.''.$put.'';
					
					$put='<td style="text-align: center; valign: middle; font-size: 10px;">'.$row1[$i1][1].'</td>';
					$htmladd=''.$htmladd.''.PHP_EOL.''.$put.'';
					
					$put='<td style="text-align: center; valign: middle; font-size: 10px;">'.$row1[$i1][2].'</td>';
					$htmladd=''.$htmladd.''.PHP_EOL.''.$put.'';
					
					$put='<td style="text-align: center; valign: middle; font-size: 10px;">'.$row1[$i1][3].'</td>';
					$htmladd=''.$htmladd.''.PHP_EOL.''.$put.'';
					
					$put='<td style="text-align: center; valign: middle; font-size: 10px;">'.$row1[$i1][4].'</td>';
					$htmladd=''.$htmladd.''.PHP_EOL.''.$put.'';
					
					$put='<td style="text-align: center; valign: middle; font-size: 10px;">'.$row1[$i1][5].'</td>';
					$htmladd=''.$htmladd.''.PHP_EOL.''.$put.'';
					
					$put='<td style="text-align: center; valign: middle; font-size: 10px;"><b>'.$row1[$i1][6].'</b></td>';
					$htmladd=''.$htmladd.''.PHP_EOL.''.$put.'';
					
					
					
					$htmladd=''.$htmladd.''.PHP_EOL.'</tr>';
				}
				
			
			
			$htmladd=''.$htmladd.''.PHP_EOL.'</table>';
			$html = <<<EOD
$htmladd
EOD;
			
			array_map('unlink', glob(''.dirname(__FILE__).'/pdf/users*.pdf'));
			usleep(250000);
			
			$time=date('G.i.s');
			
			$pdf->writeHTMLCell(0, 0, '', '', $html, 0, 1, 0, true, '', true);
			$pdf->Output(''.dirname(__FILE__).'/pdf/users_'.$date.'_'.$time.'.pdf', 'F');
			usleep(250000);
			
			$this->api->sendDocument([
				'document' => 'https://domain.com/pdf/users_'.$date.'_'.$time.'.pdf',
				'disable_notification' => TRUE,
				'parse_mode'=> "HTML"
				]);
			usleep(250000);
			
			
			$text='–í–∞–º –±—ã–ª –≤—ã—Å–ª–∞–Ω —Ñ–∞–π–ª —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ–± —É—Ç–≤–µ—Ä–∂–¥–µ–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è—Ö.'.PHP_EOL.'–í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ —Ä–∞–∑–¥–µ–ª–µ <b>–£—Ç–≤–µ—Ä–∂–¥–µ–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏</b>.'.$this->pre.'';
				
			if(isset($this->api->body['callback_query']["id"]))
			{
				$callback_query_id=$this->api->body['callback_query']["id"];
				$this->api->answerCallbackQuery($callback_query_id);
			}
			
			$this->api->sendMessage([
				'text' => $text,
				'reply_markup' => json_encode( ['inline_keyboard'=>$this->keyboards['inline_admin_approvedusers']]),
				'disable_notification' => TRUE,
				'disable_web_page_preview' => TRUE,
				'parse_mode'=> "HTML"
				]);
			usleep(100000);
				
		}

		else
		{
			if(isset($this->api->body['callback_query']["id"]))
			{
				$callback_query_id=$this->api->body['callback_query']["id"];
				$this->api->answerCallbackQuery($callback_query_id);
			}
				
			$text='–í –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç —É –í–∞—Å <b>–Ω–µ—Ç –Ω–∏ –æ–¥–Ω–æ–≥–æ —É—Ç–≤–µ—Ä–∂–¥–µ–Ω–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è</b>.'.$this->pre.'';
		
			$this->api->sendMessage([
			'text' => $text,
			'reply_markup' => json_encode( ['inline_keyboard'=>$this->keyboards['inline_admin_approvedusers']]),
			'disable_notification' => TRUE,
			'disable_web_page_preview' => TRUE,
			'parse_mode'=> "HTML"
			]);
			usleep(100000);
		}
	}
/////////////////////////////////////////////////////////////–ó–∞–±–∞–Ω–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è/////////////////////////////////////////////////////
///////	
	public function callback_admin_banapprovedusers()
	{		
		$con_sql2=$this->cmd_sql();
		
		$tab='tabserviceapproved';
		
		if(mysqli_num_rows(mysqli_query($con_sql2, 'SELECT 1 FROM '.$tab.' WHERE id LIKE "%" LIMIT 1'))==0)
		{
			$text='–í –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç <b>–Ω–µ—Ç —É—Ç–≤–µ—Ä–∂–¥–µ–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π!</b>'.PHP_EOL.'–í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ <b>–≥–ª–∞–≤–Ω–æ–º –º–µ–Ω—é –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞</b>.'.$this->pre.'';
			$this->callbackAnswer( $text, $this->keyboards['inline_admin_main']);
		}
		else
		{
			$merge=$this->cmd_admin_banapprovedusers();
			usleep(100000);
			
			if (array_filter($merge) !== [])
			{
				$merge[] = [['text' => '‚¨ÖÔ∏è–ù–∞–∑–∞–¥', 'callback_data' => 'admin_back_approvedusers'], ['text' => '‚§¥Ô∏è–í—ã–π—Ç–∏', 'callback_data' => 'admin_exit_main']];
				$text='–í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ <b>–ó–∞–±–∞–Ω–∏—Ç—å —É—Ç–≤–µ—Ä–∂–¥–µ–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π</b>.'.PHP_EOL.'–í—ã–±–µ—Ä–∏—Ç–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, —á—Ç–æ–±—ã –∑–∞–±–∞–Ω–∏—Ç—å –µ–≥–æ.'.$this->pre.'';
				$this->callbackAnswer( $text, $merge);
			}
			else
			{
				$text='–í –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç <b>–Ω–µ—Ç —É—Ç–≤–µ—Ä–∂–¥–µ–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π!</b>'.PHP_EOL.'–í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ <b>–≥–ª–∞–≤–Ω–æ–º –º–µ–Ω—é –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞</b>.'.$this->pre.'';
				$this->callbackAnswer( $text, $this->keyboards['inline_admin_main']);
			}
			
		}
	}
	
/////	
	public function cmd_admin_banapprovedusers()
	{
		$adminid=$this->chatidadmin;		
		$con_sql2=$this->cmd_sql();
		

		$tab='tabserviceapproved';
		$tab1='tabservicedenied';
		$tab2='tabserviceusers';
		
		if(mysqli_num_rows(mysqli_query($con_sql2, 'SELECT 1 FROM '.$tab.' WHERE id LIKE "%" LIMIT 1'))==0)
		{
			
			$text='–í –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç <b>–Ω–µ—Ç —É—Ç–≤–µ—Ä–∂–¥–µ–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π!</b>'.PHP_EOL.'–í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ <b>–≥–ª–∞–≤–Ω–æ–º –º–µ–Ω—é –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞</b>.'.$this->pre.'';
			
			$this->api->sendMessage([
				'text' => $text,
				'reply_markup' => json_encode( ['inline_keyboard'=>$this->keyboards['inline_admin_main']]),
				'disable_notification' => TRUE,
				'disable_web_page_preview' => TRUE,
				'parse_mode'=> "HTML"
				]);
			usleep(100000);
		}
		else
		{
			$query1=mysqli_query($con_sql2, 'SELECT DISTINCT chatid FROM '.$tab.'');
			usleep(100000);
			$con1=mysqli_num_rows($query1);
		
			$table=[];
			
			for($i=0;$i<$con1;$i++)
			{
				mysqli_data_seek($query1, $i);
				$row1[$i]=mysqli_fetch_row($query1);
				$table[]=$row1[$i][0];	
			}
	
			$cnt=count($table);
			$maxbuttons=1;
			$ceil=ceil($cnt/$maxbuttons);
			
			
			
			$include=''.dirname(__FILE__).'/include'.$this->api->chatId.'.php';
			
			if(file_exists($include)==FALSE)
			{
				touch($include);
				
				$insert='<?php
		
		
				class TelegramBotfunc{';
				file_put_contents($include, $insert . PHP_EOL,FILE_APPEND);
				
			}
			else
			{
				$getinclude=file($include);
				unset($getinclude[array_key_last($getinclude)]);
				file_put_contents($include, $getinclude);
			}
			
			$u=0;
			$merge=[];
			
			for($i1=0;$i1<$ceil;$i1++)
			{
				$put=[];
				for($i2=0;$i2<$maxbuttons;$i2++)
				{	
					if(isset($table[$u]) && $this->cmd_isadmin1($table[$u])==FALSE)
					{	

						//$buttext="üë§$table[$u]";
						$buttext='üë§'.$this->cmd_user_get_fiophone($table[$u]).'';
						
						$put[]=["text" => "$buttext", "callback_data" => "admin_banapproveduser_$table[$u]"];
						
						if(preg_match('/callback_admin_banapproveduser_'.$table[$u].'/', file_get_contents($include))==FALSE)
						{
							$insert='
							public function callback_admin_banapproveduser_'.$table[$u].'()
							{	
					
								$bot = new TestBot;
								$bot->api->getWebhookUpdate();
								$callback_query_id=$bot->api->body[&#039;callback_query&#039;]["id"];
								
								$con_sql2=$bot->cmd_sql();
								$tab=&#039;tabserviceapproved&#039;;
								
								$query1=mysqli_query($con_sql2, &#039;SELECT 1 FROM &#039;.$tab.&#039; WHERE id LIKE "%" LIMIT 1&#039;);
								usleep(100000);
								$con1=mysqli_num_rows($query1);
								
								if($con1!=0)
								{
								
									$con_sql2=$bot->cmd_sql();
									
									mysqli_query($con_sql2, &#039;INSERT INTO '.$tab1.' (chatid, firstname, lastname, username, phone, fio) SELECT chatid, firstname, lastname, username, phone, fio FROM '.$tab2.' WHERE chatid="'.$table[$u].'"&#039;);
									usleep(250000);
									
									$queue=&#039;DELETE FROM '.$tab.' WHERE chatid="'.$table[$u].'"&#039;;
									$result=mysqli_query($con_sql2, $queue);
									usleep(100000);
									
									
									$get=file_get_contents(&#039;&#039;.dirname(__FILE__).&#039;/usersapproved.txt&#039;);
									$get=str_replace("'.$table[$u].'", "", $get);
									$get=$bot->clean($get);
									file_put_contents(&#039;&#039;.dirname(__FILE__).&#039;/usersapproved.txt&#039;, $get . PHP_EOL);
									

									$text="–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, —É –í–∞—Å <b>–±–æ–ª—å—à–µ –Ω–µ—Ç –ø—Ä–∞–≤–∞</b> —Ä–∞–∑–º–µ—â–∞—Ç—å –æ–±—ä—è–≤–ª–µ–Ω–∏—è –≤ –∫–∞–Ω–∞–ª–µ!&#039;.$bot->pre.&#039;";
	
									$bot->api->sendMessage([
										&#039;chat_id&#039; => '.$table[$u].',
										&#039;text&#039; => $text,
										&#039;reply_markup&#039; => json_encode( [&#039;inline_keyboard&#039;=>$bot->keyboards[&#039;inline_default&#039;]]),
										&#039;disable_notification&#039; => TRUE,
										&#039;disable_web_page_preview&#039; => TRUE,
										&#039;parse_mode&#039;=> "HTML"
									]);
									usleep(100000);
	
									$text=&#039;–í—ã <b>–æ—Ç–∫–∞–∑–∞–ª–∏</b> –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é <b>'.$buttext.'</b> –≤ –ø—Ä–∞–≤–µ –Ω–∞ —Ä–∞–∑–º–µ—â–µ–Ω–∏–µ –æ–±—ä—è–≤–ª–µ–Ω–∏–π –≤ –∫–∞–Ω–∞–ª–µ.&#039;.PHP_EOL.&#039;–í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ <b>–ó–∞–±–∞–Ω–∏—Ç—å —É—Ç–≤–µ—Ä–∂–¥–µ–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π</b>.&#039;.PHP_EOL.&#039;–í—ã–±–µ—Ä–∏—Ç–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, —á—Ç–æ–±—ã –∑–∞–±–∞–Ω–∏—Ç—å –µ–≥–æ.&#039;.$bot->pre.&#039;&#039;;
									
									$merge=$bot->cmd_admin_banapprovedusers();
									usleep(100000);
									
									if (array_filter($merge) !== [])
									{
									
										$merge[] = [[&#039;text&#039; => &#039;‚¨ÖÔ∏è–ù–∞–∑–∞–¥&#039;, &#039;callback_data&#039; => &#039;admin_back_approvedusers&#039;], [&#039;text&#039; => &#039;‚§¥Ô∏è–í—ã–π—Ç–∏&#039;, &#039;callback_data&#039; => &#039;admin_exit_main&#039;]];
		
										$bot->api->answerCallbackQuery($callback_query_id);
										$bot->api->editMessageText([
											&#039;chat_id&#039; => $bot->api->body[&#039;callback_query&#039;][&#039;message&#039;][&#039;chat&#039;]["id"],
											&#039;message_id&#039; => $bot->api->body[&#039;callback_query&#039;][&#039;message&#039;][&#039;message_id&#039;],
											&#039;text&#039; => $text,
											&#039;parse_mode&#039; => "HTML",
											&#039;reply_markup&#039; => json_encode( [&#039;inline_keyboard&#039;=>$merge] ),
										]);
										usleep(100000);
									}
									else
									{
										$text=&#039;–í –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç <b>–Ω–µ—Ç —É—Ç–≤–µ—Ä–∂–¥–µ–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π!</b>&#039;.PHP_EOL.&#039;&#039;.PHP_EOL.&#039;–í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ <b>–≥–ª–∞–≤–Ω–æ–º –º–µ–Ω—é –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞</b>.&#039;.$bot->pre.&#039;&#039;;
										$bot->api->answerCallbackQuery($callback_query_id);
										$bot->api->editMessageText([
										&#039;chat_id&#039; => $bot->api->body[&#039;callback_query&#039;][&#039;message&#039;][&#039;chat&#039;]["id"],
										&#039;message_id&#039; => $bot->api->body[&#039;callback_query&#039;][&#039;message&#039;][&#039;message_id&#039;],
										&#039;text&#039; => $text,
										&#039;parse_mode&#039; => "HTML",
										&#039;reply_markup&#039; => json_encode( [&#039;inline_keyboard&#039;=>$bot->keyboards[&#039;inline_admin_main&#039;]] ),
									]);
									usleep(100000);
									}

								}
								else
								{
									$text=&#039;–í –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç <b>–Ω–µ—Ç —É—Ç–≤–µ—Ä–∂–¥–µ–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π!</b>&#039;.PHP_EOL.&#039;&#039;.PHP_EOL.&#039;–í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ <b>–≥–ª–∞–≤–Ω–æ–º –º–µ–Ω—é –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞</b>.&#039;.$bot->pre.&#039;&#039;;
									$bot->api->answerCallbackQuery($callback_query_id);
									$bot->api->editMessageText([
										&#039;chat_id&#039; => $bot->api->body[&#039;callback_query&#039;][&#039;message&#039;][&#039;chat&#039;]["id"],
										&#039;message_id&#039; => $bot->api->body[&#039;callback_query&#039;][&#039;message&#039;][&#039;message_id&#039;],
										&#039;text&#039; => $text,
										&#039;parse_mode&#039; => "HTML",
										&#039;reply_markup&#039; => json_encode( [&#039;inline_keyboard&#039;=>$bot->keyboards[&#039;inline_admin_main&#039;]] ),
									]);
									usleep(100000);
								}
								
								
								
							}';
							file_put_contents($include, html_entity_decode($insert, ENT_QUOTES) . PHP_EOL . PHP_EOL,FILE_APPEND);
						}
						
					}	
					$u++;	
				}
					
				$merge[]=$put;
				unset($put);
				
			}
			
			$insert='}';
			file_put_contents($include, $insert,FILE_APPEND);
			
			return $merge;
		}
		
		
	}


/////
public function callback_admin_sendmessageapprovedusers()
	{		
		$con_sql2=$this->cmd_sql();
		
		$tab='tabserviceapproved';
		$tabserviceadmin='tabserviceadmin'.$this->api->chatId.'';
		
		if(mysqli_num_rows(mysqli_query($con_sql2, 'SELECT 1 FROM '.$tab.' WHERE id LIKE "%" LIMIT 1'))==0)
		{
			$text='–í –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç <b>–Ω–µ—Ç —É—Ç–≤–µ—Ä–∂–¥–µ–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π!</b>'.PHP_EOL.'–í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ <b>–≥–ª–∞–≤–Ω–æ–º –º–µ–Ω—é –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞</b>.'.$this->pre.'';
			$this->callbackAnswer( $text, $this->keyboards['inline_admin_main']);
		}
		else
		{
			
			
			if(mysqli_query($con_sql2, 'SELECT 1 FROM '.$tabserviceadmin.' LIMIT 1')==FALSE)
			{
				mysqli_query($con_sql2, 'CREATE TABLE '.$tabserviceadmin.' (id INT(4) UNSIGNED AUTO_INCREMENT PRIMARY KEY,info VARCHAR(20)) ENGINE = InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;');
				usleep(250000);
				mysqli_query($con_sql2, 'INSERT INTO '.$tabserviceadmin.' (info) VALUES ("message")');
				usleep(100000);
			}
			else
			{
				if(mysqli_num_rows(mysqli_query($con_sql2, 'SELECT 1 FROM '.$tabserviceadmin.' WHERE id LIKE "%" LIMIT 1'))==0)
				{
					mysqli_query($con_sql2, 'INSERT INTO '.$tabserviceadmin.' (info) VALUES ("message")');
					usleep(100000);
				}
				else
				{
					mysqli_query($con_sql2, 'TRUNCATE TABLE '.$tabserviceadmin.'');
					usleep(100000);
					mysqli_query($con_sql2, 'INSERT INTO '.$tabserviceadmin.' (info) VALUES ("message")');
					usleep(100000);
				}
			}
					
			$text='–ü—Ä–∏—à–ª–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ, —á—Ç–æ–±—ã –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –µ–≥–æ –≤—Å–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º!'.$this->pre.'';
			
			$merge=[];
			$merge[] = [['text' => '‚¨ÖÔ∏è–ù–∞–∑–∞–¥', 'callback_data' => 'back_admin_sendmessageapprovedusers'], ['text' => '‚§¥Ô∏è–í—ã–π—Ç–∏', 'callback_data' => 'exit_admin_sendmessageapprovedusers']];
			
			if(isset($this->api->body['callback_query']["id"]))
			{
				$callback_query_id=$this->api->body['callback_query']["id"];
				$this->api->answerCallbackQuery($callback_query_id);
			}
			
			$this->api->sendMessage([
				'text' => $text,
				'reply_markup' => json_encode( ['inline_keyboard'=>$merge]),
				'disable_notification' => TRUE,
				'disable_web_page_preview' => TRUE,
				'parse_mode'=> "HTML"
				]);
			usleep(100000);
			}

	}
		


/////
	public function callback_back_admin_sendmessageapprovedusers()
	{
		$con_sql2=$this->cmd_sql();
		$tabserviceadmin='tabserviceadmin'.$this->api->chatId.'';
				
		if(mysqli_query($con_sql2, 'SELECT 1 FROM '.$tabserviceadmin.' LIMIT 1'))
		{
			mysqli_query($con_sql2, 'TRUNCATE TABLE '.$tabserviceadmin.'');
			usleep(100000);
		}
		
		
		$text='–í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –≤ –ø–æ–¥–º–µ–Ω—é <b>–£—Ç–≤–µ—Ä–∂–¥–µ–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏</b> –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –º–µ–Ω—é –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏.'.$this->pre.'';
		$this->callbackAnswer( $text, $this->keyboards['inline_admin_approvedusers']);
		usleep(100000);
	}
/////		
	public function callback_exit_admin_sendmessageapprovedusers()
	{
		$con_sql2=$this->cmd_sql();
		$tabserviceadmin='tabserviceadmin'.$this->api->chatId.'';
		
		if(isset($this->api->body['callback_query']["id"]))
		{
			$callback_query_id=$this->api->body['callback_query']["id"];
			$this->api->answerCallbackQuery($callback_query_id);
		}
		
		if(mysqli_query($con_sql2, 'SELECT 1 FROM '.$tabserviceadmin.' LIMIT 1'))
		{
			mysqli_query($con_sql2, 'TRUNCATE TABLE '.$tabserviceadmin.'');
			usleep(100000);
		}
		
		
		$text='–í—ã –≤—ã—à–ª–∏ –≤ <b>–ì–ª–∞–≤–Ω–æ–µ –ú–µ–Ω—é</b>.'.$this->pre.'';
		
		$this->api->sendMessage([
		'text' => $text,
		'reply_markup' => json_encode( ['inline_keyboard'=>$this->keyboards['inline_default_admin']]),
		'disable_notification' => TRUE,
		'disable_web_page_preview' => TRUE,
		'parse_mode'=> "HTML"
		]);
		usleep(100000);
	}

/////	
	public function cmd_admin_sendmessageapprovedusers()
	{
		$con_sql2=$this->cmd_sql();

		$fromchatid=$this->api->chatId;
		$messageid=$this->api->messageid;
		$tabserviceapproved='tabserviceapproved';
		
		$query1=mysqli_query($con_sql2, 'SELECT * FROM '.$tabserviceapproved.' WHERE id LIKE "%"');
		$con1=mysqli_num_rows($query1);
		
		for($i1=0;$i1<$con1;$i1++)
		{
			mysqli_data_seek($query1, $i1);
			$row1[$i1]=mysqli_fetch_row($query1);
			$chatiduser=$row1[$i1][1];
			
			if($chatiduser!==$this->chatidadmin)
			{
				$this->api->copyMessage([
				'chat_id' => $chatiduser,
				'from_chat_id' => $fromchatid,
				'message_id' => $messageid,
				'disable_notification' => TRUE,
				'parse_mode'=> "HTML"
				]);
			usleep(100000);
			}
		}

		$text='–í—ã <b>—É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–∏–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ</b> –≤—Å–µ–º —É—Ç–≤–µ—Ä–∂–¥–µ–Ω–Ω—ã–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º.'.PHP_EOL.'–í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ –º–æ–¥–º–µ–Ω—é <b>–£—Ç–≤–µ—Ä–∂–¥–µ–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏</b>.'.$this->pre.'';
		$this->api->sendMessage([
			'text' => $text,
			'reply_markup' => json_encode( ['inline_keyboard'=>$this->keyboards['inline_admin_approvedusers']]),
			'disable_notification' => TRUE,
			'disable_web_page_preview' => TRUE,
			'parse_mode'=> "HTML"
			]);
			usleep(100000);
		
		
	}
	
////////////////////////////////////////////////////////////////////–û–±—ä—è–≤–ª–µ–Ω–∏—è –¥–ª—è –∫–∞–Ω–∞–ª–∞//////////////////////////////////////////////////////////////////
/////	
	public function callback_admin_showallrecordsapprovedusers()
	{		
		$con_sql2=$this->cmd_sql();
		
		$tab='tabserviceapproved';
		$tabmain='tabmain'.$this->api->chatId.'';
		
			
			$merge=$this->cmd_admin_showallrecordsapprovedusers();
			usleep(100000);
			
			if (array_filter($merge) !== [])
			{
				
				$merge[] = [['text' => '‚¨ÖÔ∏è–ù–∞–∑–∞–¥', 'callback_data' => 'admin_back_approvedusers'], ['text' => '‚§¥Ô∏è–í—ã–π—Ç–∏', 'callback_data' => 'admin_exit_main']];
				$text='–í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ <b>–ü–æ–∫–∞–∑–∞—Ç—å –æ–±—ä—è–≤–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è –∫–∞–Ω–∞–ª–∞.</b> –í—ã–±–µ—Ä–∏—Ç–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, —á—Ç–æ–±—ã –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –µ–≥–æ –æ–±—ä—è–≤–ª–µ–Ω–∏—è.'.$this->pre.'';
				$this->callbackAnswer( $text, $merge);
			}
			else
			{
				$text='–í –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π <b>–Ω–µ—Ç —Ç–æ–≤–∞—Ä–æ–≤</b> –¥–ª—è —Ä–∞–∑–º–µ—â–µ–Ω–∏—è –≤ –∫–∞–Ω–∞–ª–µ.'.PHP_EOL.'–í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ –ø–æ–¥–º–µ–Ω—é <b>–£—Ç–≤–µ—Ä–∂–¥–µ–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏</b>.'.$this->pre.'';
				$this->callbackAnswer( $text, $this->keyboards['inline_admin_approvedusers']);
			}

		
	}


/////
	public function cmd_admin_showallrecordsapprovedusers()
	{
		$adminid=$this->chatidadmin;		
		$con_sql2=$this->cmd_sql();
		
		$tab='tabserviceapproved';

		$query1=mysqli_query($con_sql2, 'SELECT DISTINCT chatid FROM '.$tab.'');
		usleep(100000);
		$con1=mysqli_num_rows($query1);
		
		$table=[];
		
		for($i=0;$i<$con1;$i++)
		{
			mysqli_data_seek($query1, $i);
			$row1[$i]=mysqli_fetch_row($query1);
			$table[]=$row1[$i][0];	
		}
	
		$cnt=count($table);
		$maxbuttons=1;
		$ceil=ceil($cnt/$maxbuttons);
		
		
		
		$include=''.dirname(__FILE__).'/include'.$this->api->chatId.'.php';
		
		if(file_exists($include)==FALSE)
		{
			touch($include);
			
			$insert='<?php
		
		
			class TelegramBotfunc{';
			file_put_contents($include, $insert . PHP_EOL,FILE_APPEND);
			
		}
		else
		{
			$getinclude=file($include);
			unset($getinclude[array_key_last($getinclude)]);
			file_put_contents($include, $getinclude);
		}
		
		$u=0;
		$merge=[];
		
		for($i1=0;$i1<$ceil;$i1++)
		{
			$put=[];
			for($i2=0;$i2<$maxbuttons;$i2++)
			{	

				$tabmain='tabmain'.$table[$u].'';
				if(mysqli_query($con_sql2, 'SELECT 1 FROM '.$tabmain.' LIMIT 1'))
				{
					
					if(mysqli_num_rows(mysqli_query($con_sql2, 'SELECT 1 FROM '.$tabmain.' WHERE pic!="0" AND messid="0" LIMIT 1'))!=0)
					{
		
						$buttext='üë§'.$this->cmd_user_get_fiophone($table[$u]).'';
						$put[]=["text" => "$buttext", "callback_data" => "admin_showallrecordsapproveduser_$table[$u]"];
						
						if(preg_match('/callback_admin_showallrecordsapproveduser_'.$table[$u].'/', file_get_contents($include))==FALSE)
						{
							$insert='
							public function callback_admin_showallrecordsapproveduser_'.$table[$u].'()
							{	
								$bot = new TestBot;
								$bot->api->getWebhookUpdate();
								$callback_query_id=$bot->api->body[&#039;callback_query&#039;]["id"];
								
								$con_sql2=$bot->cmd_sql();
								
								$tab=&#039;tabmain'.$table[$u].'&#039;;
								$query1=mysqli_query($con_sql2, &#039;SELECT 1 FROM &#039;.$tab.&#039; WHERE pic!="0" AND messid="0" LIMIT 1&#039;);
								usleep(100000);
								$con1=mysqli_num_rows($query1);
								
								if($con1!=0)
								{
									
									$text=&#039;‚ö°Ô∏è‚ö°Ô∏è‚ö°Ô∏è‚ö°Ô∏è‚ö°Ô∏è‚ö°Ô∏è‚ö°Ô∏è‚ö°Ô∏è‚ö°Ô∏è‚ö°Ô∏è‚ö°Ô∏è‚ö°Ô∏è‚ö°Ô∏è‚ö°Ô∏è‚ö°Ô∏è‚ö°Ô∏è‚ö°Ô∏è‚ö°Ô∏è&#039;.PHP_EOL.&#039;–û–±—ä—è–≤–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è <b>'.$buttext.'</b>&#039;;
									$bot->api->sendMessage([
										&#039;text&#039; => $text,
										&#039;disable_notification&#039; => TRUE,
										&#039;disable_web_page_preview&#039; => TRUE,
										&#039;parse_mode&#039;=> "HTML"
									]);
									usleep(100000);
									
									$query=mysqli_query($con_sql2, &#039;SELECT * FROM &#039;.$tab.&#039; WHERE pic!="0" AND messid="0" ORDER by id ASC&#039;);
									usleep(100000);
									$con=mysqli_num_rows($query);
										
									for($i=0;$i<$con;$i++)
									{
										mysqli_data_seek($query, $i);
										$row[$i]=mysqli_fetch_row($query);
									}
									usleep(100000);
									
									
									for($i=0;$i<$con;$i++)
									{
									
									
										$type=$bot->convert_rus($row[$i][1]);
										$cat=$bot->convert_rus($row[$i][2]);
										$gender=$bot->convert_rus($row[$i][3]);
										$cond=$bot->convert_rus($row[$i][12]);
									
									
									
										/* $text=&#039;<b>–û–±—ä—è–≤–ª–µ–Ω–∏–µ ‚Ññ&#039;.$row[$i][0].&#039;</b>&#039;;
										
										$bot->api->sendMessage([
										&#039;text&#039; => $text,
										&#039;disable_notification&#039; => TRUE,
										&#039;disable_web_page_preview&#039; => TRUE,
										&#039;parse_mode&#039;=> "HTML"
										]);
										usleep(100000); */
										
										$caption=&#039;üìñ–ö–∞—Ç–µ–≥–æ—Ä–∏—è: <b>&#039;.$type.&#039;</b>&#039;.PHP_EOL.&#039;üßæ–í–∏–¥: <b>&#039;.$cat.&#039;</b>&#039;.PHP_EOL.&#039;üë®‚Äçüë©‚Äçüë¶–ü–æ–ª: <b>&#039;.$gender.&#039;</b>&#039;.PHP_EOL.&#039;üéè–°–æ—Å—Ç–æ—è–Ω–∏–µ: <b>&#039;.$cond.&#039;</b>&#039;.PHP_EOL.&#039;¬ÆÔ∏è–ë—Ä–µ–Ω–¥: <b>&#039;.$row[$i][4].&#039;</b>&#039;.PHP_EOL.&#039;‚ÜïÔ∏è–†–∞–∑–º–µ—Ä: <b>&#039;.$row[$i][5].&#039;</b>&#039;.PHP_EOL.&#039;üíµ–¶–µ–Ω–∞: <b>&#039;.$row[$i][6].&#039;</b>&#039;.PHP_EOL.&#039;üìã–û–ø–∏—Å–∞–Ω–∏–µ: &#039;.$row[$i][7].&#039;&#039;.PHP_EOL.&#039;&#039;.PHP_EOL.&#039;<b>–û–±—ä—è–≤–ª–µ–Ω–∏–µ ‚Ññ&#039;.$row[$i][0].&#039;</b>&#039;;
										
										$photo=$row[$i][8];
										
										if(preg_match(&#039;/;/&#039;, $photo)==FALSE)
										{
											$bot->api->sendPhoto([
											&#039;photo&#039; => $photo,
											&#039;caption&#039; => $caption,
											&#039;disable_notification&#039; => TRUE,
											&#039;parse_mode&#039; => "HTML"
											]);
											usleep(250000);
										
										}
										else
										{
											$media=[];
											$temp=explode(&#039;;&#039;, $photo);
											$cnt=count($temp);
											for($o=0;$o<$cnt;$o++)
											{
											
											
												if($o==0)
												{
													$put=[&#039;type&#039; => &#039;photo&#039;, &#039;media&#039; =>  &#039;&#039;.$temp[$o].&#039;&#039;, &#039;caption&#039; => &#039;&#039;.$caption.&#039;&#039;, &#039;parse_mode&#039; => "HTML" ];
												}
												else
												{
													$put=[&#039;type&#039; => &#039;photo&#039;, &#039;media&#039; =>  &#039;&#039;.$temp[$o].&#039;&#039; ];
												}
										
												$media[$o]=$put;
											}
											
											
											$bot->api->sendMediaGroup([
											&#039;media&#039; => json_encode($media),
											]);
								
										}
										

									}
									
									$text=&#039;–°–≤–µ—Ä—Ö—É –ø–æ–∫–∞–∑–∞–Ω—ã –æ–±—ä—è–≤–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è <b>'.$buttext.'</b> –¥–ª—è —Ä–∞–∑–º–µ—â–µ–Ω–∏—è –≤ –∫–∞–Ω–∞–ª–µ.&#039;.PHP_EOL.&#039;–í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ <b>–ü–æ–∫–∞–∑–∞—Ç—å –æ–±—ä—è–≤–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –¥–ª—è –∫–∞–Ω–∞–ª–∞.</b> –ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É —Å–Ω–∏–∑—É, —á—Ç–æ–±—ã –ø–æ–∫–∞–∑–∞—Ç—å –æ–±—ä—è–≤–ª–µ–Ω–∏—è –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.&#039;.$bot->pre.&#039;&#039;;
				
									$merge=$bot->cmd_admin_showallrecordsapprovedusers();
									
									if (array_filter($merge) !== [])
									{
										usleep(100000);
										$merge[] = [[&#039;text&#039; => &#039;‚¨ÖÔ∏è–ù–∞–∑–∞–¥&#039;, &#039;callback_data&#039; => &#039;admin_back_approvedusers&#039;], [&#039;text&#039; => &#039;‚§¥Ô∏è–í—ã–π—Ç–∏&#039;, &#039;callback_data&#039; => &#039;admin_exit_main&#039;]];
										
										$bot->api->answerCallbackQuery($callback_query_id);
										$bot->api->sendMessage([
											&#039;text&#039; => $text,
											&#039;reply_markup&#039; => json_encode( [&#039;inline_keyboard&#039;=>$merge]),
											&#039;disable_notification&#039; => TRUE,
											&#039;disable_web_page_preview&#039; => TRUE,
											&#039;parse_mode&#039;=> "HTML"
										]);
										usleep(100000);
									}
									else
									{
										
										$text=&#039;–í –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π <b>–Ω–µ—Ç —Ç–æ–≤–∞—Ä–æ–≤</b> –¥–ª—è —Ä–∞–∑–º–µ—â–µ–Ω–∏—è –≤ –∫–∞–Ω–∞–ª–µ.&#039;.PHP_EOL.&#039;&#039;.PHP_EOL.&#039;–í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ –ø–æ–¥–º–µ–Ω—é <b>–£—Ç–≤–µ—Ä–∂–¥–µ–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏</b> –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞.&#039;.$bot->pre.&#039;&#039;;
										
										$bot->api->answerCallbackQuery($callback_query_id);
										$bot->api->sendMessage([
											&#039;text&#039; => $text,
											&#039;reply_markup&#039; => json_encode( [&#039;inline_keyboard&#039;=>$bot->keyboards[&#039;inline_admin_approvedusers&#039;]]),
											&#039;disable_notification&#039; => TRUE,
											&#039;disable_web_page_preview&#039; => TRUE,
											&#039;parse_mode&#039;=> "HTML"
										]);
										usleep(100000);

									}
								}
								else
								{
									
									$text=&#039;–í –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è <b>'.$buttext.'</b> –Ω–µ—Ç —Ç–æ–≤–∞—Ä–æ–≤ –¥–ª—è —Ä–∞–∑–º–µ—â–µ–Ω–∏—è –≤ –∫–∞–Ω–∞–ª–µ.&#039;.PHP_EOL.&#039;–í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ –ü–æ–∫–∞–∑–∞—Ç—å –æ–±—ä—è–≤–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –¥–ª—è –∫–∞–Ω–∞–ª–∞. –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É —Å–Ω–∏–∑—É, —á—Ç–æ–±—ã –ø–æ–∫–∞–∑–∞—Ç—å –æ–±—ä—è–≤–ª–µ–Ω–∏—è –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.&#039;.$bot->pre.&#039;&#039;;
									
									$merge=$bot->cmd_admin_showallrecordsapprovedusers();
									usleep(100000);
									
									if (array_filter($merge) !== [])
									{
										$merge[] = [[&#039;text&#039; => &#039;‚¨ÖÔ∏è–ù–∞–∑–∞–¥&#039;, &#039;callback_data&#039; => &#039;admin_back_approvedusers&#039;], [&#039;text&#039; => &#039;‚§¥Ô∏è–í—ã–π—Ç–∏&#039;, &#039;callback_data&#039; => &#039;admin_exit_main&#039;]];

										$bot->api->answerCallbackQuery($callback_query_id);
										$bot->api->editMessageText([
											&#039;chat_id&#039; => $bot->api->body[&#039;callback_query&#039;][&#039;message&#039;][&#039;chat&#039;]["id"],
											&#039;message_id&#039; => $bot->api->body[&#039;callback_query&#039;][&#039;message&#039;][&#039;message_id&#039;],
											&#039;text&#039; => $text,
											&#039;parse_mode&#039; => "HTML",
											&#039;reply_markup&#039; => json_encode( [&#039;inline_keyboard&#039;=>$merge] ),
											]);
									}
									else
									{
										$text=&#039;–í –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è üë§<b>'.$buttext.'</b> –Ω–µ—Ç —Ç–æ–≤–∞—Ä–æ–≤ –¥–ª—è —Ä–∞–∑–º–µ—â–µ–Ω–∏—è –≤ –∫–∞–Ω–∞–ª–µ.&#039;.PHP_EOL.&#039;–í –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π <b>–Ω–µ—Ç —Ç–æ–≤–∞—Ä–æ–≤</b> –¥–ª—è —Ä–∞–∑–º–µ—â–µ–Ω–∏—è –≤ –∫–∞–Ω–∞–ª–µ.&#039;.PHP_EOL.&#039;–í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ –ü–æ–∫–∞–∑–∞—Ç—å –æ–±—ä—è–≤–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –Ω–µ –≤ –∫–∞–Ω–∞–ª–µ. –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É —Å–Ω–∏–∑—É, —á—Ç–æ–±—ã –ø–æ–∫–∞–∑–∞—Ç—å –æ–±—ä—è–≤–ª–µ–Ω–∏—è –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.&#039;.$bot->pre.&#039;&#039;;
										
										$bot->api->answerCallbackQuery($callback_query_id);
										$bot->api->editMessageText([
											&#039;chat_id&#039; => $bot->api->body[&#039;callback_query&#039;][&#039;message&#039;][&#039;chat&#039;]["id"],
											&#039;message_id&#039; => $bot->api->body[&#039;callback_query&#039;][&#039;message&#039;][&#039;message_id&#039;],
											&#039;text&#039; => $text,
											&#039;parse_mode&#039; => "HTML",
											&#039;reply_markup&#039; => json_encode( [&#039;inline_keyboard&#039;=>$bot->keyboards[&#039;inline_admin_approvedusers&#039;]] ),
											]);
											
										/* $bot->api->sendMessage([
											&#039;text&#039; => $text,
											&#039;reply_markup&#039; => json_encode( [&#039;inline_keyboard&#039;=>$bot->keyboards[&#039;inline_admin_approvedusers&#039;]]),
											&#039;disable_notification&#039; => TRUE,
											&#039;disable_web_page_preview&#039; => TRUE,
											&#039;parse_mode&#039;=> "HTML"
										]); */
										usleep(100000);
									}
								}
								
								
							}';
							file_put_contents($include, html_entity_decode($insert, ENT_QUOTES) . PHP_EOL . PHP_EOL,FILE_APPEND);
						}
					
					}
				}					
				$u++;	
			}
				
			$merge[]=$put;
			unset($put);
			
		}
		
		$insert='}';
		file_put_contents($include, $insert,FILE_APPEND);
		
		return $merge;
					
		
		
	}



/////////////////////////////////////////////////////////////////–¢–æ–≤–∞—Ä—ã –≤ –∫–∞–Ω–∞–ª–µ//////////////////////////////////////////////////////////////////////
/////	
	public function callback_admin_showchannelrecordsapprovedusers()
	{		
		$con_sql2=$this->cmd_sql();
		
		$tab='tabserviceapproved';
		
		
			$merge=$this->cmd_admin_showchannelrecordsapprovedusers();
			
			if (array_filter($merge) !== [])
			{
				usleep(100000);
				$merge[] = [['text' => '‚¨ÖÔ∏è–ù–∞–∑–∞–¥', 'callback_data' => 'admin_back_approvedusers'], ['text' => '‚§¥Ô∏è–í—ã–π—Ç–∏', 'callback_data' => 'admin_exit_main']];
				$text='–í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ <b>–ü–æ–∫–∞–∑–∞—Ç—å —Ç–æ–≤–∞—Ä—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤ –∫–∞–Ω–∞–ª–µ</b>. –í—ã–±–µ—Ä–∏—Ç–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, —á—Ç–æ–±—ã –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –µ–≥–æ —Ç–æ–≤–∞—Ä—ã.'.$this->pre.'';
				$this->callbackAnswer( $text, $merge);
			}
			else
			{
				$text='–í –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç <b>–Ω–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π,</b> —É –∫–æ—Ç–æ—Ä—ã—Ö —Ä–∞–∑–º–µ—â–µ–Ω—ã —Ç–æ–≤–∞—Ä—ã –≤ –∫–∞–Ω–∞–ª–µ!'.PHP_EOL.'–í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ –ø–æ–¥–º–µ–Ω—é <b>–£—Ç–≤–µ—Ä–∂–¥–µ–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏</b> –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞.'.$this->pre.'';
				$this->callbackAnswer( $text, $this->keyboards['inline_admin_approvedusers']);
			}
			
	}


/////
	public function cmd_admin_showchannelrecordsapprovedusers()
	{
		$adminid=$this->chatidadmin;		
		$con_sql2=$this->cmd_sql();
		
		$tab='tabserviceapproved';

		$query1=mysqli_query($con_sql2, 'SELECT DISTINCT chatid FROM '.$tab.'');
		usleep(100000);
		$con1=mysqli_num_rows($query1);
		
		$table=[];
		
		for($i=0;$i<$con1;$i++)
		{
			mysqli_data_seek($query1, $i);
			$row1[$i]=mysqli_fetch_row($query1);
			$table[]=$row1[$i][0];	
		}
	
		$cnt=count($table);
		$maxbuttons=1;
		$ceil=ceil($cnt/$maxbuttons);
		
		
		
		$include=''.dirname(__FILE__).'/include'.$this->api->chatId.'.php';
		
		if(file_exists($include)==FALSE)
		{
			touch($include);
			
			$insert='<?php
		
		
			class TelegramBotfunc{';
			file_put_contents($include, $insert . PHP_EOL,FILE_APPEND);
			
		}
		else
		{
			$getinclude=file($include);
			unset($getinclude[array_key_last($getinclude)]);
			file_put_contents($include, $getinclude);
		}
		
		$u=0;
		$merge=[];
		
		for($i1=0;$i1<$ceil;$i1++)
		{
			$put=[];
			for($i2=0;$i2<$maxbuttons;$i2++)
			{	
				$tabmain='tabmain'.$table[$u].'';
				if(mysqli_query($con_sql2, 'SELECT 1 FROM '.$tabmain.' LIMIT 1'))
				{
				if(mysqli_num_rows(mysqli_query($con_sql2, 'SELECT 1 FROM '.$tabmain.' WHERE pic!="0" AND messid!="0" LIMIT 1'))!=0)
				{
					
					$buttext='üë§'.$this->cmd_user_get_fiophone($table[$u]).'';
					
					$put[]=["text" => "$buttext", "callback_data" => "admin_showchannelrecordsapproveduser_$table[$u]"];
					
					if(preg_match('/callback_admin_showchannelrecordsapproveduser_'.$table[$u].'/', file_get_contents($include))==FALSE)
					{
						$insert='
						public function callback_admin_showchannelrecordsapproveduser_'.$table[$u].'()
						{	
							$bot = new TestBot;
							$bot->api->getWebhookUpdate();
							$callback_query_id=$bot->api->body[&#039;callback_query&#039;]["id"];
							
							$con_sql2=$bot->cmd_sql();
							
							$tab=&#039;tabmain'.$table[$u].'&#039;;
							$query1=mysqli_query($con_sql2, &#039;SELECT 1 FROM &#039;.$tab.&#039; WHERE messid!="0" LIMIT 1&#039;);
							usleep(100000);
							$con1=mysqli_num_rows($query1);
							
							if($con1!=0)
							{
								
								$text=&#039;‚ö°Ô∏è‚ö°Ô∏è‚ö°Ô∏è‚ö°Ô∏è‚ö°Ô∏è‚ö°Ô∏è‚ö°Ô∏è‚ö°Ô∏è‚ö°Ô∏è‚ö°Ô∏è‚ö°Ô∏è‚ö°Ô∏è‚ö°Ô∏è‚ö°Ô∏è‚ö°Ô∏è‚ö°Ô∏è‚ö°Ô∏è‚ö°Ô∏è&#039;.PHP_EOL.&#039;–¢–æ–≤–∞—Ä—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è <b>'.$buttext.'</b> –≤ –∫–∞–Ω–∞–ª–µ:&#039;;
								$bot->api->sendMessage([
									&#039;text&#039; => $text,
									&#039;disable_notification&#039; => TRUE,
									&#039;disable_web_page_preview&#039; => TRUE,
									&#039;parse_mode&#039;=> "HTML"
								]);
								usleep(100000);
								
								$query=mysqli_query($con_sql2, &#039;SELECT * FROM &#039;.$tab.&#039; WHERE messid!="0"&#039;);
								usleep(100000);
								$con=mysqli_num_rows($query);
									
								for($i=0;$i<$con;$i++)
								{
									mysqli_data_seek($query, $i);
									$row[$i]=mysqli_fetch_row($query);
								}
								usleep(100000);
								
				
								for($i=0;$i<$con;$i++)
								{
								
									$type=$bot->convert_rus($row[$i][1]);
									$cat=$bot->convert_rus($row[$i][2]);
									$gender=$bot->convert_rus($row[$i][3]);
									$cond=$bot->convert_rus($row[$i][12]);
								
								
								
									/* $text=&#039;<b>ID —Ç–æ–≤–∞—Ä–∞ ‚Ññ&#039;.$row[$i][11].&#039;</b>&#039;;
									
									$bot->api->sendMessage([
									&#039;text&#039; => $text,
									&#039;disable_notification&#039; => TRUE,
									&#039;disable_web_page_preview&#039; => TRUE,
									&#039;parse_mode&#039;=> "HTML"
									]);
									usleep(100000); */


									$caption=&#039;üìñ–ö–∞—Ç–µ–≥–æ—Ä–∏—è: &#160;&#160;<b>&#039;.$type.&#039;</b>&#039;.PHP_EOL.&#039;üßæ–í–∏–¥: &#160;&#160;<b>&#039;.$cat.&#039;</b>&#039;.PHP_EOL.&#039;üë®‚Äçüë©‚Äçüë¶–ü–æ–ª: &#160;&#160;<b>&#039;.$gender.&#039;</b>&#039;.PHP_EOL.&#039;üéè–°–æ—Å—Ç–æ—è–Ω–∏–µ: &#160;&#160;<b>&#039;.$cond.&#039;</b>&#039;.PHP_EOL.&#039;¬ÆÔ∏è–ë—Ä–µ–Ω–¥: &#160;&#160;<b>&#039;.$row[$i][4].&#039;</b>&#039;.PHP_EOL.&#039;‚ÜïÔ∏è–†–∞–∑–º–µ—Ä: &#160;&#160;<b>&#039;.$row[$i][5].&#039;</b>&#039;.PHP_EOL.&#039;üíµ–¶–µ–Ω–∞: &#160;&#160;<b>&#039;.$row[$i][6].&#039;</b>&#039;.PHP_EOL.&#039;üìã–û–ø–∏—Å–∞–Ω–∏–µ: &#160;&#160;&#039;.$row[$i][7].&#039;&#039;.PHP_EOL.&#039;&#039;.PHP_EOL.&#039;&#039;.PHP_EOL.&#039;<b>ID —Ç–æ–≤–∞—Ä–∞: &#039;.$row[$i][11].&#039;</b>&#039;.PHP_EOL.&#039;&#039;.PHP_EOL.&#039;üìÅüìÅüìÅüìÅüìÅüìÅüìÅüìÅüìÅüìÅüìÅüìÅ&#039;;
									
									$photo=$row[$i][8];
									
									if(preg_match(&#039;/;/&#039;, $photo)==FALSE)
									{
										$bot->api->sendPhoto([
										&#039;photo&#039; => $photo,
										&#039;caption&#039; => $caption,
										&#039;disable_notification&#039; => TRUE,
										&#039;parse_mode&#039; => "HTML"
										]);
										usleep(250000);
									
									}
									else
									{
										$media=[];
										$temp=explode(&#039;;&#039;, $photo);
										$cnt=count($temp);
										for($o=0;$o<$cnt;$o++)
										{
										
										
											if($o==0)
											{
												$put=[&#039;type&#039; => &#039;photo&#039;, &#039;media&#039; =>  &#039;&#039;.$temp[$o].&#039;&#039;, &#039;caption&#039; => &#039;&#039;.$caption.&#039;&#039;, &#039;parse_mode&#039; => "HTML" ];
											}
											else
											{
												$put=[&#039;type&#039; => &#039;photo&#039;, &#039;media&#039; =>  &#039;&#039;.$temp[$o].&#039;&#039; ];
											}
									
											$media[$o]=$put;
										}
										
										
										$bot->api->sendMediaGroup([
										&#039;media&#039; => json_encode($media),
										]);
							
									}
								}
								
								$text=&#039;–°–≤–µ—Ä—Ö—É –ø–æ–∫–∞–∑–∞–Ω—ã –≤—Å–µ —Ç–æ–≤–∞—Ä—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è <b>'.$buttext.'</b> –≤ –∫–∞–Ω–∞–ª–µ.&#039;.PHP_EOL.&#039;–í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ <b>–ü–æ–∫–∞–∑–∞—Ç—å —Ç–æ–≤–∞—Ä—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤ –∫–∞–Ω–∞–ª–µ</b>. –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É —Å–Ω–∏–∑—É, —á—Ç–æ–±—ã –ø–æ–∫–∞–∑–∞—Ç—å —Ç–æ–≤–∞—Ä—ã –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –∫–∞–Ω–∞–ª–µ.&#039;.$bot->pre.&#039;&#039;;
				
								$merge=$bot->cmd_admin_showchannelrecordsapprovedusers();
								
								if (array_filter($merge) !== [])
								{
									usleep(100000);
									$merge[] = [[&#039;text&#039; => &#039;‚¨ÖÔ∏è–ù–∞–∑–∞–¥&#039;, &#039;callback_data&#039; => &#039;admin_back_approvedusers&#039;], [&#039;text&#039; => &#039;‚§¥Ô∏è–í—ã–π—Ç–∏&#039;, &#039;callback_data&#039; => &#039;admin_exit_main&#039;]];
									
									$bot->api->answerCallbackQuery($callback_query_id);
									$bot->api->sendMessage([
										&#039;text&#039; => $text,
										&#039;reply_markup&#039; => json_encode( [&#039;inline_keyboard&#039;=>$merge]),
										&#039;disable_notification&#039; => TRUE,
										&#039;disable_web_page_preview&#039; => TRUE,
										&#039;parse_mode&#039;=> "HTML"
									]);
									usleep(100000);
								}
								else
								{
									
									$text=&#039;–í –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç <b>–Ω–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π,</b> —É –∫–æ—Ç–æ—Ä—ã—Ö —Ä–∞–∑–º–µ—â–µ–Ω—ã —Ç–æ–≤–∞—Ä—ã –≤ –∫–∞–Ω–∞–ª–µ!&#039;.PHP_EOL.&#039;&#039;.PHP_EOL.&#039;–í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ –ø–æ–¥–º–µ–Ω—é <b>–£—Ç–≤–µ—Ä–∂–¥–µ–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏</b> –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞.&#039;.$bot->pre.&#039;&#039;;
									
									$bot->api->answerCallbackQuery($callback_query_id);
									$bot->api->sendMessage([
										&#039;text&#039; => $text,
										&#039;reply_markup&#039; => json_encode( [&#039;inline_keyboard&#039;=>$bot->keyboards[&#039;inline_admin_approvedusers&#039;]]),
										&#039;disable_notification&#039; => TRUE,
										&#039;disable_web_page_preview&#039; => TRUE,
										&#039;parse_mode&#039;=> "HTML"
									]);
									usleep(100000);
				
								}
							}
							else
							{
								
								$text=&#039;–í –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è <b>'.$buttext.'</b> –Ω–µ—Ç —Ç–æ–≤–∞—Ä–æ–≤, —Ä–∞–∑–º–µ—â–µ–Ω–Ω—ã—Ö –≤ –∫–∞–Ω–∞–ª–µ.&#039;.PHP_EOL.&#039;–í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ <b>–ü–æ–∫–∞–∑–∞—Ç—å —Ç–æ–≤–∞—Ä—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤ –∫–∞–Ω–∞–ª–µ</b>. –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É —Å–Ω–∏–∑—É, —á—Ç–æ–±—ã –ø–æ–∫–∞–∑–∞—Ç—å —Ç–æ–≤–∞—Ä—ã –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.&#039;.$bot->pre.&#039;&#039;;
								
								$merge=$bot->cmd_admin_showchannelrecordsapprovedusers();
								usleep(100000);
								
								if (array_filter($merge) !== [])
								{
									$merge[] = [[&#039;text&#039; => &#039;‚¨ÖÔ∏è–ù–∞–∑–∞–¥&#039;, &#039;callback_data&#039; => &#039;admin_back_approvedusers&#039;], [&#039;text&#039; => &#039;‚§¥Ô∏è–í—ã–π—Ç–∏&#039;, &#039;callback_data&#039; => &#039;admin_exit_main&#039;]];
				
									$bot->api->answerCallbackQuery($callback_query_id);
									$bot->api->editMessageText([
										&#039;chat_id&#039; => $bot->api->body[&#039;callback_query&#039;][&#039;message&#039;][&#039;chat&#039;]["id"],
										&#039;message_id&#039; => $bot->api->body[&#039;callback_query&#039;][&#039;message&#039;][&#039;message_id&#039;],
										&#039;text&#039; => $text,
										&#039;parse_mode&#039; => "HTML",
										&#039;reply_markup&#039; => json_encode( [&#039;inline_keyboard&#039;=>$merge] ),
										]);
								}
								else
								{
									$text=&#039;–í –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è <b>'.$buttext.'</b> –Ω–µ—Ç —Ç–æ–≤–∞—Ä–æ–≤, —Ä–∞–∑–º–µ—â–µ–Ω–Ω—ã—Ö –≤ –∫–∞–Ω–∞–ª–µ!&#039;.PHP_EOL.&#039;–í –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç <b>–Ω–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π,</b> —É –∫–æ—Ç–æ—Ä—ã—Ö —Ä–∞–∑–º–µ—â–µ–Ω—ã —Ç–æ–≤–∞—Ä—ã –≤ –∫–∞–Ω–∞–ª–µ!&#039;.PHP_EOL.&#039;–í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ –ø–æ–¥–º–µ–Ω—é <b>–£—Ç–≤–µ—Ä–∂–¥–µ–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏</b> –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞.&#039;.$bot->pre.&#039;&#039;;
									
									$bot->api->answerCallbackQuery($callback_query_id);
									$bot->api->editMessageText([
										&#039;chat_id&#039; => $bot->api->body[&#039;callback_query&#039;][&#039;message&#039;][&#039;chat&#039;]["id"],
										&#039;message_id&#039; => $bot->api->body[&#039;callback_query&#039;][&#039;message&#039;][&#039;message_id&#039;],
										&#039;text&#039; => $text,
										&#039;parse_mode&#039; => "HTML",
										&#039;reply_markup&#039; => json_encode( [&#039;inline_keyboard&#039;=>$bot->keyboards[&#039;inline_admin_approvedusers&#039;]] ),
										]);
										
									/* $bot->api->sendMessage([
										&#039;text&#039; => $text,
										&#039;reply_markup&#039; => json_encode( [&#039;inline_keyboard&#039;=>$bot->keyboards[&#039;inline_admin_approvedusers&#039;]]),
										&#039;disable_notification&#039; => TRUE,
										&#039;disable_web_page_preview&#039; => TRUE,
										&#039;parse_mode&#039;=> "HTML"
									]); */
									usleep(100000);
								}
							}
							
							
						}';
						file_put_contents($include, html_entity_decode($insert, ENT_QUOTES) . PHP_EOL . PHP_EOL,FILE_APPEND);
					}
				
				}
				}					
				$u++;	
			}
				
			$merge[]=$put;
			unset($put);
			
		}
		
		$insert='}';
		file_put_contents($include, $insert,FILE_APPEND);
		
		return $merge;		
		
		
	}


///////////////////////////////////////////////////////////////////–£–¥–∞–ª–∏—Ç—å –æ–±—ä—è–≤–ª–µ–Ω–∏—è –¥–ª—è –∫–∞–Ω–∞–ª–∞//////////////////////////////////////////////////////////
/////	
	public function callback_admin_deleterecordsapprovedusers()
	{		
		$con_sql2=$this->cmd_sql();
		
		$tab='tabserviceapproved';
			
			$merge=$this->cmd_admin_deleterecordsapprovedusers();
			usleep(100000);
			
			if (array_filter($merge) !== [])
			{
				
				$merge[] = [['text' => '‚¨ÖÔ∏è–ù–∞–∑–∞–¥', 'callback_data' => 'admin_back_approvedusers'], ['text' => '‚§¥Ô∏è–í—ã–π—Ç–∏', 'callback_data' => 'admin_exit_main']];
				$text='–í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ <b>–£–¥–∞–ª–∏—Ç—å –æ–±—ä—è–≤–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –¥–ª—è –∫–∞–Ω–∞–ª–∞.</b> –í—ã–±–µ—Ä–∏—Ç–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, —á—Ç–æ–±—ã —É–¥–∞–ª–∏—Ç—å –µ–≥–æ –æ–±—ä—è–≤–ª–µ–Ω–∏—è.'.$this->pre.'';
				
				$this->callbackAnswer( $text, $merge);
			}
			else
			{
				$text='–í –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π <b>–Ω–µ—Ç –æ–±—ä—è–≤–ª–µ–Ω–∏–π</b> –¥–ª—è —Ä–∞–∑–º–µ—â–µ–Ω–∏—è –≤ –∫–∞–Ω–∞–ª–µ.'.PHP_EOL.' –í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ –º–µ–Ω—é —É—Ç–≤–µ—Ä–∂–¥–µ–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π.'.$this->pre.'';
				
				$this->callbackAnswer( $text, $this->keyboards['inline_admin_approvedusers']);
				
				
			}
		
	}


/////
	public function cmd_admin_deleterecordsapprovedusers()
	{
		$adminid=$this->chatidadmin;		
		$con_sql2=$this->cmd_sql();
		
		$tab='tabserviceapproved';
		
		$query1=mysqli_query($con_sql2, 'SELECT DISTINCT chatid FROM '.$tab.'');
		usleep(100000);
		$con1=mysqli_num_rows($query1);
		
		$table=[];
		
		for($i=0;$i<$con1;$i++)
		{
			mysqli_data_seek($query1, $i);
			$row1[$i]=mysqli_fetch_row($query1);
			$table[]=$row1[$i][0];	
		}
		usleep(100000);
		
		$cnt=count($table);
		$maxbuttons=1;
		$ceil=ceil($cnt/$maxbuttons);
		
		
		
		$include=''.dirname(__FILE__).'/include'.$this->api->chatId.'.php';
		
		if(file_exists($include)==FALSE)
		{
			touch($include);
			
			$insert='<?php
		
		
			class TelegramBotfunc{';
			file_put_contents($include, $insert . PHP_EOL,FILE_APPEND);
			
		}
		else
		{
			$getinclude=file($include);
			unset($getinclude[array_key_last($getinclude)]);
			file_put_contents($include, $getinclude);
		}
		
		$u=0;
		$merge=[];
		
		for($i1=0;$i1<$ceil;$i1++)
		{
			$put=[];
			for($i2=0;$i2<$maxbuttons;$i2++)
			{	
				$tabmain='tabmain'.$table[$u].'';
				if(mysqli_query($con_sql2, 'SELECT 1 FROM '.$tabmain.' LIMIT 1'))
				{
				if(mysqli_num_rows(mysqli_query($con_sql2, 'SELECT 1 FROM '.$tabmain.' WHERE pic!="0" AND messid="0" LIMIT 1'))!=0)
				{
					
					$buttext='üë§'.$this->cmd_user_get_fiophone($table[$u]).'';
					
					$put[]=["text" => "$buttext", "callback_data" => "admin_deleterecordsapproveduser_$table[$u]"];
					
					if(preg_match('/callback_admin_deleterecordsapproveduser_'.$table[$u].'/', file_get_contents($include))==FALSE)
					{
						$insert='
						public function callback_admin_deleterecordsapproveduser_'.$table[$u].'()
						{	
							$bot = new TestBot;
							$bot->api->getWebhookUpdate();
							$callback_query_id=$bot->api->body[&#039;callback_query&#039;]["id"];
							
							$con_sql2=$bot->cmd_sql();
							$tab=&#039;tabserviceapproved&#039;;
							//$tabmain=&#039;tabmain&#039;.$bot->api->chatId.&#039;&#039;;
							
							$query1=mysqli_query($con_sql2, &#039;SELECT 1 FROM &#039;.$tab.&#039; WHERE pic!="0" AND messid="0" LIMIT 1&#039;);
							usleep(100000);
							$con1=mysqli_num_rows($query1);
				
							$text=&#039;–î–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã —É–¥–∞–ª–∏—Ç—å –æ–±—ä—è–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è <b>'.$buttext.'</b>, –í–∞–º –Ω—É–∂–Ω–æ –Ω–∞–∂–∞—Ç—å –Ω–∞ –∫–Ω–æ–ø–∫—É —Å –Ω–æ–º–µ—Ä–æ–º –æ–±—ä—è–≤–ª–µ–Ω–∏—è.&#039;.$bot->pre.&#039;&#039;;
				
							$merge=$bot->cmd_admin_deleterecordsapprovedusers_records('.$table[$u].');
							
							usleep(100000);
							if (array_filter($merge) !== [])
							{
								$merge[] = [[&#039;text&#039; => &#039;‚¨ÖÔ∏è–ù–∞–∑–∞–¥&#039;, &#039;callback_data&#039; => &#039;admin_back_approvedusers&#039;], [&#039;text&#039; => &#039;‚§¥Ô∏è–í—ã–π—Ç–∏&#039;, &#039;callback_data&#039; => &#039;admin_exit_main&#039;]];
								
								$bot->api->answerCallbackQuery($callback_query_id);
								$bot->api->editMessageText([
								&#039;chat_id&#039; => $bot->api->body[&#039;callback_query&#039;][&#039;message&#039;][&#039;chat&#039;]["id"],
								&#039;message_id&#039; => $bot->api->body[&#039;callback_query&#039;][&#039;message&#039;][&#039;message_id&#039;],
								&#039;text&#039; => $text,
								&#039;parse_mode&#039; => "HTML",
								&#039;reply_markup&#039; => json_encode( [&#039;inline_keyboard&#039;=>$merge] ),
								]);
								usleep(100000);
							}
							else
							{
								$text=&#039;–í –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è <b>'.$buttext.'</b> –Ω–µ—Ç –æ–±—ä—è–≤–ª–µ–Ω–∏–π –¥–ª—è —Ä–∞–∑–º–µ—â–µ–Ω–∏—è –≤ –∫–∞–Ω–∞–ª–µ.&#039;.PHP_EOL.&#039; –í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ –ø–æ–¥–º–µ–Ω—é <b>–£–¥–∞–ª–∏—Ç—å –æ–±—ä—è–≤–ª–µ–Ω–∏—è</b> –º–µ–Ω—é —É—Ç–≤–µ—Ä–∂–¥–µ–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, <b>–≤—ã–±–∏—Ä–∏—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è</b>, —á—Ç–æ–±—ã —É–¥–∞–ª–∏—Ç—å –µ–≥–æ –æ–±—ä—è–≤–ª–µ–Ω–∏—è.&#039;.$bot->pre.&#039;&#039;;
								
								$merge=$bot->cmd_admin_deleterecordsapprovedusers();
								usleep(100000);
								
								if (array_filter($merge) !== [])
								{
									$merge[] = [[&#039;text&#039; => &#039;‚¨ÖÔ∏è–ù–∞–∑–∞–¥&#039;, &#039;callback_data&#039; => &#039;admin_back_approvedusers&#039;], [&#039;text&#039; => &#039;‚§¥Ô∏è–í—ã–π—Ç–∏&#039;, &#039;callback_data&#039; => &#039;admin_exit_main&#039;]];
									
									$bot->api->answerCallbackQuery($callback_query_id);
									$bot->api->editMessageText([
									&#039;chat_id&#039; => $bot->api->body[&#039;callback_query&#039;][&#039;message&#039;][&#039;chat&#039;]["id"],
									&#039;message_id&#039; => $bot->api->body[&#039;callback_query&#039;][&#039;message&#039;][&#039;message_id&#039;],
									&#039;text&#039; => $text,
									&#039;parse_mode&#039; => "HTML",
									&#039;reply_markup&#039; => json_encode( [&#039;inline_keyboard&#039;=>$merge] ),
									]);
								}
								else
								{
									$text=&#039;–í –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è <b>'.$buttext.'</b> –Ω–µ—Ç –æ–±—ä—è–≤–ª–µ–Ω–∏–π –¥–ª—è —Ä–∞–∑–º–µ—â–µ–Ω–∏—è –≤ –∫–∞–Ω–∞–ª–µ. –í –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç <b>–Ω–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π</b>, —É –∫–æ—Ç–æ—Ä—ã—Ö –µ—Å—Ç—å –æ–±—ä—è–≤–ª–µ–Ω–∏—è –¥–ª—è —Ä–∞–∑–º–µ—â–µ–Ω–∏—è –≤ –∫–∞–Ω–∞–ª–µ.&#039;.PHP_EOL.&#039; –í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ –º–µ–Ω—é —É—Ç–≤–µ—Ä–∂–¥–µ–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π.&#039;.$bot->pre.&#039;&#039;;
									
									$bot->api->answerCallbackQuery($callback_query_id);
									$bot->api->editMessageText([
									&#039;chat_id&#039; => $bot->api->body[&#039;callback_query&#039;][&#039;message&#039;][&#039;chat&#039;]["id"],
									&#039;message_id&#039; => $bot->api->body[&#039;callback_query&#039;][&#039;message&#039;][&#039;message_id&#039;],
									&#039;text&#039; => $text,
									&#039;parse_mode&#039; => "HTML",
									&#039;reply_markup&#039; => json_encode( [&#039;inline_keyboard&#039;=>$bot->keyboards[&#039;inline_admin_approvedusers&#039;]] ),
									]);
								}
							}
							
							
						}';
							
						file_put_contents($include, html_entity_decode($insert, ENT_QUOTES) . PHP_EOL . PHP_EOL,FILE_APPEND);
					}
				}
				}	
				$u++;	
			}
				
			$merge[]=$put;
			unset($put);
			
		}
		
		$insert='}';
		file_put_contents($include, $insert,FILE_APPEND);
		
		return $merge;
				
		

	}




/////
	public function cmd_admin_deleterecordsapprovedusers_records($input)
	{
		$adminid=$this->chatidadmin;		
		$con_sql2=$this->cmd_sql();
		
		$tab='tabserviceapproved';
		$tabmain='tabmain'.$input.'';
			
			
		$query1=mysqli_query($con_sql2, 'SELECT DISTINCT id FROM '.$tabmain.' WHERE pic!="0" AND messid="0"');
		usleep(100000);
		$con1=mysqli_num_rows($query1);
		
		$table=[];
		
		for($i=0;$i<$con1;$i++)
		{
			mysqli_data_seek($query1, $i);
			$row1[$i]=mysqli_fetch_row($query1);
			$table[]=$row1[$i][0];	
		}
		usleep(100000);
		
		$cnt=count($table);
		$maxbuttons=1;
		$ceil=ceil($cnt/$maxbuttons);
		
		
		
		$include=''.dirname(__FILE__).'/include'.$this->api->chatId.'.php';
		
		if(file_exists($include)==FALSE)
		{
			touch($include);
			
			$insert='<?php
		
		
			class TelegramBotfunc{';
			file_put_contents($include, $insert . PHP_EOL,FILE_APPEND);
			
		}
		else
		{
			$getinclude=file($include);
			unset($getinclude[array_key_last($getinclude)]);
			file_put_contents($include, $getinclude);
		}
		
		$u=0;
		$merge=[];
		
		for($i1=0;$i1<$ceil;$i1++)
		{
			$put=[];
			for($i2=0;$i2<$maxbuttons;$i2++)
			{	
				//if(mysqli_query($con_sql2, 'SELECT 1 FROM '.$tabmain.' LIMIT 1'))
				if(isset($table[$u]))
				{	
				if(mysqli_num_rows(mysqli_query($con_sql2, 'SELECT DISTINCT id FROM '.$tabmain.' WHERE pic!="0" AND messid="0"'))!=0)
				{
					$buttext='‚Ññ'.$table[$u].'';
					$put[]=["text" => ''.$buttext.'', "callback_data" => 'adm_delrecappuser_user'.$input.'_rec'.$table[$u].''];
					
					$butuser='üë§'.$this->cmd_user_get_fiophone($input).'';
					
					if(preg_match('/callback_adm_delrecappuser_user'.$input.'_rec'.$table[$u].'/', file_get_contents($include))==FALSE)
					{
						$insert='
						public function callback_adm_delrecappuser_user'.$input.'_rec'.$table[$u].'()
						{	
							$bot = new TestBot;
							$bot->api->getWebhookUpdate();
							$callback_query_id=$bot->api->body[&#039;callback_query&#039;]["id"];
							
							$con_sql2=$bot->cmd_sql();
							$tabmain=&#039;tabmain'.$input.'&#039;;
							$tabserviceask=&#039;tabserviceask'.$input.'&#039;;
							
							
							$query1=mysqli_query($con_sql2, &#039;SELECT DISTINCT id FROM &#039;.$tabmain.&#039; WHERE pic!="0" AND messid="0"&#039;);
							usleep(100000);
							$con1=mysqli_num_rows($query1);
				
							if($con1!=0)
							{
								
								$query=mysqli_query($con_sql2, &#039;DELETE FROM &#039;.$tabmain.&#039; WHERE id="'.$table[$u].'"&#039;);
								usleep(100000);
								$query=mysqli_query($con_sql2, &#039;DELETE FROM &#039;.$tabserviceask.&#039; WHERE record="'.$table[$u].'"&#039;);
								usleep(100000);
								
								$text2=&#039;–í–∞—à–µ –æ–±—ä—è–≤–ª–µ–Ω–∏–µ <b>‚Ññ'.$table[$u].'</b> –±—ã–ª–æ <b>—É–¥–∞–ª–µ–Ω–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º</b> –∏ <b>–Ω–µ –±—É–¥–µ—Ç —Ä–∞–∑–º–µ—â–µ–Ω–æ –≤ –∫–∞–Ω–∞–ª–µ</b>.&#039;.$bot->pre.&#039;&#039;;
									
								$bot->api->sendMessage([
								
									&#039;chat_id&#039; => '.$input.',
									&#039;text&#039; => $text2,
									&#039;reply_markup&#039; => json_encode( [&#039;inline_keyboard&#039;=>$bot->keyboards[&#039;inline_sell&#039;]]),
									&#039;parse_mode&#039; => "HTML",
									]);
								usleep(100000);
								
								$text=&#039;–í—ã–±—Ä–∞–Ω–Ω–æ–µ –æ–±—ä—è–≤–ª–µ–Ω–∏–µ <b>‚Ññ'.$table[$u].'</b> –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è <b>'.$butuser.'</b> —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω–æ.&#039;.PHP_EOL.&#039;–í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ –£–¥–∞–ª–∏—Ç—å –æ–±—ä—è–≤–ª–µ–Ω–∏—è –¥–ª—è —Ä–∞–∑–º–µ—â–µ–Ω–∏—è –≤ –∫–∞–Ω–∞–ª–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è <b>'.$butuser.'</b>. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–∏—Ä–∏—Ç–µ –æ–±—ä—è–≤–ª–µ–Ω–∏–µ, —á—Ç–æ–±—ã —É–¥–∞–ª–∏—Ç—å –µ–≥–æ.&#039;.$bot->pre.&#039;&#039;;
								
				
								$merge=$bot->cmd_admin_deleterecordsapprovedusers_records('.$input.');
								usleep(100000);
								
								if (array_filter($merge) !== [])
								{
								
									$merge[] = [[&#039;text&#039; => &#039;‚¨ÖÔ∏è–ù–∞–∑–∞–¥&#039;, &#039;callback_data&#039; => &#039;admin_back_deleterecords_users&#039;], [&#039;text&#039; => &#039;‚§¥Ô∏è–í—ã–π—Ç–∏&#039;, &#039;callback_data&#039; => &#039;admin_exit_main&#039;]];
									
									$bot->api->answerCallbackQuery($callback_query_id);
									$bot->api->editMessageText([
									&#039;chat_id&#039; => $bot->api->body[&#039;callback_query&#039;][&#039;message&#039;][&#039;chat&#039;]["id"],
									&#039;message_id&#039; => $bot->api->body[&#039;callback_query&#039;][&#039;message&#039;][&#039;message_id&#039;],
									&#039;text&#039; => $text,
									&#039;parse_mode&#039; => "HTML",
									&#039;reply_markup&#039; => json_encode( [&#039;inline_keyboard&#039;=>$merge] ),
									]);
									usleep(100000);
								}
								else
								{
									$text=&#039;–í—ã–±—Ä–∞–Ω–Ω–æ–µ –æ–±—ä—è–≤–ª–µ–Ω–∏–µ <b>‚Ññ'.$table[$u].'</b> –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è <b>'.$butuser.'</b> —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω–æ.&#039;.PHP_EOL.&#039;–í –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è <b>'.$butuser.'</b> –Ω–µ—Ç –æ–±—ä—è–≤–ª–µ–Ω–∏–π –¥–ª—è —Ä–∞–∑–º–µ—â–µ–Ω–∏—è –≤ –∫–∞–Ω–∞–ª–µ.&#039;.PHP_EOL.&#039; –í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ –º–µ–Ω—é —É—Ç–≤–µ—Ä–∂–¥–µ–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π.&#039;.$bot->pre.&#039;&#039;;
									$merge=$bot->cmd_admin_deleterecordsapprovedusers();
									
									if (array_filter($merge) !== [])
									{
									
										$merge[] = [[&#039;text&#039; => &#039;‚¨ÖÔ∏è–ù–∞–∑–∞–¥&#039;, &#039;callback_data&#039; => &#039;admin_back_deleterecords_users&#039;], [&#039;text&#039; => &#039;‚§¥Ô∏è–í—ã–π—Ç–∏&#039;, &#039;callback_data&#039; => &#039;admin_exit_main&#039;]];
									
										$bot->api->answerCallbackQuery($callback_query_id);
								
										$bot->api->editMessageText([
										&#039;chat_id&#039; => $bot->api->body[&#039;callback_query&#039;][&#039;message&#039;][&#039;chat&#039;]["id"],
										&#039;message_id&#039; => $bot->api->body[&#039;callback_query&#039;][&#039;message&#039;][&#039;message_id&#039;],
										&#039;text&#039; => $text,
										&#039;parse_mode&#039; => "HTML",
										&#039;reply_markup&#039; => json_encode( [&#039;inline_keyboard&#039;=>$merge] ),
										]);
										
									}
									else
									{
										$text=&#039;–í—ã–±—Ä–∞–Ω–Ω–æ–µ –æ–±—ä—è–≤–ª–µ–Ω–∏–µ <b>‚Ññ'.$table[$u].'</b> –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è <b>'.$butuser.'</b> —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω–æ.&#039;.PHP_EOL.&#039;–í –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è <b>'.$butuser.'</b> –Ω–µ—Ç –æ–±—ä—è–≤–ª–µ–Ω–∏–π –¥–ª—è —Ä–∞–∑–º–µ—â–µ–Ω–∏—è –≤ –∫–∞–Ω–∞–ª–µ.&#039;.PHP_EOL.&#039;–í –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π <b>–Ω–µ—Ç –æ–±—ä—è–≤–ª–µ–Ω–∏–π</b> –¥–ª—è —Ä–∞–∑–º–µ—â–µ–Ω–∏—è –≤ –∫–∞–Ω–∞–ª–µ.&#039;.PHP_EOL.&#039;&#039;.PHP_EOL.&#039;–í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ –ø–æ–¥–º–µ–Ω—é <b>–£—Ç–≤–µ—Ä–∂–¥–µ–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏</b> –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞.&#039;.$bot->pre.&#039;&#039;;
									
										$bot->api->answerCallbackQuery($callback_query_id);
										$bot->api->sendMessage([
											&#039;text&#039; => $text,
											&#039;reply_markup&#039; => json_encode( [&#039;inline_keyboard&#039;=>$bot->keyboards[&#039;inline_admin_approvedusers&#039;]]),
											&#039;disable_notification&#039; => TRUE,
											&#039;disable_web_page_preview&#039; => TRUE,
											&#039;parse_mode&#039;=> "HTML"
										]);
										usleep(100000);
									}
								}
							}
							else
							{
								
								$merge=$bot->cmd_admin_deleterecordsapprovedusers();
								
								
								if (array_filter($merge) !== [])
								{
									
									$merge[] = [[&#039;text&#039; => &#039;‚¨ÖÔ∏è–ù–∞–∑–∞–¥&#039;, &#039;callback_data&#039; => &#039;admin_back_approvedusers&#039;], [&#039;text&#039; => &#039;‚§¥Ô∏è–í—ã–π—Ç–∏&#039;, &#039;callback_data&#039; => &#039;admin_exit_main&#039;]];
									
									$text=&#039;–í –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è <b>'.$butuser.'</b> –Ω–µ—Ç —Ç–æ–≤–∞—Ä–æ–≤ –¥–ª—è —Ä–∞–∑–º–µ—â–µ–Ω–∏—è –≤ –∫–∞–Ω–∞–ª–µ!&#039;.PHP_EOL.&#039;&#039;.PHP_EOL.&#039;–í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ –£–¥–∞–ª–∏—Ç—å –æ–±—ä—è–≤–ª–µ–Ω–∏—è –¥–ª—è —Ä–∞–∑–º–µ—â–µ–Ω–∏—è –≤ –∫–∞–Ω–∞–ª–µ —Ä–∞–∑–¥–µ–ª–∞ –£—Ç–≤–µ—Ä–∂–¥–µ–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–∏—Ä–∏—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, —É –∫–æ—Ç–æ—Ä–æ–≥–æ –í—ã —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å –æ–±—ä—è–≤–ª–µ–Ω–∏—è.&#039;.$bot->pre.&#039;&#039;;
									$bot->api->answerCallbackQuery($callback_query_id);
								
									$bot->api->editMessageText([
									&#039;chat_id&#039; => $bot->api->body[&#039;callback_query&#039;][&#039;message&#039;][&#039;chat&#039;]["id"],
									&#039;message_id&#039; => $bot->api->body[&#039;callback_query&#039;][&#039;message&#039;][&#039;message_id&#039;],
									&#039;text&#039; => $text,
									&#039;parse_mode&#039; => "HTML",
									&#039;reply_markup&#039; => json_encode( [&#039;inline_keyboard&#039;=>$merge] ),
									]);
								}
								else
								{
									$text=&#039;–í –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è <b>'.$butuser.'</b> –Ω–µ—Ç —Ç–æ–≤–∞—Ä–æ–≤ –¥–ª—è —Ä–∞–∑–º–µ—â–µ–Ω–∏—è –≤ –∫–∞–Ω–∞–ª–µ. –í –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π <b>–Ω–µ—Ç —Ç–æ–≤–∞—Ä–æ–≤</b> –¥–ª—è —Ä–∞–∑–º–µ—â–µ–Ω–∏—è –≤ –∫–∞–Ω–∞–ª–µ.&#039;.PHP_EOL.&#039; –í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ –º–µ–Ω—é —É—Ç–≤–µ—Ä–∂–¥–µ–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π.&#039;.$bot->pre.&#039;&#039;;
									
									$bot->api->answerCallbackQuery($callback_query_id);
									$bot->api->editMessageText([
									&#039;chat_id&#039; => $bot->api->body[&#039;callback_query&#039;][&#039;message&#039;][&#039;chat&#039;]["id"],
									&#039;message_id&#039; => $bot->api->body[&#039;callback_query&#039;][&#039;message&#039;][&#039;message_id&#039;],
									&#039;text&#039; => $text,
									&#039;parse_mode&#039; => "HTML",
									&#039;reply_markup&#039; => json_encode( [&#039;inline_keyboard&#039;=>$bot->keyboards[&#039;inline_admin_approvedusers&#039;]] ),
									]);
								}
							}
						}';
							
						file_put_contents($include, html_entity_decode($insert, ENT_QUOTES) . PHP_EOL . PHP_EOL,FILE_APPEND);
					}
				}
				}
				$u++;	
			}
				
			$merge[]=$put;
			unset($put);
			
		}
		
		$insert='}';
		file_put_contents($include, $insert,FILE_APPEND);
		
		return $merge;
			
				
	}
	
/////	
	public function callback_admin_back_deleterecords_users()
	{	
		$text='–í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –£—Ç–≤–µ—Ä–∂–¥–µ–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏.'.$this->pre.'';
		$this->callbackAnswer( $text, $this->keyboards['inline_admin_approvedusers']);
	}
	
	
	

///////////////////////////////////////////////////////////////////////////–£–¥–∞–ª–∏—Ç—å –∏–∑ –∫–∞–Ω–∞–ª–∞///////////////////////////////////////////////////////////////////////////
/////	
	public function callback_admin_deleterecordsapprovedusers_channel()
	{		
		$con_sql2=$this->cmd_sql();
		
		$tab='tabserviceapproved';
		
		
			/* $tabserviceadmin='tabserviceadmin';
			if(mysqli_query($con_sql2, 'SELECT 1 FROM '.$tabserviceadmin.' LIMIT 1'))
			{
				mysqli_query($con_sql2, 'DROP TABLE '.$tabserviceadmin.'');
				usleep(100000);
			} */
			
			$merge=$this->cmd_admin_deleterecordsapprovedusers_channel();
			usleep(100000);
			
			if (array_filter($merge) !== [])
			{
				
				$merge[] = [['text' => '‚¨ÖÔ∏è–ù–∞–∑–∞–¥', 'callback_data' => 'admin_back_approvedusers'], ['text' => '‚§¥Ô∏è–í—ã–π—Ç–∏', 'callback_data' => 'admin_exit_main']];
				$text='–í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ <b>–£–¥–∞–ª–∏—Ç—å –æ–±—ä—è–≤–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤ –∫–∞–Ω–∞–ª–µ</b>. –í—ã–±–µ—Ä–∏—Ç–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, —á—Ç–æ–±—ã —É–¥–∞–ª–∏—Ç—å –µ–≥–æ –æ–±—ä—è–≤–ª–µ–Ω–∏—è.'.$this->pre.'';
				
				$this->callbackAnswer( $text, $merge);
			}
			else
			{
				$text='–í –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π <b>–Ω–µ—Ç —Ç–æ–≤–∞—Ä–æ–≤</b>, —Ä–∞–∑–º–µ—â–µ–Ω–Ω—ã—Ö –≤ –∫–∞–Ω–∞–ª–µ.'.PHP_EOL.' –í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ –º–µ–Ω—é —É—Ç–≤–µ—Ä–∂–¥–µ–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π.'.$this->pre.'';
				
				$this->callbackAnswer( $text, $this->keyboards['inline_admin_approvedusers']);
				
				
			}
		
	}


/////
	public function cmd_admin_deleterecordsapprovedusers_channel()
	{
		$adminid=$this->chatidadmin;		
		$con_sql2=$this->cmd_sql();

		$tab='tabserviceapproved';
		
		
		$query1=mysqli_query($con_sql2, 'SELECT DISTINCT chatid FROM '.$tab.'');
		usleep(100000);
		$con1=mysqli_num_rows($query1);
		
		$table=[];
		
		for($i=0;$i<$con1;$i++)
		{
			mysqli_data_seek($query1, $i);
			$row1[$i]=mysqli_fetch_row($query1);
			$table[]=$row1[$i][0];	
		}
		usleep(100000);
		
		$cnt=count($table);
		$maxbuttons=1;
		$ceil=ceil($cnt/$maxbuttons);
		
		
		
		$include=''.dirname(__FILE__).'/include'.$this->api->chatId.'.php';
		
		if(file_exists($include)==FALSE)
		{
			touch($include);
			
			$insert='<?php
		
		
			class TelegramBotfunc{';
			file_put_contents($include, $insert . PHP_EOL,FILE_APPEND);
			
		}
		else
		{
			$getinclude=file($include);
			unset($getinclude[array_key_last($getinclude)]);
			file_put_contents($include, $getinclude);
		}
		
		$u=0;
		$merge=[];
		
		for($i1=0;$i1<$ceil;$i1++)
		{
			$put=[];
			for($i2=0;$i2<$maxbuttons;$i2++)
			{	
				$tabmain='tabmain'.$table[$u].'';
				if(mysqli_query($con_sql2, 'SELECT 1 FROM '.$tabmain.' LIMIT 1'))
				{	
					if(mysqli_num_rows(mysqli_query($con_sql2, 'SELECT 1 FROM '.$tabmain.' WHERE messid!="0" LIMIT 1'))!=0)
					{
						
						$buttext='üë§'.$this->cmd_user_get_fiophone($table[$u]).'';
						$put[]=["text" => "$buttext", "callback_data" => "admin_deleterecordsapproveduser_channel_$table[$u]"];
						
						if(preg_match('/callback_admin_deleterecordsapproveduser_channel_'.$table[$u].'/', file_get_contents($include))==FALSE)
						{
							$insert='
							public function callback_admin_deleterecordsapproveduser_channel_'.$table[$u].'()
							{	
								$bot = new TestBot;
								$bot->api->getWebhookUpdate();
								$callback_query_id=$bot->api->body[&#039;callback_query&#039;]["id"];
								
								$con_sql2=$bot->cmd_sql();
								$tab=&#039;tabserviceapproved&#039;;
								//$tabmain=&#039;tabmain&#039;.$bot->api->chatId.&#039;&#039;;
								
								$query1=mysqli_query($con_sql2, &#039;SELECT 1 FROM &#039;.$tab.&#039; WHERE messid!="0" LIMIT 1&#039;);
								usleep(100000);
								$con1=mysqli_num_rows($query1);

								$text=&#039;–î–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã —É–¥–∞–ª–∏—Ç—å –æ–±—ä—è–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è <b>'.$buttext.'</b> –≤ –∫–∞–Ω–∞–ª–µ, –í–∞–º –Ω—É–∂–Ω–æ –Ω–∞–∂–∞—Ç—å –Ω–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â—É—é –∫–Ω–æ–ø–∫—É.&#039;.$bot->pre.&#039;&#039;;
			
								$merge=$bot->cmd_admin_deleterecordsapprovedusers_channel_records('.$table[$u].');
								
								usleep(100000);
								if (array_filter($merge) !== [])
								{
									$merge[] = [[&#039;text&#039; => &#039;‚¨ÖÔ∏è–ù–∞–∑–∞–¥&#039;, &#039;callback_data&#039; => &#039;admin_back_approvedusers&#039;], [&#039;text&#039; => &#039;‚§¥Ô∏è–í—ã–π—Ç–∏&#039;, &#039;callback_data&#039; => &#039;admin_exit_main&#039;]];
									
									$bot->api->answerCallbackQuery($callback_query_id);
									$bot->api->editMessageText([
									&#039;chat_id&#039; => $bot->api->body[&#039;callback_query&#039;][&#039;message&#039;][&#039;chat&#039;]["id"],
									&#039;message_id&#039; => $bot->api->body[&#039;callback_query&#039;][&#039;message&#039;][&#039;message_id&#039;],
									&#039;text&#039; => $text,
									&#039;parse_mode&#039; => "HTML",
									&#039;reply_markup&#039; => json_encode( [&#039;inline_keyboard&#039;=>$merge] ),
									]);
									usleep(100000);
								}
								else
								{
									$text=&#039;–í –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è <b>'.$buttext.'</b> –Ω–µ—Ç —Ç–æ–≤–∞—Ä–æ–≤, —Ä–∞–∑–º–µ—â–µ–Ω–Ω—ã—Ö –≤ –∫–∞–Ω–∞–ª–µ.&#039;.PHP_EOL.&#039; –í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ –ø–æ–¥–º–µ–Ω—é –£–¥–∞–ª–∏—Ç—å —Ç–æ–≤–∞—Ä—ã –∏–∑ –∫–∞–Ω–∞–ª–∞ –º–µ–Ω—é –£—Ç–≤–µ—Ä–∂–¥–µ–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–∏—Ä–∏—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, —á—Ç–æ–±—ã —É–¥–∞–ª–∏—Ç—å –µ–≥–æ —Ç–æ–≤–∞—Ä—ã –≤ –∫–∞–Ω–∞–ª–µ.&#039;.$bot->pre.&#039;&#039;;
									
									$merge=$bot->cmd_admin_deleterecordsapprovedusers_channel();
									usleep(100000);
									
									if (array_filter($merge) !== [])
									{
										$merge[] = [[&#039;text&#039; => &#039;‚¨ÖÔ∏è–ù–∞–∑–∞–¥&#039;, &#039;callback_data&#039; => &#039;admin_back_approvedusers&#039;], [&#039;text&#039; => &#039;‚§¥Ô∏è–í—ã–π—Ç–∏&#039;, &#039;callback_data&#039; => &#039;admin_exit_main&#039;]];
										
										$bot->api->answerCallbackQuery($callback_query_id);
										$bot->api->editMessageText([
										&#039;chat_id&#039; => $bot->api->body[&#039;callback_query&#039;][&#039;message&#039;][&#039;chat&#039;]["id"],
										&#039;message_id&#039; => $bot->api->body[&#039;callback_query&#039;][&#039;message&#039;][&#039;message_id&#039;],
										&#039;text&#039; => $text,
										&#039;parse_mode&#039; => "HTML",
										&#039;reply_markup&#039; => json_encode( [&#039;inline_keyboard&#039;=>$merge] ),
										]);
									}
									else
									{
										$text=&#039;–í –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è <b>'.$buttext.'</b> –Ω–µ—Ç —Ç–æ–≤–∞—Ä–æ–≤, —Ä–∞–∑–º–µ—â–µ–Ω–Ω—ã—Ö –≤ –∫–∞–Ω–∞–ª–µ. –í –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –Ω–µ—Ç —Ç–æ–≤–∞—Ä–æ–≤, —Ä–∞–∑–º–µ—â–µ–Ω–Ω—ã—Ö –≤ –∫–∞–Ω–∞–ª–µ.&#039;.PHP_EOL.&#039; –í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ –º–µ–Ω—é —É—Ç–≤–µ—Ä–∂–¥–µ–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π.&#039;.$bot->pre.&#039;&#039;;
										
										$bot->api->answerCallbackQuery($callback_query_id);
										$bot->api->editMessageText([
										&#039;chat_id&#039; => $bot->api->body[&#039;callback_query&#039;][&#039;message&#039;][&#039;chat&#039;]["id"],
										&#039;message_id&#039; => $bot->api->body[&#039;callback_query&#039;][&#039;message&#039;][&#039;message_id&#039;],
										&#039;text&#039; => $text,
										&#039;parse_mode&#039; => "HTML",
										&#039;reply_markup&#039; => json_encode( [&#039;inline_keyboard&#039;=>$bot->keyboards[&#039;inline_admin_approvedusers&#039;]] ),
										]);
									}
								}
								
								
							}';
								
							file_put_contents($include, html_entity_decode($insert, ENT_QUOTES) . PHP_EOL . PHP_EOL,FILE_APPEND);
						}
					}
				}
				$u++;	
			}
				
			$merge[]=$put;
			unset($put);
			
		}
		
		$insert='}';
		file_put_contents($include, $insert,FILE_APPEND);
		
		return $merge;
				
		

	}




/////
	public function cmd_admin_deleterecordsapprovedusers_channel_records($input)
	{
		$adminid=$this->chatidadmin;		
		$con_sql2=$this->cmd_sql();
		
		$tab='tabserviceapproved';
		$tabmain='tabmain'.$input.'';
			
			
		$query1=mysqli_query($con_sql2, 'SELECT DISTINCT messid FROM '.$tabmain.' WHERE messid!="0"');
		usleep(100000);
		$con1=mysqli_num_rows($query1);
		
		$table=[];
		
		for($i=0;$i<$con1;$i++)
		{
			mysqli_data_seek($query1, $i);
			$row1[$i]=mysqli_fetch_row($query1);
			$table[]=$row1[$i][0];	
		}
		usleep(100000);
		
		$cnt=count($table);
		$maxbuttons=1;
		$ceil=ceil($cnt/$maxbuttons);
		
		
		
		$include=''.dirname(__FILE__).'/include'.$this->api->chatId.'.php';
		
		if(file_exists($include)==FALSE)
		{
			touch($include);
			
			$insert='<?php
		
		
			class TelegramBotfunc{';
			file_put_contents($include, $insert . PHP_EOL,FILE_APPEND);
			
		}
		else
		{
			$getinclude=file($include);
			unset($getinclude[array_key_last($getinclude)]);
			file_put_contents($include, $getinclude);
		}
		
		$u=0;
		$merge=[];
		
		for($i1=0;$i1<$ceil;$i1++)
		{
			$put=[];
			for($i2=0;$i2<$maxbuttons;$i2++)
			{	
				//$tabmain='tabmain'.$input.'';
				//if(mysqli_query($con_sql2, 'SELECT 1 FROM '.$tabmain.' LIMIT 1'))
				if(isset($table[$u]))
				{	
				if(mysqli_num_rows(mysqli_query($con_sql2, 'SELECT 1 FROM '.$tabmain.' WHERE messid!="0" LIMIT 1'))!=0)
				{
					$buttext='‚Ññ'.$table[$u].'';
					$butuser='üë§'.$this->cmd_user_get_fiophone($input).'';
					
					$put[]=["text" => ''.$buttext.'', "callback_data" => 'admin_channel_user'.$input.'_record'.$table[$u].''];
					
					if(preg_match('/callback_admin_channel_user'.$input.'_record'.$table[$u].'/', file_get_contents($include))==FALSE)
					{
						$insert='
						public function callback_admin_channel_user'.$input.'_record'.$table[$u].'()
						{	
							$bot = new TestBot;
							$bot->api->getWebhookUpdate();
							$callback_query_id=$bot->api->body[&#039;callback_query&#039;]["id"];
							
							$con_sql2=$bot->cmd_sql();
							$tabmain=&#039;tabmain'.$input.'&#039;;
							
							
							$query1=mysqli_query($con_sql2, &#039;SELECT DISTINCT messid FROM &#039;.$tabmain.&#039; WHERE messid!="0"&#039;);
							usleep(100000);
							$con1=mysqli_num_rows($query1);
				
							if($con1!=0)
							{
								
								$query=mysqli_query($con_sql2, &#039;SELECT * FROM &#039;.$tabmain.&#039; WHERE messid="'.$table[$u].'"&#039;);
								usleep(100000);
								$con=mysqli_num_rows($query);
									
								for($i=0;$i<$con;$i++)
								{
									mysqli_data_seek($query, $i);
									$row[$i]=mysqli_fetch_row($query);
								}
								
								$photo=$row[0][8];
								$messageid=$row[0][11];
								$timeold=$row[0][10];
								$timediff=time()-$timeold;
								
								if(preg_match(&#039;/;/&#039;, $photo)==FALSE)
								{
									if($timediff>172000)
									{
										$text=&#039;<b><i>–¢–æ–≤–∞—Ä —É–¥–∞–ª–µ–Ω</i></b>&#039;.PHP_EOL.&#039;‚õîÔ∏è‚õîÔ∏è‚õîÔ∏è‚õîÔ∏è‚õîÔ∏è‚õîÔ∏è‚õîÔ∏è‚õîÔ∏è‚õîÔ∏è‚õîÔ∏è‚õîÔ∏è‚õîÔ∏è‚õîÔ∏è‚õîÔ∏è‚õîÔ∏è‚õîÔ∏è‚õîÔ∏è‚õîÔ∏è‚õîÔ∏è‚õîÔ∏è&#039;;
									
										$photodelete=&#039;https://domain.com/photodelete.png&#039;;
										
										$bot->api->editMessageMedia([
										&#039;chat_id&#039; => $bot->mainchannel,
										&#039;message_id&#039; => $messageid,
										&#039;media&#039; => json_encode( [&#039;type&#039; => &#039;photo&#039;, &#039;media&#039; => $photodelete]),
										]);
									
										$bot->api->editMessageCaption([
										&#039;chat_id&#039; => $bot->mainchannel,
										&#039;message_id&#039; => $messageid,
										&#039;caption&#039; => $text,
										&#039;parse_mode&#039; => "HTML",
										]);
										
										
										$photo=str_replace(&#039;https://domain.com&#039;, &#039;&#039;.dirname(__FILE__).&#039;&#039;, $photo);
										unlink($photo);
										usleep(100000);
									}
									else
									{
										$bot->api->deleteMessage([
										&#039;chat_id&#039; => $bot->mainchannel,
										&#039;message_id&#039; => $messageid
										]);
										
										$photo=str_replace(&#039;https://domain.com&#039;, &#039;&#039;.dirname(__FILE__).&#039;&#039;, $photo);
										unlink($photo);
										usleep(100000);
									}
								}
								else
								{
									
									$tabservicerecords=&#039;tabservicerecords&#039;;
									$text=&#039;<b><i>–¢–æ–≤–∞—Ä —É–¥–∞–ª–µ–Ω</i></b>&#039;.PHP_EOL.&#039;‚õîÔ∏è‚õîÔ∏è‚õîÔ∏è‚õîÔ∏è‚õîÔ∏è‚õîÔ∏è‚õîÔ∏è‚õîÔ∏è‚õîÔ∏è‚õîÔ∏è‚õîÔ∏è‚õîÔ∏è‚õîÔ∏è‚õîÔ∏è‚õîÔ∏è‚õîÔ∏è‚õîÔ∏è‚õîÔ∏è‚õîÔ∏è‚õîÔ∏è&#039;;
									$photodelete=&#039;https://domain.com/photodelete.png&#039;;
									
									if($timediff>172000)
									{
		
										$bot->api->editMessageCaption([
										&#039;chat_id&#039; => $bot->mainchannel,
										&#039;message_id&#039; => $messageid,
										&#039;caption&#039; => $text,
										&#039;parse_mode&#039; => "HTML",
										]);
										
										
										$query2=mysqli_query($con_sql2, &#039;SELECT * FROM &#039;.$tabservicerecords.&#039; WHERE record="&#039;.$messageid.&#039;"&#039;);
										$con2=mysqli_num_rows($query2);
					
										for($i2=0;$i2<$con2;$i2++)
										{
											mysqli_data_seek($query2, $i2);
											$row2[$i2]=mysqli_fetch_row($query2);
										}
										
										$messageids=explode(&#039;;&#039;, $row2[0][2]);
										$count1=count($messageids);
										
										for($e=0;$e<$count1;$e++)
										{
											if($e==0)
											{
												$bot->api->editMessageMedia([
												&#039;chat_id&#039; => $bot->mainchannel,
												&#039;message_id&#039; => $messageids[$e],
												&#039;media&#039; => json_encode( [&#039;type&#039; => &#039;photo&#039;, &#039;media&#039; => $photodelete, &#039;caption&#039; => $text, &#039;parse_mode&#039; => "HTML" ]),
												]);

											}
											else
											{
												$bot->api->editMessageMedia([
												&#039;chat_id&#039; => $bot->mainchannel,
												&#039;message_id&#039; => $messageids[$e],
												&#039;media&#039; => json_encode( [&#039;type&#039; => &#039;photo&#039;, &#039;media&#039; => $photodelete]),
												]);
											}
										}
										
										$photos=explode(&#039;;&#039;, $photo);
										$cnt=count($photos);
										
										for($y=0;$y<$cnt;$y++)
										{
											$photos[$y]=str_replace(&#039;https://domain.com&#039;, &#039;&#039;.dirname(__FILE__).&#039;&#039;, $photos[$y]);
											unlink($photos[$y]);
											usleep(100000);
										}
									}
									else
									{
										
										$query2=mysqli_query($con_sql2, &#039;SELECT * FROM &#039;.$tabservicerecords.&#039; WHERE record="&#039;.$messageid.&#039;"&#039;);
										$con2=mysqli_num_rows($query2);
					
										for($i2=0;$i2<$con2;$i2++)
										{
											mysqli_data_seek($query2, $i2);
											$row2[$i2]=mysqli_fetch_row($query2);
										}
										
										$messageids=explode(&#039;;&#039;, $row2[0][2]);
										$count1=count($messageids);
										
										for($e=0;$e<$count1;$e++)
										{
											$bot->api->deleteMessage([
											&#039;chat_id&#039; => $bot->mainchannel,
											&#039;message_id&#039; => $messageids[$e]
											]);
											usleep(100000);
										}
										
										$photos=explode(&#039;;&#039;, $photo);
										$cnt=count($photos);
										
										for($y=0;$y<$cnt;$y++)
										{
											$photos[$y]=str_replace(&#039;https://domain.com&#039;, &#039;&#039;.dirname(__FILE__).&#039;&#039;, $photos[$y]);
											unlink($photos[$y]);
											usleep(100000);
										}
										
									}
									
									mysqli_query($con_sql2, &#039;DELETE FROM &#039;.$tabservicerecords.&#039; WHERE record="&#039;.$messageid.&#039;"&#039;);
									
								}
								
								$query=mysqli_query($con_sql2, &#039;DELETE FROM &#039;.$tabmain.&#039; WHERE messid="'.$table[$u].'"&#039;);
								usleep(100000);
								
								$query4=mysqli_query($con_sql2, &#039;SHOW TABLES LIKE "tabservicebuy%"&#039;);
								$con4=mysqli_num_rows($query4);
								
								if($con4!=0)
								{
								
									for($i4=0;$i4<$con4;$i4++)
									{
										mysqli_data_seek($query4, $i4);
										$row4[$i4]=mysqli_fetch_row($query4);
										
										if(mysqli_num_rows(mysqli_query($con_sql2, &#039;SELECT 1 FROM &#039;.$row4[$i4][0].&#039; WHERE messid="'.$table[$u].'"&#039;))!=0)
										{
											
												mysqli_query($con_sql2, &#039;DELETE FROM &#039;.$row4[$i4][0].&#039; WHERE messid="'.$table[$u].'"&#039;);
												usleep(100000);
												
												$chatidbuyers=str_replace(&#039;tabservicebuy&#039;, &#039;&#039;, $row4[$i4][0]);
												$chatidbuyers=$bot->clean($chatidbuyers);
												
												$text3=&#039;–í–∞—à–∞ –∑–∞—è–≤–∫–∞ –Ω–∞ –ø–æ–∫—É–ø–∫—É —Ç–æ–≤–∞—Ä–∞ —Å ID <b>‚Ññ'.$table[$u].'</b> –±—ã–ª–∞ <b>–æ—Ç–º–µ–Ω–µ–Ω–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º</b>.&#039;.PHP_EOL.&#039;&#039;.PHP_EOL.&#039;–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –¥–∞–Ω–Ω–æ–≥–æ —Ç–æ–≤–∞—Ä–∞ –Ω–µ—Ç –≤ –Ω–∞–ª–∏—á–∏–∏. –ò–∑–≤–∏–Ω–∏—Ç–µ –∑–∞ –Ω–µ—É–¥–æ–±—Å—Ç–≤–∞.&#039;.$bot->pre.&#039;&#039;;
												
												$bot->api->sendMessage([
												&#039;chat_id&#039; => $chatidbuyers,
												&#039;text&#039; => $text3,
												&#039;reply_markup&#039; => json_encode( [&#039;inline_keyboard&#039;=>$bot->keyboards[&#039;inline_buy_default&#039;]]),
												&#039;parse_mode&#039; => "HTML",
												]);
												usleep(100000);
												
										}
										
									}
								}
								
								$text2=&#039;–í–∞—à —Ç–æ–≤–∞—Ä —Å ID <b>‚Ññ'.$table[$u].'</b> –±—ã–ª <b>—É–¥–∞–ª–µ–Ω –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º –∏–∑ –∫–∞–Ω–∞–ª–∞</b>. –ü—Ä–∏–Ω–æ—Å–∏–º –∏–∑–≤–∏–Ω–µ–Ω–∏—è –∑–∞ –Ω–µ—É–¥–æ–±—Å—Ç–≤–∞.&#039;.$bot->pre.&#039;&#039;;

								$bot->api->sendMessage([
									&#039;chat_id&#039; => '.$input.',
									&#039;text&#039; => $text2,
									&#039;reply_markup&#039; => json_encode( [&#039;inline_keyboard&#039;=>$bot->keyboards[&#039;inline_default&#039;]]),
									&#039;parse_mode&#039; => "HTML",
									]);
								usleep(100000);
								
								$text=&#039;–í—ã–±—Ä–∞–Ω–Ω—ã–π ID —Ç–æ–≤–∞—Ä–∞ <b>‚Ññ'.$table[$u].'</b> –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è <b>'.$butuser.'</b> —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω –∏–∑ –∫–∞–Ω–∞–ª–∞.&#039;.PHP_EOL.&#039;–í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ –£–¥–∞–ª–∏—Ç—å —Ç–æ–≤–∞—Ä—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è <b>'.$butuser.'</b> –∏–∑ –∫–∞–Ω–∞–ª–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–∏—Ä–∏—Ç–µ ID —Ç–æ–≤–∞—Ä–∞, —á—Ç–æ–±—ã —É–¥–∞–ª–∏—Ç—å –µ–≥–æ –∏–∑ –∫–∞–Ω–∞–ª–∞.&#039;.$bot->pre.&#039;&#039;;
								
				
								$merge=$bot->cmd_admin_deleterecordsapprovedusers_channel_records('.$input.');
								usleep(100000);
								
								if (array_filter($merge) !== [])
								{
								
									$merge[] = [[&#039;text&#039; => &#039;‚¨ÖÔ∏è–ù–∞–∑–∞–¥&#039;, &#039;callback_data&#039; => &#039;admin_back_deleterecords_users&#039;], [&#039;text&#039; => &#039;‚§¥Ô∏è–í—ã–π—Ç–∏&#039;, &#039;callback_data&#039; => &#039;admin_exit_main&#039;]];
									
									$bot->api->answerCallbackQuery($callback_query_id);
									$bot->api->editMessageText([
									&#039;chat_id&#039; => $bot->api->body[&#039;callback_query&#039;][&#039;message&#039;][&#039;chat&#039;]["id"],
									&#039;message_id&#039; => $bot->api->body[&#039;callback_query&#039;][&#039;message&#039;][&#039;message_id&#039;],
									&#039;text&#039; => $text,
									&#039;parse_mode&#039; => "HTML",
									&#039;reply_markup&#039; => json_encode( [&#039;inline_keyboard&#039;=>$merge] ),
									]);
									usleep(100000);
								}
								else
								{
									$text=&#039;–í—ã–±—Ä–∞–Ω–Ω—ã–π ID —Ç–æ–≤–∞—Ä–∞ <b>‚Ññ'.$table[$u].'</b> –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è <b>'.$butuser.'</b> —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω –∏–∑ –∫–∞–Ω–∞–ª–∞.&#039;.PHP_EOL.&#039;–í –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è <b>'.$butuser.'</b> –Ω–µ—Ç —Ç–æ–≤–∞—Ä–æ–≤, —Ä–∞–∑–º–µ—â–µ–Ω–Ω—ã—Ö –≤ –∫–∞–Ω–∞–ª–µ.&#039;.PHP_EOL.&#039; –í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ –º–µ–Ω—é —É—Ç–≤–µ—Ä–∂–¥–µ–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π.&#039;.$bot->pre.&#039;&#039;;
									$merge=$bot->cmd_admin_deleterecordsapprovedusers_channel();
									
									if (array_filter($merge) !== [])
									{
									
										$merge[] = [[&#039;text&#039; => &#039;‚¨ÖÔ∏è–ù–∞–∑–∞–¥&#039;, &#039;callback_data&#039; => &#039;admin_back_deleterecords_users&#039;], [&#039;text&#039; => &#039;‚§¥Ô∏è–í—ã–π—Ç–∏&#039;, &#039;callback_data&#039; => &#039;admin_exit_main&#039;]];
									
										$bot->api->answerCallbackQuery($callback_query_id);
								
										$bot->api->editMessageText([
										&#039;chat_id&#039; => $bot->api->body[&#039;callback_query&#039;][&#039;message&#039;][&#039;chat&#039;]["id"],
										&#039;message_id&#039; => $bot->api->body[&#039;callback_query&#039;][&#039;message&#039;][&#039;message_id&#039;],
										&#039;text&#039; => $text,
										&#039;parse_mode&#039; => "HTML",
										&#039;reply_markup&#039; => json_encode( [&#039;inline_keyboard&#039;=>$merge] ),
										]);
										
									}
									else
									{
										$text=&#039;–í—ã–±—Ä–∞–Ω–Ω—ã–π ID —Ç–æ–≤–∞—Ä–∞ <b>‚Ññ'.$table[$u].'</b> –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è <b>'.$butuser.'</b> —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω –∏–∑ –∫–∞–Ω–∞–ª–∞.&#039;.PHP_EOL.&#039;–í –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è <b>'.$butuser.'</b> –Ω–µ—Ç —Ç–æ–≤–∞—Ä–æ–≤, —Ä–∞–∑–º–µ—â–µ–Ω–Ω—ã—Ö –≤ –∫–∞–Ω–∞–ª–µ.&#039;.PHP_EOL.&#039;–í –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç <b>–Ω–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π,</b> —É –∫–æ—Ç–æ—Ä—ã—Ö —Ä–∞–∑–º–µ—â–µ–Ω—ã —Ç–æ–≤–∞—Ä—ã –≤ –∫–∞–Ω–∞–ª–µ!&#039;.PHP_EOL.&#039;&#039;.PHP_EOL.&#039;–í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ –ø–æ–¥–º–µ–Ω—é <b>–£—Ç–≤–µ—Ä–∂–¥–µ–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏</b> –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞.&#039;.$bot->pre.&#039;&#039;;
									
										$bot->api->answerCallbackQuery($callback_query_id);
										$bot->api->sendMessage([
											&#039;text&#039; => $text,
											&#039;reply_markup&#039; => json_encode( [&#039;inline_keyboard&#039;=>$bot->keyboards[&#039;inline_admin_approvedusers&#039;]]),
											&#039;disable_notification&#039; => TRUE,
											&#039;disable_web_page_preview&#039; => TRUE,
											&#039;parse_mode&#039;=> "HTML"
										]);
										usleep(100000);
									}
								}
							}
							else
							{
								
								$merge=$bot->cmd_admin_deleterecordsapprovedusers_channel();
								
								
								if (array_filter($merge) !== [])
								{
									
									$merge[] = [[&#039;text&#039; => &#039;‚¨ÖÔ∏è–ù–∞–∑–∞–¥&#039;, &#039;callback_data&#039; => &#039;admin_back_approvedusers&#039;], [&#039;text&#039; => &#039;‚§¥Ô∏è–í—ã–π—Ç–∏&#039;, &#039;callback_data&#039; => &#039;admin_exit_main&#039;]];
									
									$text=&#039;–í—ã–±—Ä–∞–Ω–Ω—ã–π ID —Ç–æ–≤–∞—Ä–∞ <b>‚Ññ'.$table[$u].'</b> –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è <b>'.$butuser.'</b> —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω –∏–∑ –∫–∞–Ω–∞–ª–∞.&#039;.PHP_EOL.&#039;–í –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è <b>'.$butuser.'</b> –Ω–µ—Ç —Ç–æ–≤–∞—Ä–æ–≤, —Ä–∞–∑–º–µ—â–µ–Ω–Ω—ã—Ö –≤ –∫–∞–Ω–∞–ª–µ!&#039;.PHP_EOL.&#039;&#039;.PHP_EOL.&#039;–í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ —É–¥–∞–ª–µ–Ω–∏—è –æ–±—ä—è–≤–ª–µ–Ω–∏–π —É—Ç–≤–µ—Ä–∂–¥–µ–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–∏—Ä–∏—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, —É –∫–æ—Ç–æ—Ä–æ–≥–æ –í—ã —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å —Ç–æ–≤–∞—Ä—ã –∏–∑ –∫–∞–Ω–∞–ª–∞.&#039;.$bot->pre.&#039;&#039;;
									$bot->api->answerCallbackQuery($callback_query_id);
								
									$bot->api->editMessageText([
									&#039;chat_id&#039; => $bot->api->body[&#039;callback_query&#039;][&#039;message&#039;][&#039;chat&#039;]["id"],
									&#039;message_id&#039; => $bot->api->body[&#039;callback_query&#039;][&#039;message&#039;][&#039;message_id&#039;],
									&#039;text&#039; => $text,
									&#039;parse_mode&#039; => "HTML",
									&#039;reply_markup&#039; => json_encode( [&#039;inline_keyboard&#039;=>$merge] ),
									]);
								}
								else
								{
									$text=&#039;–í—ã–±—Ä–∞–Ω–Ω—ã–π ID —Ç–æ–≤–∞—Ä–∞ <b>‚Ññ'.$table[$u].'</b> –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è <b>'.$butuser.'</b> —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω –∏–∑ –∫–∞–Ω–∞–ª–∞.&#039;.PHP_EOL.&#039;–í –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è <b>'.$butuser.'</b> –Ω–µ—Ç —Ç–æ–≤–∞—Ä–æ–≤, —Ä–∞–∑–º–µ—â–µ–Ω–Ω—ã—Ö –≤ –∫–∞–Ω–∞–ª–µ. –í –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –Ω–µ—Ç —Ç–æ–≤–∞—Ä–æ–≤, —Ä–∞–∑–º–µ—â–µ–Ω–Ω—ã—Ö –≤ –∫–∞–Ω–∞–ª–µ.&#039;.PHP_EOL.&#039; –í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ –º–µ–Ω—é —É—Ç–≤–µ—Ä–∂–¥–µ–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π.&#039;.$bot->pre.&#039;&#039;;
									
									$bot->api->answerCallbackQuery($callback_query_id);
									$bot->api->editMessageText([
									&#039;chat_id&#039; => $bot->api->body[&#039;callback_query&#039;][&#039;message&#039;][&#039;chat&#039;]["id"],
									&#039;message_id&#039; => $bot->api->body[&#039;callback_query&#039;][&#039;message&#039;][&#039;message_id&#039;],
									&#039;text&#039; => $text,
									&#039;parse_mode&#039; => "HTML",
									&#039;reply_markup&#039; => json_encode( [&#039;inline_keyboard&#039;=>$bot->keyboards[&#039;inline_admin_approvedusers&#039;]] ),
									]);
								}
							}
						}';
							
						file_put_contents($include, html_entity_decode($insert, ENT_QUOTES) . PHP_EOL . PHP_EOL,FILE_APPEND);
					}
				}
				}
				$u++;	
			}
				
			$merge[]=$put;
			unset($put);
			
		}
		
		$insert='}';
		file_put_contents($include, $insert,FILE_APPEND);
		
		return $merge;
			
				
	}
	
	



///////////////////////////////////////////////////////–†–∞–∑–º–µ—Å—Ç–∏—Ç—å –≤ –∫–∞–Ω–∞–ª–µ//////////////////////////////////////////////////////////
/////	
	public function callback_admin_sendchannelapprovedusers()
	{		
		$con_sql2=$this->cmd_sql();
		
		$tab='tabserviceapproved';
		

			$merge=$this->cmd_admin_sendchannelapprovedusers();
			usleep(100000);
			
			if (array_filter($merge) !== [])
			{
				
				$merge[] = [['text' => '‚¨ÖÔ∏è–ù–∞–∑–∞–¥', 'callback_data' => 'admin_back_approvedusers'], ['text' => '‚§¥Ô∏è–í—ã–π—Ç–∏', 'callback_data' => 'admin_exit_main']];
				$text='–í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ <b>–†–∞–∑–º–µ—Å—Ç–∏—Ç—å –≤ –∫–∞–Ω–∞–ª–µ</b>. –í—ã–±–µ—Ä–∏—Ç–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, —á—Ç–æ–±—ã —Ä–∞–∑–º–µ—Å—Ç–∏—Ç—å –≤ –∫–∞–Ω–∞–ª–µ –µ–≥–æ –æ–±—ä—è–≤–ª–µ–Ω–∏—è.'.$this->pre.'';
				
				$this->callbackAnswer( $text, $merge);
			}
			else
			{
				$text='–í –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π <b>–Ω–µ—Ç –∑–∞–ø—Ä–æ—Å–æ–≤</b> –Ω–∞ –æ—Ç–ø—Ä–∞–≤–∫—É –æ–±—ä—è–≤–ª–µ–Ω–∏–π –≤ –∫–∞–Ω–∞–ª.'.PHP_EOL.' –í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ –º–µ–Ω—é —É—Ç–≤–µ—Ä–∂–¥–µ–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π.'.$this->pre.'';
				
				$this->callbackAnswer( $text, $this->keyboards['inline_admin_approvedusers']);
				
				
			}
		
	}


/////
	public function cmd_admin_sendchannelapprovedusers()
	{
		$adminid=$this->chatidadmin;		
		$con_sql2=$this->cmd_sql();

		$query1=mysqli_query($con_sql2, 'SHOW TABLES LIKE "tabserviceask%"');
		$con1=mysqli_num_rows($query1);
		
		$table=[];
		
		for($i=0;$i<$con1;$i++)
		{
			mysqli_data_seek($query1, $i);
			$row1[$i]=mysqli_fetch_row($query1);
			$table[]=$row1[$i][0];	
		}
		
		$puttemp=[];
		
		for($i=0;$i<$con1;$i++)
		{
			$tab=$table[$i];
		
			//if(mysqli_num_rows(mysqli_query($con_sql2, 'SELECT 1 FROM '.$tab.' WHERE messid="0" AND pic!="0" LIMIT 1'))!=0)
			if(mysqli_num_rows(mysqli_query($con_sql2, 'SELECT 1 FROM '.$tab.' WHERE id LIKE "%"'))!=0)
			{
				$user=str_replace("tabserviceask", "", $tab);
				
				if(in_array($user, $puttemp)==FALSE)
				{
					$puttemp[]=$user;
				}
			}
		}
		
		$cnt=count($puttemp);
		$maxbuttons=1;
		$ceil=ceil($cnt/$maxbuttons);
		
		$include=''.dirname(__FILE__).'/include'.$this->api->chatId.'.php';
		
		if(file_exists($include)==FALSE)
		{
			touch($include);
			
			$insert='<?php
		
		
			class TelegramBotfunc{';
			file_put_contents($include, $insert . PHP_EOL,FILE_APPEND);
			
		}
		else
		{
			$getinclude=file($include);
			unset($getinclude[array_key_last($getinclude)]);
			file_put_contents($include, $getinclude);
		}
		
		$u=0;
		$merge=[];
		
		for($i1=0;$i1<$ceil;$i1++)
		{
			$put=[];
			for($i2=0;$i2<$maxbuttons;$i2++)
			{	
				$tabserviceask='tabserviceask'.$puttemp[$u].'';
				
				if(mysqli_query($con_sql2, 'SELECT 1 FROM '.$tabserviceask.' LIMIT 1'))
				{
				if(mysqli_num_rows(mysqli_query($con_sql2, 'SELECT 1 FROM '.$tabserviceask.' WHERE id LIKE "%"'))!=0)
				{
					
					//$buttext='üë§'.$puttemp[$u].'';
					$buttext='üë§'.$this->cmd_user_get_fiophone($puttemp[$u]).'';
					
					$put[]=["text" => ''.$buttext.'', "callback_data" => 'admin_sendchannelapprovedusers_user'.$puttemp[$u].''];
					
					$user=str_replace("tabmain", "", $tabmain);
					
					if(preg_match('/callback_admin_sendchannelapprovedusers_user'.$puttemp[$u].'/', file_get_contents($include))==FALSE)
					{
						$insert='
						public function callback_admin_sendchannelapprovedusers_user'.$puttemp[$u].'()
						{	
							$bot = new TestBot;
							$bot->api->getWebhookUpdate();
							
							$con_sql2=$bot->cmd_sql();
							
							$text=&#039;–î–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –æ–±—ä—è–≤–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è <b>'.$buttext.'</b> –≤ –∫–∞–Ω–∞–ª, –í–∞–º –Ω—É–∂–Ω–æ –Ω–∞–∂–∞—Ç—å –Ω–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â—É—é –∫–Ω–æ–ø–∫—É –æ–±—ä—è–≤–ª–µ–Ω–∏—è.&#039;.$bot->pre.&#039;&#039;;
				
							$merge=$bot->cmd_admin_sendchannelapprovedusers_records('.$puttemp[$u].');
							
							usleep(100000);
							if (array_filter($merge) !== [])
							{
								$merge[] = [[&#039;text&#039; => &#039;‚¨ÖÔ∏è–ù–∞–∑–∞–¥&#039;, &#039;callback_data&#039; => &#039;admin_back_sendchannelapprovedusers&#039;], [&#039;text&#039; => &#039;‚§¥Ô∏è–í—ã–π—Ç–∏&#039;, &#039;callback_data&#039; => &#039;admin_exit_main&#039;]];
								
								if(isset($bot->api->body[&#039;callback_query&#039;]["id"]))
									{
										$callback_query_id=$bot->api->body[&#039;callback_query&#039;]["id"];
										$bot->api->answerCallbackQuery($callback_query_id);
									}
								$bot->api->editMessageText([
								&#039;chat_id&#039; => $bot->api->body[&#039;callback_query&#039;][&#039;message&#039;][&#039;chat&#039;]["id"],
								&#039;message_id&#039; => $bot->api->body[&#039;callback_query&#039;][&#039;message&#039;][&#039;message_id&#039;],
								&#039;text&#039; => $text,
								&#039;parse_mode&#039; => "HTML",
								&#039;reply_markup&#039; => json_encode( [&#039;inline_keyboard&#039;=>$merge] ),
								]);
								usleep(100000);
							}
							else
							{
								$text=&#039;–í –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è <b>'.$buttext.'</b> –Ω–µ—Ç –æ–±—ä—è–≤–ª–µ–Ω–∏–π –¥–ª—è —Ä–∞–∑–º–µ—â–µ–Ω–∏—è –≤ –∫–∞–Ω–∞–ª–µ.&#039;.PHP_EOL.&#039;–í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ –ø–æ–¥–º–µ–Ω—é –†–∞–∑–º–µ—Å—Ç–∏—Ç—å –≤ –∫–∞–Ω–∞–ª–µ –º–µ–Ω—é –£—Ç–≤–µ—Ä–∂–¥–µ–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–∏—Ä–∏—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, —á—Ç–æ–±—ã —Ä–∞–∑–º–µ—Å—Ç–∏—Ç—å –µ–≥–æ –æ–±—ä—è–≤–ª–µ–Ω–∏—è –≤ –∫–∞–Ω–∞–ª–µ.&#039;.$bot->pre.&#039;&#039;;
								
								$merge=$bot->cmd_admin_sendchannelapprovedusers();
								usleep(100000);
								
								if (array_filter($merge) !== [])
								{
									$merge[] = [[&#039;text&#039; => &#039;‚¨ÖÔ∏è–ù–∞–∑–∞–¥&#039;, &#039;callback_data&#039; => &#039;admin_back_approvedusers&#039;], [&#039;text&#039; => &#039;‚§¥Ô∏è–í—ã–π—Ç–∏&#039;, &#039;callback_data&#039; => &#039;admin_exit_main&#039;]];
									
									if(isset($bot->api->body[&#039;callback_query&#039;]["id"]))
									{
										$callback_query_id=$bot->api->body[&#039;callback_query&#039;]["id"];
										$bot->api->answerCallbackQuery($callback_query_id);
									}
									$bot->api->editMessageText([
									&#039;chat_id&#039; => $bot->api->body[&#039;callback_query&#039;][&#039;message&#039;][&#039;chat&#039;]["id"],
									&#039;message_id&#039; => $bot->api->body[&#039;callback_query&#039;][&#039;message&#039;][&#039;message_id&#039;],
									&#039;text&#039; => $text,
									&#039;parse_mode&#039; => "HTML",
									&#039;reply_markup&#039; => json_encode( [&#039;inline_keyboard&#039;=>$merge] ),
									]);
								}
								else
								{
									$text=&#039;–í –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è <b>'.$buttext.'</b> –Ω–µ—Ç –æ–±—ä—è–≤–ª–µ–Ω–∏–π –¥–ª—è —Ä–∞–∑–º–µ—â–µ–Ω–∏—è –≤ –∫–∞–Ω–∞–ª–µ.&#039;.PHP_EOL.&#039; –í –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –Ω–µ—Ç –æ–±—ä—è–≤–ª–µ–Ω–∏–π –¥–ª—è —Ä–∞–∑–º–µ—â–µ–Ω–∏—è –≤ –∫–∞–Ω–∞–ª–µ.&#039;.PHP_EOL.&#039; –í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ –º–µ–Ω—é –£—Ç–≤–µ—Ä–∂–¥–µ–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏.&#039;.$bot->pre.&#039;&#039;;
									
									if(isset($bot->api->body[&#039;callback_query&#039;]["id"]))
									{
										$callback_query_id=$bot->api->body[&#039;callback_query&#039;]["id"];
										$bot->api->answerCallbackQuery($callback_query_id);
									}
									$bot->api->editMessageText([
									&#039;chat_id&#039; => $bot->api->body[&#039;callback_query&#039;][&#039;message&#039;][&#039;chat&#039;]["id"],
									&#039;message_id&#039; => $bot->api->body[&#039;callback_query&#039;][&#039;message&#039;][&#039;message_id&#039;],
									&#039;text&#039; => $text,
									&#039;parse_mode&#039; => "HTML",
									&#039;reply_markup&#039; => json_encode( [&#039;inline_keyboard&#039;=>$bot->keyboards[&#039;inline_admin_approvedusers&#039;]] ),
									]);
								}
							}
							
							
						}';
							
						file_put_contents($include, html_entity_decode($insert, ENT_QUOTES) . PHP_EOL . PHP_EOL,FILE_APPEND);
					}
				}
				}
				$u++;	
			}
				
			$merge[]=$put;
			unset($put);
			
		}
		
		$insert='}';
		file_put_contents($include, $insert,FILE_APPEND);
		
		return $merge;
				
		

	}




/////
	public function cmd_admin_sendchannelapprovedusers_records($input)
	{
		$adminid=$this->chatidadmin;		
		$con_sql2=$this->cmd_sql();
		$tabserviceask='tabserviceask'.$input.'';
		$tabmain='tabmain'.$input.'';
		
		//$query1=mysqli_query($con_sql2, 'SELECT * FROM '.$tabmain.' WHERE messid="0" AND pic!="0" ORDER by id ASC');
		$query1=mysqli_query($con_sql2, 'SELECT DISTINCT record FROM '.$tabserviceask.' WHERE id LIKE "%"');
		usleep(100000);
		$con1=mysqli_num_rows($query1);
		
		$table=[];
		
		for($i=0;$i<$con1;$i++)
		{
			mysqli_data_seek($query1, $i);
			$row1[$i]=mysqli_fetch_row($query1);
			$table[]=$row1[$i][0];	
		}
		usleep(100000);
		
		$cnt=count($table);
		$maxbuttons=1;
		$ceil=ceil($cnt/$maxbuttons);
		
		
		
		$include=''.dirname(__FILE__).'/include'.$this->api->chatId.'.php';
		
		if(file_exists($include)==FALSE)
		{
			touch($include);
			
			$insert='<?php
		
		
			class TelegramBotfunc{';
			file_put_contents($include, $insert . PHP_EOL,FILE_APPEND);
			
		}
		else
		{
			$getinclude=file($include);
			unset($getinclude[array_key_last($getinclude)]);
			file_put_contents($include, $getinclude);
		}
		
		$u=0;
		$merge=[];
		
		for($i1=0;$i1<$ceil;$i1++)
		{
			$put=[];
			for($i2=0;$i2<$maxbuttons;$i2++)
			{	

				if(isset($table[$u]))	
				{
				if(mysqli_num_rows(mysqli_query($con_sql2, 'SELECT 1 FROM '.$tabserviceask.' WHERE id LIKE "%"'))!=0)
				{

					$butuser='üë§'.$this->cmd_user_get_fiophone($input).'';
					$buttext='‚Ññ'.$table[$u].'';
					$put[]=["text" => ''.$buttext.'', "callback_data" => 'adm_sendchanusers_user'.$input.'_rec'.$table[$u].''];

					
					
					if(preg_match('/callback_adm_sendchanusers_user'.$input.'_rec'.$table[$u].'/', file_get_contents($include))==FALSE)
					{
						$insert='
						public function callback_adm_sendchanusers_user'.$input.'_rec'.$table[$u].'()
						{	
							$bot = new TestBot;
							$bot->api->getWebhookUpdate();
							
							$con_sql2=$bot->cmd_sql();
							
								if(mysqli_num_rows(mysqli_query($con_sql2, &#039;SELECT 1 FROM '.$tabmain.' WHERE messid="0" AND pic!="0" LIMIT 1&#039;))!=0)
								{
									
									$query=mysqli_query($con_sql2, &#039;SELECT * FROM '.$tabmain.' WHERE id="'.$table[$u].'"&#039;);
									usleep(100000);
									$con=mysqli_num_rows($query);
									
									for($i=0;$i<$con;$i++)
									{
										mysqli_data_seek($query, $i);
										$row[$i]=mysqli_fetch_row($query);
									}
									usleep(250000);
									
									$mainchannel=$bot->mainchannel;
									
									$type=$bot->convert_rus($row[0][1]);
									$cat=$bot->convert_rus($row[0][2]);
									$gender=$bot->convert_rus($row[0][3]);
									$cond=$bot->convert_rus($row[0][12]);
									
									/* $text=&#039;‚ùáÔ∏è‚ùáÔ∏è‚ùáÔ∏è‚ùáÔ∏è‚ùáÔ∏è‚ùáÔ∏è‚ùáÔ∏è‚ùáÔ∏è‚ùáÔ∏è‚ùáÔ∏è‚ùáÔ∏è‚ùáÔ∏è‚ùáÔ∏è‚ùáÔ∏è‚ùáÔ∏è‚ùáÔ∏è‚ùáÔ∏è‚ùáÔ∏è‚ùáÔ∏è‚ùáÔ∏è&#039;;
									$bot->api->sendMessage([
									&#039;chat_id&#039; => $mainchannel,
									&#039;text&#039; => $text,
									&#039;disable_notification&#039; => TRUE,
									&#039;disable_web_page_preview&#039; => TRUE,
									&#039;parse_mode&#039;=> &#039;HTML&#039;
									]); */

									
									$caption=&#039;üìñ–ö–∞—Ç–µ–≥–æ—Ä–∏—è: &#160;&#160;<b>&#039;.$type.&#039;</b>&#039;.PHP_EOL.&#039;üßæ–í–∏–¥: &#160;&#160;<b>&#039;.$cat.&#039;</b>&#039;.PHP_EOL.&#039;üë®‚Äçüë©‚Äçüë¶–ü–æ–ª: &#160;&#160;<b>&#039;.$gender.&#039;</b>&#039;.PHP_EOL.&#039;üéè–°–æ—Å—Ç–æ—è–Ω–∏–µ: &#160;&#160;<b>&#039;.$cond.&#039;</b>&#039;.PHP_EOL.&#039;¬ÆÔ∏è–ë—Ä–µ–Ω–¥: &#160;&#160;<b>&#039;.$row[0][4].&#039;</b>&#039;.PHP_EOL.&#039;‚ÜïÔ∏è–†–∞–∑–º–µ—Ä: &#160;&#160;<b>&#039;.$row[0][5].&#039;</b>&#039;.PHP_EOL.&#039;üíµ–¶–µ–Ω–∞: &#160;&#160;<b>&#039;.$row[0][6].&#039;</b>&#039;.PHP_EOL.&#039;üìã–û–ø–∏—Å–∞–Ω–∏–µ: &#160;&#160;&#039;.$row[0][7].&#039;&#039;.PHP_EOL.&#039;&#039;.PHP_EOL.&#039;üìÅüìÅüìÅüìÅüìÅüìÅüìÅüìÅüìÅüìÅüìÅüìÅ&#039;;
									
									$photo=$row[0][8];
							
									if(preg_match(&#039;/;/&#039;, $photo)==FALSE)
									{
										$result=json_decode($bot->api->sendPhoto([
										&#039;chat_id&#039; => $mainchannel,
										&#039;photo&#039; => $photo,
										&#039;caption&#039; => $caption,
										&#039;disable_notification&#039; => TRUE,
										&#039;parse_mode&#039; => "HTML"
										]), true);
										usleep(250000);
										$messageid=$result[&#039;result&#039;][&#039;message_id&#039;];
									}
									else
									{
										$tabservicerecords=&#039;tabservicerecords&#039;;
										
										if(mysqli_query($con_sql2, &#039;SELECT 1 FROM &#039;.$tabservicerecords.&#039; LIMIT 1&#039;)==FALSE)
										{
											mysqli_query($con_sql2, &#039;CREATE TABLE &#039;.$tabservicerecords.&#039; (id INT(4) UNSIGNED AUTO_INCREMENT PRIMARY KEY,record VARCHAR(20),messids VARCHAR(250)) ENGINE = InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;&#039;);
											usleep(250000);
										}
										
										
										$media=[];
										$temp=explode(&#039;;&#039;, $photo);
										$cnt=count($temp);
										
										for($o=0;$o<$cnt;$o++)
										{
											if($o==0)
											{
												$put=[&#039;type&#039; => &#039;photo&#039;, &#039;media&#039; =>  &#039;&#039;.$temp[$o].&#039;&#039;, &#039;caption&#039; => &#039;&#039;.$caption.&#039;&#039;, &#039;parse_mode&#039; => "HTML" ];
											}
											else
											{
												$put=[&#039;type&#039; => &#039;photo&#039;, &#039;media&#039; =>  &#039;&#039;.$temp[$o].&#039;&#039; ];
											}
									
											$media[$o]=$put;
										}
										
										
									
										$result=json_decode($bot->api->sendMediaGroup([
										&#039;chat_id&#039; => $mainchannel,
										&#039;media&#039; => json_encode($media),
										]), true);
										usleep(350000);
										
										$messageid=$result[&#039;result&#039;][0][&#039;message_id&#039;];
										
										mysqli_query($con_sql2, &#039;INSERT INTO &#039;.$tabservicerecords.&#039; (record, messids) VALUES ("&#039;.$messageid.&#039;", "0")&#039;);
										usleep(150000);
										
										$cnt=count($result[&#039;result&#039;]);
										
										for($o=0;$o<$cnt;$o++)
										{
											$messageids=$result[&#039;result&#039;][$o][&#039;message_id&#039;];
											
											if($o==0)
											{
												$put=$messageids;
											}
											else
											{
												$put=&#039;&#039;.$put.&#039;;&#039;.$messageids.&#039;&#039;;
											}
											
											
										}
										
										$query2=mysqli_query($con_sql2, &#039;SELECT * FROM &#039;.$tabservicerecords.&#039; WHERE record="&#039;.$messageid.&#039;"&#039;);
										$con2=mysqli_num_rows($query2);
										
										for($i2=0;$i2<$con2;$i2++)
										{
											mysqli_data_seek($query2, $i2);
											$row2[$i2]=mysqli_fetch_row($query2);
										}
										
										$query1=&#039;UPDATE &#039;.$tabservicerecords.&#039; SET messids = REPLACE(messids, "&#039;.$row2[0][2].&#039;", "&#039;.$put.&#039;") WHERE record="&#039;.$messageid.&#039;"&#039;; 
										$result1=mysqli_query($con_sql2, $query1);
										usleep(100000);	
									}
							
									$date=date("d.m.Y");
									$time=time();
									
									$query2=&#039;UPDATE '.$tabmain.' SET date = REPLACE(date, "&#039;.$row[0][9].&#039;", "&#039;.$date.&#039;") WHERE id="'.$table[$u].'"&#039;; 
									$result2=mysqli_query($con_sql2, $query2);
									
									$query2=&#039;UPDATE '.$tabmain.' SET time = REPLACE(time, "&#039;.$row[0][10].&#039;", "&#039;.$time.&#039;") WHERE id="'.$table[$u].'"&#039;; 
									$result2=mysqli_query($con_sql2, $query2);
									
									$query2=&#039;UPDATE '.$tabmain.' SET messid = REPLACE(messid, "&#039;.$row[0][11].&#039;", "&#039;.$messageid.&#039;") WHERE id="'.$table[$u].'"&#039;; 
									$result2=mysqli_query($con_sql2, $query2);
									
									$query=mysqli_query($con_sql2, &#039;DELETE FROM '.$tabserviceask.' WHERE record="'.$table[$u].'"&#039;);
									usleep(100000);
									
									$caption1=&#039;üìñ–ö–∞—Ç–µ–≥–æ—Ä–∏—è: &#160;&#160;<b>&#039;.$type.&#039;</b>&#039;.PHP_EOL.&#039;üßæ–í–∏–¥: &#160;&#160;<b>&#039;.$cat.&#039;</b>&#039;.PHP_EOL.&#039;üë®‚Äçüë©‚Äçüë¶–ü–æ–ª: &#160;&#160;<b>&#039;.$gender.&#039;</b>&#039;.PHP_EOL.&#039;üéè–°–æ—Å—Ç–æ—è–Ω–∏–µ: &#160;&#160;<b>&#039;.$cond.&#039;</b>&#039;.PHP_EOL.&#039;¬ÆÔ∏è–ë—Ä–µ–Ω–¥: &#160;&#160;<b>&#039;.$row[0][4].&#039;</b>&#039;.PHP_EOL.&#039;‚ÜïÔ∏è–†–∞–∑–º–µ—Ä: &#160;&#160;<b>&#039;.$row[0][5].&#039;</b>&#039;.PHP_EOL.&#039;üíµ–¶–µ–Ω–∞: &#160;&#160;<b>&#039;.$row[0][6].&#039;</b>&#039;.PHP_EOL.&#039;üìã–û–ø–∏—Å–∞–Ω–∏–µ: &#160;&#160;&#039;.$row[0][7].&#039;&#039;.PHP_EOL.&#039;&#039;.PHP_EOL.&#039;&#039;.PHP_EOL.&#039;<b>ID —Ç–æ–≤–∞—Ä–∞: &#039;.$messageid.&#039;</b>&#039;.PHP_EOL.&#039;&#039;.PHP_EOL.&#039;üìÅüìÅüìÅüìÅüìÅüìÅüìÅüìÅüìÅüìÅüìÅüìÅ&#039;;
									
									$bot->api->editMessageCaption([
										&#039;chat_id&#039; => $bot->mainchannel,
										&#039;message_id&#039; => $messageid,
										&#039;caption&#039; => $caption1,
										&#039;parse_mode&#039; => "HTML",
										]);
									
									usleep(250000);
									
									$text2=&#039;–í–∞—à–µ –æ–±—ä—è–≤–ª–µ–Ω–∏–µ <b>‚Ññ'.$table[$u].'</b> —É—Å–ø–µ—à–Ω–æ —Ä–∞–∑–º–µ—â–µ–Ω–æ –≤ –∫–∞–Ω–∞–ª–µ —Å <b>ID —Ç–æ–≤–∞—Ä–∞ ‚Ññ &#039;.$messageid.&#039;</b>.&#039;.$bot->pre.&#039;&#039;;
									
									if(isset($bot->api->body[&#039;callback_query&#039;]["id"]))
									{
										$callback_query_id=$bot->api->body[&#039;callback_query&#039;]["id"];
										$bot->api->answerCallbackQuery($callback_query_id);
									}
										
									$bot->api->sendMessage([
							
										&#039;chat_id&#039; => $row[0][13],
										&#039;text&#039; => $text2,
										&#039;reply_markup&#039; => json_encode( [&#039;inline_keyboard&#039;=>$bot->keyboards[&#039;inline_sell&#039;]]),
										&#039;parse_mode&#039; => "HTML",
										]);
									usleep(100000);
									
									$merge=$bot->cmd_admin_sendchannelapprovedusers_records('.$input.');
									usleep(100000);
									
									if (array_filter($merge) !== [])
									{
										$text=&#039;–í—ã–±—Ä–∞–Ω–Ω–æ–µ –æ–±—ä—è–≤–ª–µ–Ω–∏–µ <b>‚Ññ'.$table[$u].'</b> –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è <b>'.$butuser.'</b> —É—Å–ø–µ—à–Ω–æ —Ä–∞–∑–º–µ—â–µ–Ω–æ –≤ –∫–∞–Ω–∞–ª–µ —Å <b>ID —Ç–æ–≤–∞—Ä–∞ ‚Ññ &#039;.$messageid.&#039;</b>.&#039;.PHP_EOL.&#039;–í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ –ø–æ–¥–º–µ–Ω—é –†–∞–∑–º–µ—Å—Ç–∏—Ç—å –≤ –∫–∞–Ω–∞–ª–µ, –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è <b>'.$butuser.'</b>. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–∏—Ä–∏—Ç–µ –µ—â–µ –æ–¥–Ω–æ –æ–±—ä—è–≤–ª–µ–Ω–∏–µ, —á—Ç–æ–±—ã —Ä–∞–∑–º–µ—Å—Ç–∏—Ç—å –µ–µ –≤ –∫–∞–Ω–∞–ª–µ.&#039;.$bot->pre.&#039;&#039;;
										
										$merge[] = [[&#039;text&#039; => &#039;‚¨ÖÔ∏è–ù–∞–∑–∞–¥&#039;, &#039;callback_data&#039; => &#039;admin_back_sendchannelapprovedusers&#039;], [&#039;text&#039; => &#039;‚§¥Ô∏è–í—ã–π—Ç–∏&#039;, &#039;callback_data&#039; => &#039;admin_exit_main&#039;]];
										
										if(isset($bot->api->body[&#039;callback_query&#039;]["id"]))
										{
											$callback_query_id=$bot->api->body[&#039;callback_query&#039;]["id"];
											$bot->api->answerCallbackQuery($callback_query_id);
										}
										
										$bot->api->editMessageText([
										&#039;chat_id&#039; => $bot->api->body[&#039;callback_query&#039;][&#039;message&#039;][&#039;chat&#039;]["id"],
										&#039;message_id&#039; => $bot->api->body[&#039;callback_query&#039;][&#039;message&#039;][&#039;message_id&#039;],
										&#039;text&#039; => $text,
										&#039;parse_mode&#039; => "HTML",
										&#039;reply_markup&#039; => json_encode( [&#039;inline_keyboard&#039;=>$merge] ),
										]);
										usleep(100000);
									}
									else
									{
										
										$merge=$bot->cmd_admin_sendchannelapprovedusers();
										usleep(100000);
										
										if (array_filter($merge) !== [])
										{
											$text=&#039;–í—ã–±—Ä–∞–Ω–Ω–æ–µ –æ–±—ä—è–≤–ª–µ–Ω–∏–µ ‚Ññ'.$table[$u].' –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è <b>'.$butuser.'</b> —É—Å–ø–µ—à–Ω–æ —Ä–∞–∑–º–µ—â–µ–Ω–æ –≤ –∫–∞–Ω–∞–ª–µ —Å <b>ID —Ç–æ–≤–∞—Ä–∞ ‚Ññ &#039;.$messageid.&#039;</b>.&#039;.PHP_EOL.&#039;–í –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è <b>'.$butuser.'</b> –Ω–µ—Ç –æ–±—ä—è–≤–ª–µ–Ω–∏–π –¥–ª—è —Ä–∞–∑–º–µ—â–µ–Ω–∏—è –≤ –∫–∞–Ω–∞–ª–µ.&#039;.PHP_EOL.&#039;–í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ –ø–æ–¥–º–µ–Ω—é –†–∞–∑–º–µ—Å—Ç–∏—Ç—å –≤ –∫–∞–Ω–∞–ª–µ –º–µ–Ω—é –£—Ç–≤–µ—Ä–∂–¥–µ–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–∏—Ä–∏—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, —á—Ç–æ–±—ã —Ä–∞–∑–º–µ—Å—Ç–∏—Ç—å –µ–≥–æ –æ–±—ä—è–≤–ª–µ–Ω–∏—è –≤ –∫–∞–Ω–∞–ª–µ.&#039;.$bot->pre.&#039;&#039;;
											
											$merge[] = [[&#039;text&#039; => &#039;‚¨ÖÔ∏è–ù–∞–∑–∞–¥&#039;, &#039;callback_data&#039; => &#039;admin_back_approvedusers&#039;], [&#039;text&#039; => &#039;‚§¥Ô∏è–í—ã–π—Ç–∏&#039;, &#039;callback_data&#039; => &#039;admin_exit_main&#039;]];
											
											if(isset($bot->api->body[&#039;callback_query&#039;]["id"]))
											{
												$callback_query_id=$bot->api->body[&#039;callback_query&#039;]["id"];
												$bot->api->answerCallbackQuery($callback_query_id);
											}
											
											$bot->api->editMessageText([
											&#039;chat_id&#039; => $bot->api->body[&#039;callback_query&#039;][&#039;message&#039;][&#039;chat&#039;]["id"],
											&#039;message_id&#039; => $bot->api->body[&#039;callback_query&#039;][&#039;message&#039;][&#039;message_id&#039;],
											&#039;text&#039; => $text,
											&#039;parse_mode&#039; => "HTML",
											&#039;reply_markup&#039; => json_encode( [&#039;inline_keyboard&#039;=>$merge] ),
											]);
											usleep(100000);
										}
										else
										{
											$text=&#039;–í—ã–±—Ä–∞–Ω–Ω–æ–µ –æ–±—ä—è–≤–ª–µ–Ω–∏–µ <b>‚Ññ'.$table[$u].'</b> –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è <b>'.$butuser.'</b> —É—Å–ø–µ—à–Ω–æ —Ä–∞–∑–º–µ—â–µ–Ω–æ –≤ –∫–∞–Ω–∞–ª–µ —Å <b>ID —Ç–æ–≤–∞—Ä–∞ ‚Ññ &#039;.$messageid.&#039;</b>.&#039;.PHP_EOL.&#039;–í –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è <b>'.$butuser.'</b> –Ω–µ—Ç –æ–±—ä—è–≤–ª–µ–Ω–∏–π –¥–ª—è —Ä–∞–∑–º–µ—â–µ–Ω–∏—è –≤ –∫–∞–Ω–∞–ª–µ.&#039;.PHP_EOL.&#039;–í –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –Ω–µ—Ç –æ–±—ä—è–≤–ª–µ–Ω–∏–π –¥–ª—è —Ä–∞–∑–º–µ—â–µ–Ω–∏—è –≤ –∫–∞–Ω–∞–ª–µ.&#039;.PHP_EOL.&#039; –í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ –º–µ–Ω—é <b>–£—Ç–≤–µ—Ä–∂–¥–µ–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏</b>.&#039;.$bot->pre.&#039;&#039;;
									
											if(isset($bot->api->body[&#039;callback_query&#039;]["id"]))
											{
												$callback_query_id=$bot->api->body[&#039;callback_query&#039;]["id"];
												$bot->api->answerCallbackQuery($callback_query_id);
											}
											$bot->api->editMessageText([
											&#039;chat_id&#039; => $bot->api->body[&#039;callback_query&#039;][&#039;message&#039;][&#039;chat&#039;]["id"],
											&#039;message_id&#039; => $bot->api->body[&#039;callback_query&#039;][&#039;message&#039;][&#039;message_id&#039;],
											&#039;text&#039; => $text,
											&#039;parse_mode&#039; => "HTML",
											&#039;reply_markup&#039; => json_encode( [&#039;inline_keyboard&#039;=>$bot->keyboards[&#039;inline_admin_approvedusers&#039;]] ),
											]);
										}
										
									}
								
								}
								
								
								/* else
								{
									$text=&#039;–í –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç —É –í–∞—Å –Ω–µ—Ç –Ω–∏ –æ–¥–Ω–æ–≥–æ –æ–±—ä—è–≤–ª–µ–Ω–∏—è –¥–ª—è —Ä–∞–∑–º–µ—â–µ–Ω–∏—è –≤ –∫–∞–Ω–∞–ª!&#039;.PHP_EOL.&#039; –í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ –≥–ª–∞–≤–Ω–æ–º –º–µ–Ω—é <b>–ò–∑–º–µ–Ω–∏—Ç—å –æ–±—ä—è–≤–ª–µ–Ω–∏–µ</b>.&#039;.$bot->pre.&#039;&#039;;
									
									if(isset($bot->api->body[&#039;callback_query&#039;]["id"]))
										{
											$callback_query_id=$bot->api->body[&#039;callback_query&#039;]["id"];
											$bot->api->answerCallbackQuery($callback_query_id);
										}
								
									$bot->api->editMessageText([
									&#039;chat_id&#039; => $bot->api->body[&#039;callback_query&#039;][&#039;message&#039;][&#039;chat&#039;]["id"],
									&#039;message_id&#039; => $bot->api->body[&#039;callback_query&#039;][&#039;message&#039;][&#039;message_id&#039;],
									&#039;text&#039; => $text,
									&#039;parse_mode&#039; => "HTML",
									&#039;reply_markup&#039; => json_encode( [&#039;inline_keyboard&#039;=>$bot->keyboards[&#039;inline_change&#039;]] ),
									]);
								} */
							

						}';
							
						file_put_contents($include, html_entity_decode($insert, ENT_QUOTES) . PHP_EOL . PHP_EOL,FILE_APPEND);
					}
				}
				}
				$u++;	
			}
				
			$merge[]=$put;
			unset($put);
			
		}
		
		$insert='}';
		file_put_contents($include, $insert,FILE_APPEND);
		
		return $merge;
			
				
	}


/////
public function callback_admin_back_sendchannelapprovedusers()
	{		
	
		
		$merge=$this->cmd_admin_sendchannelapprovedusers();
		usleep(100000);
		
		if (array_filter($merge) !== [])
		{
			
			$merge[] = [['text' => '‚¨ÖÔ∏è–ù–∞–∑–∞–¥', 'callback_data' => 'admin_back_approvedusers'], ['text' => '‚§¥Ô∏è–í—ã–π—Ç–∏', 'callback_data' => 'admin_exit_main']];
			$text='–í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ <b>–û—Ç–º–µ—Ç–∏—Ç—å –ø—Ä–æ–¥–∞–∂—É</b> –æ–±—ä—è–≤–ª–µ–Ω–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π. –í—ã–±–µ—Ä–∏—Ç–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, —á—Ç–æ–±—ã <b>–û—Ç–º–µ—Ç–∏—Ç—å –æ –ø—Ä–æ–¥–∞–∂–µ</b> –µ–≥–æ –æ–±—ä—è–≤–ª–µ–Ω–∏—è.'.$this->pre.'';
			
			$this->callbackAnswer( $text, $merge);
		}
		else
		{
			$text='–í –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –Ω–µ—Ç –æ–±—ä—è–≤–ª–µ–Ω–∏–π –¥–ª—è —Ä–∞–∑–º–µ—â–µ–Ω–∏—è –≤ –∫–∞–Ω–∞–ª–µ.'.PHP_EOL.' –í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ –º–µ–Ω—é —É—Ç–≤–µ—Ä–∂–¥–µ–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π.'.$this->pre.'';
			
			$this->callbackAnswer( $text, $this->keyboards['inline_admin_approvedusers']);
			
			
		}
		
	}



////////////////////////////////////////////////////////////////–û—Ç–º–µ—Ç–∏—Ç—å –ø—Ä–æ–¥–∞–∂—É//////////////////////////////////////////////////////////
/////	
	public function callback_admin_send_sold_channel()
	{		
		$con_sql2=$this->cmd_sql();
		
		$tab='tabserviceapproved';

			$merge=$this->cmd_admin_send_sold_channel();
			usleep(100000);
			
			if (array_filter($merge) !== [])
			{
				
				$merge[] = [['text' => '‚¨ÖÔ∏è–ù–∞–∑–∞–¥', 'callback_data' => 'admin_back_approvedusers'], ['text' => '‚§¥Ô∏è–í—ã–π—Ç–∏', 'callback_data' => 'admin_exit_main']];
				$text='–í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ <b>–û—Ç–º–µ—Ç–∏—Ç—å –ø—Ä–æ–¥–∞–∂—É</b> —Ç–æ–≤–∞—Ä–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤ –∫–∞–Ω–∞–ª–µ. –í—ã–±–µ—Ä–∏—Ç–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, —á—Ç–æ–±—ã <b>–æ—Ç–º–µ—Ç–∏—Ç—å –ø—Ä–æ–¥–∞–∂—É</b> —Ç–æ–≤–∞—Ä–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤ –∫–∞–Ω–∞–ª–µ.'.$this->pre.'';
				
				$this->callbackAnswer( $text, $merge);
			}
			else
			{
				$text='–í –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π <b>–Ω–µ—Ç —Ç–æ–≤–∞—Ä–æ–≤,</b> —Ä–∞–∑–º–µ—â–µ–Ω–Ω—ã—Ö –≤ –∫–∞–Ω–∞–ª–µ.'.PHP_EOL.' –í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ –º–µ–Ω—é —É—Ç–≤–µ—Ä–∂–¥–µ–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π.'.$this->pre.'';
				
				$this->callbackAnswer( $text, $this->keyboards['inline_admin_approvedusers']);
				
				
			}
		
	}


/////
	public function cmd_admin_send_sold_channel()
	{
		$adminid=$this->chatidadmin;		
		$con_sql2=$this->cmd_sql();
		
		$tab='tabserviceapproved';
		
		
		$query1=mysqli_query($con_sql2, 'SHOW TABLES LIKE "tabservicebuy%"');
		usleep(100000);
		$con1=mysqli_num_rows($query1);
		
		$table=[];
		
		for($i=0;$i<$con1;$i++)
		{
			mysqli_data_seek($query1, $i);
			$row1[$i]=mysqli_fetch_row($query1);
			$table[]=$row1[$i][0];
		}
		usleep(100000);
		
		$cnt=count($table);
		
		$maxbuttons=1;
		$ceil=ceil($cnt/$maxbuttons);
		
		
		
		$include=''.dirname(__FILE__).'/include'.$this->api->chatId.'.php';
		
		if(file_exists($include)==FALSE)
		{
			touch($include);
			
			$insert='<?php
		
		
			class TelegramBotfunc{';
			file_put_contents($include, $insert . PHP_EOL,FILE_APPEND);
			
		}
		else
		{
			$getinclude=file($include);
			unset($getinclude[array_key_last($getinclude)]);
			file_put_contents($include, $getinclude);
		}
		
		$u=0;
		$merge=[];
		
		for($i1=0;$i1<$ceil;$i1++)
		{
			$put=[];
			for($i2=0;$i2<$maxbuttons;$i2++)
			{	
				
				if(mysqli_query($con_sql2, 'SELECT 1 FROM '.$table[$u].' LIMIT 1'))
				{
				if(mysqli_num_rows(mysqli_query($con_sql2, 'SELECT 1 FROM '.$table[$u].' WHERE messid!="0" LIMIT 1'))!=0)
				{
					
					$chatidbuyer=str_replace('tabservicebuy', '', $table[$u]);
					$buttext='üë§'.$this->cmd_user_get_fiophone($chatidbuyer).'';
					$put[]=["text" => "$buttext", "callback_data" => "admin_send_sold_channel_$table[$u]"];
					
					if(preg_match('/callback_admin_send_sold_channel_'.$table[$u].'/', file_get_contents($include))==FALSE)
					{
						$insert='
						public function callback_admin_send_sold_channel_'.$table[$u].'()
						{	
							$bot = new TestBot;
							$bot->api->getWebhookUpdate();
							$callback_query_id=$bot->api->body[&#039;callback_query&#039;]["id"];
							
							$con_sql2=$bot->cmd_sql();
							$tab=&#039;tabserviceapproved&#039;;
							//$tabmain=&#039;tabmain&#039;.$bot->api->chatId.&#039;&#039;;
							
							$query1=mysqli_query($con_sql2, &#039;SELECT 1 FROM '.$table[$u].' WHERE messid!="0" LIMIT 1&#039;);
							usleep(100000);
							$con1=mysqli_num_rows($query1);
				
							$text=&#039;–î–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã –æ—Ç–º–µ—Ç–∏—Ç—å –ø—Ä–æ–¥–∞–∂—É —Ç–æ–≤–∞—Ä–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é <b>'.$buttext.'</b>, –í–∞–º –Ω—É–∂–Ω–æ –Ω–∞–∂–∞—Ç—å –Ω–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â—É—é –∫–Ω–æ–ø–∫—É —Å <b>ID —Ç–æ–≤–∞—Ä–∞</b>.&#039;.$bot->pre.&#039;&#039;;
				
							$merge=$bot->cmd_admin_send_sold_channel_records('.$table[$u].');
							
							usleep(100000);
							if (array_filter($merge) !== [])
							{
								$merge[] = [[&#039;text&#039; => &#039;‚¨ÖÔ∏è–ù–∞–∑–∞–¥&#039;, &#039;callback_data&#039; => &#039;admin_back_approvedusers&#039;], [&#039;text&#039; => &#039;‚§¥Ô∏è–í—ã–π—Ç–∏&#039;, &#039;callback_data&#039; => &#039;admin_exit_main&#039;]];
								
								$bot->api->answerCallbackQuery($callback_query_id);
								$bot->api->editMessageText([
								&#039;chat_id&#039; => $bot->api->body[&#039;callback_query&#039;][&#039;message&#039;][&#039;chat&#039;]["id"],
								&#039;message_id&#039; => $bot->api->body[&#039;callback_query&#039;][&#039;message&#039;][&#039;message_id&#039;],
								&#039;text&#039; => $text,
								&#039;parse_mode&#039; => "HTML",
								&#039;reply_markup&#039; => json_encode( [&#039;inline_keyboard&#039;=>$merge] ),
								]);
								usleep(100000);
							}
							else
							{
								$text=&#039;–í –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è <b>'.$buttext.'</b> –Ω–µ—Ç —Ç–æ–≤–∞—Ä–æ–≤, —Ä–∞–∑–º–µ—â–µ–Ω–Ω—ã—Ö –≤ –∫–∞–Ω–∞–ª–µ.&#039;.PHP_EOL.&#039; –í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ –ø–æ–¥–º–µ–Ω—é –û—Ç–º–µ—Ç–∏—Ç—å –ø—Ä–æ–¥–∞–∂—É –º–µ–Ω—é —É—Ç–≤–µ—Ä–∂–¥–µ–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–∏—Ä–∏—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, —á—Ç–æ–±—ã –æ—Ç–º–µ—Ç–∏—Ç—å –ø—Ä–æ–¥–∞–∂—É –µ–≥–æ —Ç–æ–≤–∞—Ä–∞.&#039;.$bot->pre.&#039;&#039;;
								
								$merge=$bot->cmd_admin_send_sold_channel();
								usleep(100000);
								
								if (array_filter($merge) !== [])
								{
									$merge[] = [[&#039;text&#039; => &#039;‚¨ÖÔ∏è–ù–∞–∑–∞–¥&#039;, &#039;callback_data&#039; => &#039;admin_back_approvedusers&#039;], [&#039;text&#039; => &#039;‚§¥Ô∏è–í—ã–π—Ç–∏&#039;, &#039;callback_data&#039; => &#039;admin_exit_main&#039;]];
									
									$bot->api->answerCallbackQuery($callback_query_id);
									$bot->api->editMessageText([
									&#039;chat_id&#039; => $bot->api->body[&#039;callback_query&#039;][&#039;message&#039;][&#039;chat&#039;]["id"],
									&#039;message_id&#039; => $bot->api->body[&#039;callback_query&#039;][&#039;message&#039;][&#039;message_id&#039;],
									&#039;text&#039; => $text,
									&#039;parse_mode&#039; => "HTML",
									&#039;reply_markup&#039; => json_encode( [&#039;inline_keyboard&#039;=>$merge] ),
									]);
								}
								else
								{
									$text=&#039;–í –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è <b>'.$buttext.'</b> –Ω–µ—Ç —Ç–æ–≤–∞—Ä–æ–≤, —Ä–∞–∑–º–µ—â–µ–Ω–Ω—ã—Ö –≤ –∫–∞–Ω–∞–ª–µ. –í –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –Ω–µ—Ç —Ç–æ–≤–∞—Ä–æ–≤, —Ä–∞–∑–º–µ—â–µ–Ω–Ω—ã—Ö –≤ –∫–∞–Ω–∞–ª–µ.&#039;.PHP_EOL.&#039; –í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ –º–µ–Ω—é —É—Ç–≤–µ—Ä–∂–¥–µ–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π.&#039;.$bot->pre.&#039;&#039;;
									
									$bot->api->answerCallbackQuery($callback_query_id);
									$bot->api->editMessageText([
									&#039;chat_id&#039; => $bot->api->body[&#039;callback_query&#039;][&#039;message&#039;][&#039;chat&#039;]["id"],
									&#039;message_id&#039; => $bot->api->body[&#039;callback_query&#039;][&#039;message&#039;][&#039;message_id&#039;],
									&#039;text&#039; => $text,
									&#039;parse_mode&#039; => "HTML",
									&#039;reply_markup&#039; => json_encode( [&#039;inline_keyboard&#039;=>$bot->keyboards[&#039;inline_admin_approvedusers&#039;]] ),
									]);
								}
							}
							
							
						}';
							
						file_put_contents($include, html_entity_decode($insert, ENT_QUOTES) . PHP_EOL . PHP_EOL,FILE_APPEND);
					}
				}
				}	
				$u++;	
			}
				
			$merge[]=$put;
			unset($put);
			
		}
		
		$insert='}';
		file_put_contents($include, $insert,FILE_APPEND);
		
		return $merge;
				
		

	}




/////
	public function cmd_admin_send_sold_channel_records($input)
	{
		$adminid=$this->chatidadmin;		
		$con_sql2=$this->cmd_sql();
		
		$tab='tabserviceapproved';
		
			
		$query1=mysqli_query($con_sql2, 'SELECT DISTINCT messid FROM '.$input.' WHERE messid!="0"');
		usleep(100000);
		$con1=mysqli_num_rows($query1);
		
		$table=[];
		
		for($i=0;$i<$con1;$i++)
		{
			mysqli_data_seek($query1, $i);
			$row1[$i]=mysqli_fetch_row($query1);
			$table[]=$row1[$i][0];	
		}
		usleep(100000);
		
		$cnt=count($table);
		$maxbuttons=1;
		$ceil=ceil($cnt/$maxbuttons);
		
		
		
		$include=''.dirname(__FILE__).'/include'.$this->api->chatId.'.php';
		
		if(file_exists($include)==FALSE)
		{
			touch($include);
			
			$insert='<?php
		
		
			class TelegramBotfunc{';
			file_put_contents($include, $insert . PHP_EOL,FILE_APPEND);
			
		}
		else
		{
			$getinclude=file($include);
			unset($getinclude[array_key_last($getinclude)]);
			file_put_contents($include, $getinclude);
		}
		
		$u=0;
		$merge=[];
		
		for($i1=0;$i1<$ceil;$i1++)
		{
			$put=[];
			for($i2=0;$i2<$maxbuttons;$i2++)
			{	
				
				//if(mysqli_query($con_sql2, 'SELECT 1 FROM '.$tabmain.' LIMIT 1'))
				if(isset($table[$u]))
				{
				if(mysqli_num_rows(mysqli_query($con_sql2, 'SELECT DISTINCT messid FROM '.$input.' WHERE messid!="0"'))!=0)
				{
					$buttext="‚Ññ$table[$u]";
					$chatidbuyer=str_replace('tabservicebuy', '', $input);
					$butuser='üë§'.$this->cmd_user_get_fiophone($chatidbuyer).'';
					
					$put[]=["text" => "$buttext", "callback_data" => 'adm_se_so_chan_user'.$chatidbuyer.'_rec'.$table[$u].''];
					
					if(preg_match('/callback_adm_se_so_chan_user'.$chatidbuyer.'_rec'.$table[$u].'/', file_get_contents($include))==FALSE)
					{
						$insert='
						public function callback_adm_se_so_chan_user'.$chatidbuyer.'_rec'.$table[$u].'()
						{	
							$bot = new TestBot;
							$bot->api->getWebhookUpdate();
							$callback_query_id=$bot->api->body[&#039;callback_query&#039;]["id"];
							
							$con_sql2=$bot->cmd_sql();
							
							
							$query1=mysqli_query($con_sql2, &#039;SELECT DISTINCT messid FROM '.$input.' WHERE messid!="0"&#039;);
							usleep(100000);
							$con1=mysqli_num_rows($query1);
				
							if($con1!=0)
							{
								
								$query=mysqli_query($con_sql2, &#039;SELECT * FROM '.$input.' WHERE messid="'.$table[$u].'"&#039;);
								usleep(100000);
								$con=mysqli_num_rows($query);
									
								for($i=0;$i<$con;$i++)
								{
									mysqli_data_seek($query, $i);
									$row[$i]=mysqli_fetch_row($query);
								}
								
								$photo=$row[0][8];
								$messageid=$row[0][11];
								$timeold=$row[0][10];
								$timediff=time()-$timeold;
								
								if(preg_match(&#039;/;/&#039;, $photo)==FALSE)
								{
									if($timediff>172000)
									{
										$text=&#039;<b><i>–¢–æ–≤–∞—Ä –ø—Ä–æ–¥–∞–Ω</i></b>&#039;.PHP_EOL.&#039;‚ö†Ô∏è‚ö†Ô∏è‚ö†Ô∏è‚ö†Ô∏è‚ö†Ô∏è‚ö†Ô∏è‚ö†Ô∏è‚ö†Ô∏è‚ö†Ô∏è‚ö†Ô∏è‚ö†Ô∏è‚ö†Ô∏è‚ö†Ô∏è‚ö†Ô∏è‚ö†Ô∏è‚ö†Ô∏è‚ö†Ô∏è‚ö†Ô∏è‚ö†Ô∏è‚ö†Ô∏è&#039;;
										$photosold=&#039;https://domain.com/photosold.png&#039;;
										
										$bot->api->editMessageMedia([
										&#039;chat_id&#039; => $bot->mainchannel,
										&#039;message_id&#039; => $messageid,
										&#039;media&#039; => json_encode( [&#039;type&#039; => &#039;photo&#039;, &#039;media&#039; => $photosold]),
										]);
									
										$bot->api->editMessageCaption([
										&#039;chat_id&#039; => $bot->mainchannel,
										&#039;message_id&#039; => $messageid,
										&#039;caption&#039; => $text,
										&#039;parse_mode&#039; => "HTML",
										]);
										
										$photo=str_replace(&#039;https://domain.com&#039;, &#039;&#039;.dirname(__FILE__).&#039;&#039;, $photo);
										unlink($photo);
										usleep(100000);
									}
									else
									{
										$bot->api->deleteMessage([
										&#039;chat_id&#039; => $bot->mainchannel,
										&#039;message_id&#039; => $messageid
										]);
										
										$photo=str_replace(&#039;https://domain.com&#039;, &#039;&#039;.dirname(__FILE__).&#039;&#039;, $photo);
										unlink($photo);
										usleep(100000);
									}
								}
								else
								{
									
									$tabservicerecords=&#039;tabservicerecords&#039;;
									$text=&#039;<b><i>–¢–æ–≤–∞—Ä –ø—Ä–æ–¥–∞–Ω</i></b>&#039;.PHP_EOL.&#039;‚ö†Ô∏è‚ö†Ô∏è‚ö†Ô∏è‚ö†Ô∏è‚ö†Ô∏è‚ö†Ô∏è‚ö†Ô∏è‚ö†Ô∏è‚ö†Ô∏è‚ö†Ô∏è‚ö†Ô∏è‚ö†Ô∏è‚ö†Ô∏è‚ö†Ô∏è‚ö†Ô∏è‚ö†Ô∏è‚ö†Ô∏è‚ö†Ô∏è‚ö†Ô∏è‚ö†Ô∏è&#039;;
									$photosold=&#039;https://domain.com/photosold.png&#039;;
									
									if($timediff>172000)
									{
		
										$bot->api->editMessageCaption([
										&#039;chat_id&#039; => $bot->mainchannel,
										&#039;message_id&#039; => $messageid,
										&#039;caption&#039; => $text,
										&#039;parse_mode&#039; => "HTML",
										]);
										
										
										$query2=mysqli_query($con_sql2, &#039;SELECT * FROM &#039;.$tabservicerecords.&#039; WHERE record="&#039;.$messageid.&#039;"&#039;);
										$con2=mysqli_num_rows($query2);
					
										for($i2=0;$i2<$con2;$i2++)
										{
											mysqli_data_seek($query2, $i2);
											$row2[$i2]=mysqli_fetch_row($query2);
										}
										
										$messageids=explode(&#039;;&#039;, $row2[0][2]);
										$count1=count($messageids);
										
										for($e=0;$e<$count1;$e++)
										{
											if($e==0)
											{
												$bot->api->editMessageMedia([
												&#039;chat_id&#039; => $bot->mainchannel,
												&#039;message_id&#039; => $messageids[$e],
												&#039;media&#039; => json_encode( [&#039;type&#039; => &#039;photo&#039;, &#039;media&#039; => $photosold, &#039;caption&#039; => $text, &#039;parse_mode&#039; => "HTML" ]),
												]);

											}
											else
											{
												$bot->api->editMessageMedia([
												&#039;chat_id&#039; => $bot->mainchannel,
												&#039;message_id&#039; => $messageids[$e],
												&#039;media&#039; => json_encode( [&#039;type&#039; => &#039;photo&#039;, &#039;media&#039; => $photosold]),
												]);
											}

										}
										
										$photos=explode(&#039;;&#039;, $photo);
										$cnt=count($photos);
										
										for($y=0;$y<$cnt;$y++)
										{
											$photos[$y]=str_replace(&#039;https://domain.com&#039;, &#039;&#039;.dirname(__FILE__).&#039;&#039;, $photos[$y]);
											unlink($photos[$y]);
											usleep(100000);
										}
									}
									else
									{
										
										$query2=mysqli_query($con_sql2, &#039;SELECT * FROM &#039;.$tabservicerecords.&#039; WHERE record="&#039;.$messageid.&#039;"&#039;);
										$con2=mysqli_num_rows($query2);
					
										for($i2=0;$i2<$con2;$i2++)
										{
											mysqli_data_seek($query2, $i2);
											$row2[$i2]=mysqli_fetch_row($query2);
										}
										
										$messageids=explode(&#039;;&#039;, $row2[0][2]);
										$count1=count($messageids);
										
										for($e=0;$e<$count1;$e++)
										{
											$bot->api->deleteMessage([
											&#039;chat_id&#039; => $bot->mainchannel,
											&#039;message_id&#039; => $messageids[$e]
											]);
											usleep(100000);
										}
										
										$photos=explode(&#039;;&#039;, $photo);
										$cnt=count($photos);
										
										for($y=0;$y<$cnt;$y++)
										{
											$photos[$y]=str_replace(&#039;https://domain.com&#039;, &#039;&#039;.dirname(__FILE__).&#039;&#039;, $photos[$y]);
											unlink($photos[$y]);
											usleep(100000);
										}
										
									}
									
									mysqli_query($con_sql2, &#039;DELETE FROM &#039;.$tabservicerecords.&#039; WHERE record="&#039;.$messageid.&#039;"&#039;);
									
								}
								
				
								$chatidseller=$row1[0][15];
								$tabsold=&#039;tabservicesold&#039;.$chatidseller.&#039;&#039;;
								
								if(mysqli_query($con_sql2, &#039;SELECT 1 FROM &#039;.$tabsold.&#039; LIMIT 1&#039;)==FALSE)
								{
									mysqli_query($con_sql2, &#039;CREATE TABLE &#039;.$tabsold.&#039; LIKE '.$input.'&#039;);
									usleep(250000);
								}
								
								mysqli_query($con_sql2, &#039;INSERT INTO &#039;.$tabsold.&#039; (type, cat, gender, brand, size, price, alt, pic, date, time, messid, cond, chatid, buyer, seller) SELECT type, cat, gender, brand, size, price, alt, pic, date, time, messid, cond, chatid, buyer, seller FROM '.$input.' WHERE messid="'.$table[$u].'"&#039;);
								
								$query2=mysqli_query($con_sql2, &#039;SELECT * FROM &#039;.$tabsold.&#039; WHERE messid="'.$table[$u].'"&#039;);
								$con2=mysqli_num_rows($query2);
								usleep(100000);
								
								for($i2=0;$i2<$con2;$i2++)
								{
									mysqli_data_seek($query2, $i2);
									$row2[$i2]=mysqli_fetch_row($query2);
								}
								
							
								$tabseller=&#039;tabmain&#039;.$chatidseller.&#039;&#039;;
				
								$time=time();
								$date=date("d.m.Y");
								
								$query2=&#039;UPDATE &#039;.$tabsold.&#039; SET date = REPLACE(date, "&#039;.$row2[0][9].&#039;", "&#039;.$date.&#039;") WHERE messid="'.$table[$u].'"&#039;; 
								$result2=mysqli_query($con_sql2, $query2);
								usleep(100000);
								
								$query2=&#039;UPDATE &#039;.$tabsold.&#039; SET time = REPLACE(time, "&#039;.$row2[0][10].&#039;", "&#039;.$time.&#039;") WHERE messid="'.$table[$u].'"&#039;; 
								$result2=mysqli_query($con_sql2, $query2);
								usleep(100000);
								
								$query2=mysqli_query($con_sql2, &#039;DELETE FROM '.$input.' WHERE messid="'.$table[$u].'"&#039;);
								usleep(100000);
								
								$query2=mysqli_query($con_sql2, &#039;DELETE FROM &#039;.$tabseller.&#039; WHERE messid="'.$table[$u].'"&#039;);
								usleep(100000);
								
								
								if(isset($bot->api->body[&#039;callback_query&#039;]["id"]))
								{
									$callback_query_id=$bot->api->body[&#039;callback_query&#039;]["id"];
									$bot->api->answerCallbackQuery($callback_query_id);
								}
								
								
								$query4=mysqli_query($con_sql2, &#039;SHOW TABLES LIKE "tabservicebuy%"&#039;);
								$con4=mysqli_num_rows($query4);
								
								if($con4!=0)
								{
								
									for($i4=0;$i4<$con4;$i4++)
									{
										mysqli_data_seek($query4, $i4);
										$row4[$i4]=mysqli_fetch_row($query4);
										
										if(mysqli_num_rows(mysqli_query($con_sql2, &#039;SELECT * FROM &#039;.$row4[$i4][0].&#039; WHERE messid="'.$table[$u].'"&#039;))!=0)
										{
											if($row4[$i4][0]!==&#039;'.$input.'&#039;)
											{
												$query2=mysqli_query($con_sql2, &#039;DELETE FROM &#039;.$row4[$i4][0].&#039; WHERE messid="'.$table[$u].'"&#039;);
												usleep(100000);
												
												$chatidbuyers=str_replace(&#039;tabservicebuy&#039;, &#039;&#039;, $row4[$i4][0]);
												$chatidbuyers=$bot->clean($chatidbuyers);
												
												$text3=&#039;–í–∞—à–∞ –∑–∞—è–≤–∫–∞ –Ω–∞ –ø–æ–∫—É–ø–∫—É —Ç–æ–≤–∞—Ä–∞ —Å ID <b>‚Ññ'.$table[$u].'</b> –±—ã–ª–∞ <b>–æ—Ç–º–µ–Ω–µ–Ω–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º</b>.&#039;.PHP_EOL.&#039;&#039;.PHP_EOL.&#039;–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –¥–∞–Ω–Ω–æ–≥–æ —Ç–æ–≤–∞—Ä–∞ –Ω–µ—Ç –≤ –Ω–∞–ª–∏—á–∏–∏. –ò–∑–≤–∏–Ω–∏—Ç–µ –∑–∞ –Ω–µ—É–¥–æ–±—Å—Ç–≤–∞.&#039;.$bot->pre.&#039;&#039;;
												
												$bot->api->sendMessage([
												&#039;chat_id&#039; => $chatidbuyers,
												&#039;text&#039; => $text3,
												&#039;reply_markup&#039; => json_encode( [&#039;inline_keyboard&#039;=>$bot->keyboards[&#039;inline_buy_default&#039;]]),
												&#039;parse_mode&#039; => "HTML",
												]);
												usleep(100000);
											}	
										}
										
									}
								}
	
								$text2=&#039;–í–∞—à–∞ –∑–∞—è–≤–∫–∞ –Ω–∞ –ø–æ–∫—É–ø–∫—É —Ç–æ–≤–∞—Ä–∞ —Å ID <b>‚Ññ'.$table[$u].'</b> –±—ã–ª–∞ <b>—Å–æ–≥–ª–∞—Å–æ–≤–∞–Ω–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º</b>.&#039;.PHP_EOL.&#039;–í –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è —Å –≤–∞–º–∏ <b>—Å–≤—è–∂–µ—Ç—Å—è –ü—Ä–æ–¥–∞–≤–µ—Ü.</b>&#039;.$bot->pre.&#039;&#039;;
			
								$bot->api->sendMessage([
					
								&#039;chat_id&#039; => '.$chatidbuyer.',
								&#039;text&#039; => $text2,
								&#039;reply_markup&#039; => json_encode( [&#039;inline_keyboard&#039;=>$bot->keyboards[&#039;inline_buy_default&#039;]]),
								&#039;parse_mode&#039; => "HTML",
								]);
								usleep(100000);
							
								$merge=$bot->cmd_admin_send_sold_channel_records('.$input.');
								usleep(100000);
								
								if (array_filter($merge) !== [])
								{
									
									if(isset($bot->api->body[&#039;callback_query&#039;]["id"]))
									{
										$callback_query_id=$bot->api->body[&#039;callback_query&#039;]["id"];
										$bot->api->answerCallbackQuery($callback_query_id);
									}
									
									$text=&#039;<b>–í—ã –ü–û–î–¢–í–ï–†–î–ò–õ–ò –ø–æ–∫—É–ø–∫—É:</b>&#039;.PHP_EOL.&#039;&#039;.PHP_EOL.&#039;–ü–æ–∫—É–ø–∞—Ç–µ–ª—å üë§<b>&#039;.$row2[0][14].&#039;</b>, –ü—Ä–æ–¥–∞–≤–µ—Ü üë§<b>&#039;.$row2[0][15].&#039;</b>, ID —Ç–æ–≤–∞—Ä–∞ <b>‚Ññ'.$table[$u].'</b>.&#039;.PHP_EOL.&#039;&#039;.PHP_EOL.&#039;–í—ã –º–æ–∂–µ—Ç–µ –≤—ã–±—Ä–∞—Ç—å –¥—Ä—É–≥–æ–π <b>ID —Ç–æ–≤–∞—Ä–∞</b>, —á—Ç–æ–±—ã –ø—Ä–æ–¥–∞—Ç—å –µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é üë§<b>&#039;.$row2[0][14].&#039;</b>.&#039;.$bot->pre.&#039;&#039;;
									
									$merge[] = [[&#039;text&#039; => &#039;‚¨ÖÔ∏è–ù–∞–∑–∞–¥&#039;, &#039;callback_data&#039; => &#039;admin_back_deleterecords_users&#039;], [&#039;text&#039; => &#039;‚§¥Ô∏è–í—ã–π—Ç–∏&#039;, &#039;callback_data&#039; => &#039;admin_exit_main&#039;]];
									
								
									$bot->api->editMessageText([
									&#039;chat_id&#039; => $bot->api->body[&#039;callback_query&#039;][&#039;message&#039;][&#039;chat&#039;]["id"],
									&#039;message_id&#039; => $bot->api->body[&#039;callback_query&#039;][&#039;message&#039;][&#039;message_id&#039;],
									&#039;text&#039; => $text,
									&#039;parse_mode&#039; => "HTML",
									&#039;reply_markup&#039; => json_encode( [&#039;inline_keyboard&#039;=>$merge] ),
									]);
									usleep(100000);
								}
								else
								{
									
									if(isset($bot->api->body[&#039;callback_query&#039;]["id"]))
									{
										$callback_query_id=$bot->api->body[&#039;callback_query&#039;]["id"];
										$bot->api->answerCallbackQuery($callback_query_id);
									}
									
									$text=&#039;–í—ã –ü–û–î–¢–í–ï–†–î–ò–õ–ò –ø–æ–∫—É–ø–∫—É:</b>&#039;.PHP_EOL.&#039;&#039;.PHP_EOL.&#039;–ü–æ–∫—É–ø–∞—Ç–µ–ª—å üë§<b>&#039;.$row2[0][14].&#039;</b>, –ü—Ä–æ–¥–∞–≤–µ—Ü üë§<b>&#039;.$row2[0][15].&#039;</b>, ID —Ç–æ–≤–∞—Ä–∞ <b>‚Ññ'.$table[$u].'</b>.&#039;.PHP_EOL.&#039;&#039;.PHP_EOL.&#039;–í—ã –º–æ–∂–µ—Ç–µ –≤—ã–±—Ä–∞—Ç—å –¥—Ä—É–≥–æ–π <b>ID —Ç–æ–≤–∞—Ä–∞</b>, —á—Ç–æ–±—ã –ø—Ä–æ–¥–∞—Ç—å –µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é üë§<b>&#039;.$row2[0][14].&#039;</b>.&#039;.PHP_EOL.&#039;–í –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è üë§<b>'.$row2[0][14].'</b> –Ω–µ—Ç –∑–∞–∫–∞–∑–∞–Ω–Ω—ã—Ö —Ç–æ–≤–∞—Ä–æ–≤.&#039;.PHP_EOL.&#039; –í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ –û—Ç–º–µ—Ç–∏—Ç—å –ø—Ä–æ–¥–∞–∂—É. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–∏—Ä–∏—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, —á—Ç–æ–±—ã –ø—Ä–æ–¥–∞—Ç—å –µ–º—É —Ç–æ–≤–∞—Ä.&#039;.$bot->pre.&#039;&#039;;
									
									$merge=$bot->cmd_admin_send_sold_channel();
									
									if (array_filter($merge) !== [])
									{
									
										$merge[] = [[&#039;text&#039; => &#039;‚¨ÖÔ∏è–ù–∞–∑–∞–¥&#039;, &#039;callback_data&#039; => &#039;admin_back_deleterecords_users&#039;], [&#039;text&#039; => &#039;‚§¥Ô∏è–í—ã–π—Ç–∏&#039;, &#039;callback_data&#039; => &#039;admin_exit_main&#039;]];
									
								
										$bot->api->editMessageText([
										&#039;chat_id&#039; => $bot->api->body[&#039;callback_query&#039;][&#039;message&#039;][&#039;chat&#039;]["id"],
										&#039;message_id&#039; => $bot->api->body[&#039;callback_query&#039;][&#039;message&#039;][&#039;message_id&#039;],
										&#039;text&#039; => $text,
										&#039;parse_mode&#039; => "HTML",
										&#039;reply_markup&#039; => json_encode( [&#039;inline_keyboard&#039;=>$merge] ),
										]);
										
									}
									else
									{
										
										if(isset($bot->api->body[&#039;callback_query&#039;]["id"]))
										{
											$callback_query_id=$bot->api->body[&#039;callback_query&#039;]["id"];
											$bot->api->answerCallbackQuery($callback_query_id);
										}
										
										$text=&#039;<b>–í—ã –ü–û–î–¢–í–ï–†–î–ò–õ–ò –ø–æ–∫—É–ø–∫—É:</b>&#039;.PHP_EOL.&#039;&#039;.PHP_EOL.&#039;–ü–æ–∫—É–ø–∞—Ç–µ–ª—å üë§<b>&#039;.$row2[0][14].&#039;</b>, –ü—Ä–æ–¥–∞–≤–µ—Ü üë§<b>&#039;.$row2[0][15].&#039;</b>, ID —Ç–æ–≤–∞—Ä–∞ <b>‚Ññ'.$table[$u].'</b>.&#039;.PHP_EOL.&#039;&#039;.PHP_EOL.&#039;–í—ã –º–æ–∂–µ—Ç–µ –≤—ã–±—Ä–∞—Ç—å –¥—Ä—É–≥–æ–π <b>ID —Ç–æ–≤–∞—Ä–∞</b>, —á—Ç–æ–±—ã –ø—Ä–æ–¥–∞—Ç—å –µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é üë§<b>&#039;.$row2[0][14].&#039;</b>.&#039;.PHP_EOL.&#039;–í –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è üë§<b>'.$row2[0][14].'</b> –Ω–µ—Ç –∑–∞–∫–∞–∑–∞–Ω–Ω—ã—Ö —Ç–æ–≤–∞—Ä–æ–≤.&#039;.PHP_EOL.&#039;–í –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç <b>–Ω–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π,</b> —É –∫–æ—Ç–æ—Ä—ã—Ö –µ—Å—Ç—å –∑–∞–∫–∞–∑–∞–Ω–Ω—ã–µ —Ç–æ–≤–∞—Ä—ã.&#039;.PHP_EOL.&#039;&#039;.PHP_EOL.&#039;–í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ –ø–æ–¥–º–µ–Ω—é <b>–£—Ç–≤–µ—Ä–∂–¥–µ–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏</b> –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞.&#039;.$bot->pre.&#039;&#039;;
									
										
										$bot->api->sendMessage([
											&#039;text&#039; => $text,
											&#039;reply_markup&#039; => json_encode( [&#039;inline_keyboard&#039;=>$bot->keyboards[&#039;inline_admin_approvedusers&#039;]]),
											&#039;disable_notification&#039; => TRUE,
											&#039;disable_web_page_preview&#039; => TRUE,
											&#039;parse_mode&#039;=> "HTML"
										]);
										usleep(100000);
									}
								}
							}
						/* 	else
							{
								
								$merge=$bot->cmd_admin_send_sold_channel();
								
								
								if (array_filter($merge) !== [])
								{
									
									$merge[] = [[&#039;text&#039; => &#039;‚¨ÖÔ∏è–ù–∞–∑–∞–¥&#039;, &#039;callback_data&#039; => &#039;admin_back_approvedusers&#039;], [&#039;text&#039; => &#039;‚§¥Ô∏è–í—ã–π—Ç–∏&#039;, &#039;callback_data&#039; => &#039;admin_exit_main&#039;]];
									
									$text=&#039;–í—ã–±—Ä–∞–Ω–Ω—ã–π ID —Ç–æ–≤–∞—Ä–∞ <b>‚Ññ'.$table[$u].'</b> –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è üë§<b>'.$input.'</b> –±—ã–ª —É—Å–ø–µ—à–Ω–æ –æ—Ç–º–µ—á–µ–Ω –∫–∞–∫ –ø—Ä–æ–¥–∞–Ω–Ω—ã–π.&#039;.PHP_EOL.&#039;–í –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è üë§<b>'.$input.'</b> –Ω–µ—Ç —Ç–æ–≤–∞—Ä–æ–≤, —Ä–∞–∑–º–µ—â–µ–Ω–Ω—ã—Ö –≤ –∫–∞–Ω–∞–ª–µ!&#039;.PHP_EOL.&#039;&#039;.PHP_EOL.&#039;–í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ –û—Ç–º–µ—Ç–∏—Ç—å –ø—Ä–æ–¥–∞–∂—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–∏—Ä–∏—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, —á—Ç–æ–±—ã –æ—Ç–º–µ—Ç–∏—Ç—å –µ–≥–æ —Ç–æ–≤–∞—Ä—ã –∫–∞–∫ –ø—Ä–æ–¥–∞–Ω–Ω—ã–µ.&#039;;
									$bot->api->answerCallbackQuery($callback_query_id);
								
									$bot->api->editMessageText([
									&#039;chat_id&#039; => $bot->api->body[&#039;callback_query&#039;][&#039;message&#039;][&#039;chat&#039;]["id"],
									&#039;message_id&#039; => $bot->api->body[&#039;callback_query&#039;][&#039;message&#039;][&#039;message_id&#039;],
									&#039;text&#039; => $text,
									&#039;parse_mode&#039; => "HTML",
									&#039;reply_markup&#039; => json_encode( [&#039;inline_keyboard&#039;=>$merge] ),
									]);
								}
								else
								{
									$text=&#039;–í—ã–±—Ä–∞–Ω–Ω—ã–π ID —Ç–æ–≤–∞—Ä–∞ <b>‚Ññ'.$table[$u].'</b> –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è üë§<b>'.$input.'</b> –±—ã–ª —É—Å–ø–µ—à–Ω–æ –æ—Ç–º–µ—á–µ–Ω –∫–∞–∫ –ø—Ä–æ–¥–∞–Ω–Ω—ã–π.&#039;.PHP_EOL.&#039;–í –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è üë§<b>'.$table[$u].'</b> –Ω–µ—Ç —Ç–æ–≤–∞—Ä–æ–≤, —Ä–∞–∑–º–µ—â–µ–Ω–Ω—ã—Ö –≤ –∫–∞–Ω–∞–ª–µ. –í –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –Ω–µ—Ç —Ç–æ–≤–∞—Ä–æ–≤, —Ä–∞–∑–º–µ—â–µ–Ω–Ω—ã—Ö –≤ –∫–∞–Ω–∞–ª–µ.&#039;.PHP_EOL.&#039; –í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ –º–µ–Ω—é —É—Ç–≤–µ—Ä–∂–¥–µ–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π.&#039;;
									
									$bot->api->answerCallbackQuery($callback_query_id);
									$bot->api->editMessageText([
									&#039;chat_id&#039; => $bot->api->body[&#039;callback_query&#039;][&#039;message&#039;][&#039;chat&#039;]["id"],
									&#039;message_id&#039; => $bot->api->body[&#039;callback_query&#039;][&#039;message&#039;][&#039;message_id&#039;],
									&#039;text&#039; => $text,
									&#039;parse_mode&#039; => "HTML",
									&#039;reply_markup&#039; => json_encode( [&#039;inline_keyboard&#039;=>$bot->keyboards[&#039;inline_admin_approvedusers&#039;]] ),
									]);
								}
							} */
						}';
							
						file_put_contents($include, html_entity_decode($insert, ENT_QUOTES) . PHP_EOL . PHP_EOL,FILE_APPEND);
					}
				}
				}
				$u++;	
			}
				
			$merge[]=$put;
			unset($put);
			
		}
		
		$insert='}';
		file_put_contents($include, $insert,FILE_APPEND);
		
		return $merge;
			
				
	}


/////	
	public function callback_admin_back_approvedusers()
	{		
		$con_sql2=$this->cmd_sql();
		
		$tab='tabserviceapproved';
		
		if(mysqli_num_rows(mysqli_query($con_sql2, 'SELECT 1 FROM '.$tab.' WHERE id LIKE "%" LIMIT 1'))==0)
		{
			$text='–í –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –Ω–µ—Ç <b>—É—Ç–≤–µ—Ä–∂–¥–µ–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π!</b>'.PHP_EOL.'–í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –≤ <b>–≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞</b>.'.$this->pre.'';
			$this->callbackAnswer( $text, $this->keyboards['inline_admin_users']);
		}
		else
		{
			$text='–í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –≤ —Ä–∞–∑–¥–µ–ª <b>–£—Ç–≤–µ—Ä–∂–¥–µ–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏</b>. –í—ã–±–µ—Ä–∏—Ç–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–π –ø–æ–¥—Ä–∞–∑–¥–µ–ª, –Ω–∞–∂–∞–≤ –Ω–∞ –∫–Ω–æ–ø–∫–∏ –Ω–∏–∂–µ.'.$this->pre.'';
			$this->callbackAnswer( $text, $this->keyboards['inline_admin_approvedusers']);
		}
	
	}
	
////////////////////BANNED/////////////////
public function callback_admin_bannedusers()
	{		
		$con_sql2=$this->cmd_sql();
		
		$tab='tabservicebanned';
		
		if(mysqli_num_rows(mysqli_query($con_sql2, 'SELECT 1 FROM '.$tab.' WHERE id LIKE "%" LIMIT 1'))==0)
		{
			$text='–í –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç <b>–Ω–µ—Ç –∑–∞–±–∞–Ω–µ–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π!</b>'.PHP_EOL.'–í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ <b>–≥–ª–∞–≤–Ω–æ–º –º–µ–Ω—é –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞</b>.'.$this->pre.'';
			$this->callbackAnswer( $text, $this->keyboards['inline_admin_users']);
		}
		else
		{
			$text='–í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ —Ä–∞–∑–¥–µ–ª–µ <b>–ó–∞–±–∞–Ω–µ–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏</b>. –í—ã–±–µ—Ä–∏—Ç–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–π –ø–æ–¥—Ä–∞–∑–¥–µ–ª, –Ω–∞–∂–∞–≤ –Ω–∞ –∫–Ω–æ–ø–∫–∏ –Ω–∏–∂–µ.'.$this->pre.'';
			$this->callbackAnswer( $text, $this->keyboards['inline_admin_bannedusers']);
		}
		
	}
	
/////	
	public function callback_admin_showbannedusers()
	{		
		$con_sql2=$this->cmd_sql();
		
		$tab='tabservicebanned';
		
		
			$merge=$this->cmd_admin_showbannedusers();
			usleep(100000);
			
			if (array_filter($merge) !== [])
			{
				$merge[] = [['text' => '‚¨ÖÔ∏è–ù–∞–∑–∞–¥', 'callback_data' => 'admin_back_bannedusers'], ['text' => '‚§¥Ô∏è–í—ã–π—Ç–∏', 'callback_data' => 'admin_exit_main']];
				$text='–í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ <b>–ü–æ–∫–∞–∑–∞—Ç—å –∑–∞–±–∞–Ω–µ–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π</b>. –í—ã–±–µ—Ä–∏—Ç–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, —á—Ç–æ–±—ã –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –Ω–µ–º.'.$this->pre.'';
				$this->callbackAnswer( $text, $merge);
			}
			else
			{
				$text='–í –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç <b>–Ω–µ—Ç –∑–∞–±–∞–Ω–µ–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π!</b>'.PHP_EOL.'–í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ <b>–≥–ª–∞–≤–Ω–æ–º –º–µ–Ω—é –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞</b>.'.$this->pre.'';
				$this->callbackAnswer( $text, $this->keyboards['inline_admin_users']);
			}
			
		
	}


/////	
	public function callback_admin_back_bannedusers()
	{		
		$con_sql2=$this->cmd_sql();
		
		$tab='tabservicebanned';
		
		if(mysqli_num_rows(mysqli_query($con_sql2, 'SELECT 1 FROM '.$tab.' WHERE id LIKE "%" LIMIT 1'))==0)
		{
			$text='–í –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç <b>–Ω–µ—Ç –∑–∞–±–∞–Ω–µ–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π!</b>'.PHP_EOL.'–í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ <b>–≥–ª–∞–≤–Ω–æ–º –º–µ–Ω—é –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞</b>.'.$this->pre.'';
			$this->callbackAnswer( $text, $this->keyboards['inline_admin_users']);
		}
		else
		{
			$text='–í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –≤ —Ä–∞–∑–¥–µ–ª <b>–ó–∞–±–∞–Ω–µ–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏</b>. –í—ã–±–µ—Ä–∏—Ç–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–π –ø–æ–¥—Ä–∞–∑–¥–µ–ª, –Ω–∞–∂–∞–≤ –Ω–∞ –∫–Ω–æ–ø–∫–∏ –Ω–∏–∂–µ.'.$this->pre.'';
			$this->callbackAnswer( $text, $this->keyboards['inline_admin_bannedusers']);
		}
	
	}

/////
	public function cmd_admin_showbannedusers()
	{
		$adminid=$this->chatidadmin;		
		$con_sql2=$this->cmd_sql();

		$tab='tabservicebanned';
		
		
		$query1=mysqli_query($con_sql2, 'SELECT DISTINCT chatid FROM '.$tab.'');
		usleep(100000);
		$con1=mysqli_num_rows($query1);
		
		$table=[];
		
		for($i=0;$i<$con1;$i++)
		{
			mysqli_data_seek($query1, $i);
			$row1[$i]=mysqli_fetch_row($query1);
			$table[]=$row1[$i][0];	
		}
		usleep(100000);
		
		$cnt=count($table);
		$maxbuttons=1;
		$ceil=ceil($cnt/$maxbuttons);
		
		
		
		$include=''.dirname(__FILE__).'/include'.$this->api->chatId.'.php';
		
		if(file_exists($include)==FALSE)
		{
			touch($include);
			
			$insert='<?php
		
		
			class TelegramBotfunc{';
			file_put_contents($include, $insert . PHP_EOL,FILE_APPEND);
			
		}
		else
		{
			$getinclude=file($include);
			unset($getinclude[array_key_last($getinclude)]);
			file_put_contents($include, $getinclude);
		}
		
		$u=0;
		$merge=[];
		
		for($i1=0;$i1<$ceil;$i1++)
		{
			$put=[];
			for($i2=0;$i2<$maxbuttons;$i2++)
			{	
				if(isset($table[$u]))
				{
					$query2=mysqli_query($con_sql2, 'SELECT * FROM '.$tab.' WHERE chatid="'.$table[$u].'"');
					usleep(100000);
					$con2=mysqli_num_rows($query2);
					for($i2=0;$i2<$con2;$i2++)
					{
						mysqli_data_seek($query2, $i2);
						$row2[$i2]=mysqli_fetch_row($query2);
					}
					
					$phone=$row2[0][5];
					$fio=$row2[0][6];
					
					$buttext='üë§'.$fio.' ('.$phone.')';
					
					
					$put[]=["text" => "$buttext", "callback_data" => "admin_showbanneduser_$table[$u]"];
					
					if(preg_match('/callback_admin_showbanneduser_'.$table[$u].'/', file_get_contents($include))==FALSE)
					{
						$insert='
						public function callback_admin_showbanneduser_'.$table[$u].'()
						{	
				
							$bot = new TestBot;
							$bot->api->getWebhookUpdate();
							$callback_query_id=$bot->api->body[&#039;callback_query&#039;]["id"];
							
							$con_sql2=$bot->cmd_sql();
							$tab=&#039;tabservicebanned&#039;;
							
							$query1=mysqli_query($con_sql2, &#039;SELECT 1 FROM &#039;.$tab.&#039; WHERE id LIKE "%" LIMIT 1&#039;);
							usleep(100000);
							$con1=mysqli_num_rows($query1);
							
							if($con1!=0)
							{
								
								
								$query=mysqli_query($con_sql2, &#039;SELECT * FROM &#039;.$tab.&#039; WHERE chatid="'.$table[$u].'"&#039;);
								usleep(100000);
								$con=mysqli_num_rows($query);
								
								for($i=0;$i<$con;$i++)
								{
									mysqli_data_seek($query, $i);
									$row[$i]=mysqli_fetch_row($query);
								}
								
								$chatid=$row[0][1];
								$firstname=$row[0][2];
								$lastname=$row[0][3];
								$username=$row[0][4];
								$phone=$row[0][5];
								$fio=$row[0][6];
								
								if($username==&#039;–Ω–µ—Ç –¥–∞–Ω–Ω—ã—Ö&#039;)
								{
									$text=&#039;–ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: <b>&#039;.$username.&#039;</b>&#039;.PHP_EOL.&#039;–ò–º—è: <b>&#039;.$firstname.&#039;</b>&#039;.PHP_EOL.&#039;–§–∞–º–∏–ª–∏—è: <b>&#039;.$lastname.&#039;</b>&#039;.PHP_EOL.&#039;–ß–∞—Ç: <b>&#039;.$chatid.&#039;</b>&#039;.PHP_EOL.&#039;–¢–µ–ª–µ—Ñ–æ–Ω: <b>&#039;.$phone.&#039;</b>&#039;.PHP_EOL.&#039;–§–ò–û: <b>&#039;.$fio.&#039;</b>&#039;.PHP_EOL.&#039;&#039;.PHP_EOL.&#039;–í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ –ü–æ–∫–∞–∑–∞—Ç—å –∑–∞–±–∞–Ω–µ–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π. –í—ã–±–µ—Ä–∏—Ç–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, —á—Ç–æ–±—ã –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –Ω–µ–º.&#039;.$bot->pre.&#039;&#039;;
								}
								else
								{
									$text=&#039;–ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: <b>@&#039;.$username.&#039;</b>&#039;.PHP_EOL.&#039;–ò–º—è: <b>&#039;.$firstname.&#039;</b>&#039;.PHP_EOL.&#039;–§–∞–º–∏–ª–∏—è: <b>&#039;.$lastname.&#039;</b>&#039;.PHP_EOL.&#039;–ß–∞—Ç: <b>&#039;.$chatid.&#039;</b>&#039;.PHP_EOL.&#039;–¢–µ–ª–µ—Ñ–æ–Ω: <b>&#039;.$phone.&#039;</b>&#039;.PHP_EOL.&#039;–§–ò–û: <b>&#039;.$fio.&#039;</b>&#039;.PHP_EOL.&#039;&#039;.PHP_EOL.&#039;–í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ –ü–æ–∫–∞–∑–∞—Ç—å –∑–∞–±–∞–Ω–µ–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π. –í—ã–±–µ—Ä–∏—Ç–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, —á—Ç–æ–±—ã –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –Ω–µ–º.&#039;.$bot->pre.&#039;&#039;;
								}
		
								
								
								$merge=$bot->cmd_admin_showbannedusers();
								usleep(100000);
								
								if (array_filter($merge) !== [])
								{
									$merge[] = [[&#039;text&#039; => &#039;‚¨ÖÔ∏è–ù–∞–∑–∞–¥&#039;, &#039;callback_data&#039; => &#039;admin_back_bannedusers&#039;], [&#039;text&#039; => &#039;‚§¥Ô∏è–í—ã–π—Ç–∏&#039;, &#039;callback_data&#039; => &#039;admin_exit_main&#039;]];
								
									$bot->api->answerCallbackQuery($callback_query_id);
									$bot->api->editMessageText([
									&#039;chat_id&#039; => $bot->api->body[&#039;callback_query&#039;][&#039;message&#039;][&#039;chat&#039;]["id"],
									&#039;message_id&#039; => $bot->api->body[&#039;callback_query&#039;][&#039;message&#039;][&#039;message_id&#039;],
									&#039;text&#039; => $text,
									&#039;parse_mode&#039; => "HTML",
									&#039;reply_markup&#039; => json_encode( [&#039;inline_keyboard&#039;=>$merge] ),
									]);
									usleep(100000);
								}
								else
								{
									$text=&#039;–í –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç <b>–Ω–µ—Ç –∑–∞–±–∞–Ω–µ–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π!</b>&#039;.PHP_EOL.&#039;&#039;.PHP_EOL.&#039;–í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ <b>–≥–ª–∞–≤–Ω–æ–º –º–µ–Ω—é –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞</b>.&#039;.$bot->pre.&#039;&#039;;
									
									$bot->api->answerCallbackQuery($callback_query_id);
									$bot->api->editMessageText([
									&#039;chat_id&#039; => $bot->api->body[&#039;callback_query&#039;][&#039;message&#039;][&#039;chat&#039;]["id"],
									&#039;message_id&#039; => $bot->api->body[&#039;callback_query&#039;][&#039;message&#039;][&#039;message_id&#039;],
									&#039;text&#039; => $text,
									&#039;parse_mode&#039; => "HTML",
									&#039;reply_markup&#039; => json_encode( [&#039;inline_keyboard&#039;=>$bot->keyboards[&#039;inline_admin_main&#039;]] ),
									]);
								}
							}
							else
							{
								$text=&#039;–í –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç <b>–Ω–µ—Ç –∑–∞–±–∞–Ω–µ–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π!</b>&#039;.PHP_EOL.&#039;&#039;.PHP_EOL.&#039;–í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ <b>–≥–ª–∞–≤–Ω–æ–º –º–µ–Ω—é –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞</b>.&#039;.$bot->pre.&#039;&#039;;
								
								$bot->api->answerCallbackQuery($callback_query_id);
								$bot->api->editMessageText([
								&#039;chat_id&#039; => $bot->api->body[&#039;callback_query&#039;][&#039;message&#039;][&#039;chat&#039;]["id"],
								&#039;message_id&#039; => $bot->api->body[&#039;callback_query&#039;][&#039;message&#039;][&#039;message_id&#039;],
								&#039;text&#039; => $text,
								&#039;parse_mode&#039; => "HTML",
								&#039;reply_markup&#039; => json_encode( [&#039;inline_keyboard&#039;=>$bot->keyboards[&#039;inline_admin_main&#039;]] ),
								]);
							}
		
						}';
						file_put_contents($include, html_entity_decode($insert, ENT_QUOTES) . PHP_EOL . PHP_EOL,FILE_APPEND);
					}
					
				}	
				$u++;	
			}
				
			$merge[]=$put;
			unset($put);
			
		}
		
		$insert='}';
		file_put_contents($include, $insert,FILE_APPEND);
		
		
		return $merge;
		
			
	}



/////	
	public function callback_admin_unbanbannedusers()
	{		
		$con_sql2=$this->cmd_sql();
		
		$tab='tabservicebanned';
		
		
		
			$merge=$this->cmd_admin_unbanbannedusers();
			usleep(100000);
			if (array_filter($merge) !== [])
			{
				
				$merge[] = [['text' => '‚¨ÖÔ∏è–ù–∞–∑–∞–¥', 'callback_data' => 'admin_back_bannedusers'], ['text' => '‚§¥Ô∏è–í—ã–π—Ç–∏', 'callback_data' => 'admin_exit_main']];
				$text='–í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ <b>–†–∞–∑–±–∞–Ω–∏—Ç—å –∑–∞–±–∞–Ω–µ–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π</b>. –í—ã–±–µ—Ä–∏—Ç–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, —á—Ç–æ–±—ã —Ä–∞–∑–±–∞–Ω–∏—Ç—å –µ–≥–æ.'.$this->pre.'';
				$this->callbackAnswer( $text, $merge);
			}
			else
			{
				$text='–í –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç <b>–Ω–µ—Ç –∑–∞–±–∞–Ω–µ–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π!</b>'.PHP_EOL.'–í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ <b>–≥–ª–∞–≤–Ω–æ–º –º–µ–Ω—é –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞</b>.'.$this->pre.'';
				$this->callbackAnswer( $text, $this->keyboards['inline_admin_main']);
			}
			
		
	}


/////
	public function cmd_admin_unbanbannedusers()
	{
		$adminid=$this->chatidadmin;		
		$con_sql2=$this->cmd_sql();
		
		$tab='tabservicebanned';
		$tab1='tabserviceusers';
		
		$query1=mysqli_query($con_sql2, 'SELECT DISTINCT chatid FROM '.$tab.'');
		usleep(100000);
		$con1=mysqli_num_rows($query1);
		
		$table=[];
		
		for($i=0;$i<$con1;$i++)
		{
			mysqli_data_seek($query1, $i);
			$row1[$i]=mysqli_fetch_row($query1);
			$table[]=$row1[$i][0];	
		}
		usleep(100000);
		
		$cnt=count($table);
		$maxbuttons=1;
		$ceil=ceil($cnt/$maxbuttons);
		
		
		
		$include=''.dirname(__FILE__).'/include'.$this->api->chatId.'.php';
		
		if(file_exists($include)==FALSE)
		{
			touch($include);
			
			$insert='<?php
		
		
			class TelegramBotfunc{';
			file_put_contents($include, $insert . PHP_EOL,FILE_APPEND);
			
		}
		else
		{
			$getinclude=file($include);
			unset($getinclude[array_key_last($getinclude)]);
			file_put_contents($include, $getinclude);
		}
		
		$u=0;
		$merge=[];
		
		for($i1=0;$i1<$ceil;$i1++)
		{
			$put=[];
			for($i2=0;$i2<$maxbuttons;$i2++)
			{	
				if(isset($table[$u]))
				{
					$query2=mysqli_query($con_sql2, 'SELECT * FROM '.$tab.' WHERE chatid="'.$table[$u].'"');
					usleep(100000);
					$con2=mysqli_num_rows($query2);
					for($i2=0;$i2<$con2;$i2++)
					{
						mysqli_data_seek($query2, $i2);
						$row2[$i2]=mysqli_fetch_row($query2);
					}
					
					$phone=$row2[0][5];
					$fio=$row2[0][6];
					
					$buttext='üë§'.$fio.' ('.$phone.')';
					
					$put[]=["text" => "$buttext", "callback_data" => "admin_unbanbanneduser_$table[$u]"];
					
					if(preg_match('/callback_admin_unbanbanneduser_'.$table[$u].'/', file_get_contents($include))==FALSE)
					{
						$insert='
						public function callback_admin_unbanbanneduser_'.$table[$u].'()
						{	
				
							$bot = new TestBot;
							$bot->api->getWebhookUpdate();
							$callback_query_id=$bot->api->body[&#039;callback_query&#039;]["id"];
							
							$con_sql2=$bot->cmd_sql();
							
							$query1=mysqli_query($con_sql2, &#039;SELECT 1 FROM '.$tab.' WHERE chatid="'.$table[$u].'"&#039;);
							usleep(100000);
							$con1=mysqli_num_rows($query1);
							
							if($con1!=0)
							{
								
								mysqli_query($con_sql2, &#039;INSERT INTO '.$tab1.' (chatid, firstname, lastname, username, phone, fio) SELECT chatid, firstname, lastname, username, phone, fio FROM '.$tab.' WHERE chatid="'.$table[$u].'"&#039;);
								usleep(250000);
								
								$queue=&#039;DELETE FROM '.$tab.' WHERE chatid="'.$table[$u].'"&#039;;
								$result=mysqli_query($con_sql2, $queue);
								usleep(100000);
								
								file_put_contents(&#039;&#039;.dirname(__FILE__).&#039;/usersall.txt&#039;, &#039;'.$table[$u].'&#039; . PHP_EOL,FILE_APPEND);
								
								$text=&#039;–ü–æ–∑–¥—Ä–∞–≤–ª—è—é, –í—ã –±—ã–ª–∏ <b>—Ä–∞–∑–±–∞–Ω–µ–Ω—ã</b> –∞–¥–º–∏–Ω–æ–º!&#039;.$bot->pre.&#039;&#039;;

								$bot->api->sendMessage([
									&#039;chat_id&#039; => '.$table[$u].',
									&#039;text&#039; => $text,
									&#039;reply_markup&#039; => json_encode( [&#039;inline_keyboard&#039;=>$bot->keyboards[&#039;inline_default&#039;]]),
									//&#039;disable_notification&#039; => TRUE,
									&#039;disable_web_page_preview&#039; => TRUE,
									&#039;parse_mode&#039;=> "HTML"
								]);
								usleep(100000);
								
								$text=&#039;–í—ã <b>—É—Å–ø–µ—à–Ω–æ —Ä–∞–∑–±–∞–Ω–∏–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è '.$buttext.'</b>.&#039;.PHP_EOL.&#039;–í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ <b>–†–∞–∑–±–∞–Ω–∏—Ç—å –∑–∞–±–∞–Ω–µ–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π</b>. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–∏—Ä–∏—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, —á—Ç–æ–±—ã —Ä–∞–∑–±–∞–Ω–∏—Ç—å –µ–≥–æ.&#039;.$bot->pre.&#039;&#039;;
								
								$merge=$bot->cmd_admin_unbanbannedusers();
								usleep(100000);
								if (array_filter($merge) !== [])
								{
									$merge[] = [[&#039;text&#039; => &#039;‚¨ÖÔ∏è–ù–∞–∑–∞–¥&#039;, &#039;callback_data&#039; => &#039;admin_back_bannedusers&#039;], [&#039;text&#039; => &#039;‚§¥Ô∏è–í—ã–π—Ç–∏&#039;, &#039;callback_data&#039; => &#039;admin_exit_main&#039;]];
								
									$bot->api->answerCallbackQuery($callback_query_id);
									$bot->api->editMessageText([
									&#039;chat_id&#039; => $bot->api->body[&#039;callback_query&#039;][&#039;message&#039;][&#039;chat&#039;]["id"],
									&#039;message_id&#039; => $bot->api->body[&#039;callback_query&#039;][&#039;message&#039;][&#039;message_id&#039;],
									&#039;text&#039; => $text,
									&#039;parse_mode&#039; => "HTML",
									&#039;reply_markup&#039; => json_encode( [&#039;inline_keyboard&#039;=>$merge] ),
									]);
									usleep(100000);
								}
								else
								{
									$text=&#039;–í—ã <b>—É—Å–ø–µ—à–Ω–æ —Ä–∞–∑–±–∞–Ω–∏–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è '.$buttext.'</b>.&#039;.PHP_EOL.&#039;–í –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç <b>–Ω–µ—Ç –∑–∞–±–∞–Ω–µ–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π!</b>&#039;.PHP_EOL.&#039;&#039;.PHP_EOL.&#039;–í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ <b>–≥–ª–∞–≤–Ω–æ–º –º–µ–Ω—é –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞</b>.&#039;.$bot->pre.&#039;&#039;;
									
									$bot->api->answerCallbackQuery($callback_query_id);
									$bot->api->editMessageText([
									&#039;chat_id&#039; => $bot->api->body[&#039;callback_query&#039;][&#039;message&#039;][&#039;chat&#039;]["id"],
									&#039;message_id&#039; => $bot->api->body[&#039;callback_query&#039;][&#039;message&#039;][&#039;message_id&#039;],
									&#039;text&#039; => $text,
									&#039;parse_mode&#039; => "HTML",
									&#039;reply_markup&#039; => json_encode( [&#039;inline_keyboard&#039;=>$bot->keyboards[&#039;inline_admin_main&#039;]] ),
									]);
									usleep(100000);
								}
							}
							else
							{
								$text=&#039;–í –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç <b>–Ω–µ—Ç –∑–∞–±–∞–Ω–µ–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π!</b>&#039;.PHP_EOL.&#039;&#039;.PHP_EOL.&#039;–í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ <b>–≥–ª–∞–≤–Ω–æ–º –º–µ–Ω—é –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞</b>.&#039;.$bot->pre.&#039;&#039;;
								
								$bot->api->answerCallbackQuery($callback_query_id);
								$bot->api->editMessageText([
								&#039;chat_id&#039; => $bot->api->body[&#039;callback_query&#039;][&#039;message&#039;][&#039;chat&#039;]["id"],
								&#039;message_id&#039; => $bot->api->body[&#039;callback_query&#039;][&#039;message&#039;][&#039;message_id&#039;],
								&#039;text&#039; => $text,
								&#039;parse_mode&#039; => "HTML",
								&#039;reply_markup&#039; => json_encode( [&#039;inline_keyboard&#039;=>$bot->keyboards[&#039;inline_admin_main&#039;]] ),
								]);
								usleep(100000);
							}
							
		
						}';
						file_put_contents($include, html_entity_decode($insert, ENT_QUOTES) . PHP_EOL . PHP_EOL,FILE_APPEND);
					}
					
				}	
				$u++;	
			}
				
			$merge[]=$put;
			unset($put);
			
		}
		
		$insert='}';
		file_put_contents($include, $insert,FILE_APPEND);
		
		
		return $merge;
		
			
	}
	
	
	
//////////////////////WANT//////////////////////
	public function callback_admin_wantusers()
	{
		
		$con_sql2=$this->cmd_sql();
		
		$tab='tabservicewant';
		
		
		if(mysqli_num_rows(mysqli_query($con_sql2, 'SELECT 1 FROM '.$tab.' WHERE id LIKE "%" LIMIT 1'))==0)
		{
			$text='–í –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç <b>–Ω–µ—Ç –∑–∞–ø—Ä–æ—Å–∏–≤—à–∏—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π!</b>'.PHP_EOL.'–í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ <b>–≥–ª–∞–≤–Ω–æ–º –º–µ–Ω—é –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞</b>.'.$this->pre.'';
			$this->callbackAnswer( $text, $this->keyboards['inline_admin_users']);
		}
		else
		{
			$text='–í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ —Ä–∞–∑–¥–µ–ª–µ <b>–ó–∞–ø—Ä–æ—Å–∏–≤—à–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏</b>. –í—ã–±–µ—Ä–∏—Ç–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–π –ø–æ–¥—Ä–∞–∑–¥–µ–ª, –Ω–∞–∂–∞–≤ –Ω–∞ –∫–Ω–æ–ø–∫–∏ –Ω–∏–∂–µ.'.$this->pre.'';
			$this->callbackAnswer( $text, $this->keyboards['inline_admin_wantusers']);
		}
	}
	
/////	
	public function callback_admin_back_wantusers()
	{	
	
		$con_sql2=$this->cmd_sql();
		
		$tab='tabservicewant';
		
		
		if(mysqli_num_rows(mysqli_query($con_sql2, 'SELECT 1 FROM '.$tab.' WHERE id LIKE "%" LIMIT 1'))==0)
		{
			$text='–í –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç <b>–Ω–µ—Ç –∑–∞–ø—Ä–æ—Å–∏–≤—à–∏—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π!</b>'.PHP_EOL.'–í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ <b>–≥–ª–∞–≤–Ω–æ–º –º–µ–Ω—é –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞</b>.'.$this->pre.'';
			$this->callbackAnswer( $text, $this->keyboards['inline_admin_users']);
		}
		else
		{
			$text='–í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –≤ —Ä–∞–∑–¥–µ–ª <b>–ó–∞–ø—Ä–æ—Å–∏–≤—à–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏</b>. –í—ã–±–µ—Ä–∏—Ç–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–π –ø–æ–¥—Ä–∞–∑–¥–µ–ª, –Ω–∞–∂–∞–≤ –Ω–∞ –∫–Ω–æ–ø–∫–∏ –Ω–∏–∂–µ.'.$this->pre.'';
			$this->callbackAnswer( $text, $this->keyboards['inline_admin_wantusers']);
		}
	
	}

/////	
	public function callback_admin_showwantusers()
	{		
		$con_sql2=$this->cmd_sql();
		
		$tab='tabservicewant';
		
		
			$merge=$this->cmd_admin_showwantusers();
			usleep(100000);
			if (array_filter($merge) !== [])
			{
				$merge[] = [['text' => '‚¨ÖÔ∏è–ù–∞–∑–∞–¥', 'callback_data' => 'admin_back_wantusers'], ['text' => '‚§¥Ô∏è–í—ã–π—Ç–∏', 'callback_data' => 'admin_exit_main']];
				$text='–í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ <b>–ü–æ–∫–∞–∑–∞—Ç—å –∑–∞–ø—Ä–æ—Å–∏–≤—à–∏—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π</b>. –í—ã–±–µ—Ä–∏—Ç–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, —á—Ç–æ–±—ã –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –Ω–µ–º.'.$this->pre.'';
				$this->callbackAnswer( $text, $merge);
			}
			else
			{
				$text='–í –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç <b>–Ω–µ—Ç –∑–∞–ø—Ä–æ—Å–∏–≤—à–∏—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π!</b>'.PHP_EOL.'–í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ <b>–≥–ª–∞–≤–Ω–æ–º –º–µ–Ω—é –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞</b>.'.$this->pre.'';
				$this->callbackAnswer( $text, $this->keyboards['inline_admin_users']);
			}
			
		
	}


/////
	public function cmd_admin_showwantusers()
	{
		$adminid=$this->chatidadmin;		
		$con_sql2=$this->cmd_sql();
		
		$tab='tabservicewant';
		

		$query1=mysqli_query($con_sql2, 'SELECT DISTINCT chatid FROM '.$tab.'');
		usleep(100000);
		$con1=mysqli_num_rows($query1);
		
		$table=[];
		
		for($i=0;$i<$con1;$i++)
		{
			mysqli_data_seek($query1, $i);
			$row1[$i]=mysqli_fetch_row($query1);
			$table[]=$row1[$i][0];	
		}
		usleep(100000);
		
		$cnt=count($table);
		$maxbuttons=1;
		$ceil=ceil($cnt/$maxbuttons);
		
		
		
		$include=''.dirname(__FILE__).'/include'.$this->api->chatId.'.php';
		
		if(file_exists($include)==FALSE)
		{
			touch($include);
			
			$insert='<?php
		
		
			class TelegramBotfunc{';
			file_put_contents($include, $insert . PHP_EOL,FILE_APPEND);
			
		}
		else
		{
			$getinclude=file($include);
			unset($getinclude[array_key_last($getinclude)]);
			file_put_contents($include, $getinclude);
		}
		
		$u=0;
		$merge=[];
		
		for($i1=0;$i1<$ceil;$i1++)
		{
			$put=[];
			for($i2=0;$i2<$maxbuttons;$i2++)
			{	
				if(isset($table[$u]))
				{
					
					$buttext='üë§'.$this->cmd_user_get_fiophone($table[$u]).'';
					
					$put[]=["text" => "$buttext", "callback_data" => "admin_showwantuser_$table[$u]"];
					
					if(preg_match('/callback_admin_showwantuser_'.$table[$u].'/', file_get_contents($include))==FALSE)
					{
						$insert='
						public function callback_admin_showwantuser_'.$table[$u].'()
						{	
				
							$bot = new TestBot;
							$bot->api->getWebhookUpdate();
							$callback_query_id=$bot->api->body[&#039;callback_query&#039;]["id"];
							
							$con_sql2=$bot->cmd_sql();
							
							$query1=mysqli_query($con_sql2, &#039;SELECT 1 FROM '.$tab.' WHERE id LIKE "%" LIMIT 1&#039;);
							usleep(100000);
							$con1=mysqli_num_rows($query1);
							
							if($con1!=0)
							{
								$query=mysqli_query($con_sql2, &#039;SELECT * FROM '.$tab.' WHERE chatid="'.$table[$u].'"&#039;);
								usleep(100000);
								$con=mysqli_num_rows($query);
								
								for($i=0;$i<$con;$i++)
								{
									mysqli_data_seek($query, $i);
									$row[$i]=mysqli_fetch_row($query);
								}
								
								$chatid=$row[0][1];
								$firstname=$row[0][2];
								$lastname=$row[0][3];
								$username=$row[0][4];
								$phone=$row[0][5];
								
								if($username==&#039;–Ω–µ—Ç –¥–∞–Ω–Ω—ã—Ö&#039;)
								{
									$text=&#039;–ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: <b>&#039;.$username.&#039;</b>&#039;.PHP_EOL.&#039;–ò–º—è: <b>&#039;.$firstname.&#039;</b>&#039;.PHP_EOL.&#039;–§–∞–º–∏–ª–∏—è: <b>&#039;.$lastname.&#039;</b>&#039;.PHP_EOL.&#039;–ß–∞—Ç: <b>&#039;.$chatid.&#039;</b>&#039;.PHP_EOL.&#039;–¢–µ–ª–µ—Ñ–æ–Ω: <b>&#039;.$phone.&#039;</b>&#039;.PHP_EOL.&#039;&#039;.PHP_EOL.&#039;–í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ –ü–æ–∫–∞–∑–∞—Ç—å –∑–∞–ø—Ä–æ—Å–∏–≤—à–∏—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π. –í—ã–±–µ—Ä–∏—Ç–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, —á—Ç–æ–±—ã –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –Ω–µ–º.&#039;.$bot->pre.&#039;&#039;;
								}
								else
								{
									$text=&#039;–ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: <b>@&#039;.$username.&#039;</b>&#039;.PHP_EOL.&#039;–ò–º—è: <b>&#039;.$firstname.&#039;</b>&#039;.PHP_EOL.&#039;–§–∞–º–∏–ª–∏—è: <b>&#039;.$lastname.&#039;</b>&#039;.PHP_EOL.&#039;–ß–∞—Ç: <b>&#039;.$chatid.&#039;</b>&#039;.PHP_EOL.&#039;–¢–µ–ª–µ—Ñ–æ–Ω: <b>&#039;.$phone.&#039;</b>&#039;.PHP_EOL.&#039;&#039;.PHP_EOL.&#039;–í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ –ü–æ–∫–∞–∑–∞—Ç—å –∑–∞–ø—Ä–æ—Å–∏–≤—à–∏—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π. –í—ã–±–µ—Ä–∏—Ç–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, —á—Ç–æ–±—ã –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –Ω–µ–º.&#039;.$bot->pre.&#039;&#039;;
								}
								

								$merge=$bot->cmd_admin_showwantusers();
								usleep(100000);
								if (array_filter($merge) !== [])
								{
									$merge[] = [[&#039;text&#039; => &#039;‚¨ÖÔ∏è–ù–∞–∑–∞–¥&#039;, &#039;callback_data&#039; => &#039;admin_back_wantusers&#039;], [&#039;text&#039; => &#039;‚§¥Ô∏è–í—ã–π—Ç–∏&#039;, &#039;callback_data&#039; => &#039;admin_exit_main&#039;]];
								
									$bot->api->answerCallbackQuery($callback_query_id);
									$bot->api->editMessageText([
									&#039;chat_id&#039; => $bot->api->body[&#039;callback_query&#039;][&#039;message&#039;][&#039;chat&#039;]["id"],
									&#039;message_id&#039; => $bot->api->body[&#039;callback_query&#039;][&#039;message&#039;][&#039;message_id&#039;],
									&#039;text&#039; => $text,
									&#039;parse_mode&#039; => "HTML",
									&#039;reply_markup&#039; => json_encode( [&#039;inline_keyboard&#039;=>$merge] ),
									]);
									usleep(100000);
								}
								else
								{
									$text=&#039;–í –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç <b>–Ω–µ—Ç –∑–∞–ø—Ä–æ—Å–∏–≤—à–∏—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π!</b>&#039;.PHP_EOL.&#039;&#039;.PHP_EOL.&#039;–í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ <b>–≥–ª–∞–≤–Ω–æ–º –º–µ–Ω—é –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞</b>.&#039;.$bot->pre.&#039;&#039;;
									
									$bot->api->answerCallbackQuery($callback_query_id);
									$bot->api->editMessageText([
									&#039;chat_id&#039; => $bot->api->body[&#039;callback_query&#039;][&#039;message&#039;][&#039;chat&#039;]["id"],
									&#039;message_id&#039; => $bot->api->body[&#039;callback_query&#039;][&#039;message&#039;][&#039;message_id&#039;],
									&#039;text&#039; => $text,
									&#039;parse_mode&#039; => "HTML",
									&#039;reply_markup&#039; => json_encode( [&#039;inline_keyboard&#039;=>$bot->keyboards[&#039;inline_admin_main&#039;]] ),
									]);
									usleep(100000);
								}
							}
							else
							{
								$text=&#039;–í –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç <b>–Ω–µ—Ç –∑–∞–ø—Ä–æ—Å–∏–≤—à–∏—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π!</b>&#039;.PHP_EOL.&#039;&#039;.PHP_EOL.&#039;–í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ <b>–≥–ª–∞–≤–Ω–æ–º –º–µ–Ω—é –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞</b>.&#039;.$bot->pre.&#039;&#039;;
								
								$bot->api->answerCallbackQuery($callback_query_id);
								$bot->api->editMessageText([
								&#039;chat_id&#039; => $bot->api->body[&#039;callback_query&#039;][&#039;message&#039;][&#039;chat&#039;]["id"],
								&#039;message_id&#039; => $bot->api->body[&#039;callback_query&#039;][&#039;message&#039;][&#039;message_id&#039;],
								&#039;text&#039; => $text,
								&#039;parse_mode&#039; => "HTML",
								&#039;reply_markup&#039; => json_encode( [&#039;inline_keyboard&#039;=>$bot->keyboards[&#039;inline_admin_main&#039;]] ),
								]);
								usleep(100000);
							}
		
						}';
						file_put_contents($include, html_entity_decode($insert, ENT_QUOTES) . PHP_EOL . PHP_EOL,FILE_APPEND);
					}
					
				}	
				$u++;	
			}
				
			$merge[]=$put;
			unset($put);
			
		}
		
		$insert='}';
		file_put_contents($include, $insert,FILE_APPEND);
		
		
		return $merge;
		
			
	}
	
/////	
	public function callback_admin_approvewantusers()
	{		
		$con_sql2=$this->cmd_sql();
		
		$tab='tabservicewant';
		$tab1='tabserviceapproved';
		
		
			$merge=$this->cmd_admin_approvewantusers();
			usleep(100000);
			if (array_filter($merge) !== [])
			{
				$merge[] = [['text' => '‚¨ÖÔ∏è–ù–∞–∑–∞–¥', 'callback_data' => 'admin_back_wantusers'], ['text' => '‚§¥Ô∏è–í—ã–π—Ç–∏', 'callback_data' => 'admin_exit_main']];
				$text='–í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ <b>–£—Ç–≤–µ—Ä–¥–∏—Ç—å –∑–∞–ø—Ä–æ—Å–∏–≤—à–∏—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π</b>. –í—ã–±–µ—Ä–∏—Ç–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, —á—Ç–æ–±—ã —É—Ç–≤–µ—Ä–¥–∏—Ç—å –µ–≥–æ.'.$this->pre.'';
				$this->callbackAnswer( $text, $merge);
			}
			else
			{
				$text='–í –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç <b>–Ω–µ—Ç –∑–∞–ø—Ä–æ—Å–∏–≤—à–∏—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π!</b>'.PHP_EOL.'–í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ <b>–ì–ª–∞–≤–Ω–æ–º –º–µ–Ω—é –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞</b>.'.$this->pre.'';
				$this->callbackAnswer( $text, $this->keyboards['inline_admin_main']);
			}
			
		
	}


/////
	public function cmd_admin_approvewantusers()
	{
		$adminid=$this->chatidadmin;		
		$con_sql2=$this->cmd_sql();
		
		$tab='tabservicewant';
		$tab1='tabserviceapproved';
		
		$query1=mysqli_query($con_sql2, 'SELECT DISTINCT chatid FROM '.$tab.'');
		usleep(100000);
		$con1=mysqli_num_rows($query1);
		
		$table=[];
		
		for($i=0;$i<$con1;$i++)
		{
			mysqli_data_seek($query1, $i);
			$row1[$i]=mysqli_fetch_row($query1);
			$table[]=$row1[$i][0];	
		}
		usleep(100000);
		
		$cnt=count($table);
		$maxbuttons=1;
		$ceil=ceil($cnt/$maxbuttons);
		
		
		
		$include=''.dirname(__FILE__).'/include'.$this->api->chatId.'.php';
		
		if(file_exists($include)==FALSE)
		{
			touch($include);
			
			$insert='<?php
		
		
			class TelegramBotfunc{';
			file_put_contents($include, $insert . PHP_EOL,FILE_APPEND);
			
		}
		else
		{
			$getinclude=file($include);
			unset($getinclude[array_key_last($getinclude)]);
			file_put_contents($include, $getinclude);
		}
		
		$u=0;
		$merge=[];
		
		for($i1=0;$i1<$ceil;$i1++)
		{
			$put=[];
			for($i2=0;$i2<$maxbuttons;$i2++)
			{	
				if(isset($table[$u]))
				{
					
					$buttext='üë§'.$this->cmd_user_get_fiophone($table[$u]).'';
					
					$put[]=["text" => "$buttext", "callback_data" => "admin_approvewantuser_$table[$u]"];
					
					if(preg_match('/callback_admin_approvewantuser_'.$table[$u].'/', file_get_contents($include))==FALSE)
					{
						$insert='
						public function callback_admin_approvewantuser_'.$table[$u].'()
						{	
				
							$bot = new TestBot;
							$bot->api->getWebhookUpdate();
							$callback_query_id=$bot->api->body[&#039;callback_query&#039;]["id"];
							
							$con_sql2=$bot->cmd_sql();
							
							$query1=mysqli_query($con_sql2, &#039;SELECT 1 FROM '.$tab.' WHERE id LIKE "%" LIMIT 1&#039;);
							usleep(100000);
							$con1=mysqli_num_rows($query1);
							
							if($con1!=0)
							{
								
								$con_sql2=$bot->cmd_sql();
								
								mysqli_query($con_sql2, &#039;INSERT INTO '.$tab1.' (chatid, firstname, lastname, username, phone, fio) SELECT chatid, firstname, lastname, username, phone, fio FROM '.$tab.' WHERE chatid="'.$table[$u].'"&#039;);
								usleep(250000);
								
								$queue=&#039;DELETE FROM '.$tab.' WHERE chatid="'.$table[$u].'"&#039;;
								$result=mysqli_query($con_sql2, $queue);
								usleep(100000);
								
								file_put_contents(&#039;&#039;.dirname(__FILE__).&#039;/usersapproved.txt&#039;, &#039;'.$table[$u].'&#039; . PHP_EOL,FILE_APPEND);
								
								$text=&#039;–¢–µ–ø–µ—Ä—å –í—ã <b>–∏–º–µ–µ—Ç–µ –ø—Ä–∞–≤–æ —Ä–∞–∑–º–µ—â–∞—Ç—å –æ–±—ä—è–≤–ª–µ–Ω–∏—è –≤ –∫–∞–Ω–∞–ª–µ!</b>&#039;.$bot->pre.&#039;&#039;;
		
								$bot->api->sendMessage([
									&#039;chat_id&#039; => '.$table[$u].',
									&#039;text&#039; => $text,
									&#039;reply_markup&#039; => json_encode( [&#039;inline_keyboard&#039;=>$bot->keyboards[&#039;inline_default&#039;]]),
									//&#039;disable_notification&#039; => TRUE,
									&#039;disable_web_page_preview&#039; => TRUE,
									&#039;parse_mode&#039;=> "HTML"
								]);
								usleep(100000);
								
								$text=&#039;–í—ã <b>—É—Å–ø–µ—à–Ω–æ –¥–∞–ª–∏ –ø—Ä–∞–≤–æ</b> –Ω–∞ —Ä–∞–∑–º–µ—â–µ–Ω–∏–µ –æ–±—ä—è–≤–ª–µ–Ω–∏–π –≤ –∫–∞–Ω–∞–ª–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é üë§<b>'.$buttext.'</b>&#039;.PHP_EOL.&#039;–í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ <b>–£—Ç–≤–µ—Ä–¥–∏—Ç—å –∑–∞–ø—Ä–æ—Å–∏–≤—à–∏—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π</b>.&#039;.PHP_EOL.&#039;–í—ã–±–µ—Ä–∏—Ç–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, —á—Ç–æ–±—ã —É—Ç–≤–µ—Ä–¥–∏—Ç—å –µ–≥–æ.&#039;.$bot->pre.&#039;&#039;;
								
								$merge=$bot->cmd_admin_approvewantusers();
								usleep(100000);
								
								if (array_filter($merge) !== [])
								{
									$merge[] = [[&#039;text&#039; => &#039;‚¨ÖÔ∏è–ù–∞–∑–∞–¥&#039;, &#039;callback_data&#039; => &#039;admin_back_wantusers&#039;], [&#039;text&#039; => &#039;‚§¥Ô∏è–í—ã–π—Ç–∏&#039;, &#039;callback_data&#039; => &#039;admin_exit_main&#039;]];
								
									$bot->api->answerCallbackQuery($callback_query_id);
									$bot->api->editMessageText([
									&#039;chat_id&#039; => $bot->api->body[&#039;callback_query&#039;][&#039;message&#039;][&#039;chat&#039;]["id"],
									&#039;message_id&#039; => $bot->api->body[&#039;callback_query&#039;][&#039;message&#039;][&#039;message_id&#039;],
									&#039;text&#039; => $text,
									&#039;parse_mode&#039; => "HTML",
									&#039;reply_markup&#039; => json_encode( [&#039;inline_keyboard&#039;=>$merge] ),
									]);
									usleep(100000);
								}
								else
								{
									$text=&#039;–í—ã <b>—É—Å–ø–µ—à–Ω–æ —É—Ç–≤–µ—Ä–¥–∏–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è '.$buttext.'</b>.&#039;.PHP_EOL.&#039;–í –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç <b>–Ω–µ—Ç –∑–∞–ø—Ä–æ—Å–∏–≤—à–∏—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π!</b>&#039;.PHP_EOL.&#039;&#039;.PHP_EOL.&#039;–í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ <b>–≥–ª–∞–≤–Ω–æ–º –º–µ–Ω—é –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞</b>.&#039;.$bot->pre.&#039;&#039;;
									$bot->api->answerCallbackQuery($callback_query_id);
								
									$bot->api->editMessageText([
									&#039;chat_id&#039; => $bot->api->body[&#039;callback_query&#039;][&#039;message&#039;][&#039;chat&#039;]["id"],
									&#039;message_id&#039; => $bot->api->body[&#039;callback_query&#039;][&#039;message&#039;][&#039;message_id&#039;],
									&#039;text&#039; => $text,
									&#039;parse_mode&#039; => "HTML",
									&#039;reply_markup&#039; => json_encode( [&#039;inline_keyboard&#039;=>$bot->keyboards[&#039;inline_admin_main&#039;]] ),
									]);
									usleep(100000);
								}
							}
							else
							{
								$text=&#039;–í –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç <b>–Ω–µ—Ç –∑–∞–ø—Ä–æ—Å–∏–≤—à–∏—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π!</b>&#039;.PHP_EOL.&#039;&#039;.PHP_EOL.&#039;–í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ <b>–≥–ª–∞–≤–Ω–æ–º –º–µ–Ω—é –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞</b>.&#039;.$bot->pre.&#039;&#039;;
								$bot->api->answerCallbackQuery($callback_query_id);
								
								$bot->api->editMessageText([
								&#039;chat_id&#039; => $bot->api->body[&#039;callback_query&#039;][&#039;message&#039;][&#039;chat&#039;]["id"],
								&#039;message_id&#039; => $bot->api->body[&#039;callback_query&#039;][&#039;message&#039;][&#039;message_id&#039;],
								&#039;text&#039; => $text,
								&#039;parse_mode&#039; => "HTML",
								&#039;reply_markup&#039; => json_encode( [&#039;inline_keyboard&#039;=>$bot->keyboards[&#039;inline_admin_main&#039;]] ),
								]);
								usleep(100000);
							}
							
						}';
						file_put_contents($include, html_entity_decode($insert, ENT_QUOTES) . PHP_EOL . PHP_EOL,FILE_APPEND);
					}
					
				}	
				$u++;	
			}
				
			$merge[]=$put;
			unset($put);
			
		}
		
		$insert='}';
		file_put_contents($include, $insert,FILE_APPEND);
		
		
		return $merge;
		
			
	}
	


/////	
	public function callback_admin_denywantusers()
	{		
		$con_sql2=$this->cmd_sql();
		
		$tab='tabservicewant';
		$tab1='tabservicebanned';
		
		
			$merge=$this->cmd_admin_denywantusers();
			usleep(100000);
			if (array_filter($merge) !== [])
			{
				$merge[] = [['text' => '‚¨ÖÔ∏è–ù–∞–∑–∞–¥', 'callback_data' => 'admin_back_wantusers'], ['text' => '‚§¥Ô∏è–í—ã–π—Ç–∏', 'callback_data' => 'admin_exit_main']];
				$text='–í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ <b>–û—Ç–∫–∞–∑–∞—Ç—å –∑–∞–ø—Ä–æ—Å–∏–≤—à–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º</b>. –í—ã–±–µ—Ä–∏—Ç–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, —á—Ç–æ–±—ã –æ—Ç–∫–∞–∑–∞—Ç—å –∏ –∑–∞–±–∞–Ω–∏—Ç—å –µ–≥–æ.'.$this->pre.'';
				$this->callbackAnswer( $text, $merge);
			}
			else
			{
				$text='–í –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç <b>–Ω–µ—Ç –∑–∞–ø—Ä–æ—Å–∏–≤—à–∏—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π!</b>'.PHP_EOL.'–í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ <b>–≥–ª–∞–≤–Ω–æ–º –º–µ–Ω—é –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞</b>.'.$this->pre.'';
				$this->callbackAnswer( $text, $this->keyboards['inline_admin_main']);
			}
		
	}


/////
	public function cmd_admin_denywantusers()
	{
		$adminid=$this->chatidadmin;		
		$con_sql2=$this->cmd_sql();
		
		$tab='tabservicewant';
		$tab1='tabservicedenied';

		$query1=mysqli_query($con_sql2, 'SELECT DISTINCT chatid FROM '.$tab.'');
		$con1=mysqli_num_rows($query1);
		
		$table=[];
		
		for($i=0;$i<$con1;$i++)
		{
			mysqli_data_seek($query1, $i);
			$row1[$i]=mysqli_fetch_row($query1);
			$table[]=$row1[$i][0];	
		}
		
		$cnt=count($table);
		$maxbuttons=1;
		$ceil=ceil($cnt/$maxbuttons);
		
		
		
		$include=''.dirname(__FILE__).'/include'.$this->api->chatId.'.php';
		
		if(file_exists($include)==FALSE)
		{
			touch($include);
			
			$insert='<?php
		
		
			class TelegramBotfunc{';
			file_put_contents($include, $insert . PHP_EOL,FILE_APPEND);
			
		}
		else
		{
			$getinclude=file($include);
			unset($getinclude[array_key_last($getinclude)]);
			file_put_contents($include, $getinclude);
		}
		
		$u=0;
		$merge=[];
		
		for($i1=0;$i1<$ceil;$i1++)
		{
			$put=[];
			for($i2=0;$i2<$maxbuttons;$i2++)
			{	
				if(isset($table[$u]))
				{
					
					$buttext='üë§'.$this->cmd_user_get_fiophone($table[$u]).'';
					
					$put[]=["text" => "$buttext", "callback_data" => "admin_denywantuser_$table[$u]"];
					
					if(preg_match('/callback_admin_denywantuser_'.$table[$u].'/', file_get_contents($include))==FALSE)
					{
						$insert='
						public function callback_admin_denywantuser_'.$table[$u].'()
						{	
				
							$bot = new TestBot;
							$bot->api->getWebhookUpdate();
							$callback_query_id=$bot->api->body[&#039;callback_query&#039;]["id"];
							
							$con_sql2=$bot->cmd_sql();
							
							$query1=mysqli_query($con_sql2, &#039;SELECT 1 FROM '.$tab.' WHERE id LIKE "%" LIMIT 1&#039;);
							usleep(100000);
							$con1=mysqli_num_rows($query1);
							
							if($con1!=0)
							{
								
								$con_sql2=$bot->cmd_sql();
								
								mysqli_query($con_sql2, &#039;INSERT INTO '.$tab1.' (chatid, firstname, lastname, username, phone, fio) SELECT chatid, firstname, lastname, username, phone, fio FROM '.$tab.' WHERE chatid="'.$table[$u].'"&#039;);
								usleep(250000);
								
								$queue=&#039;DELETE FROM '.$tab.' WHERE chatid="'.$table[$u].'"&#039;;
								$result=mysqli_query($con_sql2, $queue);
								usleep(100000);
								
								$get=file_get_contents(&#039;&#039;.dirname(__FILE__).&#039;/usersapproved.txt&#039;);
								$get=str_replace("'.$table[$u].'", "", $get);
								$get=$bot->clean($get);
								file_put_contents(&#039;&#039;.dirname(__FILE__).&#039;/usersapproved.txt&#039;, $get . PHP_EOL);
								

								$text=&#039;–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –í–∞–º <b>–Ω–µ –¥–∞–ª–∏ –ø—Ä–∞–≤–æ</b> —Ä–∞–∑–º–µ—â–∞—Ç—å –æ–±—ä—è–≤–ª–µ–Ω–∏—è –≤ –∫–∞–Ω–∞–ª–µ!&#039;.$bot->pre.&#039;&#039;;
																
								$bot->api->sendMessage([
									&#039;chat_id&#039; => '.$table[$u].',
									&#039;text&#039; => $text,
									//&#039;disable_notification&#039; => TRUE,
									&#039;disable_web_page_preview&#039; => TRUE,
									&#039;parse_mode&#039;=> "HTML"
								]);
								usleep(100000);
								
								$text=&#039;–í—ã <b>–æ—Ç–∫–∞–∑–∞–ª–∏</b> –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é <b>'.$buttext.'</b> –≤ –ø—Ä–∞–≤–µ –Ω–∞ —Ä–∞–∑–º–µ—â–µ–Ω–∏–µ –æ–±—ä—è–≤–ª–µ–Ω–∏–π –≤ –∫–∞–Ω–∞–ª–µ.&#039;.PHP_EOL.&#039;–í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ –ó–∞–±–∞–Ω–∏—Ç—å –∑–∞–ø—Ä–æ—Å–∏–≤—à–∏—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π.&#039;.PHP_EOL.&#039;–í—ã–±–µ—Ä–∏—Ç–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, —á—Ç–æ–±—ã –æ—Ç–∫–∞–∑–∞—Ç—å –∏ –∑–∞–±–∞–Ω–∏—Ç—å –µ–≥–æ.&#039;.$bot->pre.&#039;&#039;;
								
								$merge=$bot->cmd_admin_denywantusers();
								usleep(100000);
								if (array_filter($merge) !== [])
								{
									$merge[] = [[&#039;text&#039; => &#039;‚¨ÖÔ∏è–ù–∞–∑–∞–¥&#039;, &#039;callback_data&#039; => &#039;admin_back_wantusers&#039;], [&#039;text&#039; => &#039;‚§¥Ô∏è–í—ã–π—Ç–∏&#039;, &#039;callback_data&#039; => &#039;admin_exit_main&#039;]];
								
									$bot->api->answerCallbackQuery($callback_query_id);
									$bot->api->editMessageText([
									&#039;chat_id&#039; => $bot->api->body[&#039;callback_query&#039;][&#039;message&#039;][&#039;chat&#039;]["id"],
									&#039;message_id&#039; => $bot->api->body[&#039;callback_query&#039;][&#039;message&#039;][&#039;message_id&#039;],
									&#039;text&#039; => $text,
									&#039;parse_mode&#039; => "HTML",
									&#039;reply_markup&#039; => json_encode( [&#039;inline_keyboard&#039;=>$merge] ),
									]);
									usleep(100000);
								}
								else
								{
									$text=&#039;–í—ã <b>–æ—Ç–∫–∞–∑–∞–ª–∏</b> –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é <b>'.$buttext.'</b> –≤ –ø—Ä–∞–≤–µ –Ω–∞ —Ä–∞–∑–º–µ—â–µ–Ω–∏–µ –æ–±—ä—è–≤–ª–µ–Ω–∏–π –≤ –∫–∞–Ω–∞–ª–µ.&#039;.PHP_EOL.&#039;–í –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç <b>–Ω–µ—Ç –∑–∞–ø—Ä–æ—Å–∏–≤—à–∏—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π!</b>&#039;.PHP_EOL.&#039;&#039;.PHP_EOL.&#039;–í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ <b>–≥–ª–∞–≤–Ω–æ–º –º–µ–Ω—é –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞</b>.&#039;.$bot->pre.&#039;&#039;;
									$bot->api->answerCallbackQuery($callback_query_id);
								
									$bot->api->editMessageText([
									&#039;chat_id&#039; => $bot->api->body[&#039;callback_query&#039;][&#039;message&#039;][&#039;chat&#039;]["id"],
									&#039;message_id&#039; => $bot->api->body[&#039;callback_query&#039;][&#039;message&#039;][&#039;message_id&#039;],
									&#039;text&#039; => $text,
									&#039;parse_mode&#039; => "HTML",
									&#039;reply_markup&#039; => json_encode( [&#039;inline_keyboard&#039;=>$bot->keyboards[&#039;inline_admin_main&#039;]] ),
									]);
									usleep(100000);
								}
							}
							else
							{
								$text=&#039;–í –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç <b>–Ω–µ—Ç –∑–∞–ø—Ä–æ—Å–∏–≤—à–∏—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π!</b>&#039;.PHP_EOL.&#039;&#039;.PHP_EOL.&#039;–í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ <b>–≥–ª–∞–≤–Ω–æ–º –º–µ–Ω—é –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞</b>.&#039;.$bot->pre.&#039;&#039;;
								$bot->api->answerCallbackQuery($callback_query_id);
								
								$bot->api->editMessageText([
								&#039;chat_id&#039; => $bot->api->body[&#039;callback_query&#039;][&#039;message&#039;][&#039;chat&#039;]["id"],
								&#039;message_id&#039; => $bot->api->body[&#039;callback_query&#039;][&#039;message&#039;][&#039;message_id&#039;],
								&#039;text&#039; => $text,
								&#039;parse_mode&#039; => "HTML",
								&#039;reply_markup&#039; => json_encode( [&#039;inline_keyboard&#039;=>$bot->keyboards[&#039;inline_admin_main&#039;]] ),
								]);
								usleep(100000);
							}
		
						}';
						file_put_contents($include, html_entity_decode($insert, ENT_QUOTES) . PHP_EOL . PHP_EOL,FILE_APPEND);
					}
					
				}	
				$u++;	
			}
				
			$merge[]=$put;
			unset($put);
			
		}
		
		$insert='}';
		file_put_contents($include, $insert,FILE_APPEND);
		
		
		return $merge;
		
			
	}
	



//////////////////////////////////////////////////////////////BUY////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	public function callback_default_buy()
	{	
		$con_sql2=$this->cmd_sql();
		
		$tab='tabtype'.$this->api->chatId.'';
		
		//if(mysqli_query($con_sql2, 'SELECT 1 FROM '.$tab.' LIMIT 1'))
		//{
			mysqli_query($con_sql2, 'DROP TABLE '.$tab.'');
			usleep(100000);
		//}
		
		$tab='tabcat'.$this->api->chatId.'';
		
		//if(mysqli_query($con_sql2, 'SELECT 1 FROM '.$tab.' LIMIT 1'))
		//{
			mysqli_query($con_sql2, 'DROP TABLE '.$tab.'');
			usleep(100000);	
		//}
		
		$tab='tabgender'.$this->api->chatId.'';
		
		//if(mysqli_query($con_sql2, 'SELECT 1 FROM '.$tab.' LIMIT 1'))
		//{
			mysqli_query($con_sql2, 'DROP TABLE '.$tab.'');
			usleep(100000);
		//}
	
		$tab='tabprice'.$this->api->chatId.'';
		
		//if(mysqli_query($con_sql2, 'SELECT 1 FROM '.$tab.' LIMIT 1'))
		//{
			mysqli_query($con_sql2, 'DROP TABLE '.$tab.'');
			usleep(100000);
		//}
		
		$tab='tabservice'.$this->api->chatId.'';
		
		//if(mysqli_query($con_sql2, 'SELECT 1 FROM '.$tab.' LIMIT 1'))
		//{
			mysqli_query($con_sql2, 'DROP TABLE '.$tab.'');
			usleep(100000);
		//}
		

		$query1=mysqli_query($con_sql2, 'SHOW TABLES LIKE "tabmain%"');
		$con1=mysqli_num_rows($query1);
		
		if($con1!=0)
		{	
		
			$table=[];
			$check=0;
			
			for($i=0;$i<$con1;$i++)
			{
				mysqli_data_seek($query1, $i);
				$row1[$i]=mysqli_fetch_row($query1);
				$tab=$row1[$i][0];
				
				$query=mysqli_query($con_sql2, 'SELECT * FROM '.$tab.' WHERE messid!="0" ORDER by id ASC');
				usleep(100000);
				$con=mysqli_num_rows($query);
					
				if($con!=0)
				{	
					$check=1;
					break;
				}
			}
			
			if($check==1)
			{
			
				$text='–í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ –º–µ–Ω—é <b>–ö—É–ø–∏—Ç—å</b>.'.PHP_EOL.'–î–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ —Ç–æ–≤–∞—Ä–æ–≤ –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É <b>–í—ã–±—Ä–∞—Ç—å</b>.'.PHP_EOL.'–î–ª—è –ø–æ–∫—É–ø–∫–∏ —Ç–æ–≤–∞—Ä–∞ –ø–æ –Ω–æ–º–µ—Ä—É ID –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É <b>–ö—É–ø–∏—Ç—å –ø–æ ID —Ç–æ–≤–∞—Ä–∞.</b>'.$this->pre.'';
				$this->callbackAnswer( $text, $this->keyboards['inline_buy_default']);
			}
			else
			{

				if($this->cmd_isadmin())
				{
					$text='–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é –≤ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç <b>–Ω–µ—Ç —Ç–æ–≤–∞—Ä–æ–≤ –≤ –ø—Ä–æ–¥–∞–∂–µ</b>. –í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ <b>–ì–ª–∞–≤–Ω–æ–º –º–µ–Ω—é.</b>'.$this->pre.'';
					$this->callbackAnswer( $text, $this->keyboards['inline_default_admin']);
					usleep(100000);
				}
				else
				{
					$text='–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é –≤ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç <b>–Ω–µ—Ç —Ç–æ–≤–∞—Ä–æ–≤ –≤ –ø—Ä–æ–¥–∞–∂–µ</b>. –í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ <b>–ì–ª–∞–≤–Ω–æ–º –º–µ–Ω—é.</b>'.$this->pre.'';
					$this->callbackAnswer( $text, $this->keyboards['inline_default']);
					usleep(100000);
				}
					
			}
			
		}
		else
		{
			if($this->cmd_isadmin())
			{
				$text='–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é –≤ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç <b>–Ω–µ—Ç —Ç–æ–≤–∞—Ä–æ–≤ –≤ –ø—Ä–æ–¥–∞–∂–µ</b>. –í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ <b>–ì–ª–∞–≤–Ω–æ–º –º–µ–Ω—é.</b>'.$this->pre.'';
				$this->callbackAnswer( $text, $this->keyboards['inline_default_admin']);
				usleep(100000);
			}
			else
			{
				$text='–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é –≤ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç <b>–Ω–µ—Ç —Ç–æ–≤–∞—Ä–æ–≤ –≤ –ø—Ä–æ–¥–∞–∂–µ</b>. –í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ <b>–ì–ª–∞–≤–Ω–æ–º –º–µ–Ω—é.</b>'.$this->pre.'';
				$this->callbackAnswer( $text, $this->keyboards['inline_default']);
				usleep(100000);
			}
		}
		
		
		
		
		
		
		
	}	


/////
	public function callback_ready_buy()
	{
		$con_sql2=$this->cmd_sql();
		$tabservice='tabservice'.$this->api->chatId.'';
		
		if(isset($this->api->body['callback_query']["id"]))
		{
			$callback_query_id=$this->api->body['callback_query']["id"];
			$this->api->answerCallbackQuery($callback_query_id);
		}
		
		if(mysqli_query($con_sql2, 'SELECT 1 FROM '.$tabservice.' LIMIT 1')==FALSE)
		{
			$query1=mysqli_query($con_sql2, 'SHOW TABLES LIKE "tabmain%"');
			$con1=mysqli_num_rows($query1);
			
			if($con1!=0)
			{	
			
				$table=[];
				$check=0;
				
				for($i1=0;$i1<$con1;$i1++)
				{
					mysqli_data_seek($query1, $i1);
					$row1[$i1]=mysqli_fetch_row($query1);
					$tab=$row1[$i1][0];
					
					$query=mysqli_query($con_sql2, 'SELECT * FROM '.$tab.' WHERE messid!="0" ORDER by messid ASC');
					usleep(100000);
					$con=mysqli_num_rows($query);
						
					if($con!=0)
					{	

						$check=1;
						
						for($i=0;$i<$con;$i++)
						{
							mysqli_data_seek($query, $i);
							$row[$i]=mysqli_fetch_row($query);
						}
						usleep(100000);
						
		
						for($i=0;$i<$con;$i++)
						{
						
						
							$type=$this->convert_rus($row[$i][1]);
							$cat=$this->convert_rus($row[$i][2]);
							$gender=$this->convert_rus($row[$i][3]);
							$cond=$this->convert_rus($row[$i][12]);
						
						
						
							/* $text='‚ùáÔ∏è‚ùáÔ∏è‚ùáÔ∏è‚ùáÔ∏è‚ùáÔ∏è‚ùáÔ∏è‚ùáÔ∏è‚ùáÔ∏è‚ùáÔ∏è‚ùáÔ∏è‚ùáÔ∏è‚ùáÔ∏è‚ùáÔ∏è‚ùáÔ∏è‚ùáÔ∏è‚ùáÔ∏è‚ùáÔ∏è‚ùáÔ∏è‚ùáÔ∏è‚ùáÔ∏è';
							
							$this->api->sendMessage([
							'text' => $text,
							'disable_notification' => TRUE,
							'disable_web_page_preview' => TRUE,
							'parse_mode'=> "HTML"
							]);
							usleep(100000); */
							
							
							$messageid=$row[$i][11];
							
							$caption='üìñ–ö–∞—Ç–µ–≥–æ—Ä–∏—è: &#160;&#160;<b>'.$type.'</b>'.PHP_EOL.'üßæ–í–∏–¥: &#160;&#160;<b>'.$cat.'</b>'.PHP_EOL.'üë®‚Äçüë©‚Äçüë¶–ü–æ–ª: &#160;&#160;<b>'.$gender.'</b>'.PHP_EOL.'üéè–°–æ—Å—Ç–æ—è–Ω–∏–µ: <b>'.$cond.'</b>'.PHP_EOL.'¬ÆÔ∏è–ë—Ä–µ–Ω–¥: &#160;&#160;<b>'.$row[$i][4].'</b>'.PHP_EOL.'‚ÜïÔ∏è–†–∞–∑–º–µ—Ä: &#160;&#160;<b>'.$row[$i][5].'</b>'.PHP_EOL.'üíµ–¶–µ–Ω–∞: &#160;&#160;<b>'.$row[$i][6].'</b>'.PHP_EOL.'üìã–û–ø–∏—Å–∞–Ω–∏–µ: &#160;&#160;'.$row[$i][7].''.PHP_EOL.''.PHP_EOL.''.PHP_EOL.'<b>ID —Ç–æ–≤–∞—Ä–∞: '.$messageid.'</b>'.PHP_EOL.''.PHP_EOL.'üìÅüìÅüìÅüìÅüìÅüìÅüìÅüìÅüìÅüìÅüìÅüìÅ';
							
							$photo=$row[$i][8];
							
							$include=''.dirname(__FILE__).'/include'.$this->api->chatId.'.php';
			
							if(file_exists($include)==FALSE)
							{
								touch($include);
								
								$insert='<?php
						
						
								class TelegramBotfunc{';
								file_put_contents($include, $insert . PHP_EOL,FILE_APPEND);
								
							}
							else
							{
								$getinclude=file($include);
								unset($getinclude[array_key_last($getinclude)]);
								file_put_contents($include, $getinclude);
							}
							
		
							$merge=[];
							$merge[]= [['text' => 'üõí–ö—É–ø–∏—Ç—å', 'callback_data' => 'buy_ready_'.$messageid.'']]  ;
							
							if(preg_match('/callback_buy_ready_'.$messageid.'/', file_get_contents($include))==FALSE)
							{
								$insert='
								public function callback_buy_ready_'.$messageid.'()
								{	
						
									$bot = new TestBot;
									$bot->api->getWebhookUpdate();

									$text=&#039;–í—ã –∑–∞–ø—Ä–æ—Å–∏–ª–∏ —Ç–æ–≤–∞—Ä —Å <b>ID ‚Ññ'.$messageid.'.</b> &#039;.PHP_EOL.&#039;&#039;.PHP_EOL.&#039;<b>–í—ã —Ç–æ—á–Ω–æ —Ö–æ—Ç–∏—Ç–µ –∫—É–ø–∏—Ç—å –µ–≥–æ?</b>&#039;.$bot->pre.&#039;&#039;;
									$merge=[];
									$merge[] = [[&#039;text&#039; => &#039;üü¢–î–∞&#039;, &#039;callback_data&#039; => &#039;byrecordid_default_buy_yes&#039;], [&#039;text&#039; => &#039;üî¥–ù–µ—Ç&#039;, &#039;callback_data&#039; => &#039;byrecordid_default_buy_no&#039;]];
									$merge[] = [[&#039;text&#039; => &#039;‚¨ÖÔ∏è–ù–∞–∑–∞–¥&#039;, &#039;callback_data&#039; => &#039;back_byrecordid_default_buy&#039;], [&#039;text&#039; => &#039;‚§¥Ô∏è–í—ã–π—Ç–∏&#039;, &#039;callback_data&#039; => &#039;exit_byrecordid_default_buy&#039;]];
									
									if(isset($bot->api->body[&#039;callback_query&#039;]["id"]))
									{
										$callback_query_id=$bot->api->body[&#039;callback_query&#039;]["id"];
										$bot->api->answerCallbackQuery($callback_query_id);
									}
							
									$bot->api->sendMessage([
									&#039;text&#039; => $text,
									&#039;reply_markup&#039; => json_encode( [&#039;inline_keyboard&#039;=>$merge]),
									&#039;disable_notification&#039; => TRUE,
									&#039;disable_web_page_preview&#039; => TRUE,
									&#039;parse_mode&#039;=> "HTML"
									]);
									usleep(100000);
									
								}';
								file_put_contents($include, html_entity_decode($insert, ENT_QUOTES) . PHP_EOL . PHP_EOL,FILE_APPEND);
								
							}
							
							$insert='}';
							file_put_contents($include, $insert,FILE_APPEND);
							
							if(preg_match('/;/', $photo)==FALSE)
							{
								$this->api->sendPhoto([
								'photo' => $photo,
								'caption' => $caption,
								//'reply_markup' => json_encode( ['inline_keyboard'=>$this->keyboards['inline_ask_admin']]),
								//'reply_markup' => json_encode( ['inline_keyboard'=>$merge]),
								'disable_notification' => TRUE,
								'parse_mode' => "HTML"
								]);
								usleep(250000);
								
								$text='–ö—É–ø–∏—Ç—å <b>ID ‚Ññ'.$messageid.'</b>';
								$this->api->sendMessage([
								'text' => $text,
								'reply_markup' => json_encode( ['inline_keyboard'=>$merge]),
								'disable_notification' => TRUE,
								'disable_web_page_preview' => TRUE,
								'parse_mode'=> "HTML"
								]);
								usleep(100000);
								
							
							}
							else
							{
								$media=[];
								$temp=explode(';', $photo);
								$cnt=count($temp);
								for($o=0;$o<$cnt;$o++)
								{
								
								
									if($o==0)
									{
										//$put=['type' => 'photo', 'media' =>  ''.$temp[$o].'', 'caption' => ''.$caption.'', 'parse_mode' => "HTML", 'reply_markup' => ['inline_keyboard'=>$merge]];
										//$put=['type' => 'photo', 'media' =>  ''.$temp[$o].'', 'caption' => ''.$caption.'', 'parse_mode' => "HTML", 'reply_markup' => 'inline_keyboard'=>$this->keyboards['inline_ask_admin']];
										$put=['type' => 'photo', 'media' =>  ''.$temp[$o].'', 'caption' => ''.$caption.'', 'parse_mode' => "HTML"];
									}
									else
									{
										$put=['type' => 'photo', 'media' =>  ''.$temp[$o].''];
									}
							
									$media[$o]=$put;
								}
								
								
								$this->api->sendMediaGroup([
								'media' => json_encode($media),
								//'reply_markup' => json_encode( ['inline_keyboard'=>$merge])
								]);
								usleep(350000);
								
								$text='–ö—É–ø–∏—Ç—å <b>ID ‚Ññ'.$messageid.'</b>';
								$this->api->sendMessage([
								'text' => $text,
								'reply_markup' => json_encode( ['inline_keyboard'=>$merge]),
								'disable_notification' => TRUE,
								'disable_web_page_preview' => TRUE,
								'parse_mode'=> "HTML"
								]);
								usleep(100000);
							}
						}
			
					}
				}
				
				if($check==1)
				{
				
					

					$text='–°–≤–µ—Ä—Ö—É <b>–ø–æ–∫–∞–∑–∞–Ω—ã –≤—Å–µ —Ç–æ–≤–∞—Ä—ã</b>, —Å–æ–≥–ª–∞—Å–Ω–æ –í–∞—à–µ–≥–æ –∑–∞–ø—Ä–æ—Å–∞.'.PHP_EOL.''.PHP_EOL.'–í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ –º–µ–Ω—é <b>–ö—É–ø–∏—Ç—å —Ç–æ–≤–∞—Ä</b>.'.$this->pre.'';
					
					$this->api->sendMessage([
					'text' => $text,
					'reply_markup' => json_encode( ['inline_keyboard'=>$this->keyboards['inline_buy_default']]),
					'disable_notification' => TRUE,
					'disable_web_page_preview' => TRUE,
					'parse_mode'=> "HTML"
					]);
					usleep(100000);
					
					/* $tab='tabtype'.$this->api->chatId.'';
		
					// if(mysqli_query($con_sql2, 'SELECT 1 FROM '.$tab.' LIMIT 1'))
					// {
						mysqli_query($con_sql2, 'DROP TABLE '.$tab.'');
						usleep(100000);
					// }
					
					$tab='tabcat'.$this->api->chatId.'';
					
					// if(mysqli_query($con_sql2, 'SELECT 1 FROM '.$tab.' LIMIT 1'))
					// {
						mysqli_query($con_sql2, 'DROP TABLE '.$tab.'');
						usleep(100000);
					// }
					
					$tab='tabgender'.$this->api->chatId.'';
					
					// if(mysqli_query($con_sql2, 'SELECT 1 FROM '.$tab.' LIMIT 1'))
					// {
						mysqli_query($con_sql2, 'DROP TABLE '.$tab.'');
						usleep(100000);
					// }
				
					$tab='tabcond'.$this->api->chatId.'';
					
					// if(mysqli_query($con_sql2, 'SELECT 1 FROM '.$tab.' LIMIT 1'))
					// {
						mysqli_query($con_sql2, 'DROP TABLE '.$tab.'');
						usleep(100000);
					// }
				
					$tab='tabprice'.$this->api->chatId.'';
					
					// if(mysqli_query($con_sql2, 'SELECT 1 FROM '.$tab.' LIMIT 1'))
					// {
						mysqli_query($con_sql2, 'DROP TABLE '.$tab.'');
						usleep(100000);
					// }
					
					
					$tab='tabservice'.$this->api->chatId.'';
					
					// if(mysqli_query($con_sql2, 'SELECT 1 FROM '.$tab.' LIMIT 1'))
					// {
						mysqli_query($con_sql2, 'DROP TABLE '.$tab.'');
						usleep(100000);
					// } */
					
				}
				else
				{
					$text='–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é –≤ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç <b>–Ω–µ—Ç —Ç–æ–≤–∞—Ä–æ–≤ –≤ –ø—Ä–æ–¥–∞–∂–µ</b>. –í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ –º–µ–Ω—é –ö—É–ø–∏—Ç—å —Ç–æ–≤–∞—Ä.'.$this->pre.'';
					$this->callbackAnswer( $text, $this->keyboards['inline_buy_default']);	
				}
				
				
			}
			else
			{
				$text='–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é –≤ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç <b>–Ω–µ—Ç —Ç–æ–≤–∞—Ä–æ–≤ –≤ –ø—Ä–æ–¥–∞–∂–µ</b>. –í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ –º–µ–Ω—é –ö—É–ø–∏—Ç—å —Ç–æ–≤–∞—Ä.'.$this->pre.'';
				$this->callbackAnswer( $text, $this->keyboards['inline_buy_default']);	
			}
			
		}
		else
		{
			$query1=mysqli_query($con_sql2, 'SELECT * FROM '.$tabservice.' WHERE messid!="0" ORDER by messid ASC');
			usleep(100000);
			$con1=mysqli_num_rows($query1);
				
			if($con1!=0)
			{					
				for($i1=0;$i1<$con1;$i1++)
				{
					mysqli_data_seek($query1, $i1);
					$row1[$i1]=mysqli_fetch_row($query1);
				}
				usleep(100000);
				
			
				for($i1=0;$i1<$con1;$i1++)
				{
				
				
					$type=$this->convert_rus($row1[$i1][1]);
					$cat=$this->convert_rus($row1[$i1][2]);
					$gender=$this->convert_rus($row1[$i1][3]);
					$cond=$this->convert_rus($row1[$i1][12]);
				
				
					/* $text='‚ùáÔ∏è‚ùáÔ∏è‚ùáÔ∏è‚ùáÔ∏è‚ùáÔ∏è‚ùáÔ∏è‚ùáÔ∏è‚ùáÔ∏è‚ùáÔ∏è‚ùáÔ∏è‚ùáÔ∏è‚ùáÔ∏è‚ùáÔ∏è‚ùáÔ∏è‚ùáÔ∏è‚ùáÔ∏è‚ùáÔ∏è‚ùáÔ∏è‚ùáÔ∏è‚ùáÔ∏è';
					
					$this->api->sendMessage([
					'text' => $text,
					'disable_notification' => TRUE,
					'disable_web_page_preview' => TRUE,
					'parse_mode'=> "HTML"
					]);
					usleep(100000); */
					
					
					$messageid=$row1[$i1][11];
					
					$caption='üìñ–ö–∞—Ç–µ–≥–æ—Ä–∏—è: &#160;&#160;<b>'.$type.'</b>'.PHP_EOL.'üßæ–í–∏–¥: &#160;&#160;<b>'.$cat.'</b>'.PHP_EOL.'üë®‚Äçüë©‚Äçüë¶–ü–æ–ª: &#160;&#160;<b>'.$gender.'</b>'.PHP_EOL.'üéè–°–æ—Å—Ç–æ—è–Ω–∏–µ: <b>'.$cond.'</b>'.PHP_EOL.'¬ÆÔ∏è–ë—Ä–µ–Ω–¥: &#160;&#160;<b>'.$row1[$i1][4].'</b>'.PHP_EOL.'‚ÜïÔ∏è–†–∞–∑–º–µ—Ä: &#160;&#160;<b>'.$row1[$i1][5].'</b>'.PHP_EOL.'üíµ–¶–µ–Ω–∞: &#160;&#160;<b>'.$row1[$i1][6].'</b>'.PHP_EOL.'üìã–û–ø–∏—Å–∞–Ω–∏–µ: &#160;&#160;'.$row1[$i1][7].''.PHP_EOL.''.PHP_EOL.''.PHP_EOL.'<b>ID —Ç–æ–≤–∞—Ä–∞: '.$messageid.'</b>'.PHP_EOL.''.PHP_EOL.'üìÅüìÅüìÅüìÅüìÅüìÅüìÅüìÅüìÅüìÅüìÅüìÅ';
					
					$photo=$row1[$i1][8];
					
					$include=''.dirname(__FILE__).'/include'.$this->api->chatId.'.php';
			
					if(file_exists($include)==FALSE)
					{
						touch($include);
						
						$insert='<?php
					
					
						class TelegramBotfunc{';
						file_put_contents($include, $insert . PHP_EOL,FILE_APPEND);
						
					}
					else
					{
						$getinclude=file($include);
						unset($getinclude[array_key_last($getinclude)]);
						file_put_contents($include, $getinclude);
					}
					
					
					$merge=[];
					$merge[]= [['text' => 'üõí–ö—É–ø–∏—Ç—å', 'callback_data' => 'buy_ready_'.$messageid.'']]  ;
					
					if(preg_match('/callback_buy_ready_'.$messageid.'/', file_get_contents($include))==FALSE)
					{
						$insert='
						public function callback_buy_ready_'.$messageid.'()
						{	
					
							$bot = new TestBot;
							$bot->api->getWebhookUpdate();
					
							$text=&#039;–í—ã –∑–∞–ø—Ä–æ—Å–∏–ª–∏ —Ç–æ–≤–∞—Ä —Å <b>ID ‚Ññ'.$messageid.'.</b> &#039;.PHP_EOL.&#039;&#039;.PHP_EOL.&#039;<b>–í—ã —Ç–æ—á–Ω–æ —Ö–æ—Ç–∏—Ç–µ –∫—É–ø–∏—Ç—å –µ–≥–æ?</b>&#039;.$bot->pre.&#039;&#039;;
							$merge=[];
							$merge[] = [[&#039;text&#039; => &#039;üü¢–î–∞&#039;, &#039;callback_data&#039; => &#039;byrecordid_default_buy_yes&#039;], [&#039;text&#039; => &#039;üî¥–ù–µ—Ç&#039;, &#039;callback_data&#039; => &#039;byrecordid_default_buy_no&#039;]];
							$merge[] = [[&#039;text&#039; => &#039;‚¨ÖÔ∏è–ù–∞–∑–∞–¥&#039;, &#039;callback_data&#039; => &#039;back_byrecordid_default_buy&#039;], [&#039;text&#039; => &#039;‚§¥Ô∏è–í—ã–π—Ç–∏&#039;, &#039;callback_data&#039; => &#039;exit_byrecordid_default_buy&#039;]];
							
							if(isset($bot->api->body[&#039;callback_query&#039;]["id"]))
							{
								$callback_query_id=$bot->api->body[&#039;callback_query&#039;]["id"];
								$bot->api->answerCallbackQuery($callback_query_id);
							}
							
							$bot->api->sendMessage([
							&#039;text&#039; => $text,
							&#039;reply_markup&#039; => json_encode( [&#039;inline_keyboard&#039;=>$merge]),
							&#039;disable_notification&#039; => TRUE,
							&#039;disable_web_page_preview&#039; => TRUE,
							&#039;parse_mode&#039;=> "HTML"
							]);
							usleep(100000);
							
						}';
						file_put_contents($include, html_entity_decode($insert, ENT_QUOTES) . PHP_EOL . PHP_EOL,FILE_APPEND);
						$insert='}';
						file_put_contents($include, $insert,FILE_APPEND);
					}
					
					if(preg_match('/;/', $photo)==FALSE)
					{
						$this->api->sendPhoto([
						'photo' => $photo,
						'caption' => $caption,
						'disable_notification' => TRUE,
						'parse_mode' => "HTML"
						]);
						usleep(250000);
					
					
						
						$text='–ö—É–ø–∏—Ç—å <b>ID ‚Ññ'.$messageid.'</b>';
						$this->api->sendMessage([
						'text' => $text,
						'reply_markup' => json_encode( ['inline_keyboard'=>$merge]),
						'disable_notification' => TRUE,
						'disable_web_page_preview' => TRUE,
						'parse_mode'=> "HTML"
						]);
						usleep(100000);
					
					}
					else
					{
						$media=[];
						$temp=explode(';', $photo);
						$cnt=count($temp);
						for($o=0;$o<$cnt;$o++)
						{
						
						
							if($o==0)
							{
								$put=['type' => 'photo', 'media' =>  ''.$temp[$o].'', 'caption' => ''.$caption.'', 'parse_mode' => "HTML" ];
							}
							else
							{
								$put=['type' => 'photo', 'media' =>  ''.$temp[$o].'' ];
							}
					
							$media[$o]=$put;
						}
						
						
						$this->api->sendMediaGroup([
						'media' => json_encode($media),
						]);
						usleep(350000);
						
											
						$text='–ö—É–ø–∏—Ç—å <b>ID ‚Ññ'.$messageid.'</b>';
						$this->api->sendMessage([
						'text' => $text,
						'reply_markup' => json_encode( ['inline_keyboard'=>$merge]),
						'disable_notification' => TRUE,
						'disable_web_page_preview' => TRUE,
						'parse_mode'=> "HTML"
						]);
						usleep(100000);
					}
				}
				
				/* if(isset($this->api->body['callback_query']["id"]))
				{
					$callback_query_id=$this->api->body['callback_query']["id"];
					$this->api->answerCallbackQuery($callback_query_id);
				} */
											
				$text='<b>–°–≤–µ—Ä—Ö—É –ø–æ–∫–∞–∑–∞–Ω—ã –≤—Å–µ —Ç–æ–≤–∞—Ä—ã, —Å–æ–≥–ª–∞—Å–Ω–æ –í–∞—à–µ–≥–æ –∑–∞–ø—Ä–æ—Å–∞.</b>'.PHP_EOL.''.PHP_EOL.'–í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ —Ä–∞–∑–¥–µ–ª–µ <b>–ö—É–ø–∏—Ç—å.</b>'.$this->pre.'';
				
				$this->api->sendMessage([
				'text' => $text,
				'reply_markup' => json_encode( ['inline_keyboard'=>$this->keyboards['inline_buy_default']]),
				'disable_notification' => TRUE,
				'disable_web_page_preview' => TRUE,
				'parse_mode'=> "HTML"
				]);
				usleep(100000);
				
				/* $tab='tabtype'.$this->api->chatId.'';
		
					//if(mysqli_query($con_sql2, 'SELECT 1 FROM '.$tab.' LIMIT 1'))
					//{
						mysqli_query($con_sql2, 'DROP TABLE '.$tab.'');
						usleep(100000);	
					//}
					
					$tab='tabcat'.$this->api->chatId.'';
					
					//if(mysqli_query($con_sql2, 'SELECT 1 FROM '.$tab.' LIMIT 1'))
					//{
						mysqli_query($con_sql2, 'DROP TABLE '.$tab.'');
						usleep(100000);
					//}
					
					$tab='tabgender'.$this->api->chatId.'';
					
					//if(mysqli_query($con_sql2, 'SELECT 1 FROM '.$tab.' LIMIT 1'))
					//{
						mysqli_query($con_sql2, 'DROP TABLE '.$tab.'');
						usleep(100000);
					//}
				
					$tab='tabcond'.$this->api->chatId.'';
					
					//if(mysqli_query($con_sql2, 'SELECT 1 FROM '.$tab.' LIMIT 1'))
					//{
						mysqli_query($con_sql2, 'DROP TABLE '.$tab.'');
						usleep(100000);
					//}
				
					$tab='tabprice'.$this->api->chatId.'';
					
					//if(mysqli_query($con_sql2, 'SELECT 1 FROM '.$tab.' LIMIT 1'))
					//{
						mysqli_query($con_sql2, 'DROP TABLE '.$tab.'');
						usleep(100000);
					//}
					
					
					$tab='tabservice'.$this->api->chatId.'';
					
					//if(mysqli_query($con_sql2, 'SELECT 1 FROM '.$tab.' LIMIT 1'))
					//{
						mysqli_query($con_sql2, 'DROP TABLE '.$tab.'');
						usleep(100000);
					//} */
			
			}
			else
			{
				$text='–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é –≤ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç <b>–Ω–µ—Ç —Ç–æ–≤–∞—Ä–æ–≤ –≤ –ø—Ä–æ–¥–∞–∂–µ</b>. –í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ –º–µ–Ω—é –ö—É–ø–∏—Ç—å —Ç–æ–≤–∞—Ä.'.$this->pre.'';
				$this->callbackAnswer( $text, $this->keyboards['inline_buy_default']);
			}
			
		}
		
	}
	


/////
	public function callback_byrecordid_default_buy()
	{
		
		$con_sql2=$this->cmd_sql();
				
		if(isset($this->api->body['callback_query']["id"]))
		{
			$callback_query_id=$this->api->body['callback_query']["id"];
			$this->api->answerCallbackQuery($callback_query_id);
		}
		

		$query=mysqli_query($con_sql2, 'SHOW TABLES LIKE "tabmain%"');
		$con=mysqli_num_rows($query);
		
		if($con!=0)
		{
		
			$b=0;
			for($i=0;$i<$con;$i++)
			{
				mysqli_data_seek($query, $i);
				$row[$i]=mysqli_fetch_row($query);
				
				if(mysqli_num_rows(mysqli_query($con_sql2, 'SELECT 1 FROM '.$row[$i][0].' WHERE messid!="0"'))!=0)
				{
					$b=1;
					
					$tabserviceuser='tabserviceuser'.$this->api->chatId.'';
					
					if(mysqli_query($con_sql2, 'SELECT 1 FROM '.$tabserviceuser.' LIMIT 1')==FALSE)
					{
						mysqli_query($con_sql2, 'CREATE TABLE '.$tabserviceuser.' (id INT(4) UNSIGNED AUTO_INCREMENT PRIMARY KEY,info VARCHAR(20)) ENGINE = InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;');
						usleep(250000);
						mysqli_query($con_sql2, 'INSERT INTO '.$tabserviceuser.' (info) VALUES ("byrecordid")');
						usleep(100000);
					}
					else
					{
						if(mysqli_num_rows(mysqli_query($con_sql2, 'SELECT 1 FROM '.$tabserviceuser.' WHERE id LIKE "%" LIMIT 1'))==0)
						{
							mysqli_query($con_sql2, 'INSERT INTO '.$tabserviceuser.' (info) VALUES ("byrecordid")');
							usleep(100000);
						}
						else
						{
							mysqli_query($con_sql2, 'TRUNCATE TABLE '.$tabserviceuser.'');
							usleep(100000);
							mysqli_query($con_sql2, 'INSERT INTO '.$tabserviceuser.' (info) VALUES ("byrecordid")');
							usleep(100000);
						}
					}
				/* 	$text='–í–≤–µ–¥–∏—Ç–µ <b>ID —Ç–æ–≤–∞—Ä–∞</b>.';
		
					$this->api->sendMessage([
						'text' => $text,
						'reply_markup' => json_encode( ['force_reply' => true, 'input_field_placeholder' => '–í–≤–µ–¥–∏—Ç–µ ID —Ç–æ–≤–∞—Ä–∞'] ),
						'disable_notification' => TRUE,
						'disable_web_page_preview' => TRUE,
						'parse_mode'=> "HTML"
					]);
					usleep(100000); */
					

					$text='–í–≤–µ–¥–∏—Ç–µ <b>ID —Ç–æ–≤–∞—Ä–∞</b>, —á—Ç–æ–±—ã –∑–∞–∫–∞–∑–∞—Ç—å –µ–≥–æ.'.$this->pre.'';
					$merge=[];
					$merge[] = [['text' => '‚¨ÖÔ∏è–ù–∞–∑–∞–¥', 'callback_data' => 'back_byrecordid_default_buy'], ['text' => '‚§¥Ô∏è–í—ã–π—Ç–∏', 'callback_data' => 'exit_byrecordid_default_buy']];
					
					
					$this->api->sendMessage([
						'text' => $text,
						'reply_markup' => json_encode( ['inline_keyboard'=>$merge]),
						'disable_notification' => TRUE,
						'disable_web_page_preview' => TRUE,
						'parse_mode'=> "HTML"
						]);
					usleep(100000);
					
					break;
				}
				
				
			}
			
			if($b==0)
			{
				$text='–í –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç <b>–Ω–µ—Ç —Ç–æ–≤–∞—Ä–æ–≤, —Ä–∞–∑–º–µ—â–µ–Ω–Ω—ã—Ö –≤ –∫–∞–Ω–∞–ª–µ!</b>'.$this->pre.'';
		
				$this->api->sendMessage([
				'text' => $text,
				'reply_markup' => json_encode( ['inline_keyboard'=>$this->keyboards['inline_buy_default']]),
				'disable_notification' => TRUE,
				'disable_web_page_preview' => TRUE,
				'parse_mode'=> "HTML"
				]);
				usleep(100000);
			}
			
			
		}
		else
		{
			$text='–í –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç <b>–Ω–µ—Ç —Ç–æ–≤–∞—Ä–æ–≤, —Ä–∞–∑–º–µ—â–µ–Ω–Ω—ã—Ö –≤ –∫–∞–Ω–∞–ª–µ!</b>'.$this->pre.'';
		
			$this->api->sendMessage([
			'text' => $text,
			'reply_markup' => json_encode( ['inline_keyboard'=>$this->keyboards['inline_buy_default']]),
			'disable_notification' => TRUE,
			'disable_web_page_preview' => TRUE,
			'parse_mode'=> "HTML"
			]);
			usleep(100000);
		}

	}

/////
	public function callback_back_byrecordid_default_buy()
	{
		$con_sql2=$this->cmd_sql();
		$tabserviceuser='tabserviceuser'.$this->api->chatId.'';
		
		if(mysqli_query($con_sql2, 'SELECT 1 FROM '.$tabserviceuser.' LIMIT 1'))
		{
			mysqli_query($con_sql2, 'TRUNCATE TABLE '.$tabserviceuser.'');
			usleep(100000);
		}
		
		$text='–í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –≤ —Ä–∞–∑–¥–µ–ª  <b>–ö—É–ø–∏—Ç—å —Ç–æ–≤–∞—Ä</b>'.$this->pre.'';

		$this->callbackAnswer( $text, $this->keyboards['inline_buy_default']);
	}
	
/////
	public function callback_exit_byrecordid_default_buy()
	{
		$con_sql2=$this->cmd_sql();
		$tabserviceuser='tabserviceuser'.$this->api->chatId.'';
		
		if(mysqli_query($con_sql2, 'SELECT 1 FROM '.$tabserviceuser.' LIMIT 1'))
		{
			mysqli_query($con_sql2, 'TRUNCATE TABLE '.$tabserviceuser.'');
			usleep(100000);
		}
		
		if($this->cmd_isadmin())
		{
			$text='–í—ã –≤—ã—à–ª–∏ –≤ <b>–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é</b>.'.$this->pre.'';
			
			if(isset($this->api->body['callback_query']["id"]))
			{
				$callback_query_id=$this->api->body['callback_query']["id"];
				$this->api->answerCallbackQuery($callback_query_id);
			}
			
			$this->api->sendMessage([
				'text' => $text,
				'reply_markup' => json_encode( ['inline_keyboard'=>$this->keyboards['inline_default_admin']]),
				'disable_notification' => TRUE,
				'disable_web_page_preview' => TRUE,
				'parse_mode'=> "HTML"
				]);
				usleep(100000);
		}
		else
		{
			$text='–í—ã –≤—ã—à–ª–∏ –≤ <b>–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é</b>.'.$this->pre.'';
			
			if(isset($this->api->body['callback_query']["id"]))
			{
				$callback_query_id=$this->api->body['callback_query']["id"];
				$this->api->answerCallbackQuery($callback_query_id);
			}
						
			$this->api->sendMessage([
				'text' => $text,
				'reply_markup' => json_encode( ['inline_keyboard'=>$this->keyboards['inline_default']]),
				'disable_notification' => TRUE,
				'disable_web_page_preview' => TRUE,
				'parse_mode'=> "HTML"
				]);
				usleep(100000);
		}
	}


/////
	public function cmd_byrecordid_default_buy()
	{
		$con_sql2=$this->cmd_sql();
		
		$record=$this->api->textmessage;
		$tabbuy='tabservicebuy'.$this->api->chatId.'';
		
		$tabserviceuser='tabserviceuser'.$this->api->chatId.'';
		
		$query=mysqli_query($con_sql2, 'SHOW TABLES LIKE "tabmain%"');
		$con=mysqli_num_rows($query);
		
		if($con!=0)
		{
		
			$a=0;
			$b=0;
			for($i=0;$i<$con;$i++)
			{
				mysqli_data_seek($query, $i);
				$row[$i]=mysqli_fetch_row($query);
				
				if(mysqli_num_rows(mysqli_query($con_sql2, 'SELECT * FROM '.$row[$i][0].' WHERE messid!="0"'))!=0)
				{
					$b=1;
					if(mysqli_num_rows(mysqli_query($con_sql2, 'SELECT * FROM '.$row[$i][0].' WHERE messid="'.$record.'"'))!=0)
					{
						$a=1;
						
						$query1=mysqli_query($con_sql2, 'SELECT * FROM '.$row[$i][0].' WHERE messid="'.$record.'"');
						usleep(100000);
						$con1=mysqli_num_rows($query1);
							
						for($i1=0;$i1<$con1;$i1++)
						{
							mysqli_data_seek($query1, $i1);
							$row1[$i1]=mysqli_fetch_row($query1);
						}
						
							$type=$this->convert_rus($row1[0][1]);
							$cat=$this->convert_rus($row1[0][2]);
							$gender=$this->convert_rus($row1[0][3]);
							$cond=$this->convert_rus($row1[0][12]);
						
							$caption='üìñ–ö–∞—Ç–µ–≥–æ—Ä–∏—è: &#160;&#160;<b>'.$type.'</b>'.PHP_EOL.'üßæ–í–∏–¥: &#160;&#160;<b>'.$cat.'</b>'.PHP_EOL.'üë®‚Äçüë©‚Äçüë¶–ü–æ–ª: &#160;&#160;<b>'.$gender.'</b>'.PHP_EOL.'üéè–°–æ—Å—Ç–æ—è–Ω–∏–µ: <b>'.$cond.'</b>'.PHP_EOL.'¬ÆÔ∏è–ë—Ä–µ–Ω–¥: &#160;&#160;<b>'.$row1[0][4].'</b>'.PHP_EOL.'‚ÜïÔ∏è–†–∞–∑–º–µ—Ä: &#160;&#160;<b>'.$row1[0][5].'</b>'.PHP_EOL.'üíµ–¶–µ–Ω–∞: &#160;&#160;<b>'.$row1[0][6].'</b>'.PHP_EOL.'üìã–û–ø–∏—Å–∞–Ω–∏–µ: &#160;&#160;'.$row1[0][7].''.PHP_EOL.''.PHP_EOL.''.PHP_EOL.'<b>ID —Ç–æ–≤–∞—Ä–∞: '.$row1[0][11].'</b>'.PHP_EOL.''.PHP_EOL.'üìÅüìÅüìÅüìÅüìÅüìÅüìÅüìÅüìÅüìÅüìÅüìÅ';

							$photo=$row1[0][8];
							
							if(preg_match('/;/', $photo)==FALSE)
							{
								$this->api->sendPhoto([
								'photo' => $photo,
								'caption' => $caption,
								'disable_notification' => TRUE,
								'parse_mode' => "HTML"
								]);
								usleep(250000);
							
							}
							else
							{
								$media=[];
								$temp=explode(';', $photo);
								$cnt=count($temp);
								for($o=0;$o<$cnt;$o++)
								{
								
								
									if($o==0)
									{
										$put=['type' => 'photo', 'media' =>  ''.$temp[$o].'', 'caption' => ''.$caption.'', 'parse_mode' => "HTML" ];
									}
									else
									{
										$put=['type' => 'photo', 'media' =>  ''.$temp[$o].'' ];
									}
							
									$media[$o]=$put;
								}
								
								
								$this->api->sendMediaGroup([
								'media' => json_encode($media),
								]);
								usleep(350000);
							}

							$text='–°–≤–µ—Ä—Ö—É –ø–æ–∫–∞–∑–∞–Ω —Ç–æ–≤–∞—Ä —Å <b>ID ‚Ññ'.$record.'.</b> '.PHP_EOL.''.PHP_EOL.'<b>–í—ã —Ç–æ—á–Ω–æ —Ö–æ—Ç–∏—Ç–µ –∫—É–ø–∏—Ç—å –µ–≥–æ?</b>'.$this->pre.'';
							$merge=[];
							$merge[] = [['text' => 'üü¢–î–∞', 'callback_data' => 'byrecordid_default_buy_yes'], ['text' => 'üî¥–ù–µ—Ç', 'callback_data' => 'byrecordid_default_buy_no']];
							$merge[] = [['text' => '‚¨ÖÔ∏è–ù–∞–∑–∞–¥', 'callback_data' => 'back_byrecordid_default_buy'], ['text' => '‚§¥Ô∏è–í—ã–π—Ç–∏', 'callback_data' => 'exit_byrecordid_default_buy']];
							
							
							$this->api->sendMessage([
								'text' => $text,
								'reply_markup' => json_encode( ['inline_keyboard'=>$merge]),
								'disable_notification' => TRUE,
								'disable_web_page_preview' => TRUE,
								'parse_mode'=> "HTML"
								]);
							usleep(100000);
						

						break;
						
					}
				}
			}
			
			if($b==0)
			{
				$text='–í –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç <b>–Ω–µ—Ç —Ç–æ–≤–∞—Ä–æ–≤, —Ä–∞–∑–º–µ—â–µ–Ω–Ω—ã—Ö –≤ –∫–∞–Ω–∞–ª–µ!</b>'.$this->pre.'';
		
				$this->api->sendMessage([
				'text' => $text,
				'reply_markup' => json_encode( ['inline_keyboard'=>$this->keyboards['inline_buy_default']]),
				'disable_notification' => TRUE,
				'disable_web_page_preview' => TRUE,
				'parse_mode'=> "HTML"
				]);
				usleep(100000);
			}
			elseif($a==0)
			{
				$merge=[];
				$merge[] = [['text' => '‚¨ÖÔ∏è–ù–∞–∑–∞–¥', 'callback_data' => 'back_byrecordid_default_buy'], ['text' => '‚§¥Ô∏è–í—ã–π—Ç–∏', 'callback_data' => 'exit_byrecordid_default_buy']];
				
				/* $text='–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –¥—Ä—É–≥–æ–π ID —Ç–æ–≤–∞—Ä–∞.';
				$this->api->sendMessage([
							'text' => $text,
							'reply_markup' => json_encode( ['force_reply' => true, 'input_field_placeholder' => '–í–≤–µ–¥–∏—Ç–µ ID —Ç–æ–≤–∞—Ä–∞'] ),
							'disable_notification' => TRUE,
							'disable_web_page_preview' => TRUE,
							'parse_mode'=> "HTML"
							]);
						usleep(100000); */
						
				$text='–¢–æ–≤–∞—Ä–∞ —Å ID <b>'.$record.' –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç</b>.'.PHP_EOL.'–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –¥—Ä—É–≥–æ–π ID —Ç–æ–≤–∞—Ä–∞.'.$this->pre.'';
				$this->api->sendMessage([
					'text' => $text,
					'reply_markup' => json_encode( ['inline_keyboard'=>$merge]),
					'disable_notification' => TRUE,
					'disable_web_page_preview' => TRUE,
					'parse_mode'=> "HTML"
					]);
				usleep(100000);
			}
		}
		else
		{
			$text='–í –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π <b>–Ω–µ—Ç –Ω–∏ –æ–¥–Ω–æ–≥–æ –æ–±—ä—è–≤–ª–µ–Ω–∏—è</b>.'.$this->pre.'';
		
			$this->api->sendMessage([
			'text' => $text,
			'reply_markup' => json_encode( ['inline_keyboard'=>$this->keyboards['inline_buy_default']]),
			'disable_notification' => TRUE,
			'disable_web_page_preview' => TRUE,
			'parse_mode'=> "HTML"
			]);
			usleep(100000);
		}
	}
		

/////
	public function callback_byrecordid_default_buy_yes()
	{
		$con_sql2=$this->cmd_sql();
				
		$text1=$this->api->textmessage;
		
		preg_match_all('/ID ‚Ññ.*\./', $text1, $out);
		$record=$out[0][0];
		$record=preg_replace('/ID ‚Ññ/', '', $record);
		$record=preg_replace('/\./', '', $record);
		
		$record=$this->clean($record);
		
		$tabbuy='tabservicebuy'.$this->api->chatId.'';
		
		$tabserviceuser='tabserviceuser'.$this->api->chatId.'';
		
				
		
		$query=mysqli_query($con_sql2, 'SHOW TABLES LIKE "tabmain%"');
		$con=mysqli_num_rows($query);
		
		if($con!=0)
		{
		
			$a=0;
			$b=0;
			for($i=0;$i<$con;$i++)
			{
				mysqli_data_seek($query, $i);
				$row[$i]=mysqli_fetch_row($query);
				
				if(mysqli_num_rows(mysqli_query($con_sql2, 'SELECT * FROM '.$row[$i][0].' WHERE messid!="0"'))!=0)
				{
					$b=1;
					if(mysqli_num_rows(mysqli_query($con_sql2, 'SELECT * FROM '.$row[$i][0].' WHERE messid="'.$record.'"'))!=0)
					{
						$a=1;
						
						$query1=mysqli_query($con_sql2, 'SELECT * FROM '.$row[$i][0].' WHERE messid="'.$record.'"');
						usleep(100000);
						$con1=mysqli_num_rows($query1);
							
						for($i1=0;$i1<$con1;$i1++)
						{
							mysqli_data_seek($query1, $i1);
							$row1[$i1]=mysqli_fetch_row($query1);
						}
						
							

						if(mysqli_query($con_sql2, 'SELECT 1 FROM '.$tabbuy.' LIMIT 1')==FALSE)
						{
							$query1='CREATE TABLE '.$tabbuy.' (id INT(4) UNSIGNED AUTO_INCREMENT PRIMARY KEY,type VARCHAR(20), cat VARCHAR(20), gender VARCHAR(20), brand VARCHAR(30), size VARCHAR(30), price NUMERIC(7,0), alt VARCHAR(512), pic VARCHAR(512), date VARCHAR(20), time VARCHAR(20), messid VARCHAR(20), cond VARCHAR(20), chatid VARCHAR(20), buyer VARCHAR(100) DEFAULT "0", seller VARCHAR(100) DEFAULT "0") ENGINE = InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;';
							$result1=mysqli_query($con_sql2, $query1);
							usleep(250000);
						}
						
						mysqli_query($con_sql2, 'INSERT INTO '.$tabbuy.' (type, cat, gender, brand, size, price, alt, pic, date, time, messid, cond, chatid) SELECT type, cat, gender, brand, size, price, alt, pic, date, time, messid, cond, chatid FROM '.$row[$i][0].' WHERE messid="'.$record.'"');
						usleep(250000);
						
						$query2=mysqli_query($con_sql2, 'SELECT * FROM '.$tabbuy.' WHERE messid="'.$record.'" ORDER BY id ASC');
						usleep(100000);
						$con2=mysqli_num_rows($query2);
						
						for($i2=0;$i2<$con2;$i2++)
						{
							mysqli_data_seek($query2, $i2);
							$row2[$i2]=mysqli_fetch_row($query2);
						}
						

						$fiobuyer=$this->cmd_user_get_fio($this->api->chatId);
						$phonebuyer=$this->cmd_user_get_phone($this->api->chatId);
						
						$chatidseller=str_replace('tabmain', '', $row[$i][0]);
						$fioseller=$this->cmd_user_get_fio($chatidseller);
						$phoneseller=$this->cmd_user_get_phone($chatidseller);

						mysqli_query($con_sql2, 'UPDATE '.$tabbuy.' SET buyer = REPLACE(buyer, "'.$row2[0][14].'", "'.$fiobuyer.' ('.$phonebuyer.')") WHERE messid="'.$record.'"');
						usleep(250000);
						
						mysqli_query($con_sql2, 'UPDATE '.$tabbuy.' SET seller = REPLACE(seller, "'.$row2[0][15].'", "'.$fioseller.' ('.$phoneseller.')") WHERE messid="'.$record.'"');
						usleep(250000);

						$time=time();
						$date=date('d.m.Y');
						
						mysqli_query($con_sql2, 'UPDATE '.$tabbuy.' SET date = REPLACE(date, "'.$row2[0][9].'", "'.$date.'") WHERE messid="'.$record.'"');
						usleep(250000);
						mysqli_query($con_sql2, 'UPDATE '.$tabbuy.' SET time = REPLACE(time, "'.$row2[0][10].'", "'.$time.'") WHERE messid="'.$record.'"');
						usleep(250000);
						
						if(isset($this->api->body['callback_query']["id"]))
						{
							$callback_query_id=$this->api->body['callback_query']["id"];
							$this->api->answerCallbackQuery($callback_query_id);
						}
						
						$text='–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å üë§<b>'.$fiobuyer.' ('.$phonebuyer.')</b> —Ö–æ—á–µ—Ç –∫—É–ø–∏—Ç—å —Ç–æ–≤–∞—Ä —Å <b>ID ‚Ññ'.$record.'</b> —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è üë§<b>'.$fioseller.' ('.$phoneseller.')</b>. –ß—Ç–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ —Å–¥–µ–ª–∞—Ç—å —Å –¥–∞–Ω–Ω—ã–º —Ç–æ–≤–∞—Ä–æ–º?'.$this->pre.'';
						
						$this->api->sendMessage([
						'chat_id' => $this->chatidadmin,
						'text' => $text,
						'parse_mode' => "HTML",
						'reply_markup' => json_encode( ['inline_keyboard'=>$this->keyboards['inline_ask_admin_buy']]),
						]);
						
						$text='–í—ã —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–∏–ª–∏ –∑–∞–ø—Ä–æ—Å –Ω–∞ –ø–æ–∫—É–ø–∫—É —Ç–æ–≤–∞—Ä–∞ —Å <b>ID ‚Ññ'.$record.'!</b> –í–∞–º –ø—Ä–∏–¥–µ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–µ.'.$this->pre.'';
						$this->api->sendMessage([
						'text' => $text,
						'parse_mode' => "HTML",
						'reply_markup' => json_encode( ['inline_keyboard'=>$this->keyboards['inline_buy_default']]),
						]);
							
						
						break;
						
					}
				}
			}
			
			if($b==0)
			{
				if(isset($this->api->body['callback_query']["id"]))
				{
					$callback_query_id=$this->api->body['callback_query']["id"];
					$this->api->answerCallbackQuery($callback_query_id);
				}
				$text='–í –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç <b>–Ω–µ—Ç —Ç–æ–≤–∞—Ä–æ–≤, —Ä–∞–∑–º–µ—â–µ–Ω–Ω—ã—Ö –≤ –∫–∞–Ω–∞–ª–µ!</b>'.$this->pre.'';
		
				$this->api->sendMessage([
				'text' => $text,
				'reply_markup' => json_encode( ['inline_keyboard'=>$this->keyboards['inline_buy_default']]),
				'disable_notification' => TRUE,
				'disable_web_page_preview' => TRUE,
				'parse_mode'=> "HTML"
				]);
				usleep(100000);
			}
			elseif($a==0)
			{
				$merge=[];
				$merge[] = [['text' => '‚¨ÖÔ∏è–ù–∞–∑–∞–¥', 'callback_data' => 'back_byrecordid_default_buy'], ['text' => '‚§¥Ô∏è–í—ã–π—Ç–∏', 'callback_data' => 'exit_byrecordid_default_buy']];
				
				if(isset($this->api->body['callback_query']["id"]))
				{
					$callback_query_id=$this->api->body['callback_query']["id"];
					$this->api->answerCallbackQuery($callback_query_id);
				}
				/* $text='–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –¥—Ä—É–≥–æ–π ID —Ç–æ–≤–∞—Ä–∞.';
				$this->api->sendMessage([
					'text' => $text,
					'reply_markup' => json_encode( ['force_reply' => true, 'input_field_placeholder' => '–í–≤–µ–¥–∏—Ç–µ ID —Ç–æ–≤–∞—Ä–∞'] ),
					'disable_notification' => TRUE,
					'disable_web_page_preview' => TRUE,
					'parse_mode'=> "HTML"
					]);
				usleep(100000); */
						
				$text='–¢–æ–≤–∞—Ä–∞ —Å ID <b>'.$record.' –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç</b>.'.PHP_EOL.'–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –¥—Ä—É–≥–æ–π ID —Ç–æ–≤–∞—Ä–∞, —á—Ç–æ–±—ã –∫—É–ø–∏—Ç—å –µ–≥–æ.'.$this->pre.'';
				$this->api->sendMessage([
					'text' => $text,
					'reply_markup' => json_encode( ['inline_keyboard'=>$merge]),
					'disable_notification' => TRUE,
					'disable_web_page_preview' => TRUE,
					'parse_mode'=> "HTML"
					]);
				usleep(100000);
			}
		}
		else
		{
			if(isset($this->api->body['callback_query']["id"]))
			{
				$callback_query_id=$this->api->body['callback_query']["id"];
				$this->api->answerCallbackQuery($callback_query_id);
			}
		
			$text='–í –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π <b>–Ω–µ—Ç –Ω–∏ –æ–¥–Ω–æ–≥–æ –æ–±—ä—è–≤–ª–µ–Ω–∏—è</b>.'.$this->pre.'';
		
			$this->api->sendMessage([
			'text' => $text,
			'reply_markup' => json_encode( ['inline_keyboard'=>$this->keyboards['inline_buy_default']]),
			'disable_notification' => TRUE,
			'disable_web_page_preview' => TRUE,
			'parse_mode'=> "HTML"
			]);
			usleep(100000);
		}
	}

/////
	public function callback_byrecordid_default_buy_no()
	{
		
		$text1=$this->api->textmessage;
		
		preg_match_all('/ID ‚Ññ.*\./', $text1, $out);
		$record=$out[0][0];
		$record=preg_replace('/ID ‚Ññ/', '', $record);
		$record=preg_replace('/\./', '', $record);
		
		$record=$this->clean($record);
		
		$text='–í—ã –æ—Ç–º–µ–Ω–∏–ª–∏ –ø–æ–∫—É–ø–∫—É —Ç–æ–≤–∞—Ä–∞ —Å <b>ID ‚Ññ'.$record.'</b>.'.PHP_EOL.'–í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ —Ä–∞–∑–¥–µ–ª–µ <b>–ö—É–ø–∏—Ç—å —Ç–æ–≤–∞—Ä</b>.'.$this->pre.'';
		
		if(isset($this->api->body['callback_query']["id"]))
		{
			$callback_query_id=$this->api->body['callback_query']["id"];
			$this->api->answerCallbackQuery($callback_query_id);
		}
		
		$this->api->sendMessage([
			'text' => $text,
			'reply_markup' => json_encode( ['inline_keyboard'=>$this->keyboards['inline_buy_default']]),
			'disable_notification' => TRUE,
			'disable_web_page_preview' => TRUE,
			'parse_mode'=> "HTML"
			]);
			usleep(100000);
	}
	

/////
	public function callback_admin_ask_buy_see()
	{
		$con_sql2=$this->cmd_sql();
		
		$text1=$this->api->textmessage;
		
		$phonebuyer=preg_replace('/\).*/', '', $text1);
		$phonebuyer=preg_replace('/.*\(/', '', $phonebuyer);
		$phonebuyer=$this->clean($phonebuyer);
		$chatidbuyer=$this->cmd_user_get_chatid_phone($phonebuyer);
		$fiobuyer=$this->cmd_user_get_fio($chatidbuyer);
			
		$phoneseller=preg_replace('/.*\(/', '', $text1);
		$phoneseller=preg_replace('/\).*/', '', $phoneseller);
		$phoneseller=$this->clean($phoneseller);
		$chatidseller=$this->cmd_user_get_chatid_phone($phoneseller);
		$fioseller=$this->cmd_user_get_fio($chatidseller);
		
		
		
		preg_match_all('/ID ‚Ññ\d{1,}/', $text1, $out1);
		
		$record=preg_replace('/ID ‚Ññ/', '', $out1[0][0]);
		$record=$this->clean($record);

		$tabbuy='tabservicebuy'.$chatidbuyer.'';

		$query=mysqli_query($con_sql2, 'SELECT * FROM '.$tabbuy.' WHERE messid="'.$record.'"');
		usleep(100000);
		$con=mysqli_num_rows($query);
			
		for($i=0;$i<$con;$i++)
		{
			mysqli_data_seek($query, $i);
			$row[$i]=mysqli_fetch_row($query);
		}
		usleep(100000);
		

			$type=$this->convert_rus($row[0][1]);
			$cat=$this->convert_rus($row[0][2]);
			$gender=$this->convert_rus($row[0][3]);
			$cond=$this->convert_rus($row[0][12]);
		
		
			$caption='üìñ–ö–∞—Ç–µ–≥–æ—Ä–∏—è: &#160;&#160;<b>'.$type.'</b>'.PHP_EOL.'üßæ–í–∏–¥: &#160;&#160;<b>'.$cat.'</b>'.PHP_EOL.'üë®‚Äçüë©‚Äçüë¶–ü–æ–ª: &#160;&#160;<b>'.$gender.'</b>'.PHP_EOL.'üéè–°–æ—Å—Ç–æ—è–Ω–∏–µ: <b>'.$cond.'</b>'.PHP_EOL.'¬ÆÔ∏è–ë—Ä–µ–Ω–¥: &#160;&#160;<b>'.$row[0][4].'</b>'.PHP_EOL.'‚ÜïÔ∏è–†–∞–∑–º–µ—Ä: &#160;&#160;<b>'.$row[0][5].'</b>'.PHP_EOL.'üíµ–¶–µ–Ω–∞: &#160;&#160;<b>'.$row[0][6].'</b>'.PHP_EOL.'üìã–û–ø–∏—Å–∞–Ω–∏–µ: &#160;&#160;'.$row[0][7].''.PHP_EOL.''.PHP_EOL.''.PHP_EOL.'<b>ID —Ç–æ–≤–∞—Ä–∞: '.$row[0][11].'</b>'.PHP_EOL.'–ü—Ä–æ–¥–∞–≤–µ—Ü:<b> '.$row[0][15].'</b>'.PHP_EOL.'–ü–æ–∫—É–ø–∞—Ç–µ–ª—å:<b> '.$row[0][14].'</b>';
			
			
			$photo=$row[0][8];
			
			if(preg_match('/;/', $photo)==FALSE)
			{
				$this->api->sendPhoto([
				'photo' => $photo,
				'caption' => $caption,
				'disable_notification' => TRUE,
				'parse_mode' => "HTML"
				]);
				usleep(250000);
			
			}
			else
			{
				$media=[];
				$temp=explode(';', $photo);
				$cnt=count($temp);
				for($o=0;$o<$cnt;$o++)
				{
				
				
					if($o==0)
					{
						$put=['type' => 'photo', 'media' =>  ''.$temp[$o].'', 'caption' => ''.$caption.'', 'parse_mode' => "HTML" ];
					}
					else
					{
						$put=['type' => 'photo', 'media' =>  ''.$temp[$o].'' ];
					}
			
					$media[$o]=$put;
				}
				
				
				$this->api->sendMediaGroup([
				'media' => json_encode($media),
				]);
				usleep(350000);
			}

		$text='–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å üë§<b>'.$fiobuyer.' ('.$phonebuyer.')</b> —Ö–æ—á–µ—Ç –∫—É–ø–∏—Ç—å —Ç–æ–≤–∞—Ä —Å <b>ID ‚Ññ'.$record.'</b> —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è üë§<b>'.$fioseller.' ('.$phoneseller.')</b>. –ß—Ç–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ —Å–¥–µ–ª–∞—Ç—å —Å –¥–∞–Ω–Ω—ã–º —Ç–æ–≤–∞—Ä–æ–º?'.$this->pre.'';
		
		
		if(isset($this->api->body['callback_query']["id"]))
		{
			$callback_query_id=$this->api->body['callback_query']["id"];
			$this->api->answerCallbackQuery($callback_query_id);
		}
		
		$this->api->sendMessage([
			'text' => $text,
			'reply_markup' => json_encode( ['inline_keyboard'=>$this->keyboards['inline_ask_admin_buy']]),
			'disable_notification' => TRUE,
			'disable_web_page_preview' => TRUE,
			'parse_mode'=> "HTML"
		]);
		usleep(100000);
	}
	

/////
	public function callback_admin_ask_buy_approve()
	{
		$con_sql2=$this->cmd_sql();
		
		$text1=$this->api->textmessage;
		
		$phonebuyer=preg_replace('/\).*/', '', $text1);
		$phonebuyer=preg_replace('/.*\(/', '', $phonebuyer);
		$phonebuyer=$this->clean($phonebuyer);
		$chatidbuyer=$this->cmd_user_get_chatid_phone($phonebuyer);
		$fiobuyer=$this->cmd_user_get_fio($chatidbuyer);
			
		$phoneseller=preg_replace('/.*\(/', '', $text1);
		$phoneseller=preg_replace('/\).*/', '', $phoneseller);
		$phoneseller=$this->clean($phoneseller);
		$chatidseller=$this->cmd_user_get_chatid_phone($phoneseller);
		$fioseller=$this->cmd_user_get_fio($chatidseller);
		
		preg_match_all('/ID ‚Ññ\d{1,}/', $text1, $out1);
		
		$record=preg_replace('/ID ‚Ññ/', '', $out1[0][0]);
		$record=$this->clean($record);

		$tabbuy='tabservicebuy'.$chatidbuyer.'';
		$tabseller='tabmain'.$chatidseller.'';
		$tabsold='tabservicesold'.$chatidseller.'';
		
		$query1=mysqli_query($con_sql2, 'SELECT * FROM '.$tabbuy.' WHERE messid="'.$record.'"');
		usleep(100000);
		$con1=mysqli_num_rows($query1);
			
		for($i1=0;$i1<$con1;$i1++)
		{
			mysqli_data_seek($query1, $i1);
			$row1[$i1]=mysqli_fetch_row($query1);
		}
		
		$photo=$row1[0][8];
		$messageid=$row1[0][11];
		$timeold=$row1[0][10];
		$timediff=time()-$timeold;
		
		
		if(preg_match('/;/', $photo)==FALSE)
		{
			if($timediff>172000)
			{
				$text='<b><i>–¢–æ–≤–∞—Ä –ø—Ä–æ–¥–∞–Ω</i></b>'.PHP_EOL.'‚ö†Ô∏è‚ö†Ô∏è‚ö†Ô∏è‚ö†Ô∏è‚ö†Ô∏è‚ö†Ô∏è‚ö†Ô∏è‚ö†Ô∏è‚ö†Ô∏è‚ö†Ô∏è‚ö†Ô∏è‚ö†Ô∏è‚ö†Ô∏è‚ö†Ô∏è‚ö†Ô∏è‚ö†Ô∏è‚ö†Ô∏è‚ö†Ô∏è‚ö†Ô∏è‚ö†Ô∏è';
				$photosold='https://domain.com/photosold.png';
				
				$this->api->editMessageMedia([
				'chat_id' => $this->mainchannel,
				'message_id' => $messageid,
				'media' => json_encode( ['type' => 'photo', 'media' => $photosold]),
				]);
			
				$this->api->editMessageCaption([
				'chat_id' => $this->mainchannel,
				'message_id' => $messageid,
				'caption' => $text,
				'parse_mode' => "HTML",
				]);
				
				$photo=str_replace('https://domain.com', ''.dirname(__FILE__).'', $photo);
				unlink($photo);
				usleep(100000);
			}
			else
			{
				$this->api->deleteMessage([
				'chat_id' => $this->mainchannel,
				'message_id' => $messageid
				]);
				
				$photo=str_replace('https://domain.com', ''.dirname(__FILE__).'', $photo);
				unlink($photo);
				usleep(100000);
			}
		}
		else
		{
			
			$tabservicerecords='tabservicerecords';
			$text='<b><i>–¢–æ–≤–∞—Ä –ø—Ä–æ–¥–∞–Ω</i></b>'.PHP_EOL.'‚ö†Ô∏è‚ö†Ô∏è‚ö†Ô∏è‚ö†Ô∏è‚ö†Ô∏è‚ö†Ô∏è‚ö†Ô∏è‚ö†Ô∏è‚ö†Ô∏è‚ö†Ô∏è‚ö†Ô∏è‚ö†Ô∏è‚ö†Ô∏è‚ö†Ô∏è‚ö†Ô∏è‚ö†Ô∏è‚ö†Ô∏è‚ö†Ô∏è‚ö†Ô∏è‚ö†Ô∏è';
			$photosold='https://domain.com/photosold.png';
			
			if($timediff>172000)
			{
			
				$this->api->editMessageCaption([
				'chat_id' => $this->mainchannel,
				'message_id' => $messageid,
				'caption' => $text,
				'parse_mode' => "HTML",
				]);
				
				
				$query2=mysqli_query($con_sql2, 'SELECT * FROM '.$tabservicerecords.' WHERE record="'.$messageid.'"');
				$con2=mysqli_num_rows($query2);
			
				for($i2=0;$i2<$con2;$i2++)
				{
					mysqli_data_seek($query2, $i2);
					$row2[$i2]=mysqli_fetch_row($query2);
				}
				
				$messageids=explode(';', $row2[0][2]);
				$count1=count($messageids);
				
				for($e=0;$e<$count1;$e++)
				{
					
					if($e==0)
					{
						$this->api->editMessageMedia([
						'chat_id' => $this->mainchannel,
						'message_id' => $messageids[$e],
						'media' => json_encode( ['type' => 'photo', 'media' => $photosold, 'caption' => $text, 'parse_mode' => "HTML" ]),
						]);
					}
					else
					{
						$this->api->editMessageMedia([
						'chat_id' => $this->mainchannel,
						'message_id' => $messageids[$e],
						'media' => json_encode( ['type' => 'photo', 'media' => $photosold]),
						]);
					}
			
				}
				
				$photos=explode(';', $photo);
				$cnt=count($photos);
				
				for($y=0;$y<$cnt;$y++)
				{
					$photos[$y]=str_replace('https://domain.com', ''.dirname(__FILE__).'', $photos[$y]);
					unlink($photos[$y]);
					usleep(100000);
				}
			}
			else
			{
				
				$query2=mysqli_query($con_sql2, 'SELECT * FROM '.$tabservicerecords.' WHERE record="'.$messageid.'"');
				$con2=mysqli_num_rows($query2);
			
				for($i2=0;$i2<$con2;$i2++)
				{
					mysqli_data_seek($query2, $i2);
					$row2[$i2]=mysqli_fetch_row($query2);
				}
				
				$messageids=explode(';', $row2[0][2]);
				$count1=count($messageids);
				
				for($e=0;$e<$count1;$e++)
				{
					$this->api->deleteMessage([
					'chat_id' => $this->mainchannel,
					'message_id' => $messageids[$e]
					]);
					usleep(100000);
				}
				
				$photos=explode(';', $photo);
				$cnt=count($photos);
				
				for($y=0;$y<$cnt;$y++)
				{
					$photos[$y]=str_replace('https://domain.com', ''.dirname(__FILE__).'', $photos[$y]);
					unlink($photos[$y]);
					usleep(100000);
				}
				
			}
			
			mysqli_query($con_sql2, 'DELETE FROM '.$tabservicerecords.' WHERE record="'.$messageid.'"');
			
		}
		
		if(mysqli_query($con_sql2, 'SELECT 1 FROM '.$tabsold.' LIMIT 1')==FALSE)
		{
			mysqli_query($con_sql2, 'CREATE TABLE '.$tabsold.' LIKE '.$tabbuy.'');
			usleep(250000);
		}
		
		mysqli_query($con_sql2, 'INSERT INTO '.$tabsold.' (type, cat, gender, brand, size, price, alt, pic, date, time, messid, cond, chatid, buyer, seller) SELECT type, cat, gender, brand, size, price, alt, pic, date, time, messid, cond, chatid, buyer, seller FROM '.$tabbuy.' WHERE messid="'.$record.'"');
						
		$query2=mysqli_query($con_sql2, 'SELECT * FROM '.$tabsold.' WHERE messid="'.$record.'"');
		$con2=mysqli_num_rows($query2);
		usleep(100000);
		
		for($i2=0;$i2<$con2;$i2++)
		{
			mysqli_data_seek($query2, $i2);
			$row2[$i2]=mysqli_fetch_row($query2);
		}
				
		$time=time();
		$date=date('d.m.Y');
		
		$query2='UPDATE '.$tabsold.' SET date = REPLACE(date, "'.$row2[0][9].'", "'.$date.'") WHERE messid="'.$record.'"'; 
		$result2=mysqli_query($con_sql2, $query2);
		usleep(100000);
		
		$query2='UPDATE '.$tabsold.' SET time = REPLACE(time, "'.$row2[0][10].'", "'.$time.'") WHERE messid="'.$record.'"'; 
		$result2=mysqli_query($con_sql2, $query2);
		usleep(100000);
		
		$query2=mysqli_query($con_sql2, 'DELETE FROM '.$tabseller.' WHERE messid="'.$record.'"');
		usleep(100000);
		
		$query2=mysqli_query($con_sql2, 'DELETE FROM '.$tabbuy.' WHERE messid="'.$record.'"');
		usleep(100000);
		
		$query4=mysqli_query($con_sql2, 'SHOW TABLES LIKE "tabservicebuy%"');
		$con4=mysqli_num_rows($query4);
		
		if($con4!=0)
		{
		
			for($i4=0;$i4<$con4;$i4++)
			{
				mysqli_data_seek($query4, $i4);
				$row4[$i4]=mysqli_fetch_row($query4);
				
				if(mysqli_num_rows(mysqli_query($con_sql2, 'SELECT * FROM '.$row4[$i4][0].' WHERE messid="'.$record.'"'))!=0)
				{
					if($row4[$i4][0]!==''.$tabbuy.'')
					{
						$query2=mysqli_query($con_sql2, 'DELETE FROM '.$row4[$i4][0].' WHERE messid="'.$record.'"');
						usleep(100000);
						
						$chatidbuyers=str_replace('tabservicebuy', '', $row4[$i4][0]);
						$chatidbuyers=$this->clean($chatidbuyers);
						
						$text3='–í–∞—à–∞ –∑–∞—è–≤–∫–∞ –Ω–∞ –ø–æ–∫—É–ø–∫—É —Ç–æ–≤–∞—Ä–∞ —Å ID <b>‚Ññ'.$record.'</b> –±—ã–ª–∞ <b>–æ—Ç–º–µ–Ω–µ–Ω–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º</b>.'.PHP_EOL.''.PHP_EOL.'–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –¥–∞–Ω–Ω–æ–≥–æ —Ç–æ–≤–∞—Ä–∞ –Ω–µ—Ç –≤ –Ω–∞–ª–∏—á–∏–∏. –ò–∑–≤–∏–Ω–∏—Ç–µ –∑–∞ –Ω–µ—É–¥–æ–±—Å—Ç–≤–∞.'.$this->pre.'';
						
						$this->api->sendMessage([
						'chat_id' => $chatidbuyers,
						'text' => $text3,
						'reply_markup' => json_encode( ['inline_keyboard'=>$this->keyboards['inline_buy_default']]),
						'parse_mode' => "HTML",
						]);
						usleep(100000);
					}	
				}
				
			}
		}
		

		$text='<b>–í—ã –ü–û–î–¢–í–ï–†–î–ò–õ–ò –ø–æ–∫—É–ø–∫—É:</b>'.PHP_EOL.''.PHP_EOL.'–ü–æ–∫—É–ø–∞—Ç–µ–ª—å üë§<b>'.$fiobuyer.' ('.$phonebuyer.')</b>, –ü—Ä–æ–¥–∞–≤–µ—Ü üë§<b>'.$fioseller.' ('.$phoneseller.')</b>, ID —Ç–æ–≤–∞—Ä–∞ <b>‚Ññ'.$record.'</b>.'.$this->pre.'';
		$this->callbackAnswer( $text, $this->keyboards['inline_default_admin']);
		
		/* if(isset($this->api->body['callback_query']["id"]))
		{
			$callback_query_id=$this->api->body['callback_query']["id"];
			$this->api->answerCallbackQuery($callback_query_id);
		}
		
		$this->api->sendMessage([
			'text' => $text,
			//'reply_markup' => json_encode( ['inline_keyboard'=>$this->keyboards['inline_admin_main']]),
			'disable_notification' => TRUE,
			'disable_web_page_preview' => TRUE,
			'parse_mode'=> "HTML"
		]);
		usleep(100000); */
		
		/* $text='–í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ <b>–ì–ª–∞–≤–Ω–æ–º –º–µ–Ω—é –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞.</b>';
		$this->api->sendMessage([
			'text' => $text,
			'reply_markup' => json_encode( ['inline_keyboard'=>$this->keyboards['inline_admin_main']]),
			'disable_notification' => TRUE,
			'disable_web_page_preview' => TRUE,
			'parse_mode'=> "HTML"
		]);
		usleep(100000); */
		
		$text2='–í–∞—à–∞ –∑–∞—è–≤–∫–∞ –Ω–∞ –ø–æ–∫—É–ø–∫—É —Ç–æ–≤–∞—Ä–∞ —Å ID <b>‚Ññ'.$record.'</b> –±—ã–ª–∞ <b>—Å–æ–≥–ª–∞—Å–æ–≤–∞–Ω–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º</b>.'.PHP_EOL.'–í –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è —Å –≤–∞–º–∏ <b>—Å–≤—è–∂–µ—Ç—Å—è –ü—Ä–æ–¥–∞–≤–µ—Ü.</b>'.$this->pre.'';
			
		$this->api->sendMessage([

			'chat_id' => $chatidbuyer,
			'text' => $text2,
			'reply_markup' => json_encode( ['inline_keyboard'=>$this->keyboards['inline_buy_default']]),
			'parse_mode' => "HTML",
			]);
		usleep(100000);
		
		
		
	}
	
	
/////
	public function callback_admin_ask_buy_deny()
	{
		$con_sql2=$this->cmd_sql();
		
		$text1=$this->api->textmessage;
		
		$phonebuyer=preg_replace('/\).*/', '', $text1);
		$phonebuyer=preg_replace('/.*\(/', '', $phonebuyer);
		$phonebuyer=$this->clean($phonebuyer);
		$chatidbuyer=$this->cmd_user_get_chatid_phone($phonebuyer);
		$fiobuyer=$this->cmd_user_get_fio($chatidbuyer);
			
		$phoneseller=preg_replace('/.*\(/', '', $text1);
		$phoneseller=preg_replace('/\).*/', '', $phoneseller);
		$phoneseller=$this->clean($phoneseller);
		$chatidseller=$this->cmd_user_get_chatid_phone($phoneseller);
		$fioseller=$this->cmd_user_get_fio($chatidseller);
		
		preg_match_all('/ID ‚Ññ\d{1,}/', $text1, $out1);
		
		$record=preg_replace('/ID ‚Ññ/', '', $out1[0][0]);
		$record=$this->clean($record);

		$tabbuy='tabservicebuy'.$chatidbuyer.'';
		$tabseller='tabmain'.$chatidseller.'';
		$tabsold='tabservicesold'.$chatidseller.'';
		
		$query2=mysqli_query($con_sql2, 'DELETE FROM '.$tabbuy.' WHERE messid="'.$record.'"');
		usleep(100000);
		
		$text='<b>–í—ã –û–¢–ú–ï–ù–ò–õ–ò –ø–æ–∫—É–ø–∫—É:</b>'.PHP_EOL.''.PHP_EOL.'–ü–æ–∫—É–ø–∞—Ç–µ–ª—å üë§<b>'.$fiobuyer.' ('.$phonebuyer.')</b>, –ü—Ä–æ–¥–∞–≤–µ—Ü üë§<b>'.$fioseller.' ('.$phoneseller.')</b>, ID —Ç–æ–≤–∞—Ä–∞ <b>‚Ññ'.$record.'</b>.'.$this->pre.'';
		$this->callbackAnswer( $text, $this->keyboards['inline_default_admin']);
		
		/* if(isset($this->api->body['callback_query']["id"]))
		
		{
			$callback_query_id=$this->api->body['callback_query']["id"];
			$this->api->answerCallbackQuery($callback_query_id);
		}
		
		$this->api->sendMessage([
			'text' => $text,
			//'reply_markup' => json_encode( ['inline_keyboard'=>$this->keyboards['inline_default_admin']]),
			'disable_notification' => TRUE,
			'disable_web_page_preview' => TRUE,
			'parse_mode'=> "HTML"
		]);
		usleep(100000);
		
		
		$text='–í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ <b>–ì–ª–∞–≤–Ω–æ–º –º–µ–Ω—é –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞.</b>';
		$this->api->sendMessage([
			'text' => $text,
			'reply_markup' => json_encode( ['inline_keyboard'=>$this->keyboards['inline_default_admin']]),
			'disable_notification' => TRUE,
			'disable_web_page_preview' => TRUE,
			'parse_mode'=> "HTML"
		]);
		usleep(100000); */
		
		$text2='–í–∞—à–∞ –∑–∞—è–≤–∫–∞ –Ω–∞ –ø–æ–∫—É–ø–∫—É —Ç–æ–≤–∞—Ä–∞ —Å ID <b>‚Ññ'.$record.'</b> –±—ã–ª–∞ <b>–æ—Ç–º–µ–Ω–µ–Ω–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º</b>.'.PHP_EOL.''.PHP_EOL.'–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –¥–∞–Ω–Ω–æ–≥–æ —Ç–æ–≤–∞—Ä–∞ –Ω–µ—Ç –≤ –Ω–∞–ª–∏—á–∏–∏. –ò–∑–≤–∏–Ω–∏—Ç–µ –∑–∞ –Ω–µ—É–¥–æ–±—Å—Ç–≤–∞.'.$this->pre.'';
			
		$this->api->sendMessage([

			'chat_id' => $chatidbuyer,
			'text' => $text2,
			'reply_markup' => json_encode( ['inline_keyboard'=>$this->keyboards['inline_buy_default']]),
			'parse_mode' => "HTML",
			]);
		usleep(100000);
	}



	
/* /////
	public function callback_resetfilters_default_buy()
	{
		
		$con_sql2=$this->cmd_sql();
		
		$tab='tabtype'.$this->api->chatId.'';
		
		if(mysqli_query($con_sql2, 'SELECT 1 FROM '.$tab.' LIMIT 1'))
		{
			$query1=mysqli_query($con_sql2, 'DROP TABLE '.$tab.'');
			usleep(250000);	
		}
		
		$tab='tabcat'.$this->api->chatId.'';
		
		if(mysqli_query($con_sql2, 'SELECT 1 FROM '.$tab.' LIMIT 1'))
		{
			$query1=mysqli_query($con_sql2, 'DROP TABLE '.$tab.'');
			usleep(250000);	
		}
		
		$tab='tabgender'.$this->api->chatId.'';
		
		if(mysqli_query($con_sql2, 'SELECT 1 FROM '.$tab.' LIMIT 1'))
		{
			$query1=mysqli_query($con_sql2, 'DROP TABLE '.$tab.'');
			usleep(250000);	
		}
		
		$tab='tabcond'.$this->api->chatId.'';
		
		if(mysqli_query($con_sql2, 'SELECT 1 FROM '.$tab.' LIMIT 1'))
		{
			$query1=mysqli_query($con_sql2, 'DROP TABLE '.$tab.'');
			usleep(250000);	
		}
	
		$tab='tabprice'.$this->api->chatId.'';
		
		if(mysqli_query($con_sql2, 'SELECT 1 FROM '.$tab.' LIMIT 1'))
		{
			$query1=mysqli_query($con_sql2, 'DROP TABLE '.$tab.'');
			usleep(250000);	
		}
		
		$tab='tabservice'.$this->api->chatId.'';
		
		if(mysqli_query($con_sql2, 'SELECT 1 FROM '.$tab.' LIMIT 1'))
		{
			$query1=mysqli_query($con_sql2, 'DROP TABLE '.$tab.'');
			usleep(250000);	
		}
		
		
		$text='<b>–í–∞—à–∏ —Ñ–∏–ª—å—Ç—Ä—ã —Å–±—Ä–æ—à–µ–Ω—ã!</b>'.PHP_EOL.''.PHP_EOL.'–í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ –º–µ–Ω—é <b>–ö—É–ø–∏—Ç—å —Ç–æ–≤–∞—Ä</b>.';
		//$this->callbackAnswer5( $text, $this->keyboards['inline_buy_default']);
		$this->callbackAnswer( $text, $this->keyboards['inline_buy_default']);
	} */

/////
	public function callback_buy_back_main()
	{

		if($this->cmd_isadmin())
		{
			$text='–í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –≤ <b>–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é.</b>'.PHP_EOL.''.PHP_EOL.'–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–¥–µ–ª–∞–π—Ç–µ —Å–≤–æ–π –≤—ã–±–æ—Ä, –æ –º–æ–π –ê–¥–º–∏–Ω!'.$this->pre.'';
		
			$this->callbackAnswer( $text, $this->keyboards['inline_default_admin']);
			usleep(100000);
		}
		else
		{
			$text='–í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –≤ <b>–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é.</b>'.$this->pre.'';
		
			$this->callbackAnswer( $text, $this->keyboards['inline_default']);
			usleep(100000);
		}

	}
	
/////
	public function callback_buy_exit_main()
	{
		
		$con_sql2=$this->cmd_sql();
		
		$tab='tabtype'.$this->api->chatId.'';
		
		if(mysqli_query($con_sql2, 'SELECT 1 FROM '.$tab.' LIMIT 1'))
		{
			$query1=mysqli_query($con_sql2, 'DROP TABLE '.$tab.'');
			usleep(250000);	
		}
		
		$tab='tabcat'.$this->api->chatId.'';
		
		if(mysqli_query($con_sql2, 'SELECT 1 FROM '.$tab.' LIMIT 1'))
		{
			$query1=mysqli_query($con_sql2, 'DROP TABLE '.$tab.'');
			usleep(250000);	
		}
		
		$tab='tabgender'.$this->api->chatId.'';
		
		if(mysqli_query($con_sql2, 'SELECT 1 FROM '.$tab.' LIMIT 1'))
		{
			$query1=mysqli_query($con_sql2, 'DROP TABLE '.$tab.'');
			usleep(250000);	
		}
	
		$tab='tabcond'.$this->api->chatId.'';
		
		if(mysqli_query($con_sql2, 'SELECT 1 FROM '.$tab.' LIMIT 1'))
		{
			$query1=mysqli_query($con_sql2, 'DROP TABLE '.$tab.'');
			usleep(250000);	
		}
	
		$tab='tabprice'.$this->api->chatId.'';
		
		if(mysqli_query($con_sql2, 'SELECT 1 FROM '.$tab.' LIMIT 1'))
		{
			$query1=mysqli_query($con_sql2, 'DROP TABLE '.$tab.'');
			usleep(250000);	
		}
		
		
		$tab='tabservice'.$this->api->chatId.'';
		
		if(mysqli_query($con_sql2, 'SELECT 1 FROM '.$tab.' LIMIT 1'))
		{
			$query1=mysqli_query($con_sql2, 'DROP TABLE '.$tab.'');
			usleep(250000);	
		}
		
		
		if($this->cmd_isadmin())
		{
			$text='–í—ã –≤—ã—à–ª–∏ –≤ <b>–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é.</b>'.PHP_EOL.''.PHP_EOL.'–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–¥–µ–ª–∞–π—Ç–µ —Å–≤–æ–π –≤—ã–±–æ—Ä, –æ –º–æ–π –ê–¥–º–∏–Ω!'.$this->pre.'';
		
			//$this->callbackAnswer( $text, $this->keyboards['inline_default_admin']);
			
			if(isset($this->api->body['callback_query']["id"]))
			{
				$callback_query_id=$this->api->body['callback_query']["id"];
				$this->api->answerCallbackQuery($callback_query_id);
			}
			
			$this->api->sendMessage([
				'text' => $text,
				'reply_markup' => json_encode( ['inline_keyboard'=>$this->keyboards['inline_default_admin']]),
				'disable_notification' => TRUE,
				'disable_web_page_preview' => TRUE,
				'parse_mode'=> "HTML"
				]);
				usleep(100000);
		
		}
		else
		{
			$text='–í—ã –≤—ã—à–ª–∏ –≤ <b>–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é.</b>'.$this->pre.'';
		
			//$this->callbackAnswer( $text, $this->keyboards['inline_default']);
			
			if(isset($this->api->body['callback_query']["id"]))
			{
				$callback_query_id=$this->api->body['callback_query']["id"];
				$this->api->answerCallbackQuery($callback_query_id);
			}
			
			$this->api->sendMessage([
				'text' => $text,
				'reply_markup' => json_encode( ['inline_keyboard'=>$this->keyboards['inline_default']]),
				'disable_notification' => TRUE,
				'disable_web_page_preview' => TRUE,
				'parse_mode'=> "HTML"
				]);
				usleep(100000);
		}
	}




/////////////////////////////////////////////////////////CHOOSE//////////////////////////////////////////////////////////////////////////
/////
	public function callback_choose_default_buy()
	{	
		$con_sql2=$this->cmd_sql();
		
		$tab='tabtype'.$this->api->chatId.'';
		mysqli_query($con_sql2, 'DROP TABLE '.$tab.'');
		usleep(100000);
		$tab='tabcat'.$this->api->chatId.'';
		mysqli_query($con_sql2, 'DROP TABLE '.$tab.'');
		usleep(250000);	
		$tab='tabgender'.$this->api->chatId.'';
		mysqli_query($con_sql2, 'DROP TABLE '.$tab.'');
		usleep(100000);
		$tab='tabcond'.$this->api->chatId.'';
		mysqli_query($con_sql2, 'DROP TABLE '.$tab.'');
		usleep(100000);
		$tab='tabprice'.$this->api->chatId.'';
		mysqli_query($con_sql2, 'DROP TABLE '.$tab.'');
		usleep(100000);
		$tab='tabservice'.$this->api->chatId.'';
		mysqli_query($con_sql2, 'DROP TABLE '.$tab.'');
		usleep(100000);
		
		
		$merge=$this->cmd_filter_buy_type();
		//$merge[] = [["text" => "‚û°Ô∏è–î–∞–ª–µ–µ", "callback_data" => "filter_buy_type_next"], ["text" => "‚ñ∂Ô∏è–ü–æ–∫–∞–∑–∞—Ç—å", "callback_data" => "ready_buy_type"]];
		//$merge[] = [["text" => "üîÄ–°–±—Ä–æ—Å–∏—Ç—å —Ñ–∏–ª—å—Ç—Ä—ã", "callback_data" => "resetfilters_buy_choose"]];
		$merge[] = [["text" => "‚¨ÖÔ∏è–ù–∞–∑–∞–¥", "callback_data" => "buy_back_choose_main"],["text" => "‚§¥Ô∏è–í—ã–π—Ç–∏", "callback_data" => "buy_exit_choose_main"]];
		
		$text='–í—ã–±–∏—Ä–∏—Ç–µ –æ–¥–Ω—É –∏–ª–∏ –Ω–µ—Å–∫–æ–ª—å–∫–æ <b>–ö–∞—Ç–µ–≥–æ—Ä–∏–π</b>, –∑–∞—Ç–µ–º <b>–Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –î–∞–ª–µ–µ</b> –¥–ª—è –≤—ã–±–æ—Ä–∞ <b>–í–∏–¥–∞</b>.'.$this->pre.'';
		$this->callbackAnswer( $text, $merge);
		
	}
	
/////
	public function callback_buy_back_choose_main()
	{		
		
		$text='–í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –≤ —Ä–∞–∑–¥–µ–ª <b>–ö—É–ø–∏—Ç—å.</b> –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–¥–µ–ª–∞–π—Ç–µ —Å–≤–æ–π –≤—ã–±–æ—Ä.'.$this->pre.'';
		$this->callbackAnswer( $text, $this->keyboards['inline_buy_default']);
	
	}
	
/////
	public function callback_buy_exit_choose_main()
	{		
		$con_sql2=$this->cmd_sql();
		
		
		
		if($this->cmd_isadmin())
		{
			$text='–í—ã –≤—ã—à–ª–∏ –≤ <b>–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é.</b>'.PHP_EOL.''.PHP_EOL.'–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–¥–µ–ª–∞–π—Ç–µ —Å–≤–æ–π –≤—ã–±–æ—Ä, –æ –º–æ–π –ê–¥–º–∏–Ω!'.$this->pre.'';
		
			//$this->callbackAnswer( $text, $this->keyboards['inline_default_admin']);
			
			if(isset($this->api->body['callback_query']["id"]))
			{
				$callback_query_id=$this->api->body['callback_query']["id"];
				$this->api->answerCallbackQuery($callback_query_id);
			}
			
			$this->api->sendMessage([
				'text' => $text,
				'reply_markup' => json_encode( ['inline_keyboard'=>$this->keyboards['inline_default_admin']]),
				'disable_notification' => TRUE,
				'disable_web_page_preview' => TRUE,
				'parse_mode'=> "HTML"
				]);
				usleep(100000);
		
		}
		else
		{
			$text='–í—ã –≤—ã—à–ª–∏ –≤ <b>–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é.</b> –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–¥–µ–ª–∞–π—Ç–µ —Å–≤–æ–π –≤—ã–±–æ—Ä.'.$this->pre.'';
		
			//$this->callbackAnswer( $text, $this->keyboards['inline_default']);
			
			if(isset($this->api->body['callback_query']["id"]))
			{
				$callback_query_id=$this->api->body['callback_query']["id"];
				$this->api->answerCallbackQuery($callback_query_id);
			}
			
			$this->api->sendMessage([
				'text' => $text,
				'reply_markup' => json_encode( ['inline_keyboard'=>$this->keyboards['inline_default']]),
				'disable_notification' => TRUE,
				'disable_web_page_preview' => TRUE,
				'parse_mode'=> "HTML"
				]);
				usleep(100000);
		}
			
	}


/////
	public function callback_resetfilters_buy_choose()
	{
		
		$con_sql2=$this->cmd_sql();
		
		$tab='tabtype'.$this->api->chatId.'';
		mysqli_query($con_sql2, 'DROP TABLE '.$tab.'');
		usleep(250000);
		$tab='tabcat'.$this->api->chatId.'';
		mysqli_query($con_sql2, 'DROP TABLE '.$tab.'');
		usleep(250000);	
		$tab='tabgender'.$this->api->chatId.'';
		mysqli_query($con_sql2, 'DROP TABLE '.$tab.'');
		usleep(250000);
		$tab='tabcond'.$this->api->chatId.'';
		mysqli_query($con_sql2, 'DROP TABLE '.$tab.'');
		usleep(250000);
		$tab='tabprice'.$this->api->chatId.'';
		mysqli_query($con_sql2, 'DROP TABLE '.$tab.'');
		usleep(250000);
		$tab='tabservice'.$this->api->chatId.'';
		mysqli_query($con_sql2, 'DROP TABLE '.$tab.'');
		usleep(250000);
		
		
		$merge=$this->cmd_filter_buy_type();
		$merge[] = [["text" => "‚û°Ô∏è–î–∞–ª–µ–µ", "callback_data" => "filter_buy_type_next"], ["text" => "‚ñ∂Ô∏è–ü–æ–∫–∞–∑–∞—Ç—å", "callback_data" => "ready_buy_type"]];
		$merge[] = [["text" => "üîÄ–°–±—Ä–æ—Å–∏—Ç—å —Ñ–∏–ª—å—Ç—Ä—ã", "callback_data" => "resetfilters_buy_choose"]];
		$merge[] = [["text" => "‚¨ÖÔ∏è–ù–∞–∑–∞–¥", "callback_data" => "buy_back_choose_main"],["text" => "‚§¥Ô∏è–í—ã–π—Ç–∏", "callback_data" => "buy_exit_choose_main"]];
		
		$text='<b>–í–∞—à–∏ —Ñ–∏–ª—å—Ç—Ä—ã —Å–±—Ä–æ—à–µ–Ω—ã!</b>'.PHP_EOL.''.PHP_EOL.'–í—ã–±–∏—Ä–∏—Ç–µ –æ–¥–Ω—É –∏–ª–∏ –Ω–µ—Å–∫–æ–ª—å–∫–æ <b>–∫–∞—Ç–µ–≥–æ—Ä–∏–π —Ç–æ–≤–∞—Ä–∞</b>, –∑–∞—Ç–µ–º –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É <b>–î–∞–ª–µ–µ</b> –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏.'.$this->pre.'';
		$this->callbackAnswer( $text, $merge);
	}





/////
	public function cmd_filter_buy_type()
	{
		
		$con_sql2=$this->cmd_sql();
	
		$tabtype='tabtype'.$this->api->chatId.'';
		$tabservice='tabservice'.$this->api->chatId.'';
		$tabmain='tabmain'.$this->api->chatId.'';
		
		
		if(mysqli_query($con_sql2, 'SELECT 1 FROM '.$tabservice.' LIMIT 1'))
		{

			$query2=mysqli_query($con_sql2, 'SELECT DISTINCT type FROM '.$tabservice.' WHERE messid!="0"');
			$con2=mysqli_num_rows($query2);
			
			$puttemp=[];
			
			for($i1=0;$i1<$con2;$i1++)
			{
				mysqli_data_seek($query2, $i1);
				$row2[$i1]=mysqli_fetch_row($query2);
			
				if(in_array($row2[$i1][0], $puttemp)==FALSE)								
				{
					$puttemp[]=$row2[$i1][0];
				}
			}
			
			if(mysqli_query($con_sql2, 'SELECT 1 FROM '.$tabtype.' LIMIT 1'))
			{
				$query2=mysqli_query($con_sql2, 'SELECT DISTINCT type FROM '.$tabtype.' WHERE messid!="0"');
				$con2=mysqli_num_rows($query2);
				
				for($i1=0;$i1<$con2;$i1++)
				{
					mysqli_data_seek($query2, $i1);
					$row2[$i1]=mysqli_fetch_row($query2);
				
					if(in_array($row2[$i1][0], $puttemp))
					{	
						$search=array_search($row2[$i1][0], $puttemp);
						unset($puttemp[$search]);
					}
				}
			}
			
		}
		else
		{
		
			$query1=mysqli_query($con_sql2, 'SHOW TABLES LIKE "tabmain%"');
			$con1=mysqli_num_rows($query1);
			
			$table=[];
			
			for($i=0;$i<$con1;$i++)
			{
				mysqli_data_seek($query1, $i);
				$row1[$i]=mysqli_fetch_row($query1);
				$table[]=$row1[$i][0];	
			}
			
			$puttemp=[];
		
			for($i=0;$i<$con1;$i++)
			{
				
				$tab=$table[$i];
	
				$query2=mysqli_query($con_sql2, 'SELECT DISTINCT type FROM '.$tab.' WHERE messid!="0"');
				usleep(100000);
				$con2=mysqli_num_rows($query2);
				
				if($con2!=0)
				{
					for($i1=0;$i1<$con2;$i1++)
					{
						mysqli_data_seek($query2, $i1);
						$row2[$i1]=mysqli_fetch_row($query2);
						
						if(in_array($row2[$i1][0], $puttemp)==FALSE)								
						{
							$puttemp[]=$row2[$i1][0];
						}
					}
				}
				
			}
			
			
			if(mysqli_query($con_sql2, 'SELECT 1 FROM '.$tabtype.' LIMIT 1'))
			{
				$query2=mysqli_query($con_sql2, 'SELECT DISTINCT type FROM '.$tabtype.' WHERE messid!="0"');
				$con2=mysqli_num_rows($query2);
				
				for($i1=0;$i1<$con2;$i1++)
				{
					mysqli_data_seek($query2, $i1);
					$row2[$i1]=mysqli_fetch_row($query2);
				
					if(in_array($row2[$i1][0], $puttemp))
					{	
						$search=array_search($row2[$i1][0], $puttemp);
						unset($puttemp[$search]);
					}
				}
			}
			
		}
		
		
		$put=[];
		
		foreach($puttemp as $value)
		{
			$put[]=$value;
		}
		
		$cnt=count($put);
	
		$maxbuttons=1;
		$ceil=ceil($cnt/$maxbuttons);

		$include=''.dirname(__FILE__).'/include'.$this->api->chatId.'.php';
		
		if(file_exists($include)==FALSE)
		{
			touch($include);
				
			$insert='<?php
		
		
			class TelegramBotfunc{';
			file_put_contents($include, $insert . PHP_EOL,FILE_APPEND);
				
		}
		else
		{
			$getinclude=file($include);
			unset($getinclude[array_key_last($getinclude)]);
			file_put_contents($include, $getinclude);
		}
		
		$u=0;
		$merge=[];
	
		
		for($i1=0;$i1<$ceil;$i1++)
		{
			$put1=[];
			
			for($i2=0;$i2<$maxbuttons;$i2++)
			{	
		
				if(isset($put[$u]))
				{
					
					$buttext=$this->convert_rus($put[$u]);
					
					$put1[]=["text" => "$buttext", "callback_data" => 'buy_select_type_'.$this->api->chatId.'_'.$put[$u].''];
					
					if(preg_match('/callback_buy_select_type_'.$this->api->chatId.'_'.$put[$u].'/', file_get_contents($include))==FALSE)
					{
						$insert='
						public function callback_buy_select_type_'.$this->api->chatId.'_'.$put[$u].'()
						{	
					
							$bot = new TestBot;
							$bot->api->getWebhookUpdate();
							
							$con_sql2=$bot->cmd_sql();
							
							if(mysqli_query($con_sql2, &#039;SELECT 1 FROM '.$tabservice.' LIMIT 1&#039;))
							{	
								if(mysqli_query($con_sql2, &#039;SELECT 1 FROM '.$tabtype.' LIMIT 1&#039;)==FALSE)
								{
									if(mysqli_query($con_sql2, &#039;SELECT 1 FROM '.$tabmain.' LIMIT 1&#039;)==FALSE)
									{
										$query1=&#039;CREATE TABLE '.$tabmain.' (id INT(4) UNSIGNED AUTO_INCREMENT PRIMARY KEY,type VARCHAR(15), cat VARCHAR(15), gender VARCHAR(10), brand VARCHAR(30), size VARCHAR(30), price NUMERIC(7,0), alt VARCHAR(512), pic VARCHAR(512), date VARCHAR(11), time VARCHAR(11), messid VARCHAR(15), cond VARCHAR(10), chatid VARCHAR(15)) ENGINE = InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;&#039;;
										mysqli_query($con_sql2, $query1);
										usleep(100000);
									}
									
									mysqli_query($con_sql2, &#039;CREATE TABLE '.$tabtype.' LIKE '.$tabmain.'&#039;);
									usleep(250000);
								}
								
								mysqli_query($con_sql2, &#039;INSERT INTO '.$tabtype.' (type, cat, gender, brand, size, price, alt, pic, date, time, messid, cond, chatid) SELECT type, cat, gender, brand, size, price, alt, pic, date, time, messid, cond, chatid FROM '.$tabservice.' WHERE type="'.$put[$u].'"&#039;);
								usleep(250000);
								
								$merge=$bot->cmd_filter_buy_type();
								usleep(100000);
								
								$merge[] = [["text" => "‚û°Ô∏è–î–∞–ª–µ–µ", "callback_data" => "filter_buy_type_next"], ["text" => "‚ñ∂Ô∏è–ü–æ–∫–∞–∑–∞—Ç—å", "callback_data" => "ready_buy_type"]];
								//$merge[] = [["text" => "üîÄ–°–±—Ä–æ—Å–∏—Ç—å —Ñ–∏–ª—å—Ç—Ä—ã", "callback_data" => "resetfilters_buy_choose"]];
								$merge[] = [["text" => "‚§¥Ô∏è–í—ã–π—Ç–∏", "callback_data" => "buy_exit_choose_main"]];
								
								if(isset($bot->api->body[&#039;callback_query&#039;]["id"]))
								{
									$callback_query_id=$bot->api->body[&#039;callback_query&#039;]["id"];
									$bot->api->answerCallbackQuery($callback_query_id);
								}
								
								$text = &#039;–í—ã –≤—ã–±—Ä–∞–ª–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏—é <b>'.$buttext.'</b>.'.PHP_EOL.'–ú–æ–∂–µ—Ç–µ –≤—ã–±—Ä–∞—Ç—å –µ—â–µ –æ–¥–Ω—É –∏–ª–∏ –Ω–∞–∂–∞—Ç—å –∫–Ω–æ–ø–∫—É <b>–î–∞–ª–µ–µ</b> –¥–ª—è –≤—ã–±–æ—Ä–∞ <b>–í–∏–¥–∞</b>.&#039;.$bot->pre.&#039;&#039;;
								
								$bot->api->editMessageText([
								&#039;chat_id&#039; => $bot->api->body[&#039;callback_query&#039;][&#039;message&#039;][&#039;chat&#039;]["id"],
								&#039;message_id&#039; => $bot->api->body[&#039;callback_query&#039;][&#039;message&#039;][&#039;message_id&#039;],
								&#039;text&#039; => $text,
								&#039;parse_mode&#039; => "HTML",
								&#039;reply_markup&#039; => json_encode( [&#039;inline_keyboard&#039;=>$merge] ),
								]);
								usleep(100000);
				
							}
							else
							{
								
								if(mysqli_query($con_sql2, &#039;SELECT 1 FROM '.$tabtype.' LIMIT 1&#039;)==FALSE)
								{
									if(mysqli_query($con_sql2, &#039;SELECT 1 FROM '.$tabmain.' LIMIT 1&#039;)==FALSE)
									{
										$query1=&#039;CREATE TABLE '.$tabmain.' (id INT(4) UNSIGNED AUTO_INCREMENT PRIMARY KEY,type VARCHAR(15), cat VARCHAR(15), gender VARCHAR(10), brand VARCHAR(30), size VARCHAR(30), price NUMERIC(7,0), alt VARCHAR(512), pic VARCHAR(512), date VARCHAR(11), time VARCHAR(11), messid VARCHAR(15), cond VARCHAR(10), chatid VARCHAR(15)) ENGINE = InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;&#039;;
										mysqli_query($con_sql2, $query1);
										usleep(100000);
									}
									
									mysqli_query($con_sql2, &#039;CREATE TABLE '.$tabtype.' LIKE '.$tabmain.'&#039;);
									usleep(250000);
									
									$query2=mysqli_query($con_sql2, &#039;SHOW TABLES LIKE "tabmain%"&#039;);
									$con2=mysqli_num_rows($query2);
									$table=[];
								
									for($i=0;$i<$con2;$i++)
									{
										mysqli_data_seek($query2, $i);
										$row2[$i]=mysqli_fetch_row($query2);
										$table[]=$row2[$i][0];	
											
										mysqli_query($con_sql2, &#039;INSERT INTO '.$tabtype.' (type, cat, gender, brand, size, price, alt, pic, date, time, messid, cond, chatid) SELECT type, cat, gender, brand, size, price, alt, pic, date, time, messid, cond, chatid FROM &#039;.$table[$i].&#039; WHERE type="'.$put[$u].'"&#039;);
										usleep(250000);
									}
								}
								else
								{	
									$query1=mysqli_query($con_sql2, &#039;SELECT DISTINCT type FROM '.$tabtype.' WHERE messid!="0"&#039;);
									$con1=mysqli_num_rows($query1);
									
									for($i1=0;$i1<$con1;$i1++)
									{
										mysqli_data_seek($query1, $i1);
										$row1[$i1]=mysqli_fetch_row($query1);
									}
									
									if(in_array(&#039;'.$put[$u].'&#039;, $row1)==FALSE)
									{
										$query2=mysqli_query($con_sql2, &#039;SHOW TABLES LIKE "tabmain%"&#039;);
										$con2=mysqli_num_rows($query2);
										$table=[];
									
										for($i=0;$i<$con2;$i++)
										{
											mysqli_data_seek($query2, $i);
											$row2[$i]=mysqli_fetch_row($query2);
											$table[]=$row2[$i][0];	
												
											mysqli_query($con_sql2, &#039;INSERT INTO '.$tabtype.' (type, cat, gender, brand, size, price, alt, pic, date, time, messid, cond, chatid) SELECT type, cat, gender, brand, size, price, alt, pic, date, time, messid, cond, chatid FROM &#039;.$table[$i].&#039; WHERE type="'.$put[$u].'"&#039;);
											usleep(250000);
										}
									}
								}
									
								$merge=$bot->cmd_filter_buy_type();
								usleep(100000);
								
								$merge[] = [["text" => "‚û°Ô∏è–î–∞–ª–µ–µ", "callback_data" => "filter_buy_type_next"], ["text" => "‚ñ∂Ô∏è–ü–æ–∫–∞–∑–∞—Ç—å", "callback_data" => "ready_buy_type"]];
								//$merge[] = [["text" => "üîÄ–°–±—Ä–æ—Å–∏—Ç—å —Ñ–∏–ª—å—Ç—Ä—ã", "callback_data" => "resetfilters_buy_choose"]];
								$merge[] = [["text" => "‚§¥Ô∏è–í—ã–π—Ç–∏", "callback_data" => "buy_exit_choose_main"]];
								
								if(isset($bot->api->body[&#039;callback_query&#039;]["id"]))
								{
									$callback_query_id=$bot->api->body[&#039;callback_query&#039;]["id"];
									$bot->api->answerCallbackQuery($callback_query_id);
								}
								$text = &#039;–í—ã –≤—ã–±—Ä–∞–ª–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏—é <b>'.$buttext.'</b>.'.PHP_EOL.'–ú–æ–∂–µ—Ç–µ –≤—ã–±—Ä–∞—Ç—å –µ—â–µ –æ–¥–Ω—É –∏–ª–∏ –Ω–∞–∂–∞—Ç—å –∫–Ω–æ–ø–∫—É <b>–î–∞–ª–µ–µ</b> –¥–ª—è –≤—ã–±–æ—Ä–∞ <b>–í–∏–¥–∞</b>.&#039;.$bot->pre.&#039;&#039;;
								
								$bot->api->editMessageText([
								&#039;chat_id&#039; => $bot->api->body[&#039;callback_query&#039;][&#039;message&#039;][&#039;chat&#039;]["id"],
								&#039;message_id&#039; => $bot->api->body[&#039;callback_query&#039;][&#039;message&#039;][&#039;message_id&#039;],
								&#039;text&#039; => $text,
								&#039;parse_mode&#039; => "HTML",
								&#039;reply_markup&#039; => json_encode( [&#039;inline_keyboard&#039;=>$merge] ),
								]);
								usleep(100000);
							}
								
						}';
						file_put_contents($include, html_entity_decode($insert, ENT_QUOTES) . PHP_EOL . PHP_EOL,FILE_APPEND);
					}
				
				}
				
				$u++;
			}	
			
			$merge[]=$put1;
			unset($put1);
			
		}
		

		$insert='}';
		file_put_contents($include, $insert,FILE_APPEND);
		
		
		return $merge;
	}


/////
	public function callback_ready_buy_type()
	{
		$con_sql2=$this->cmd_sql();
		
		$tabtype='tabtype'.$this->api->chatId.'';
		$tabservice='tabservice'.$this->api->chatId.'';
		$tabmain='tabmain'.$this->api->chatId.'';
		
		if(mysqli_query($con_sql2, 'SELECT 1 FROM '.$tabservice.' LIMIT 1'))
		{
			if(mysqli_query($con_sql2, 'SELECT 1 FROM '.$tabtype.' LIMIT 1'))
			{
				mysqli_query($con_sql2, 'DROP TABLE '.$tabservice.'');
				usleep(250000);
				mysqli_query($con_sql2, 'CREATE TABLE '.$tabservice.' LIKE '.$tabtype.'');
				usleep(250000);
				mysqli_query($con_sql2, 'INSERT INTO '.$tabservice.' (type, cat, gender, brand, size, price, alt, pic, date, time, messid, cond, chatid) SELECT type, cat, gender, brand, size, price, alt, pic, date, time, messid, cond, chatid FROM '.$tabtype.'');
				usleep(250000);
			}
		}
		else
		{
			if(mysqli_query($con_sql2, 'SELECT 1 FROM '.$tabtype.' LIMIT 1'))
			{
				mysqli_query($con_sql2, 'CREATE TABLE '.$tabservice.' LIKE '.$tabtype.'');
				usleep(250000);
				mysqli_query($con_sql2, 'INSERT INTO '.$tabservice.' (type, cat, gender, brand, size, price, alt, pic, date, time, messid, cond, chatid) SELECT type, cat, gender, brand, size, price, alt, pic, date, time, messid, cond, chatid FROM '.$tabtype.'');
				usleep(250000);
				mysqli_query($con_sql2, 'DROP TABLE '.$tabtype.'');
				usleep(250000);
			}	
		}
		

		$tabservice='tabservice'.$this->api->chatId.'';
		
		if(mysqli_query($con_sql2, 'SELECT 1 FROM '.$tabservice.' LIMIT 1')==FALSE)
		{
			$query1=mysqli_query($con_sql2, 'SHOW TABLES LIKE "tabmain%"');
			$con1=mysqli_num_rows($query1);
			
			if($con1!=0)
			{	
			
				$table=[];
				$check=0;
				
				for($i1=0;$i1<$con1;$i1++)
				{
					mysqli_data_seek($query1, $i1);
					$row1[$i1]=mysqli_fetch_row($query1);
					$tab=$row1[$i1][0];
					
					$query=mysqli_query($con_sql2, 'SELECT * FROM '.$tab.' WHERE messid!="0" ORDER by messid ASC');
					usleep(100000);
					$con=mysqli_num_rows($query);
						
					if($con!=0)
					{	

						$check=1;
						
						for($i=0;$i<$con;$i++)
						{
							mysqli_data_seek($query, $i);
							$row[$i]=mysqli_fetch_row($query);
						}
						usleep(100000);
						
		
						for($i=0;$i<$con;$i++)
						{
						
						
							$type=$this->convert_rus($row[$i][1]);
							$cat=$this->convert_rus($row[$i][2]);
							$gender=$this->convert_rus($row[$i][3]);
							$cond=$this->convert_rus($row[$i][12]);
						
						
						
							/* $text='‚ùáÔ∏è‚ùáÔ∏è‚ùáÔ∏è‚ùáÔ∏è‚ùáÔ∏è‚ùáÔ∏è‚ùáÔ∏è‚ùáÔ∏è‚ùáÔ∏è‚ùáÔ∏è‚ùáÔ∏è‚ùáÔ∏è‚ùáÔ∏è‚ùáÔ∏è‚ùáÔ∏è‚ùáÔ∏è‚ùáÔ∏è‚ùáÔ∏è‚ùáÔ∏è‚ùáÔ∏è';
							
							$this->api->sendMessage([
							'text' => $text,
							'disable_notification' => TRUE,
							'disable_web_page_preview' => TRUE,
							'parse_mode'=> "HTML"
							]);
							usleep(100000); */
							
							
							$messageid=$row[$i][11];
							
							$caption='üìñ–ö–∞—Ç–µ–≥–æ—Ä–∏—è: &#160;&#160;<b>'.$type.'</b>'.PHP_EOL.'üßæ–í–∏–¥: &#160;&#160;<b>'.$cat.'</b>'.PHP_EOL.'üë®‚Äçüë©‚Äçüë¶–ü–æ–ª: &#160;&#160;<b>'.$gender.'</b>'.PHP_EOL.'üéè–°–æ—Å—Ç–æ—è–Ω–∏–µ: <b>'.$cond.'</b>'.PHP_EOL.'¬ÆÔ∏è–ë—Ä–µ–Ω–¥: &#160;&#160;<b>'.$row[$i][4].'</b>'.PHP_EOL.'‚ÜïÔ∏è–†–∞–∑–º–µ—Ä: &#160;&#160;<b>'.$row[$i][5].'</b>'.PHP_EOL.'üíµ–¶–µ–Ω–∞: &#160;&#160;<b>'.$row[$i][6].'</b>'.PHP_EOL.'üìã–û–ø–∏—Å–∞–Ω–∏–µ: &#160;&#160;'.$row[$i][7].''.PHP_EOL.''.PHP_EOL.''.PHP_EOL.'<b>ID —Ç–æ–≤–∞—Ä–∞: '.$messageid.'</b>'.PHP_EOL.''.PHP_EOL.'üìÅüìÅüìÅüìÅüìÅüìÅüìÅüìÅüìÅüìÅüìÅüìÅ';
							
							$photo=$row[$i][8];
							
							$include=''.dirname(__FILE__).'/include'.$this->api->chatId.'.php';
			
							if(file_exists($include)==FALSE)
							{
								touch($include);
								
								$insert='<?php
						
						
								class TelegramBotfunc{';
								file_put_contents($include, $insert . PHP_EOL,FILE_APPEND);
								
							}
							else
							{
								$getinclude=file($include);
								unset($getinclude[array_key_last($getinclude)]);
								file_put_contents($include, $getinclude);
							}
							
		
							$merge=[];
							$merge[]= [['text' => 'üõí–ö—É–ø–∏—Ç—å', 'callback_data' => 'buy_ready_type_'.$this->api->chatId.'_'.$messageid.'']]  ;
							
							if(preg_match('/callback_buy_ready_type_'.$this->api->chatId.'_'.$messageid.'/', file_get_contents($include))==FALSE)
							{
								$insert='
								public function callback_buy_ready_type_'.$this->api->chatId.'_'.$messageid.'()
								{	
						
									$bot = new TestBot;
									$bot->api->getWebhookUpdate();

									$text=&#039;–í—ã –∑–∞–ø—Ä–æ—Å–∏–ª–∏ —Ç–æ–≤–∞—Ä —Å <b>ID ‚Ññ'.$messageid.'.</b> &#039;.PHP_EOL.&#039;&#039;.PHP_EOL.&#039;<b>–í—ã —Ç–æ—á–Ω–æ —Ö–æ—Ç–∏—Ç–µ –∫—É–ø–∏—Ç—å –µ–≥–æ?</b>&#039;.$bot->pre.&#039;&#039;;
									$merge=[];
									$merge[] = [[&#039;text&#039; => &#039;üü¢–î–∞&#039;, &#039;callback_data&#039; => &#039;byrecordid_default_buy_yes&#039;], [&#039;text&#039; => &#039;üî¥–ù–µ—Ç&#039;, &#039;callback_data&#039; => &#039;byrecordid_default_buy_no&#039;]];
									$merge[] = [[&#039;text&#039; => &#039;‚¨ÖÔ∏è–ù–∞–∑–∞–¥&#039;, &#039;callback_data&#039; => &#039;back_byrecordid_default_buy&#039;], [&#039;text&#039; => &#039;‚§¥Ô∏è–í—ã–π—Ç–∏&#039;, &#039;callback_data&#039; => &#039;exit_byrecordid_default_buy&#039;]];
									
									if(isset($bot->api->body[&#039;callback_query&#039;]["id"]))
									{
										$callback_query_id=$bot->api->body[&#039;callback_query&#039;]["id"];
										$bot->api->answerCallbackQuery($callback_query_id);
									}
							
									$bot->api->sendMessage([
									&#039;text&#039; => $text,
									&#039;reply_markup&#039; => json_encode( [&#039;inline_keyboard&#039;=>$merge]),
									&#039;disable_notification&#039; => TRUE,
									&#039;disable_web_page_preview&#039; => TRUE,
									&#039;parse_mode&#039;=> "HTML"
									]);
									usleep(100000);
									
								}';
								file_put_contents($include, html_entity_decode($insert, ENT_QUOTES) . PHP_EOL . PHP_EOL,FILE_APPEND);
							}
							
							$insert='}';
							file_put_contents($include, $insert,FILE_APPEND);
							
							if(preg_match('/;/', $photo)==FALSE)
							{
								$this->api->sendPhoto([
								'photo' => $photo,
								'caption' => $caption,
								//'reply_markup' => json_encode( ['inline_keyboard'=>$this->keyboards['inline_ask_admin']]),
								//'reply_markup' => json_encode( ['inline_keyboard'=>$merge]),
								'disable_notification' => TRUE,
								'parse_mode' => "HTML"
								]);
								usleep(250000);
						
								$text='–ö—É–ø–∏—Ç—å <b>ID ‚Ññ'.$messageid.'</b>';
								$this->api->sendMessage([
								'text' => $text,
								'reply_markup' => json_encode( ['inline_keyboard'=>$merge]),
								'disable_notification' => TRUE,
								'disable_web_page_preview' => TRUE,
								'parse_mode'=> "HTML"
								]);
								usleep(100000);
								
							
							}
							else
							{
								$media=[];
								$temp=explode(';', $photo);
								$cnt=count($temp);
								for($o=0;$o<$cnt;$o++)
								{
								
								
									if($o==0)
									{
										//$put=['type' => 'photo', 'media' =>  ''.$temp[$o].'', 'caption' => ''.$caption.'', 'parse_mode' => "HTML", 'reply_markup' => ['inline_keyboard'=>$merge]];
										//$put=['type' => 'photo', 'media' =>  ''.$temp[$o].'', 'caption' => ''.$caption.'', 'parse_mode' => "HTML", 'reply_markup' => 'inline_keyboard'=>$this->keyboards['inline_ask_admin']];
										$put=['type' => 'photo', 'media' =>  ''.$temp[$o].'', 'caption' => ''.$caption.'', 'parse_mode' => "HTML"];
									}
									else
									{
										$put=['type' => 'photo', 'media' =>  ''.$temp[$o].''];
									}
							
									$media[$o]=$put;
								}
								
								
								$this->api->sendMediaGroup([
								'media' => json_encode($media),
								//'reply_markup' => json_encode( ['inline_keyboard'=>$merge])
								]);
								usleep(350000);
						
								$text='–ö—É–ø–∏—Ç—å <b>ID ‚Ññ'.$messageid.'</b>';
								$this->api->sendMessage([
								'text' => $text,
								'reply_markup' => json_encode( ['inline_keyboard'=>$merge]),
								'disable_notification' => TRUE,
								'disable_web_page_preview' => TRUE,
								'parse_mode'=> "HTML"
								]);
								usleep(100000);
							}
						}
			
					}
				}
				
				if($check==1)
				{
					/* $tab='tabtype'.$this->api->chatId.'';
		
					//if(mysqli_query($con_sql2, 'SELECT 1 FROM '.$tab.' LIMIT 1'))
					//{
						mysqli_query($con_sql2, 'DROP TABLE '.$tab.'');
						usleep(100000);
					//}
					
					$tab='tabcat'.$this->api->chatId.'';
					
					//if(mysqli_query($con_sql2, 'SELECT 1 FROM '.$tab.' LIMIT 1'))
					//{
						mysqli_query($con_sql2, 'DROP TABLE '.$tab.'');
						usleep(100000);
					//}
					
					$tab='tabgender'.$this->api->chatId.'';
					
					//if(mysqli_query($con_sql2, 'SELECT 1 FROM '.$tab.' LIMIT 1'))
					//{
						mysqli_query($con_sql2, 'DROP TABLE '.$tab.'');
						usleep(100000);
					//}
				
					$tab='tabcond'.$this->api->chatId.'';
					
					//if(mysqli_query($con_sql2, 'SELECT 1 FROM '.$tab.' LIMIT 1'))
					//{
						mysqli_query($con_sql2, 'DROP TABLE '.$tab.'');
						usleep(100000);
					//}
				
					$tab='tabprice'.$this->api->chatId.'';
					
					//if(mysqli_query($con_sql2, 'SELECT 1 FROM '.$tab.' LIMIT 1'))
					//{
						mysqli_query($con_sql2, 'DROP TABLE '.$tab.'');
						usleep(100000);
					//}
					
					
					$tab='tabservice'.$this->api->chatId.'';
					
					//if(mysqli_query($con_sql2, 'SELECT 1 FROM '.$tab.' LIMIT 1'))
					//{
						mysqli_query($con_sql2, 'DROP TABLE '.$tab.'');
						usleep(100000);
					//} */
					
					if(isset($this->api->body['callback_query']["id"]))
						{
							$callback_query_id=$this->api->body['callback_query']["id"];
							$this->api->answerCallbackQuery($callback_query_id);
						}

					$text='–°–≤–µ—Ä—Ö—É <b>–ø–æ–∫–∞–∑–∞–Ω—ã –≤—Å–µ —Ç–æ–≤–∞—Ä—ã</b>, —Å–æ–≥–ª–∞—Å–Ω–æ –í–∞—à–µ–≥–æ –∑–∞–ø—Ä–æ—Å–∞.'.PHP_EOL.''.PHP_EOL.'–í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ –º–µ–Ω—é <b>–ö—É–ø–∏—Ç—å</b>.'.$this->pre.'';
					
					$this->api->sendMessage([
					'text' => $text,
					'reply_markup' => json_encode( ['inline_keyboard'=>$this->keyboards['inline_buy_default']]),
					'disable_notification' => TRUE,
					'disable_web_page_preview' => TRUE,
					'parse_mode'=> "HTML"
					]);
					usleep(100000);	
				}
				else
				{
					$text='–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é –≤ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç <b>–Ω–µ—Ç —Ç–æ–≤–∞—Ä–æ–≤ –≤ –ø—Ä–æ–¥–∞–∂–µ</b>. –í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ –º–µ–Ω—é <b>–ö—É–ø–∏—Ç—å</b>.'.$this->pre.'';
					$this->callbackAnswer( $text, $this->keyboards['inline_buy_default']);	
				}
				
				
			}
			else
			{
				$text='–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é –≤ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç <b>–Ω–µ—Ç —Ç–æ–≤–∞—Ä–æ–≤ –≤ –ø—Ä–æ–¥–∞–∂–µ</b>. –í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ –º–µ–Ω—é <b>–ö—É–ø–∏—Ç—å</b>.'.$this->pre.'';
				$this->callbackAnswer( $text, $this->keyboards['inline_buy_default']);	
			}
			
		}
		else
		{
			$query1=mysqli_query($con_sql2, 'SELECT * FROM '.$tabservice.' WHERE messid!="0" ORDER by messid ASC');
			usleep(100000);
			$con1=mysqli_num_rows($query1);
				
			if($con1!=0)
			{					
				for($i1=0;$i1<$con1;$i1++)
				{
					mysqli_data_seek($query1, $i1);
					$row1[$i1]=mysqli_fetch_row($query1);
				}
				usleep(100000);
				
			
				for($i1=0;$i1<$con1;$i1++)
				{
				
				
					$type=$this->convert_rus($row1[$i1][1]);
					$cat=$this->convert_rus($row1[$i1][2]);
					$gender=$this->convert_rus($row1[$i1][3]);
					$cond=$this->convert_rus($row1[$i1][12]);
				
				
					/* $text='‚ùáÔ∏è‚ùáÔ∏è‚ùáÔ∏è‚ùáÔ∏è‚ùáÔ∏è‚ùáÔ∏è‚ùáÔ∏è‚ùáÔ∏è‚ùáÔ∏è‚ùáÔ∏è‚ùáÔ∏è‚ùáÔ∏è‚ùáÔ∏è‚ùáÔ∏è‚ùáÔ∏è‚ùáÔ∏è‚ùáÔ∏è‚ùáÔ∏è‚ùáÔ∏è‚ùáÔ∏è';
					
					$this->api->sendMessage([
					'text' => $text,
					'disable_notification' => TRUE,
					'disable_web_page_preview' => TRUE,
					'parse_mode'=> "HTML"
					]);
					usleep(100000); */
					
					
					$messageid=$row1[$i1][11];
					
					$caption='üìñ–ö–∞—Ç–µ–≥–æ—Ä–∏—è: &#160;&#160;<b>'.$type.'</b>'.PHP_EOL.'üßæ–í–∏–¥: &#160;&#160;<b>'.$cat.'</b>'.PHP_EOL.'üë®‚Äçüë©‚Äçüë¶–ü–æ–ª: &#160;&#160;<b>'.$gender.'</b>'.PHP_EOL.'üéè–°–æ—Å—Ç–æ—è–Ω–∏–µ: <b>'.$cond.'</b>'.PHP_EOL.'¬ÆÔ∏è–ë—Ä–µ–Ω–¥: &#160;&#160;<b>'.$row1[$i1][4].'</b>'.PHP_EOL.'‚ÜïÔ∏è–†–∞–∑–º–µ—Ä: &#160;&#160;<b>'.$row1[$i1][5].'</b>'.PHP_EOL.'üíµ–¶–µ–Ω–∞: &#160;&#160;<b>'.$row1[$i1][6].'</b>'.PHP_EOL.'üìã–û–ø–∏—Å–∞–Ω–∏–µ: &#160;&#160;'.$row1[$i1][7].''.PHP_EOL.''.PHP_EOL.''.PHP_EOL.'<b>ID —Ç–æ–≤–∞—Ä–∞: '.$messageid.'</b>'.PHP_EOL.''.PHP_EOL.'üìÅüìÅüìÅüìÅüìÅüìÅüìÅüìÅüìÅüìÅüìÅüìÅ';
					
					$photo=$row1[$i1][8];
					
					$include=''.dirname(__FILE__).'/include'.$this->api->chatId.'.php';
			
					if(file_exists($include)==FALSE)
					{
						touch($include);
						
						$insert='<?php
					
					
						class TelegramBotfunc{';
						file_put_contents($include, $insert . PHP_EOL,FILE_APPEND);
						
					}
					else
					{
						$getinclude=file($include);
						unset($getinclude[array_key_last($getinclude)]);
						file_put_contents($include, $getinclude);
					}
					
					
					$merge=[];
					$merge[]= [['text' => 'üõí–ö—É–ø–∏—Ç—å', 'callback_data' => 'buy_ready_type_'.$this->api->chatId.'_'.$messageid.'']]  ;
					
					if(preg_match('/callback_buy_ready_type_'.$this->api->chatId.'_'.$messageid.'/', file_get_contents($include))==FALSE)
					{
						$insert='
						public function callback_buy_ready_type_'.$this->api->chatId.'_'.$messageid.'()
						{	
					
							$bot = new TestBot;
							$bot->api->getWebhookUpdate();
					
							$text=&#039;–í—ã –∑–∞–ø—Ä–æ—Å–∏–ª–∏ —Ç–æ–≤–∞—Ä —Å <b>ID ‚Ññ'.$messageid.'.</b> &#039;.PHP_EOL.&#039;&#039;.PHP_EOL.&#039;<b>–í—ã —Ç–æ—á–Ω–æ —Ö–æ—Ç–∏—Ç–µ –∫—É–ø–∏—Ç—å –µ–≥–æ?</b>&#039;.$bot->pre.&#039;&#039;;
							$merge=[];
							$merge[] = [[&#039;text&#039; => &#039;üü¢–î–∞&#039;, &#039;callback_data&#039; => &#039;byrecordid_default_buy_yes&#039;], [&#039;text&#039; => &#039;üî¥–ù–µ—Ç&#039;, &#039;callback_data&#039; => &#039;byrecordid_default_buy_no&#039;]];
							$merge[] = [[&#039;text&#039; => &#039;‚¨ÖÔ∏è–ù–∞–∑–∞–¥&#039;, &#039;callback_data&#039; => &#039;back_byrecordid_default_buy&#039;], [&#039;text&#039; => &#039;‚§¥Ô∏è–í—ã–π—Ç–∏&#039;, &#039;callback_data&#039; => &#039;exit_byrecordid_default_buy&#039;]];
							
							if(isset($bot->api->body[&#039;callback_query&#039;]["id"]))
							{
								$callback_query_id=$bot->api->body[&#039;callback_query&#039;]["id"];
								$bot->api->answerCallbackQuery($callback_query_id);
							}
							
							$bot->api->sendMessage([
							&#039;text&#039; => $text,
							&#039;reply_markup&#039; => json_encode( [&#039;inline_keyboard&#039;=>$merge]),
							&#039;disable_notification&#039; => TRUE,
							&#039;disable_web_page_preview&#039; => TRUE,
							&#039;parse_mode&#039;=> "HTML"
							]);
							usleep(100000);
							
						}';
						file_put_contents($include, html_entity_decode($insert, ENT_QUOTES) . PHP_EOL . PHP_EOL,FILE_APPEND);
						
					}
					
					$insert='}';
					file_put_contents($include, $insert,FILE_APPEND);
					
					if(preg_match('/;/', $photo)==FALSE)
					{
						$this->api->sendPhoto([
						'photo' => $photo,
						'caption' => $caption,
						'disable_notification' => TRUE,
						'parse_mode' => "HTML"
						]);
						usleep(250000);

						
						$text='–ö—É–ø–∏—Ç—å <b>ID ‚Ññ'.$messageid.'</b>';
						$this->api->sendMessage([
						'text' => $text,
						'reply_markup' => json_encode( ['inline_keyboard'=>$merge]),
						'disable_notification' => TRUE,
						'disable_web_page_preview' => TRUE,
						'parse_mode'=> "HTML"
						]);
						usleep(100000);
					
					}
					else
					{
						$media=[];
						$temp=explode(';', $photo);
						$cnt=count($temp);
						for($o=0;$o<$cnt;$o++)
						{
						
						
							if($o==0)
							{
								$put=['type' => 'photo', 'media' =>  ''.$temp[$o].'', 'caption' => ''.$caption.'', 'parse_mode' => "HTML" ];
							}
							else
							{
								$put=['type' => 'photo', 'media' =>  ''.$temp[$o].'' ];
							}
					
							$media[$o]=$put;
						}
						
						
						$this->api->sendMediaGroup([
						'media' => json_encode($media),
						]);
						usleep(350000);
						
						
						$text='–ö—É–ø–∏—Ç—å <b>ID ‚Ññ'.$messageid.'</b>';
						$this->api->sendMessage([
						'text' => $text,
						'reply_markup' => json_encode( ['inline_keyboard'=>$merge]),
						'disable_notification' => TRUE,
						'disable_web_page_preview' => TRUE,
						'parse_mode'=> "HTML"
						]);
						usleep(100000);
					}
				}
				
				/* $tab='tabtype'.$this->api->chatId.'';
		
				//if(mysqli_query($con_sql2, 'SELECT 1 FROM '.$tab.' LIMIT 1'))
				//{
					mysqli_query($con_sql2, 'DROP TABLE '.$tab.'');
					usleep(100000);	
				//}
				
				$tab='tabcat'.$this->api->chatId.'';
				
				//if(mysqli_query($con_sql2, 'SELECT 1 FROM '.$tab.' LIMIT 1'))
				//{
					mysqli_query($con_sql2, 'DROP TABLE '.$tab.'');
					usleep(100000);
				//}
				
				$tab='tabgender'.$this->api->chatId.'';
				
				//if(mysqli_query($con_sql2, 'SELECT 1 FROM '.$tab.' LIMIT 1'))
				//{
					mysqli_query($con_sql2, 'DROP TABLE '.$tab.'');
					usleep(100000);
				//}
				
				$tab='tabcond'.$this->api->chatId.'';
				
				//if(mysqli_query($con_sql2, 'SELECT 1 FROM '.$tab.' LIMIT 1'))
				//{
					mysqli_query($con_sql2, 'DROP TABLE '.$tab.'');
					usleep(100000);
				//}
				
				$tab='tabprice'.$this->api->chatId.'';
				
				//if(mysqli_query($con_sql2, 'SELECT 1 FROM '.$tab.' LIMIT 1'))
				//{
					mysqli_query($con_sql2, 'DROP TABLE '.$tab.'');
					usleep(100000);
				//}
				
				
				$tab='tabservice'.$this->api->chatId.'';
				
				//if(mysqli_query($con_sql2, 'SELECT 1 FROM '.$tab.' LIMIT 1'))
				//{
					mysqli_query($con_sql2, 'DROP TABLE '.$tab.'');
					usleep(100000);
				//} */
					
				if(isset($this->api->body['callback_query']["id"]))
				{
					$callback_query_id=$this->api->body['callback_query']["id"];
					$this->api->answerCallbackQuery($callback_query_id);
				}
											
				$text='<b>–°–≤–µ—Ä—Ö—É –ø–æ–∫–∞–∑–∞–Ω—ã –≤—Å–µ —Ç–æ–≤–∞—Ä—ã, —Å–æ–≥–ª–∞—Å–Ω–æ –í–∞—à–µ–≥–æ –∑–∞–ø—Ä–æ—Å–∞.</b>'.PHP_EOL.''.PHP_EOL.'–í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ –º–µ–Ω—é <b>–ö—É–ø–∏—Ç—å</b>.'.$this->pre.'';
				
				$this->api->sendMessage([
				'text' => $text,
				'reply_markup' => json_encode( ['inline_keyboard'=>$this->keyboards['inline_buy_default']]),
				'disable_notification' => TRUE,
				'disable_web_page_preview' => TRUE,
				'parse_mode'=> "HTML"
				]);
				usleep(100000);
				
				
				
				
			
			}
			else
			{
				$text='–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é –≤ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç <b>–Ω–µ—Ç —Ç–æ–≤–∞—Ä–æ–≤ –≤ –ø—Ä–æ–¥–∞–∂–µ</b>. –í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ –º–µ–Ω—é <b>–ö—É–ø–∏—Ç—å</b>.'.$this->pre.'';
				$this->callbackAnswer( $text, $this->keyboards['inline_buy_default']);
			}
			
		}
		
	}

/////
	public function callback_filter_buy_type_next()
	{	
		$con_sql2=$this->cmd_sql();
		
		$tabtype='tabtype'.$this->api->chatId.'';
		$tabservice='tabservice'.$this->api->chatId.'';
		$tabmain='tabmain'.$this->api->chatId.'';
		
		if(mysqli_query($con_sql2, 'SELECT 1 FROM '.$tabservice.' LIMIT 1'))
		{
			if(mysqli_query($con_sql2, 'SELECT 1 FROM '.$tabtype.' LIMIT 1'))
			{
				$query2=mysqli_query($con_sql2, 'SELECT DISTINCT type FROM '.$tabtype.' WHERE messid!="0"') ;
				$con2=mysqli_num_rows($query2);
				$addtext="";
				for($i1=0;$i1<$con2;$i1++)
				{
					
					mysqli_data_seek($query2, $i1);
					$row2[$i1]=mysqli_fetch_row($query2);
					
					$row2[$i1][0]=$this->convert_rus($row2[$i1][0]);
					
					
					if($i1==0)
					{
						$addtext=$row2[$i1][0];
					}
					else
					{
						$addtext = $addtext . ', '.$row2[$i1][0].'';
					}
				}
				
				if(explode(',', $addtext))
				{
					$text='–í—ã –≤—ã–±—Ä–∞–ª–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ —Ç–æ–≤–∞—Ä–∞ <b>'.$addtext.'</b>.'.PHP_EOL.'–í—ã–±–∏—Ä–∏—Ç–µ –¥—Ä—É–≥–æ–π –ø–∞—Ä–∞–º–µ—Ç—Ä –∏–ª–∏ –Ω–∞–∂–º–∏—Ç–µ <b>–°–±—Ä–æ—Å–∏—Ç—å —Ñ–∏–ª—å—Ç—Ä—ã</b> –¥–ª—è –≤—ã–±–æ—Ä–∞ –Ω–æ–≤–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ —Ç–æ–≤–∞—Ä–∞.'.$this->pre.'';
					
				}
				else
				{
					$text='–í—ã –≤—ã–±—Ä–∞–ª–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏—é —Ç–æ–≤–∞—Ä–∞ <b>'.$addtext.'</b>.'.PHP_EOL.'–í—ã–±–∏—Ä–∏—Ç–µ –¥—Ä—É–≥–æ–π –ø–∞—Ä–∞–º–µ—Ç—Ä –∏–ª–∏ –Ω–∞–∂–º–∏—Ç–µ <b>–°–±—Ä–æ—Å–∏—Ç—å —Ñ–∏–ª—å—Ç—Ä—ã</b> –¥–ª—è –≤—ã–±–æ—Ä–∞ –Ω–æ–≤–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ —Ç–æ–≤–∞—Ä–∞.'.$this->pre.'';
					
				}
				
				
				mysqli_query($con_sql2, 'DROP TABLE '.$tabservice.'');
				usleep(250000);
				mysqli_query($con_sql2, 'CREATE TABLE '.$tabservice.' LIKE '.$tabtype.'');
				usleep(250000);
				mysqli_query($con_sql2, 'INSERT INTO '.$tabservice.' (type, cat, gender, brand, size, price, alt, pic, date, time, messid, cond, chatid) SELECT type, cat, gender, brand, size, price, alt, pic, date, time, messid, cond, chatid FROM '.$tabtype.'');
				usleep(250000);
				
				
				$merge=$this->cmd_filter_buy_cat();
				$merge[] = [["text" => "‚û°Ô∏è–î–∞–ª–µ–µ", "callback_data" => "filter_buy_cat_next"], ["text" => "‚ñ∂Ô∏è–ü–æ–∫–∞–∑–∞—Ç—å", "callback_data" => "ready_buy_cat"]];
				//$merge[] = [["text" => "üîÄ–°–±—Ä–æ—Å–∏—Ç—å —Ñ–∏–ª—å—Ç—Ä—ã", "callback_data" => "resetfilters_buy_choose"]];
				$merge[] = [["text" => "‚§¥Ô∏è–í—ã–π—Ç–∏", "callback_data" => "buy_exit_choose_main"]];
				
				$text='–í—ã–±–∏—Ä–∏—Ç–µ –æ–¥–∏–Ω –∏–ª–∏ –Ω–µ—Å–∫–æ–ª—å–∫–æ <b>–í–∏–¥–æ–≤</b>, –∑–∞—Ç–µ–º –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É <b>–î–∞–ª–µ–µ</b> –¥–ª—è –≤—ã–±–æ—Ä–∞ <b>–ü–æ–ª–∞</b>.'.$this->pre.'';
				$this->callbackAnswer( $text, $merge);

			}
			else
			{
				$merge=$this->cmd_filter_buy_cat();
				$merge[] = [["text" => "‚û°Ô∏è–î–∞–ª–µ–µ", "callback_data" => "filter_buy_cat_next"], ["text" => "‚ñ∂Ô∏è–ü–æ–∫–∞–∑–∞—Ç—å", "callback_data" => "ready_buy_cat"]];
				//$merge[] = [["text" => "üîÄ–°–±—Ä–æ—Å–∏—Ç—å —Ñ–∏–ª—å—Ç—Ä—ã", "callback_data" => "resetfilters_buy_choose"]];
				$merge[] = [["text" => "‚§¥Ô∏è–í—ã–π—Ç–∏", "callback_data" => "buy_exit_choose_main"]];
				
				$text='–í—ã–±–∏—Ä–∏—Ç–µ –æ–¥–∏–Ω –∏–ª–∏ –Ω–µ—Å–∫–æ–ª—å–∫–æ <b>–í–∏–¥–æ–≤</b>, –∑–∞—Ç–µ–º –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É <b>–î–∞–ª–µ–µ</b> –¥–ª—è –≤—ã–±–æ—Ä–∞ <b>–ü–æ–ª–∞</b>.'.$this->pre.'';
				$this->callbackAnswer( $text, $merge);
			}
		}
		else
		{
			if(mysqli_query($con_sql2, 'SELECT 1 FROM '.$tabtype.' LIMIT 1'))
			{
				
				$query2=mysqli_query($con_sql2, 'SELECT DISTINCT type FROM '.$tabtype.' WHERE messid!="0"') ;
				$con2=mysqli_num_rows($query2);
				$addtext="";
				for($i1=0;$i1<$con2;$i1++)
				{
					
					mysqli_data_seek($query2, $i1);
					$row2[$i1]=mysqli_fetch_row($query2);
					
					$row2[$i1][0]=$this->convert_rus($row2[$i1][0]);
					
					
					if($i1==0)
					{
						$addtext=$row2[$i1][0];
					}
					else
					{
						$addtext = $addtext . ', '.$row2[$i1][0].'';
					}
				}
				
				if(explode(',', $addtext))
				{
					$text='–í—ã –≤—ã–±—Ä–∞–ª–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ —Ç–æ–≤–∞—Ä–∞ <b>'.$addtext.'</b>.'.PHP_EOL.'–í—ã–±–∏—Ä–∏—Ç–µ –¥—Ä—É–≥–æ–π –ø–∞—Ä–∞–º–µ—Ç—Ä –∏–ª–∏ –Ω–∞–∂–º–∏—Ç–µ <b>–°–±—Ä–æ—Å–∏—Ç—å —Ñ–∏–ª—å—Ç—Ä—ã</b> –¥–ª—è –≤—ã–±–æ—Ä–∞ –Ω–æ–≤–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ —Ç–æ–≤–∞—Ä–∞.'.$this->pre.'';
					
				}
				else
				{
					$text='–í—ã –≤—ã–±—Ä–∞–ª–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏—é —Ç–æ–≤–∞—Ä–∞ <b>'.$addtext.'</b>.'.PHP_EOL.'–í—ã–±–∏—Ä–∏—Ç–µ –¥—Ä—É–≥–æ–π –ø–∞—Ä–∞–º–µ—Ç—Ä –∏–ª–∏ –Ω–∞–∂–º–∏—Ç–µ <b>–°–±—Ä–æ—Å–∏—Ç—å —Ñ–∏–ª—å—Ç—Ä—ã</b> –¥–ª—è –≤—ã–±–æ—Ä–∞ –Ω–æ–≤–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ —Ç–æ–≤–∞—Ä–∞.'.$this->pre.'';
					
				}
				
				mysqli_query($con_sql2, 'CREATE TABLE '.$tabservice.' LIKE '.$tabtype.'');
				usleep(250000);
				mysqli_query($con_sql2, 'INSERT INTO '.$tabservice.' (type, cat, gender, brand, size, price, alt, pic, date, time, messid, cond, chatid) SELECT type, cat, gender, brand, size, price, alt, pic, date, time, messid, cond, chatid FROM '.$tabtype.'');
				usleep(250000);
				mysqli_query($con_sql2, 'DROP TABLE '.$tabtype.'');
				usleep(250000);
				
				$merge=$this->cmd_filter_buy_cat();
				$merge[] = [["text" => "‚û°Ô∏è–î–∞–ª–µ–µ", "callback_data" => "filter_buy_cat_next"], ["text" => "‚ñ∂Ô∏è–ü–æ–∫–∞–∑–∞—Ç—å", "callback_data" => "ready_buy_cat"]];
				//$merge[] = [["text" => "üîÄ–°–±—Ä–æ—Å–∏—Ç—å —Ñ–∏–ª—å—Ç—Ä—ã", "callback_data" => "resetfilters_buy_choose"]];
				$merge[] = [["text" => "‚§¥Ô∏è–í—ã–π—Ç–∏", "callback_data" => "buy_exit_choose_main"]];
				
				$text='–í—ã–±–∏—Ä–∏—Ç–µ –æ–¥–∏–Ω –∏–ª–∏ –Ω–µ—Å–∫–æ–ª—å–∫–æ <b>–í–∏–¥–æ–≤</b>, –∑–∞—Ç–µ–º –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É <b>–î–∞–ª–µ–µ</b> –¥–ª—è –≤—ã–±–æ—Ä–∞ <b>–ü–æ–ª–∞</b>.'.$this->pre.'';
				$this->callbackAnswer( $text, $merge);
			}
			else
			{
				$merge=$this->cmd_filter_buy_cat();
				$merge[] = [["text" => "‚û°Ô∏è–î–∞–ª–µ–µ", "callback_data" => "filter_buy_cat_next"], ["text" => "‚ñ∂Ô∏è–ü–æ–∫–∞–∑–∞—Ç—å", "callback_data" => "ready_buy_cat"]];
				//$merge[] = [["text" => "üîÄ–°–±—Ä–æ—Å–∏—Ç—å —Ñ–∏–ª—å—Ç—Ä—ã", "callback_data" => "resetfilters_buy_choose"]];
				$merge[] = [["text" => "‚§¥Ô∏è–í—ã–π—Ç–∏", "callback_data" => "buy_exit_choose_main"]];
				
				$text='–í—ã–±–∏—Ä–∏—Ç–µ –æ–¥–∏–Ω –∏–ª–∏ –Ω–µ—Å–∫–æ–ª—å–∫–æ <b>–í–∏–¥–æ–≤</b>, –∑–∞—Ç–µ–º –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É <b>–î–∞–ª–µ–µ</b> –¥–ª—è –≤—ã–±–æ—Ä–∞ <b>–ü–æ–ª–∞</b>.'.$this->pre.'';
				$this->callbackAnswer( $text, $merge);
			}
			
			
		}
	}
	
	
	
	


/////
	public function cmd_filter_buy_cat()
	{
		
		$con_sql2=$this->cmd_sql();
	
		$tabcat='tabcat'.$this->api->chatId.'';
		$tabservice='tabservice'.$this->api->chatId.'';
		$tabmain='tabmain'.$this->api->chatId.'';
		
		
		if(mysqli_query($con_sql2, 'SELECT 1 FROM '.$tabservice.' LIMIT 1'))
		{

			$query2=mysqli_query($con_sql2, 'SELECT DISTINCT cat FROM '.$tabservice.' WHERE messid!="0"');
			$con2=mysqli_num_rows($query2);
			
			$puttemp=[];
			
			for($i1=0;$i1<$con2;$i1++)
			{
				mysqli_data_seek($query2, $i1);
				$row2[$i1]=mysqli_fetch_row($query2);
			
				if(in_array($row2[$i1][0], $puttemp)==FALSE)								
				{
					$puttemp[]=$row2[$i1][0];
				}
			}
			
			if(mysqli_query($con_sql2, 'SELECT 1 FROM '.$tabcat.' LIMIT 1'))
			{
				$query2=mysqli_query($con_sql2, 'SELECT DISTINCT cat FROM '.$tabcat.' WHERE messid!="0"');
				$con2=mysqli_num_rows($query2);
				
				for($i1=0;$i1<$con2;$i1++)
				{
					mysqli_data_seek($query2, $i1);
					$row2[$i1]=mysqli_fetch_row($query2);
				
					if(in_array($row2[$i1][0], $puttemp))
					{	
						$search=array_search($row2[$i1][0], $puttemp);
						unset($puttemp[$search]);
					}
				}
			}
			
		}
		else
		{
		
			$query1=mysqli_query($con_sql2, 'SHOW TABLES LIKE "tabmain%"');
			$con1=mysqli_num_rows($query1);
			
			$table=[];
			
			for($i=0;$i<$con1;$i++)
			{
				mysqli_data_seek($query1, $i);
				$row1[$i]=mysqli_fetch_row($query1);
				$table[]=$row1[$i][0];	
			}
			
			$puttemp=[];
		
			for($i=0;$i<$con1;$i++)
			{
				
				$tab=$table[$i];
	
				$query2=mysqli_query($con_sql2, 'SELECT DISTINCT cat FROM '.$tab.' WHERE messid!="0"');
				usleep(100000);
				$con2=mysqli_num_rows($query2);
				
				if($con2!=0)
				{
					for($i1=0;$i1<$con2;$i1++)
					{
						mysqli_data_seek($query2, $i1);
						$row2[$i1]=mysqli_fetch_row($query2);
						
						if(in_array($row2[$i1][0], $puttemp)==FALSE)								
						{
							$puttemp[]=$row2[$i1][0];
						}
					}
				}
				
			}
			
			
			if(mysqli_query($con_sql2, 'SELECT 1 FROM '.$tabcat.' LIMIT 1'))
			{
				$query2=mysqli_query($con_sql2, 'SELECT DISTINCT cat FROM '.$tabcat.' WHERE messid!="0"');
				$con2=mysqli_num_rows($query2);
				
				for($i1=0;$i1<$con2;$i1++)
				{
					mysqli_data_seek($query2, $i1);
					$row2[$i1]=mysqli_fetch_row($query2);
				
					if(in_array($row2[$i1][0], $puttemp))
					{	
						$search=array_search($row2[$i1][0], $puttemp);
						unset($puttemp[$search]);
					}
				}
			}
			
		}
		
		
		$put=[];
		
		foreach($puttemp as $value)
		{
			$put[]=$value;
		}
			
		$cnt=count($put);
		
		$maxbuttons=1;
		$ceil=ceil($cnt/$maxbuttons);

		$include=''.dirname(__FILE__).'/include'.$this->api->chatId.'.php';
		
		if(file_exists($include)==FALSE)
		{
			touch($include);
				
			$insert='<?php
		
		
			class TelegramBotfunc{';
			file_put_contents($include, $insert . PHP_EOL,FILE_APPEND);
				
		}
		else
		{
			$getinclude=file($include);
			unset($getinclude[array_key_last($getinclude)]);
			file_put_contents($include, $getinclude);
		}
		
		$u=0;
		$merge=[];
		
		
		for($i1=0;$i1<$ceil;$i1++)
		{
			$put1=[];
			
			for($i2=0;$i2<$maxbuttons;$i2++)
			{	
		
				if(isset($put[$u]))
				{
					
					$buttext=$this->convert_rus($put[$u]);
					
					$put1[]=["text" => "$buttext", "callback_data" => 'buy_select_cat_'.$this->api->chatId.'_'.$put[$u].''];
					
					if(preg_match('/callback_buy_select_cat_'.$this->api->chatId.'_'.$put[$u].'/', file_get_contents($include))==FALSE)
					{
						$insert='
						public function callback_buy_select_cat_'.$this->api->chatId.'_'.$put[$u].'()
						{	
					
							$bot = new TestBot;
							$bot->api->getWebhookUpdate();
							
							$con_sql2=$bot->cmd_sql();
							

							if(mysqli_query($con_sql2, &#039;SELECT 1 FROM '.$tabservice.' LIMIT 1&#039;))
							{	
								if(mysqli_query($con_sql2, &#039;SELECT 1 FROM '.$tabcat.' LIMIT 1&#039;)==FALSE)
								{
									mysqli_query($con_sql2, &#039;CREATE TABLE '.$tabcat.' LIKE '.$tabmain.'&#039;);
									usleep(250000);
								}
								
								mysqli_query($con_sql2, &#039;INSERT INTO '.$tabcat.' (type, cat, gender, brand, size, price, alt, pic, date, time, messid, cond, chatid) SELECT type, cat, gender, brand, size, price, alt, pic, date, time, messid, cond, chatid FROM '.$tabservice.' WHERE cat="'.$put[$u].'"&#039;);
								usleep(250000);
								

								$merge=$bot->cmd_filter_buy_cat();
								usleep(100000);
								
								$merge[] = [["text" => "‚û°Ô∏è–î–∞–ª–µ–µ", "callback_data" => "filter_buy_cat_next"], ["text" => "‚ñ∂Ô∏è–ü–æ–∫–∞–∑–∞—Ç—å", "callback_data" => "ready_buy_cat"]];
								//$merge[] = [["text" => "üîÄ–°–±—Ä–æ—Å–∏—Ç—å —Ñ–∏–ª—å—Ç—Ä—ã", "callback_data" => "resetfilters_buy_choose"]];
								$merge[] = [["text" => "‚§¥Ô∏è–í—ã–π—Ç–∏", "callback_data" => "buy_exit_choose_main"]];
								
								if(isset($bot->api->body[&#039;callback_query&#039;]["id"]))
								{
									$callback_query_id=$bot->api->body[&#039;callback_query&#039;]["id"];
									$bot->api->answerCallbackQuery($callback_query_id);
								}
								
								$text = &#039;–í—ã –≤—ã–±—Ä–∞–ª–∏ –≤–∏–¥ <b>'.$buttext.'</b>.'.PHP_EOL.'–ú–æ–∂–µ—Ç–µ –≤—ã–±—Ä–∞—Ç—å –µ—â–µ –æ–¥–∏–Ω –∏–ª–∏ –Ω–∞–∂–∞—Ç—å –∫–Ω–æ–ø–∫—É <b>–î–∞–ª–µ–µ</b> –¥–ª—è –≤—ã–±–æ—Ä–∞ <b>–ü–æ–ª–∞</b>.&#039;.$bot->pre.&#039;&#039;;
								
								$bot->api->editMessageText([
								&#039;chat_id&#039; => $bot->api->body[&#039;callback_query&#039;][&#039;message&#039;][&#039;chat&#039;]["id"],
								&#039;message_id&#039; => $bot->api->body[&#039;callback_query&#039;][&#039;message&#039;][&#039;message_id&#039;],
								&#039;text&#039; => $text,
								&#039;parse_mode&#039; => "HTML",
								&#039;reply_markup&#039; => json_encode( [&#039;inline_keyboard&#039;=>$merge] ),
								]);
								usleep(100000);
							}
							else
							{
								if(mysqli_query($con_sql2, &#039;SELECT 1 FROM '.$tabcat.' LIMIT 1&#039;)==FALSE)
								{
									mysqli_query($con_sql2, &#039;CREATE TABLE '.$tabcat.' LIKE '.$tabmain.'&#039;);
									usleep(250000);
									
									$query2=mysqli_query($con_sql2, &#039;SHOW TABLES LIKE "tabmain%"&#039;);
									$con2=mysqli_num_rows($query2);
									$table=[];
								
									for($i=0;$i<$con2;$i++)
									{
										mysqli_data_seek($query2, $i);
										$row2[$i]=mysqli_fetch_row($query2);
										$table[]=$row2[$i][0];	
											
										mysqli_query($con_sql2, &#039;INSERT INTO '.$tabcat.' (type, cat, gender, brand, size, price, alt, pic, date, time, messid, cond, chatid) SELECT type, cat, gender, brand, size, price, alt, pic, date, time, messid, cond, chatid FROM &#039;.$table[$i].&#039; WHERE cat="'.$put[$u].'"&#039;);
										usleep(250000);
									}
								}
								else
								{
									$query1=mysqli_query($con_sql2, &#039;SELECT DISTINCT cat FROM '.$tabcat.' WHERE messid!="0"&#039;);
									$con1=mysqli_num_rows($query1);
									
									for($i1=0;$i1<$con1;$i1++)
									{
										mysqli_data_seek($query1, $i1);
										$row1[$i1]=mysqli_fetch_row($query1);
									}
									
									if(in_array(&#039;'.$put[$u].'&#039;, $row1)==FALSE)
									{
									
										$query2=mysqli_query($con_sql2, &#039;SHOW TABLES LIKE "tabmain%"&#039;);
										$con2=mysqli_num_rows($query2);
										$table=[];
									
										for($i=0;$i<$con2;$i++)
										{
											mysqli_data_seek($query2, $i);
											$row2[$i]=mysqli_fetch_row($query2);
											$table[]=$row2[$i][0];	
			
											mysqli_query($con_sql2, &#039;INSERT INTO '.$tabcat.' (type, cat, gender, brand, size, price, alt, pic, date, time, messid, cond, chatid) SELECT type, cat, gender, brand, size, price, alt, pic, date, time, messid, cond, chatid FROM &#039;.$table[$i].&#039; WHERE cat="'.$put[$u].'"&#039;);
											usleep(250000);
										}
									}
								}
		
								$merge=$bot->cmd_filter_buy_cat();
								usleep(100000);
								
								$merge[] = [["text" => "‚û°Ô∏è–î–∞–ª–µ–µ", "callback_data" => "filter_buy_cat_next"], ["text" => "‚ñ∂Ô∏è–ü–æ–∫–∞–∑–∞—Ç—å", "callback_data" => "ready_buy_cat"]];
								//$merge[] = [["text" => "üîÄ–°–±—Ä–æ—Å–∏—Ç—å —Ñ–∏–ª—å—Ç—Ä—ã", "callback_data" => "resetfilters_buy_choose"]];
								$merge[] = [["text" => "‚§¥Ô∏è–í—ã–π—Ç–∏", "callback_data" => "buy_exit_choose_main"]];
								
								if(isset($bot->api->body[&#039;callback_query&#039;]["id"]))
								{
									$callback_query_id=$bot->api->body[&#039;callback_query&#039;]["id"];
									$bot->api->answerCallbackQuery($callback_query_id);
								}
								$text = &#039;–í—ã –≤—ã–±—Ä–∞–ª–∏ –≤–∏–¥ <b>'.$buttext.'</b>.'.PHP_EOL.'–ú–æ–∂–µ—Ç–µ –≤—ã–±—Ä–∞—Ç—å –µ—â–µ –æ–¥–∏–Ω –∏–ª–∏ –Ω–∞–∂–∞—Ç—å –∫–Ω–æ–ø–∫—É <b>–î–∞–ª–µ–µ</b> –¥–ª—è –≤—ã–±–æ—Ä–∞ <b>–ü–æ–ª–∞</b>.&#039;.$bot->pre.&#039;&#039;;
								
								$bot->api->editMessageText([
								&#039;chat_id&#039; => $bot->api->body[&#039;callback_query&#039;][&#039;message&#039;][&#039;chat&#039;]["id"],
								&#039;message_id&#039; => $bot->api->body[&#039;callback_query&#039;][&#039;message&#039;][&#039;message_id&#039;],
								&#039;text&#039; => $text,
								&#039;parse_mode&#039; => "HTML",
								&#039;reply_markup&#039; => json_encode( [&#039;inline_keyboard&#039;=>$merge] ),
								]);
								usleep(100000);
								
								
							}
		
						}';
						file_put_contents($include, html_entity_decode($insert, ENT_QUOTES) . PHP_EOL . PHP_EOL,FILE_APPEND);
					}
				
				}
				
				$u++;
			}	
			
			$merge[]=$put1;
			unset($put1);
			
		}
		

		$insert='}';
		file_put_contents($include, $insert,FILE_APPEND);
		
		
		return $merge;
	}


/////
	public function callback_ready_buy_cat()
	{
		$con_sql2=$this->cmd_sql();
		
		$tabcat='tabcat'.$this->api->chatId.'';
		$tabservice='tabservice'.$this->api->chatId.'';
		$tabmain='tabmain'.$this->api->chatId.'';
		
		
		if(mysqli_query($con_sql2, 'SELECT 1 FROM '.$tabservice.' LIMIT 1'))
		{
			if(mysqli_query($con_sql2, 'SELECT 1 FROM '.$tabcat.' LIMIT 1'))
			{				
				mysqli_query($con_sql2, 'DROP TABLE '.$tabservice.'');
				usleep(250000);
				mysqli_query($con_sql2, 'CREATE TABLE '.$tabservice.' LIKE '.$tabcat.'');
				usleep(250000);
				mysqli_query($con_sql2, 'INSERT INTO '.$tabservice.' (type, cat, gender, brand, size, price, alt, pic, date, time, messid, cond, chatid) SELECT type, cat, gender, brand, size, price, alt, pic, date, time, messid, cond, chatid FROM '.$tabcat.'');
				usleep(250000);

			}
			
		}
		else
		{
			if(mysqli_query($con_sql2, 'SELECT 1 FROM '.$tabcat.' LIMIT 1'))
			{
				mysqli_query($con_sql2, 'CREATE TABLE '.$tabservice.' LIKE '.$tabcat.'');
				usleep(250000);
				mysqli_query($con_sql2, 'INSERT INTO '.$tabservice.' (type, cat, gender, brand, size, price, alt, pic, date, time, messid, cond, chatid) SELECT type, cat, gender, brand, size, price, alt, pic, date, time, messid, cond, chatid FROM '.$tabcat.'');
				usleep(250000);
			}
		}
		
		
		
		
		$tabservice='tabservice'.$this->api->chatId.'';
		
		if(mysqli_query($con_sql2, 'SELECT 1 FROM '.$tabservice.' LIMIT 1')==FALSE)
		{
			$query1=mysqli_query($con_sql2, 'SHOW TABLES LIKE "tabmain%"');
			$con1=mysqli_num_rows($query1);
			
			if($con1!=0)
			{	
			
				$table=[];
				$check=0;
				
				for($i1=0;$i1<$con1;$i1++)
				{
					mysqli_data_seek($query1, $i1);
					$row1[$i1]=mysqli_fetch_row($query1);
					$tab=$row1[$i1][0];
					
					$query=mysqli_query($con_sql2, 'SELECT * FROM '.$tab.' WHERE messid!="0" ORDER by messid ASC');
					usleep(100000);
					$con=mysqli_num_rows($query);
						
					if($con!=0)
					{	

						$check=1;
						
						for($i=0;$i<$con;$i++)
						{
							mysqli_data_seek($query, $i);
							$row[$i]=mysqli_fetch_row($query);
						}
						usleep(100000);
						
		
						for($i=0;$i<$con;$i++)
						{
						
						
							$type=$this->convert_rus($row[$i][1]);
							$cat=$this->convert_rus($row[$i][2]);
							$gender=$this->convert_rus($row[$i][3]);
							$cond=$this->convert_rus($row[$i][12]);
						
						
						
							/* $text='‚ùáÔ∏è‚ùáÔ∏è‚ùáÔ∏è‚ùáÔ∏è‚ùáÔ∏è‚ùáÔ∏è‚ùáÔ∏è‚ùáÔ∏è‚ùáÔ∏è‚ùáÔ∏è‚ùáÔ∏è‚ùáÔ∏è‚ùáÔ∏è‚ùáÔ∏è‚ùáÔ∏è‚ùáÔ∏è‚ùáÔ∏è‚ùáÔ∏è‚ùáÔ∏è‚ùáÔ∏è';
							
							$this->api->sendMessage([
							'text' => $text,
							'disable_notification' => TRUE,
							'disable_web_page_preview' => TRUE,
							'parse_mode'=> "HTML"
							]);
							usleep(100000); */
							
							
							$messageid=$row[$i][11];
							
							$caption='üìñ–ö–∞—Ç–µ–≥–æ—Ä–∏—è: &#160;&#160;<b>'.$type.'</b>'.PHP_EOL.'üßæ–í–∏–¥: &#160;&#160;<b>'.$cat.'</b>'.PHP_EOL.'üë®‚Äçüë©‚Äçüë¶–ü–æ–ª: &#160;&#160;<b>'.$gender.'</b>'.PHP_EOL.'üéè–°–æ—Å—Ç–æ—è–Ω–∏–µ: <b>'.$cond.'</b>'.PHP_EOL.'¬ÆÔ∏è–ë—Ä–µ–Ω–¥: &#160;&#160;<b>'.$row[$i][4].'</b>'.PHP_EOL.'‚ÜïÔ∏è–†–∞–∑–º–µ—Ä: &#160;&#160;<b>'.$row[$i][5].'</b>'.PHP_EOL.'üíµ–¶–µ–Ω–∞: &#160;&#160;<b>'.$row[$i][6].'</b>'.PHP_EOL.'üìã–û–ø–∏—Å–∞–Ω–∏–µ: &#160;&#160;'.$row[$i][7].''.PHP_EOL.''.PHP_EOL.''.PHP_EOL.'<b>ID —Ç–æ–≤–∞—Ä–∞: '.$messageid.'</b>'.PHP_EOL.''.PHP_EOL.'üìÅüìÅüìÅüìÅüìÅüìÅüìÅüìÅüìÅüìÅüìÅüìÅ';
							
							$photo=$row[$i][8];
							
							$include=''.dirname(__FILE__).'/include'.$this->api->chatId.'.php';
			
							if(file_exists($include)==FALSE)
							{
								touch($include);
								
								$insert='<?php
						
						
								class TelegramBotfunc{';
								file_put_contents($include, $insert . PHP_EOL,FILE_APPEND);
								
							}
							else
							{
								$getinclude=file($include);
								unset($getinclude[array_key_last($getinclude)]);
								file_put_contents($include, $getinclude);
							}
							
		
							$merge=[];
							$merge[]= [['text' => 'üõí–ö—É–ø–∏—Ç—å', 'callback_data' => 'buy_ready_cat_'.$this->api->chatId.'_'.$messageid.'']]  ;
							
							if(preg_match('/callback_buy_ready_cat_'.$this->api->chatId.'_'.$messageid.'/', file_get_contents($include))==FALSE)
							{
								$insert='
								public function callback_buy_ready_cat_'.$this->api->chatId.'_'.$messageid.'()
								{	
						
									$bot = new TestBot;
									$bot->api->getWebhookUpdate();

									$text=&#039;–í—ã –∑–∞–ø—Ä–æ—Å–∏–ª–∏ —Ç–æ–≤–∞—Ä —Å <b>ID ‚Ññ'.$messageid.'.</b> &#039;.PHP_EOL.&#039;&#039;.PHP_EOL.&#039;<b>–í—ã —Ç–æ—á–Ω–æ —Ö–æ—Ç–∏—Ç–µ –∫—É–ø–∏—Ç—å –µ–≥–æ?</b>&#039;.$bot->pre.&#039;&#039;;
									$merge=[];
									$merge[] = [[&#039;text&#039; => &#039;üü¢–î–∞&#039;, &#039;callback_data&#039; => &#039;byrecordid_default_buy_yes&#039;], [&#039;text&#039; => &#039;üî¥–ù–µ—Ç&#039;, &#039;callback_data&#039; => &#039;byrecordid_default_buy_no&#039;]];
									$merge[] = [[&#039;text&#039; => &#039;‚¨ÖÔ∏è–ù–∞–∑–∞–¥&#039;, &#039;callback_data&#039; => &#039;back_byrecordid_default_buy&#039;], [&#039;text&#039; => &#039;‚§¥Ô∏è–í—ã–π—Ç–∏&#039;, &#039;callback_data&#039; => &#039;exit_byrecordid_default_buy&#039;]];
									
									if(isset($bot->api->body[&#039;callback_query&#039;]["id"]))
									{
										$callback_query_id=$bot->api->body[&#039;callback_query&#039;]["id"];
										$bot->api->answerCallbackQuery($callback_query_id);
									}
							
									$bot->api->sendMessage([
									&#039;text&#039; => $text,
									&#039;reply_markup&#039; => json_encode( [&#039;inline_keyboard&#039;=>$merge]),
									&#039;disable_notification&#039; => TRUE,
									&#039;disable_web_page_preview&#039; => TRUE,
									&#039;parse_mode&#039;=> "HTML"
									]);
									usleep(100000);
									
								}';
								file_put_contents($include, html_entity_decode($insert, ENT_QUOTES) . PHP_EOL . PHP_EOL,FILE_APPEND);
								
							}
							
							$insert='}';
							file_put_contents($include, $insert,FILE_APPEND);
							
							
							if(preg_match('/;/', $photo)==FALSE)
							{
								$this->api->sendPhoto([
								'photo' => $photo,
								'caption' => $caption,
								//'reply_markup' => json_encode( ['inline_keyboard'=>$this->keyboards['inline_ask_admin']]),
								//'reply_markup' => json_encode( ['inline_keyboard'=>$merge]),
								'disable_notification' => TRUE,
								'parse_mode' => "HTML"
								]);
								usleep(250000);
								
								$text='–ö—É–ø–∏—Ç—å <b>ID ‚Ññ'.$messageid.'</b>';
								$this->api->sendMessage([
								'text' => $text,
								'reply_markup' => json_encode( ['inline_keyboard'=>$merge]),
								'disable_notification' => TRUE,
								'disable_web_page_preview' => TRUE,
								'parse_mode'=> "HTML"
								]);
								usleep(100000);
								
							
							}
							else
							{
								$media=[];
								$temp=explode(';', $photo);
								$cnt=count($temp);
								for($o=0;$o<$cnt;$o++)
								{
								
								
									if($o==0)
									{
										//$put=['type' => 'photo', 'media' =>  ''.$temp[$o].'', 'caption' => ''.$caption.'', 'parse_mode' => "HTML", 'reply_markup' => ['inline_keyboard'=>$merge]];
										//$put=['type' => 'photo', 'media' =>  ''.$temp[$o].'', 'caption' => ''.$caption.'', 'parse_mode' => "HTML", 'reply_markup' => 'inline_keyboard'=>$this->keyboards['inline_ask_admin']];
										$put=['type' => 'photo', 'media' =>  ''.$temp[$o].'', 'caption' => ''.$caption.'', 'parse_mode' => "HTML"];
									}
									else
									{
										$put=['type' => 'photo', 'media' =>  ''.$temp[$o].''];
									}
							
									$media[$o]=$put;
								}
								
								
								$this->api->sendMediaGroup([
								'media' => json_encode($media),
								//'reply_markup' => json_encode( ['inline_keyboard'=>$merge])
								]);
								usleep(350000);
								
								$text='–ö—É–ø–∏—Ç—å <b>ID ‚Ññ'.$messageid.'</b>';
								$this->api->sendMessage([
								'text' => $text,
								'reply_markup' => json_encode( ['inline_keyboard'=>$merge]),
								'disable_notification' => TRUE,
								'disable_web_page_preview' => TRUE,
								'parse_mode'=> "HTML"
								]);
								usleep(100000);
							}
						}
			
					}
				}
				
				if($check==1)
				{
					/* $tab='tabtype'.$this->api->chatId.'';
		
					//if(mysqli_query($con_sql2, 'SELECT 1 FROM '.$tab.' LIMIT 1'))
					//{
						mysqli_query($con_sql2, 'DROP TABLE '.$tab.'');
						usleep(100000);
					//}
					
					$tab='tabcat'.$this->api->chatId.'';
					
					//if(mysqli_query($con_sql2, 'SELECT 1 FROM '.$tab.' LIMIT 1'))
					//{
						mysqli_query($con_sql2, 'DROP TABLE '.$tab.'');
						usleep(100000);
					//}
					
					$tab='tabgender'.$this->api->chatId.'';
					
					//if(mysqli_query($con_sql2, 'SELECT 1 FROM '.$tab.' LIMIT 1'))
					//{
						mysqli_query($con_sql2, 'DROP TABLE '.$tab.'');
						usleep(100000);
					//}
				
					$tab='tabcond'.$this->api->chatId.'';
					
					//if(mysqli_query($con_sql2, 'SELECT 1 FROM '.$tab.' LIMIT 1'))
					//{
						mysqli_query($con_sql2, 'DROP TABLE '.$tab.'');
						usleep(100000);
					//}
				
					$tab='tabprice'.$this->api->chatId.'';
					
					//if(mysqli_query($con_sql2, 'SELECT 1 FROM '.$tab.' LIMIT 1'))
					//{
						mysqli_query($con_sql2, 'DROP TABLE '.$tab.'');
						usleep(100000);
					//}
					
					
					$tab='tabservice'.$this->api->chatId.'';
					
					//if(mysqli_query($con_sql2, 'SELECT 1 FROM '.$tab.' LIMIT 1'))
					//{
						mysqli_query($con_sql2, 'DROP TABLE '.$tab.'');
						usleep(100000);
					//} */
					
					if(isset($this->api->body['callback_query']["id"]))
						{
							$callback_query_id=$this->api->body['callback_query']["id"];
							$this->api->answerCallbackQuery($callback_query_id);
						}

					$text='–°–≤–µ—Ä—Ö—É <b>–ø–æ–∫–∞–∑–∞–Ω—ã –≤—Å–µ —Ç–æ–≤–∞—Ä—ã</b>, —Å–æ–≥–ª–∞—Å–Ω–æ –í–∞—à–µ–≥–æ –∑–∞–ø—Ä–æ—Å–∞.'.PHP_EOL.''.PHP_EOL.'–í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ –º–µ–Ω—é <b>–ö—É–ø–∏—Ç—å —Ç–æ–≤–∞—Ä</b>.'.$this->pre.'';
					
					$this->api->sendMessage([
					'text' => $text,
					'reply_markup' => json_encode( ['inline_keyboard'=>$this->keyboards['inline_buy_default']]),
					'disable_notification' => TRUE,
					'disable_web_page_preview' => TRUE,
					'parse_mode'=> "HTML"
					]);
					usleep(100000);	
				}
				else
				{
					$text='–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é –≤ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç <b>–Ω–µ—Ç —Ç–æ–≤–∞—Ä–æ–≤ –≤ –ø—Ä–æ–¥–∞–∂–µ</b>. –í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ –º–µ–Ω—é <b>–ö—É–ø–∏—Ç—å</b>.'.$this->pre.'';
					$this->callbackAnswer( $text, $this->keyboards['inline_buy_default']);	
				}
				
				
			}
			else
			{
				$text='–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é –≤ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç <b>–Ω–µ—Ç —Ç–æ–≤–∞—Ä–æ–≤ –≤ –ø—Ä–æ–¥–∞–∂–µ</b>. –í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ –º–µ–Ω—é <b>–ö—É–ø–∏—Ç—å</b>.'.$this->pre.'';
				$this->callbackAnswer( $text, $this->keyboards['inline_buy_default']);	
			}
			
		}
		else
		{
			$query1=mysqli_query($con_sql2, 'SELECT * FROM '.$tabservice.' WHERE messid!="0" ORDER by messid ASC');
			usleep(100000);
			$con1=mysqli_num_rows($query1);
				
			if($con1!=0)
			{					
				for($i1=0;$i1<$con1;$i1++)
				{
					mysqli_data_seek($query1, $i1);
					$row1[$i1]=mysqli_fetch_row($query1);
				}
				usleep(100000);
				
			
				for($i1=0;$i1<$con1;$i1++)
				{
				
				
					$type=$this->convert_rus($row1[$i1][1]);
					$cat=$this->convert_rus($row1[$i1][2]);
					$gender=$this->convert_rus($row1[$i1][3]);
					$cond=$this->convert_rus($row1[$i1][12]);
				
				
					/* $text='‚ùáÔ∏è‚ùáÔ∏è‚ùáÔ∏è‚ùáÔ∏è‚ùáÔ∏è‚ùáÔ∏è‚ùáÔ∏è‚ùáÔ∏è‚ùáÔ∏è‚ùáÔ∏è‚ùáÔ∏è‚ùáÔ∏è‚ùáÔ∏è‚ùáÔ∏è‚ùáÔ∏è‚ùáÔ∏è‚ùáÔ∏è‚ùáÔ∏è‚ùáÔ∏è‚ùáÔ∏è';
					
					$this->api->sendMessage([
					'text' => $text,
					'disable_notification' => TRUE,
					'disable_web_page_preview' => TRUE,
					'parse_mode'=> "HTML"
					]);
					usleep(100000); */
					
					
					$messageid=$row1[$i1][11];
					
					$caption='üìñ–ö–∞—Ç–µ–≥–æ—Ä–∏—è: &#160;&#160;<b>'.$type.'</b>'.PHP_EOL.'üßæ–í–∏–¥: &#160;&#160;<b>'.$cat.'</b>'.PHP_EOL.'üë®‚Äçüë©‚Äçüë¶–ü–æ–ª: &#160;&#160;<b>'.$gender.'</b>'.PHP_EOL.'üéè–°–æ—Å—Ç–æ—è–Ω–∏–µ: <b>'.$cond.'</b>'.PHP_EOL.'¬ÆÔ∏è–ë—Ä–µ–Ω–¥: &#160;&#160;<b>'.$row1[$i1][4].'</b>'.PHP_EOL.'‚ÜïÔ∏è–†–∞–∑–º–µ—Ä: &#160;&#160;<b>'.$row1[$i1][5].'</b>'.PHP_EOL.'üíµ–¶–µ–Ω–∞: &#160;&#160;<b>'.$row1[$i1][6].'</b>'.PHP_EOL.'üìã–û–ø–∏—Å–∞–Ω–∏–µ: &#160;&#160;'.$row1[$i1][7].''.PHP_EOL.''.PHP_EOL.''.PHP_EOL.'<b>ID —Ç–æ–≤–∞—Ä–∞: '.$messageid.'</b>'.PHP_EOL.''.PHP_EOL.'üìÅüìÅüìÅüìÅüìÅüìÅüìÅüìÅüìÅüìÅüìÅüìÅ';
					
					$photo=$row1[$i1][8];
					
					$include=''.dirname(__FILE__).'/include'.$this->api->chatId.'.php';
			
					if(file_exists($include)==FALSE)
					{
						touch($include);
						
						$insert='<?php
					
					
						class TelegramBotfunc{';
						file_put_contents($include, $insert . PHP_EOL,FILE_APPEND);
						
					}
					else
					{
						$getinclude=file($include);
						unset($getinclude[array_key_last($getinclude)]);
						file_put_contents($include, $getinclude);
					}
					
					
					$merge=[];
					$merge[]= [['text' => 'üõí–ö—É–ø–∏—Ç—å', 'callback_data' => 'buy_ready_cat_'.$this->api->chatId.'_'.$messageid.'']]  ;
					
					if(preg_match('/callback_buy_ready_cat_'.$this->api->chatId.'_'.$messageid.'/', file_get_contents($include))==FALSE)
					{
						$insert='
						public function callback_buy_ready_cat_'.$this->api->chatId.'_'.$messageid.'()
						{	
					
							$bot = new TestBot;
							$bot->api->getWebhookUpdate();
					
							$text=&#039;–í—ã –∑–∞–ø—Ä–æ—Å–∏–ª–∏ —Ç–æ–≤–∞—Ä —Å <b>ID ‚Ññ'.$messageid.'.</b> &#039;.PHP_EOL.&#039;&#039;.PHP_EOL.&#039;<b>–í—ã —Ç–æ—á–Ω–æ —Ö–æ—Ç–∏—Ç–µ –∫—É–ø–∏—Ç—å –µ–≥–æ?</b>&#039;.$bot->pre.&#039;&#039;;
							$merge=[];
							$merge[] = [[&#039;text&#039; => &#039;üü¢–î–∞&#039;, &#039;callback_data&#039; => &#039;byrecordid_default_buy_yes&#039;], [&#039;text&#039; => &#039;üî¥–ù–µ—Ç&#039;, &#039;callback_data&#039; => &#039;byrecordid_default_buy_no&#039;]];
							$merge[] = [[&#039;text&#039; => &#039;‚¨ÖÔ∏è–ù–∞–∑–∞–¥&#039;, &#039;callback_data&#039; => &#039;back_byrecordid_default_buy&#039;], [&#039;text&#039; => &#039;‚§¥Ô∏è–í—ã–π—Ç–∏&#039;, &#039;callback_data&#039; => &#039;exit_byrecordid_default_buy&#039;]];
							
							if(isset($bot->api->body[&#039;callback_query&#039;]["id"]))
							{
								$callback_query_id=$bot->api->body[&#039;callback_query&#039;]["id"];
								$bot->api->answerCallbackQuery($callback_query_id);
							}
							
							$bot->api->sendMessage([
							&#039;text&#039; => $text,
							&#039;reply_markup&#039; => json_encode( [&#039;inline_keyboard&#039;=>$merge]),
							&#039;disable_notification&#039; => TRUE,
							&#039;disable_web_page_preview&#039; => TRUE,
							&#039;parse_mode&#039;=> "HTML"
							]);
							usleep(100000);
							
						}';
						file_put_contents($include, html_entity_decode($insert, ENT_QUOTES) . PHP_EOL . PHP_EOL,FILE_APPEND);
						
					}
					
					$insert='}';
					file_put_contents($include, $insert,FILE_APPEND);
						
					if(preg_match('/;/', $photo)==FALSE)
					{
						$this->api->sendPhoto([
						'photo' => $photo,
						'caption' => $caption,
						'disable_notification' => TRUE,
						'parse_mode' => "HTML"
						]);
						usleep(250000);
					
						
						$text='–ö—É–ø–∏—Ç—å <b>ID ‚Ññ'.$messageid.'</b>';
						$this->api->sendMessage([
						'text' => $text,
						'reply_markup' => json_encode( ['inline_keyboard'=>$merge]),
						'disable_notification' => TRUE,
						'disable_web_page_preview' => TRUE,
						'parse_mode'=> "HTML"
						]);
						usleep(100000);
					
					}
					else
					{
						$media=[];
						$temp=explode(';', $photo);
						$cnt=count($temp);
						for($o=0;$o<$cnt;$o++)
						{
						
						
							if($o==0)
							{
								$put=['type' => 'photo', 'media' =>  ''.$temp[$o].'', 'caption' => ''.$caption.'', 'parse_mode' => "HTML" ];
							}
							else
							{
								$put=['type' => 'photo', 'media' =>  ''.$temp[$o].'' ];
							}
					
							$media[$o]=$put;
						}
						
						
						$this->api->sendMediaGroup([
						'media' => json_encode($media),
						]);
						usleep(350000);
						
						
						$text='–ö—É–ø–∏—Ç—å <b>ID ‚Ññ'.$messageid.'</b>';
						$this->api->sendMessage([
						'text' => $text,
						'reply_markup' => json_encode( ['inline_keyboard'=>$merge]),
						'disable_notification' => TRUE,
						'disable_web_page_preview' => TRUE,
						'parse_mode'=> "HTML"
						]);
						usleep(100000);
					}
				}
				
				/* $tab='tabtype'.$this->api->chatId.'';
		
				//if(mysqli_query($con_sql2, 'SELECT 1 FROM '.$tab.' LIMIT 1'))
				//{
					mysqli_query($con_sql2, 'DROP TABLE '.$tab.'');
					usleep(100000);	
				//}
				
				$tab='tabcat'.$this->api->chatId.'';
				
				//if(mysqli_query($con_sql2, 'SELECT 1 FROM '.$tab.' LIMIT 1'))
				//{
					mysqli_query($con_sql2, 'DROP TABLE '.$tab.'');
					usleep(100000);
				//}
				
				$tab='tabgender'.$this->api->chatId.'';
				
				//if(mysqli_query($con_sql2, 'SELECT 1 FROM '.$tab.' LIMIT 1'))
				//{
					mysqli_query($con_sql2, 'DROP TABLE '.$tab.'');
					usleep(100000);
				//}
				
				$tab='tabcond'.$this->api->chatId.'';
				
				//if(mysqli_query($con_sql2, 'SELECT 1 FROM '.$tab.' LIMIT 1'))
				//{
					mysqli_query($con_sql2, 'DROP TABLE '.$tab.'');
					usleep(100000);
				//}
				
				$tab='tabprice'.$this->api->chatId.'';
				
				//if(mysqli_query($con_sql2, 'SELECT 1 FROM '.$tab.' LIMIT 1'))
				//{
					mysqli_query($con_sql2, 'DROP TABLE '.$tab.'');
					usleep(100000);
				//}
				
				
				$tab='tabservice'.$this->api->chatId.'';
				
				//if(mysqli_query($con_sql2, 'SELECT 1 FROM '.$tab.' LIMIT 1'))
				//{
					mysqli_query($con_sql2, 'DROP TABLE '.$tab.'');
					usleep(100000);
				//} */
					
				if(isset($this->api->body['callback_query']["id"]))
				{
					$callback_query_id=$this->api->body['callback_query']["id"];
					$this->api->answerCallbackQuery($callback_query_id);
				}
											
				$text='<b>–°–≤–µ—Ä—Ö—É –ø–æ–∫–∞–∑–∞–Ω—ã –≤—Å–µ —Ç–æ–≤–∞—Ä—ã, —Å–æ–≥–ª–∞—Å–Ω–æ –í–∞—à–µ–≥–æ –∑–∞–ø—Ä–æ—Å–∞.</b>'.PHP_EOL.''.PHP_EOL.'–í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ –º–µ–Ω—é <b>–ö—É–ø–∏—Ç—å.</b>'.$this->pre.'';
				
				$this->api->sendMessage([
				'text' => $text,
				'reply_markup' => json_encode( ['inline_keyboard'=>$this->keyboards['inline_buy_default']]),
				'disable_notification' => TRUE,
				'disable_web_page_preview' => TRUE,
				'parse_mode'=> "HTML"
				]);
				usleep(100000);
				
				
			
			}
			else
			{
				$text='–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é –≤ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç <b>–Ω–µ—Ç —Ç–æ–≤–∞—Ä–æ–≤ –≤ –ø—Ä–æ–¥–∞–∂–µ</b>. –í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ –º–µ–Ω—é <b>–ö—É–ø–∏—Ç—å</b>.'.$this->pre.'';
				$this->callbackAnswer( $text, $this->keyboards['inline_buy_default']);
			}
			
		}
		
	}

/////
	public function callback_filter_buy_cat_next()
	{		
		$con_sql2=$this->cmd_sql();
		
		$tabcat='tabcat'.$this->api->chatId.'';
		$tabservice='tabservice'.$this->api->chatId.'';
		$tabmain='tabmain'.$this->api->chatId.'';
		
		if(mysqli_query($con_sql2, 'SELECT 1 FROM '.$tabservice.' LIMIT 1'))
		{
			if(mysqli_query($con_sql2, 'SELECT 1 FROM '.$tabcat.' LIMIT 1'))
			{
				$query2=mysqli_query($con_sql2, 'SELECT DISTINCT cat FROM '.$tabcat.' WHERE messid!="0"');
				$con2=mysqli_num_rows($query2);
				$addtext="";
				for($i1=0;$i1<$con2;$i1++)
				{
					
					mysqli_data_seek($query2, $i1);
					$row2[$i1]=mysqli_fetch_row($query2);
					
					$row2[$i1][0]=$this->convert_rus($row2[$i1][0]);
					
					
					if($i1==0)
					{
						$addtext=$row2[$i1][0];
					}
					else
					{
						$addtext = $addtext . ', '.$row2[$i1][0].'';
					}
				}
				
				if(explode(',', $addtext))
				{
					$text='–í—ã –≤—ã–±—Ä–∞–ª–∏ –Ω–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏—è —Ç–æ–≤–∞—Ä–∞ <b>'.$addtext.'</b>.'.PHP_EOL.'–í—ã–±–∏—Ä–∏—Ç–µ –¥—Ä—É–≥–æ–π –ø–∞—Ä–∞–º–µ—Ç—Ä –∏–ª–∏ –Ω–∞–∂–º–∏—Ç–µ <b>–°–±—Ä–æ—Å–∏—Ç—å —Ñ–∏–ª—å—Ç—Ä—ã</b> –¥–ª—è –≤—ã–±–æ—Ä–∞ –Ω–æ–≤–æ–≥–æ –Ω–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏—è —Ç–æ–≤–∞—Ä–∞.'.$this->pre.'';
					
				}
				else
				{
					$text='–í—ã –≤—ã–±—Ä–∞–ª–∏ –≤–∏–¥ <b>'.$addtext.'</b>.'.PHP_EOL.'–í—ã–±–∏—Ä–∏—Ç–µ –¥—Ä—É–≥–æ–π –ø–∞—Ä–∞–º–µ—Ç—Ä –∏–ª–∏ –Ω–∞–∂–º–∏—Ç–µ <b>–°–±—Ä–æ—Å–∏—Ç—å —Ñ–∏–ª—å—Ç—Ä—ã</b> –¥–ª—è –≤—ã–±–æ—Ä–∞ –Ω–æ–≤–æ–≥–æ –≤–∏–¥–∞ —Ç–æ–≤–∞—Ä–∞.'.$this->pre.'';
					
				}
				
				
				mysqli_query($con_sql2, 'DROP TABLE '.$tabservice.'');
				usleep(250000);
				mysqli_query($con_sql2, 'CREATE TABLE '.$tabservice.' LIKE '.$tabcat.'');
				usleep(250000);
				mysqli_query($con_sql2, 'INSERT INTO '.$tabservice.' (type, cat, gender, brand, size, price, alt, pic, date, time, messid, cond, chatid) SELECT type, cat, gender, brand, size, price, alt, pic, date, time, messid, cond, chatid FROM '.$tabcat.'');
				usleep(250000);
				
				$merge=$this->cmd_filter_buy_gender();
				$merge[] = [["text" => "‚û°Ô∏è–î–∞–ª–µ–µ", "callback_data" => "filter_buy_gender_next"], ["text" => "‚ñ∂Ô∏è–ü–æ–∫–∞–∑–∞—Ç—å", "callback_data" => "ready_buy_gender"]];
				//$merge[] = [["text" => "üîÄ–°–±—Ä–æ—Å–∏—Ç—å —Ñ–∏–ª—å—Ç—Ä—ã", "callback_data" => "resetfilters_buy_choose"]];
				$merge[] = [["text" => "‚§¥Ô∏è–í—ã–π—Ç–∏", "callback_data" => "buy_exit_choose_main"]];
				
				$text='–í—ã–±–∏—Ä–∏—Ç–µ –æ–¥–∏–Ω –∏–ª–∏ –Ω–µ—Å–∫–æ–ª—å–∫–æ <b>–ü–æ–ª–æ–≤</b>, –∑–∞—Ç–µ–º –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É <b>–î–∞–ª–µ–µ</b> –¥–ª—è –≤—ã–±–æ—Ä–∞ <b>–°–æ—Å—Ç–æ—è–Ω–∏—è</b>.'.$this->pre.'';
				$this->callbackAnswer( $text, $merge);
				
			}
			else
			{
				$merge=$this->cmd_filter_buy_gender();
				$merge[] = [["text" => "‚û°Ô∏è–î–∞–ª–µ–µ", "callback_data" => "filter_buy_gender_next"], ["text" => "‚ñ∂Ô∏è–ü–æ–∫–∞–∑–∞—Ç—å", "callback_data" => "ready_buy_gender"]];
				//$merge[] = [["text" => "üîÄ–°–±—Ä–æ—Å–∏—Ç—å —Ñ–∏–ª—å—Ç—Ä—ã", "callback_data" => "resetfilters_buy_choose"]];
				$merge[] = [["text" => "‚§¥Ô∏è–í—ã–π—Ç–∏", "callback_data" => "buy_exit_choose_main"]];

				$text='–í—ã–±–∏—Ä–∏—Ç–µ –æ–¥–∏–Ω –∏–ª–∏ –Ω–µ—Å–∫–æ–ª—å–∫–æ <b>–ü–æ–ª–æ–≤</b>, –∑–∞—Ç–µ–º –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É <b>–î–∞–ª–µ–µ</b> –¥–ª—è –≤—ã–±–æ—Ä–∞ <b>–°–æ—Å—Ç–æ—è–Ω–∏—è</b>.'.$this->pre.'';
				$this->callbackAnswer( $text, $merge);
			}
		}
		else
		{
			if(mysqli_query($con_sql2, 'SELECT 1 FROM '.$tabcat.' LIMIT 1'))
			{
				
				$query2=mysqli_query($con_sql2, 'SELECT DISTINCT cat FROM '.$tabcat.' WHERE messid!="0"');
				$con2=mysqli_num_rows($query2);
				$addtext="";
				for($i1=0;$i1<$con2;$i1++)
				{
					
					mysqli_data_seek($query2, $i1);
					$row2[$i1]=mysqli_fetch_row($query2);
					
					$row2[$i1][0]=$this->convert_rus($row2[$i1][0]);
					
					
					if($i1==0)
					{
						$addtext=$row2[$i1][0];
					}
					else
					{
						$addtext = $addtext . ', '.$row2[$i1][0].'';
					}
				}
				
				if(explode(',', $addtext))
				{
					$text='–í—ã –≤—ã–±—Ä–∞–ª–∏ –Ω–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏—è —Ç–æ–≤–∞—Ä–∞ <b>'.$addtext.'</b>.'.PHP_EOL.'–í—ã–±–∏—Ä–∏—Ç–µ –¥—Ä—É–≥–æ–π –ø–∞—Ä–∞–º–µ—Ç—Ä –∏–ª–∏ –Ω–∞–∂–º–∏—Ç–µ <b>–°–±—Ä–æ—Å–∏—Ç—å —Ñ–∏–ª—å—Ç—Ä—ã</b> –¥–ª—è –≤—ã–±–æ—Ä–∞ –Ω–æ–≤–æ–≥–æ –Ω–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏—è —Ç–æ–≤–∞—Ä–∞.'.$this->pre.'';
					
				}
				else
				{
					$text='–í—ã –≤—ã–±—Ä–∞–ª–∏ –≤–∏–¥ <b>'.$addtext.'</b>.'.PHP_EOL.'–í—ã–±–∏—Ä–∏—Ç–µ –¥—Ä—É–≥–æ–π –ø–∞—Ä–∞–º–µ—Ç—Ä –∏–ª–∏ –Ω–∞–∂–º–∏—Ç–µ <b>–°–±—Ä–æ—Å–∏—Ç—å —Ñ–∏–ª—å—Ç—Ä—ã</b> –¥–ª—è –≤—ã–±–æ—Ä–∞ –Ω–æ–≤–æ–≥–æ –Ω–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏—è —Ç–æ–≤–∞—Ä–∞.'.$this->pre.'';
					
				}
				
				mysqli_query($con_sql2, 'CREATE TABLE '.$tabservice.' LIKE '.$tabcat.'');
				usleep(250000);
				mysqli_query($con_sql2, 'INSERT INTO '.$tabservice.' (type, cat, gender, brand, size, price, alt, pic, date, time, messid, cond, chatid) SELECT type, cat, gender, brand, size, price, alt, pic, date, time, messid, cond, chatid FROM '.$tabcat.'');
				usleep(250000);
				/* mysqli_query($con_sql2, 'DROP TABLE '.$tabcat.'');
				usleep(250000); */
				
				$merge=$this->cmd_filter_buy_gender();
				$merge[] = [["text" => "‚û°Ô∏è–î–∞–ª–µ–µ", "callback_data" => "filter_buy_gender_next"], ["text" => "‚ñ∂Ô∏è–ü–æ–∫–∞–∑–∞—Ç—å", "callback_data" => "ready_buy_gender"]];
				//$merge[] = [["text" => "üîÄ–°–±—Ä–æ—Å–∏—Ç—å —Ñ–∏–ª—å—Ç—Ä—ã", "callback_data" => "resetfilters_buy_choose"]];
				$merge[] = [["text" => "‚§¥Ô∏è–í—ã–π—Ç–∏", "callback_data" => "buy_exit_choose_main"]];

				$text='–í—ã–±–∏—Ä–∏—Ç–µ –æ–¥–∏–Ω –∏–ª–∏ –Ω–µ—Å–∫–æ–ª—å–∫–æ <b>–ü–æ–ª–æ–≤</b>, –∑–∞—Ç–µ–º –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É <b>–î–∞–ª–µ–µ</b> –¥–ª—è –≤—ã–±–æ—Ä–∞ <b>–°–æ—Å—Ç–æ—è–Ω–∏—è</b>.'.$this->pre.'';
				$this->callbackAnswer( $text, $merge);
			}
			else
			{
				$merge=$this->cmd_filter_buy_gender();
				$merge[] = [["text" => "‚û°Ô∏è–î–∞–ª–µ–µ", "callback_data" => "filter_buy_gender_next"], ["text" => "‚ñ∂Ô∏è–ü–æ–∫–∞–∑–∞—Ç—å", "callback_data" => "ready_buy_gender"]];
				//$merge[] = [["text" => "üîÄ–°–±—Ä–æ—Å–∏—Ç—å —Ñ–∏–ª—å—Ç—Ä—ã", "callback_data" => "resetfilters_buy_choose"]];
				$merge[] = [["text" => "‚§¥Ô∏è–í—ã–π—Ç–∏", "callback_data" => "buy_exit_choose_main"]];

				$text='–í—ã–±–∏—Ä–∏—Ç–µ –æ–¥–∏–Ω –∏–ª–∏ –Ω–µ—Å–∫–æ–ª—å–∫–æ <b>–ü–æ–ª–æ–≤</b>, –∑–∞—Ç–µ–º –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É <b>–î–∞–ª–µ–µ</b> –¥–ª—è –≤—ã–±–æ—Ä–∞ <b>–°–æ—Å—Ç–æ—è–Ω–∏—è</b>.'.$this->pre.'';
				$this->callbackAnswer( $text, $merge);
			}
			
		}
		
	}	



/////
	public function cmd_filter_buy_gender()
	{
		
		$con_sql2=$this->cmd_sql();
	
		$tabgender='tabgender'.$this->api->chatId.'';
		$tabservice='tabservice'.$this->api->chatId.'';
		$tabmain='tabmain'.$this->api->chatId.'';
		
		
		if(mysqli_query($con_sql2, 'SELECT 1 FROM '.$tabservice.' LIMIT 1'))
		{

			$query2=mysqli_query($con_sql2, 'SELECT DISTINCT gender FROM '.$tabservice.' WHERE messid!="0"');
			$con2=mysqli_num_rows($query2);
			
			$puttemp=[];
			
			for($i1=0;$i1<$con2;$i1++)
			{
				mysqli_data_seek($query2, $i1);
				$row2[$i1]=mysqli_fetch_row($query2);
			
				if(in_array($row2[$i1][0], $puttemp)==FALSE)								
				{
					$puttemp[]=$row2[$i1][0];
				}
			}
			
			if(mysqli_query($con_sql2, 'SELECT 1 FROM '.$tabgender.' LIMIT 1'))
			{
				$query2=mysqli_query($con_sql2, 'SELECT DISTINCT gender FROM '.$tabgender.' WHERE messid!="0"');
				$con2=mysqli_num_rows($query2);
				
				for($i1=0;$i1<$con2;$i1++)
				{
					mysqli_data_seek($query2, $i1);
					$row2[$i1]=mysqli_fetch_row($query2);
				
					if(in_array($row2[$i1][0], $puttemp))
					{	
						$search=array_search($row2[$i1][0], $puttemp);
						unset($puttemp[$search]);
					}
				}
			}
			
		}
		else
		{
		
			$query1=mysqli_query($con_sql2, 'SHOW TABLES LIKE "tabmain%"');
			$con1=mysqli_num_rows($query1);
			
			$table=[];
			
			for($i=0;$i<$con1;$i++)
			{
				mysqli_data_seek($query1, $i);
				$row1[$i]=mysqli_fetch_row($query1);
				$table[]=$row1[$i][0];	
			}
			
			$puttemp=[];
		
			for($i=0;$i<$con1;$i++)
			{
				
				$tab=$table[$i];
	
				$query2=mysqli_query($con_sql2, 'SELECT DISTINCT gender FROM '.$tab.' WHERE messid!="0"');
				usleep(100000);
				$con2=mysqli_num_rows($query2);
				
				if($con2!=0)
				{
					for($i1=0;$i1<$con2;$i1++)
					{
						mysqli_data_seek($query2, $i1);
						$row2[$i1]=mysqli_fetch_row($query2);
						
						if(in_array($row2[$i1][0], $puttemp)==FALSE)								
						{
							$puttemp[]=$row2[$i1][0];
						}
					}
				}
				
			}
			
			
			if(mysqli_query($con_sql2, 'SELECT 1 FROM '.$tabgender.' LIMIT 1'))
			{
				$query2=mysqli_query($con_sql2, 'SELECT DISTINCT gender FROM '.$tabgender.' WHERE messid!="0"');
				$con2=mysqli_num_rows($query2);
				
				for($i1=0;$i1<$con2;$i1++)
				{
					mysqli_data_seek($query2, $i1);
					$row2[$i1]=mysqli_fetch_row($query2);
				
					if(in_array($row2[$i1][0], $puttemp))
					{	
						$search=array_search($row2[$i1][0], $puttemp);
						unset($puttemp[$search]);
					}
				}
			}
			
		}
		
		
		$put=[];
		
		foreach($puttemp as $value)
		{
			$put[]=$value;
		}
		
		
		$cnt=count($put);

		$maxbuttons=1;
		$ceil=ceil($cnt/$maxbuttons);
 
		$include=''.dirname(__FILE__).'/include'.$this->api->chatId.'.php';
		
		if(file_exists($include)==FALSE)
		{
			touch($include);
				
			$insert='<?php
		
		
			class TelegramBotfunc{';
			file_put_contents($include, $insert . PHP_EOL,FILE_APPEND);
				
		}
		else
		{
			$getinclude=file($include);
			unset($getinclude[array_key_last($getinclude)]);
			file_put_contents($include, $getinclude);
		}
		
		$u=0;
		$merge=[];
	
		
		for($i1=0;$i1<$ceil;$i1++)
		{
			$put1=[];
			
			for($i2=0;$i2<$maxbuttons;$i2++)
			{	
		
				if(isset($put[$u]))
				{
					
					$buttext=$this->convert_rus($put[$u]);
					
					$put1[]=["text" => "$buttext", "callback_data" => 'buy_select_gender_'.$this->api->chatId.'_'.$put[$u].''];
					
					if(preg_match('/callback_buy_select_gender_'.$this->api->chatId.'_'.$put[$u].'/', file_get_contents($include))==FALSE)
					{
						$insert='
						public function callback_buy_select_gender_'.$this->api->chatId.'_'.$put[$u].'()
						{	
					
							$bot = new TestBot;
							$bot->api->getWebhookUpdate();
							
							$con_sql2=$bot->cmd_sql();

							if(mysqli_query($con_sql2, &#039;SELECT 1 FROM '.$tabservice.' LIMIT 1&#039;))
							{	
						
								if(mysqli_query($con_sql2, &#039;SELECT 1 FROM '.$tabgender.' LIMIT 1&#039;)==FALSE)
								{
									mysqli_query($con_sql2, &#039;CREATE TABLE '.$tabgender.' LIKE '.$tabmain.'&#039;);
									usleep(250000);
								}
								
								mysqli_query($con_sql2, &#039;INSERT INTO '.$tabgender.' (type, cat, gender, brand, size, price, alt, pic, date, time, messid, cond, chatid) SELECT type, cat, gender, brand, size, price, alt, pic, date, time, messid, cond, chatid FROM '.$tabservice.' WHERE gender="'.$put[$u].'"&#039;);
								usleep(250000);
								
								$merge=$bot->cmd_filter_buy_gender();
								usleep(100000);
								
								$merge[] = [["text" => "‚û°Ô∏è–î–∞–ª–µ–µ", "callback_data" => "filter_buy_gender_next"], ["text" => "‚ñ∂Ô∏è–ü–æ–∫–∞–∑–∞—Ç—å", "callback_data" => "ready_buy_gender"]];
								//$merge[] = [["text" => "üîÄ–°–±—Ä–æ—Å–∏—Ç—å —Ñ–∏–ª—å—Ç—Ä—ã", "callback_data" => "resetfilters_buy_choose"]];
								$merge[] = [["text" => "‚§¥Ô∏è–í—ã–π—Ç–∏", "callback_data" => "buy_exit_choose_main"]];
								
								if(isset($bot->api->body[&#039;callback_query&#039;]["id"]))
								{
									$callback_query_id=$bot->api->body[&#039;callback_query&#039;]["id"];
									$bot->api->answerCallbackQuery($callback_query_id);
								}
								
								$text = &#039;–í—ã –≤—ã–±—Ä–∞–ª–∏ –ø–æ–ª <b>'.$buttext.'</b>.'.PHP_EOL.'–ú–æ–∂–µ—Ç–µ –≤—ã–±—Ä–∞—Ç—å –µ—â–µ –æ–¥–∏–Ω –∏–ª–∏ –Ω–∞–∂–∞—Ç—å –∫–Ω–æ–ø–∫—É <b>–î–∞–ª–µ–µ</b> –¥–ª—è –≤—ã–±–æ—Ä–∞ <b>–°–æ—Å—Ç–æ—è–Ω–∏—è</b>.&#039;.$bot->pre.&#039;&#039;;
								
								$bot->api->editMessageText([
								&#039;chat_id&#039; => $bot->api->body[&#039;callback_query&#039;][&#039;message&#039;][&#039;chat&#039;]["id"],
								&#039;message_id&#039; => $bot->api->body[&#039;callback_query&#039;][&#039;message&#039;][&#039;message_id&#039;],
								&#039;text&#039; => $text,
								&#039;parse_mode&#039; => "HTML",
								&#039;reply_markup&#039; => json_encode( [&#039;inline_keyboard&#039;=>$merge] ),
								]);
								usleep(100000);
								
							}
							else
							{
								
								if(mysqli_query($con_sql2, &#039;SELECT 1 FROM '.$tabgender.' LIMIT 1&#039;)==FALSE)
								{
									mysqli_query($con_sql2, &#039;CREATE TABLE '.$tabgender.' LIKE '.$tabmain.'&#039;);
									usleep(250000);
									
									$query2=mysqli_query($con_sql2, &#039;SHOW TABLES LIKE "tabmain%"&#039;);
									$con2=mysqli_num_rows($query2);
									$table=[];
								
									for($i=0;$i<$con2;$i++)
									{
										mysqli_data_seek($query2, $i);
										$row2[$i]=mysqli_fetch_row($query2);
										$table[]=$row2[$i][0];	
											
										mysqli_query($con_sql2, &#039;INSERT INTO '.$tabgender.' (type, cat, gender, brand, size, price, alt, pic, date, time, messid, cond, chatid) SELECT type, cat, gender, brand, size, price, alt, pic, date, time, messid, cond, chatid FROM &#039;.$table[$i].&#039; WHERE gender="'.$put[$u].'"&#039;);
										usleep(250000);
									}
								}
								else
								{
									$query1=mysqli_query($con_sql2, &#039;SELECT DISTINCT gender FROM '.$tabgender.' WHERE messid!="0"&#039;);
									$con1=mysqli_num_rows($query1);
									
									for($i1=0;$i1<$con1;$i1++)
									{
										mysqli_data_seek($query1, $i1);
										$row1[$i1]=mysqli_fetch_row($query1);
									}
									
									if(in_array(&#039;'.$put[$u].'&#039;, $row1)==FALSE)
									{
									
										$query2=mysqli_query($con_sql2, &#039;SHOW TABLES LIKE "tabmain%"&#039;);
										$con2=mysqli_num_rows($query2);
										$table=[];
									
										for($i=0;$i<$con2;$i++)
										{
											mysqli_data_seek($query2, $i);
											$row2[$i]=mysqli_fetch_row($query2);
											$table[]=$row2[$i][0];	
												
											mysqli_query($con_sql2, &#039;INSERT INTO '.$tabgender.' (type, cat, gender, brand, size, price, alt, pic, date, time, messid, cond, chatid) SELECT type, cat, gender, brand, size, price, alt, pic, date, time, messid, cond, chatid FROM &#039;.$table[$i].&#039; WHERE gender="'.$put[$u].'"&#039;);
											usleep(250000);
										}
										
									}
								}

								$merge=$bot->cmd_filter_buy_gender();
								usleep(100000);
								
								$merge[] = [["text" => "‚û°Ô∏è–î–∞–ª–µ–µ", "callback_data" => "filter_buy_gender_next"], ["text" => "‚ñ∂Ô∏è–ü–æ–∫–∞–∑–∞—Ç—å", "callback_data" => "ready_buy_gender"]];
								//$merge[] = [["text" => "üîÄ–°–±—Ä–æ—Å–∏—Ç—å —Ñ–∏–ª—å—Ç—Ä—ã", "callback_data" => "resetfilters_buy_choose"]];
								$merge[] = [["text" => "‚§¥Ô∏è–í—ã–π—Ç–∏", "callback_data" => "buy_exit_choose_main"]];
								
								if(isset($bot->api->body[&#039;callback_query&#039;]["id"]))
								{
									$callback_query_id=$bot->api->body[&#039;callback_query&#039;]["id"];
									$bot->api->answerCallbackQuery($callback_query_id);
								}
								$text = &#039;–í—ã –≤—ã–±—Ä–∞–ª–∏ –ø–æ–ª <b>'.$buttext.'</b>.'.PHP_EOL.'–ú–æ–∂–µ—Ç–µ –≤—ã–±—Ä–∞—Ç—å –µ—â–µ –æ–¥–∏–Ω –∏–ª–∏ –Ω–∞–∂–∞—Ç—å –∫–Ω–æ–ø–∫—É <b>–î–∞–ª–µ–µ</b> –¥–ª—è –≤—ã–±–æ—Ä–∞ <b>–°–æ—Å—Ç–æ—è–Ω–∏—è</b>.&#039;.$bot->pre.&#039;&#039;;
								
								$bot->api->editMessageText([
								&#039;chat_id&#039; => $bot->api->body[&#039;callback_query&#039;][&#039;message&#039;][&#039;chat&#039;]["id"],
								&#039;message_id&#039; => $bot->api->body[&#039;callback_query&#039;][&#039;message&#039;][&#039;message_id&#039;],
								&#039;text&#039; => $text,
								&#039;parse_mode&#039; => "HTML",
								&#039;reply_markup&#039; => json_encode( [&#039;inline_keyboard&#039;=>$merge] ),
								]);
								usleep(100000);
								
							}

						}';
						file_put_contents($include, html_entity_decode($insert, ENT_QUOTES) . PHP_EOL . PHP_EOL,FILE_APPEND);
					}
				
				}
				
				$u++;
			}	
			
			$merge[]=$put1;
			unset($put1);
			
		}
		

		$insert='}';
		file_put_contents($include, $insert,FILE_APPEND);
		
		
		return $merge;
	}



/////
	public function callback_ready_buy_gender()
	{
		$con_sql2=$this->cmd_sql();
		
		$tabgender='tabgender'.$this->api->chatId.'';
		$tabservice='tabservice'.$this->api->chatId.'';
		$tabmain='tabmain'.$this->api->chatId.'';
		
		if(isset($this->api->body['callback_query']["id"]))
		{
			$callback_query_id=$this->api->body['callback_query']["id"];
			$this->api->answerCallbackQuery($callback_query_id);
		}
					
		if(mysqli_query($con_sql2, 'SELECT 1 FROM '.$tabservice.' LIMIT 1'))
		{
			if(mysqli_query($con_sql2, 'SELECT 1 FROM '.$tabgender.' LIMIT 1'))
			{
				mysqli_query($con_sql2, 'DROP TABLE '.$tabservice.'');
				usleep(250000);
				mysqli_query($con_sql2, 'CREATE TABLE '.$tabservice.' LIKE '.$tabgender.'');
				usleep(250000);
				mysqli_query($con_sql2, 'INSERT INTO '.$tabservice.' (type, cat, gender, brand, size, price, alt, pic, date, time, messid, cond, chatid) SELECT type, cat, gender, brand, size, price, alt, pic, date, time, messid, cond, chatid FROM '.$tabgender.'');
				usleep(250000);
			}
		}
		else
		{
			if(mysqli_query($con_sql2, 'SELECT 1 FROM '.$tabgender.' LIMIT 1'))
			{
				mysqli_query($con_sql2, 'CREATE TABLE '.$tabservice.' LIKE '.$tabgender.'');
				usleep(250000);
				mysqli_query($con_sql2, 'INSERT INTO '.$tabservice.' (type, cat, gender, brand, size, price, alt, pic, date, time, messid, cond, chatid) SELECT type, cat, gender, brand, size, price, alt, pic, date, time, messid, cond, chatid FROM '.$tabgender.'');
				usleep(250000);
				/* mysqli_query($con_sql2, 'DROP TABLE '.$tabgender.'');
				usleep(250000); */

			}	
		}
		
		
		
		
		$tabservice='tabservice'.$this->api->chatId.'';
		
		if(mysqli_query($con_sql2, 'SELECT 1 FROM '.$tabservice.' LIMIT 1')==FALSE)
		{
			$query1=mysqli_query($con_sql2, 'SHOW TABLES LIKE "tabmain%"');
			$con1=mysqli_num_rows($query1);
			
			if($con1!=0)
			{	
			
				$table=[];
				$check=0;
				
				for($i1=0;$i1<$con1;$i1++)
				{
					mysqli_data_seek($query1, $i1);
					$row1[$i1]=mysqli_fetch_row($query1);
					$tab=$row1[$i1][0];
					
					$query=mysqli_query($con_sql2, 'SELECT * FROM '.$tab.' WHERE messid!="0" ORDER by messid ASC');
					usleep(100000);
					$con=mysqli_num_rows($query);
						
					if($con!=0)
					{	

						$check=1;
						
						for($i=0;$i<$con;$i++)
						{
							mysqli_data_seek($query, $i);
							$row[$i]=mysqli_fetch_row($query);
						}
						usleep(100000);
						
		
						for($i=0;$i<$con;$i++)
						{
						
						
							$type=$this->convert_rus($row[$i][1]);
							$cat=$this->convert_rus($row[$i][2]);
							$gender=$this->convert_rus($row[$i][3]);
							$cond=$this->convert_rus($row[$i][12]);
						
						
						
							/* $text='‚ùáÔ∏è‚ùáÔ∏è‚ùáÔ∏è‚ùáÔ∏è‚ùáÔ∏è‚ùáÔ∏è‚ùáÔ∏è‚ùáÔ∏è‚ùáÔ∏è‚ùáÔ∏è‚ùáÔ∏è‚ùáÔ∏è‚ùáÔ∏è‚ùáÔ∏è‚ùáÔ∏è‚ùáÔ∏è‚ùáÔ∏è‚ùáÔ∏è‚ùáÔ∏è‚ùáÔ∏è';
							
							$this->api->sendMessage([
							'text' => $text,
							'disable_notification' => TRUE,
							'disable_web_page_preview' => TRUE,
							'parse_mode'=> "HTML"
							]);
							usleep(100000); */
							
							
							$messageid=$row[$i][11];
							
							$caption='üìñ–ö–∞—Ç–µ–≥–æ—Ä–∏—è: &#160;&#160;<b>'.$type.'</b>'.PHP_EOL.'üßæ–í–∏–¥: &#160;&#160;<b>'.$cat.'</b>'.PHP_EOL.'üë®‚Äçüë©‚Äçüë¶–ü–æ–ª: &#160;&#160;<b>'.$gender.'</b>'.PHP_EOL.'üéè–°–æ—Å—Ç–æ—è–Ω–∏–µ: <b>'.$cond.'</b>'.PHP_EOL.'¬ÆÔ∏è–ë—Ä–µ–Ω–¥: &#160;&#160;<b>'.$row[$i][4].'</b>'.PHP_EOL.'‚ÜïÔ∏è–†–∞–∑–º–µ—Ä: &#160;&#160;<b>'.$row[$i][5].'</b>'.PHP_EOL.'üíµ–¶–µ–Ω–∞: &#160;&#160;<b>'.$row[$i][6].'</b>'.PHP_EOL.'üìã–û–ø–∏—Å–∞–Ω–∏–µ: &#160;&#160;'.$row[$i][7].''.PHP_EOL.''.PHP_EOL.''.PHP_EOL.'<b>ID —Ç–æ–≤–∞—Ä–∞: '.$messageid.'</b>'.PHP_EOL.''.PHP_EOL.'üìÅüìÅüìÅüìÅüìÅüìÅüìÅüìÅüìÅüìÅüìÅüìÅ';
							
							$photo=$row[$i][8];
							
							$include=''.dirname(__FILE__).'/include'.$this->api->chatId.'.php';
			
							if(file_exists($include)==FALSE)
							{
								touch($include);
								
								$insert='<?php
						
						
								class TelegramBotfunc{';
								file_put_contents($include, $insert . PHP_EOL,FILE_APPEND);
								
							}
							else
							{
								$getinclude=file($include);
								unset($getinclude[array_key_last($getinclude)]);
								file_put_contents($include, $getinclude);
							}
							
		
							$merge=[];
							$merge[]= [['text' => 'üõí–ö—É–ø–∏—Ç—å', 'callback_data' => 'buy_ready_gender_'.$this->api->chatId.'_'.$messageid.'']]  ;
							
							if(preg_match('/callback_buy_ready_gender_'.$this->api->chatId.'_'.$messageid.'/', file_get_contents($include))==FALSE)
							{
								$insert='
								public function callback_buy_ready_gender_'.$this->api->chatId.'_'.$messageid.'()
								{	
						
									$bot = new TestBot;
									$bot->api->getWebhookUpdate();

									$text=&#039;–í—ã –∑–∞–ø—Ä–æ—Å–∏–ª–∏ —Ç–æ–≤–∞—Ä —Å <b>ID ‚Ññ'.$messageid.'.</b> &#039;.PHP_EOL.&#039;&#039;.PHP_EOL.&#039;<b>–í—ã —Ç–æ—á–Ω–æ —Ö–æ—Ç–∏—Ç–µ –∫—É–ø–∏—Ç—å –µ–≥–æ?</b>&#039;.$bot->pre.&#039;&#039;;
									$merge=[];
									$merge[] = [[&#039;text&#039; => &#039;üü¢–î–∞&#039;, &#039;callback_data&#039; => &#039;byrecordid_default_buy_yes&#039;], [&#039;text&#039; => &#039;üî¥–ù–µ—Ç&#039;, &#039;callback_data&#039; => &#039;byrecordid_default_buy_no&#039;]];
									$merge[] = [[&#039;text&#039; => &#039;‚¨ÖÔ∏è–ù–∞–∑–∞–¥&#039;, &#039;callback_data&#039; => &#039;back_byrecordid_default_buy&#039;], [&#039;text&#039; => &#039;‚§¥Ô∏è–í—ã–π—Ç–∏&#039;, &#039;callback_data&#039; => &#039;exit_byrecordid_default_buy&#039;]];
									
									if(isset($bot->api->body[&#039;callback_query&#039;]["id"]))
									{
										$callback_query_id=$bot->api->body[&#039;callback_query&#039;]["id"];
										$bot->api->answerCallbackQuery($callback_query_id);
									}
							
									$bot->api->sendMessage([
									&#039;text&#039; => $text,
									&#039;reply_markup&#039; => json_encode( [&#039;inline_keyboard&#039;=>$merge]),
									&#039;disable_notification&#039; => TRUE,
									&#039;disable_web_page_preview&#039; => TRUE,
									&#039;parse_mode&#039;=> "HTML"
									]);
									usleep(100000);
									
								}';
								file_put_contents($include, html_entity_decode($insert, ENT_QUOTES) . PHP_EOL . PHP_EOL,FILE_APPEND);
								
							}
							
							$insert='}';
							file_put_contents($include, $insert,FILE_APPEND);
							
							
							if(preg_match('/;/', $photo)==FALSE)
							{
								$this->api->sendPhoto([
								'photo' => $photo,
								'caption' => $caption,
								//'reply_markup' => json_encode( ['inline_keyboard'=>$this->keyboards['inline_ask_admin']]),
								//'reply_markup' => json_encode( ['inline_keyboard'=>$merge]),
								'disable_notification' => TRUE,
								'parse_mode' => "HTML"
								]);
								usleep(250000);
								
								$text='–ö—É–ø–∏—Ç—å <b>ID ‚Ññ'.$messageid.'</b>';
								$this->api->sendMessage([
								'text' => $text,
								'reply_markup' => json_encode( ['inline_keyboard'=>$merge]),
								'disable_notification' => TRUE,
								'disable_web_page_preview' => TRUE,
								'parse_mode'=> "HTML"
								]);
								usleep(100000);
								
							
							}
							else
							{
								$media=[];
								$temp=explode(';', $photo);
								$cnt=count($temp);
								for($o=0;$o<$cnt;$o++)
								{
								
								
									if($o==0)
									{
										//$put=['type' => 'photo', 'media' =>  ''.$temp[$o].'', 'caption' => ''.$caption.'', 'parse_mode' => "HTML", 'reply_markup' => ['inline_keyboard'=>$merge]];
										//$put=['type' => 'photo', 'media' =>  ''.$temp[$o].'', 'caption' => ''.$caption.'', 'parse_mode' => "HTML", 'reply_markup' => 'inline_keyboard'=>$this->keyboards['inline_ask_admin']];
										$put=['type' => 'photo', 'media' =>  ''.$temp[$o].'', 'caption' => ''.$caption.'', 'parse_mode' => "HTML"];
									}
									else
									{
										$put=['type' => 'photo', 'media' =>  ''.$temp[$o].''];
									}
							
									$media[$o]=$put;
								}
								
								
								$this->api->sendMediaGroup([
								'media' => json_encode($media),
								//'reply_markup' => json_encode( ['inline_keyboard'=>$merge])
								]);
								usleep(350000);
								
								$text='–ö—É–ø–∏—Ç—å <b>ID ‚Ññ'.$messageid.'</b>';
								$this->api->sendMessage([
								'text' => $text,
								'reply_markup' => json_encode( ['inline_keyboard'=>$merge]),
								'disable_notification' => TRUE,
								'disable_web_page_preview' => TRUE,
								'parse_mode'=> "HTML"
								]);
								usleep(100000);
							}
						}
			
					}
				}
				
				if($check==1)
				{
					/* $tab='tabtype'.$this->api->chatId.'';
		
					//if(mysqli_query($con_sql2, 'SELECT 1 FROM '.$tab.' LIMIT 1'))
					//{
						mysqli_query($con_sql2, 'DROP TABLE '.$tab.'');
						usleep(100000);
					//}
					
					$tab='tabcat'.$this->api->chatId.'';
					
					//if(mysqli_query($con_sql2, 'SELECT 1 FROM '.$tab.' LIMIT 1'))
					//{
						mysqli_query($con_sql2, 'DROP TABLE '.$tab.'');
						usleep(100000);
					//}
					
					$tab='tabgender'.$this->api->chatId.'';
					
					//if(mysqli_query($con_sql2, 'SELECT 1 FROM '.$tab.' LIMIT 1'))
					//{
						mysqli_query($con_sql2, 'DROP TABLE '.$tab.'');
						usleep(100000);
					//}
				
					$tab='tabcond'.$this->api->chatId.'';
					
					//if(mysqli_query($con_sql2, 'SELECT 1 FROM '.$tab.' LIMIT 1'))
					//{
						mysqli_query($con_sql2, 'DROP TABLE '.$tab.'');
						usleep(100000);
					//}
				
					$tab='tabprice'.$this->api->chatId.'';
					
					//if(mysqli_query($con_sql2, 'SELECT 1 FROM '.$tab.' LIMIT 1'))
					//{
						mysqli_query($con_sql2, 'DROP TABLE '.$tab.'');
						usleep(100000);
					//}
					
					
					$tab='tabservice'.$this->api->chatId.'';
					
					//if(mysqli_query($con_sql2, 'SELECT 1 FROM '.$tab.' LIMIT 1'))
					//{
						mysqli_query($con_sql2, 'DROP TABLE '.$tab.'');
						usleep(100000);
					//} */
					if(isset($this->api->body['callback_query']["id"]))
						{
							$callback_query_id=$this->api->body['callback_query']["id"];
							$this->api->answerCallbackQuery($callback_query_id);
						}
					

					$text='–°–≤–µ—Ä—Ö—É <b>–ø–æ–∫–∞–∑–∞–Ω—ã –≤—Å–µ —Ç–æ–≤–∞—Ä—ã</b>, —Å–æ–≥–ª–∞—Å–Ω–æ –í–∞—à–µ–≥–æ –∑–∞–ø—Ä–æ—Å–∞.'.PHP_EOL.''.PHP_EOL.'–í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ –º–µ–Ω—é <b>–ö—É–ø–∏—Ç—å</b>.'.$this->pre.'';
					
					$this->api->sendMessage([
					'text' => $text,
					'reply_markup' => json_encode( ['inline_keyboard'=>$this->keyboards['inline_buy_default']]),
					'disable_notification' => TRUE,
					'disable_web_page_preview' => TRUE,
					'parse_mode'=> "HTML"
					]);
					usleep(100000);	
				}
				else
				{
					$text='–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é –≤ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç <b>–Ω–µ—Ç —Ç–æ–≤–∞—Ä–æ–≤ –≤ –ø—Ä–æ–¥–∞–∂–µ</b>. –í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ –º–µ–Ω—é <b>–ö—É–ø–∏—Ç—å</b>.'.$this->pre.'';
					$this->callbackAnswer( $text, $this->keyboards['inline_buy_default']);	
				}
				
				
			}
			else
			{
				$text='–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é –≤ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç <b>–Ω–µ—Ç —Ç–æ–≤–∞—Ä–æ–≤ –≤ –ø—Ä–æ–¥–∞–∂–µ</b>. –í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ –º–µ–Ω—é <b>–ö—É–ø–∏—Ç—å</b>.'.$this->pre.'';
				$this->callbackAnswer( $text, $this->keyboards['inline_buy_default']);	
			}
			
		}
		else
		{
			$query1=mysqli_query($con_sql2, 'SELECT * FROM '.$tabservice.' WHERE messid!="0" ORDER by messid ASC');
			usleep(100000);
			$con1=mysqli_num_rows($query1);
				
			if($con1!=0)
			{					
				for($i1=0;$i1<$con1;$i1++)
				{
					mysqli_data_seek($query1, $i1);
					$row1[$i1]=mysqli_fetch_row($query1);
				}
				usleep(100000);
				
			
				for($i1=0;$i1<$con1;$i1++)
				{
				
				
					$type=$this->convert_rus($row1[$i1][1]);
					$cat=$this->convert_rus($row1[$i1][2]);
					$gender=$this->convert_rus($row1[$i1][3]);
					$cond=$this->convert_rus($row1[$i1][12]);
				
				
					/* $text='‚ùáÔ∏è‚ùáÔ∏è‚ùáÔ∏è‚ùáÔ∏è‚ùáÔ∏è‚ùáÔ∏è‚ùáÔ∏è‚ùáÔ∏è‚ùáÔ∏è‚ùáÔ∏è‚ùáÔ∏è‚ùáÔ∏è‚ùáÔ∏è‚ùáÔ∏è‚ùáÔ∏è‚ùáÔ∏è‚ùáÔ∏è‚ùáÔ∏è‚ùáÔ∏è‚ùáÔ∏è';
					
					$this->api->sendMessage([
					'text' => $text,
					'disable_notification' => TRUE,
					'disable_web_page_preview' => TRUE,
					'parse_mode'=> "HTML"
					]);
					usleep(100000); */
					
					
					$messageid=$row1[$i1][11];
					
					$caption='üìñ–ö–∞—Ç–µ–≥–æ—Ä–∏—è: &#160;&#160;<b>'.$type.'</b>'.PHP_EOL.'üßæ–í–∏–¥: &#160;&#160;<b>'.$cat.'</b>'.PHP_EOL.'üë®‚Äçüë©‚Äçüë¶–ü–æ–ª: &#160;&#160;<b>'.$gender.'</b>'.PHP_EOL.'üéè–°–æ—Å—Ç–æ—è–Ω–∏–µ: <b>'.$cond.'</b>'.PHP_EOL.'¬ÆÔ∏è–ë—Ä–µ–Ω–¥: &#160;&#160;<b>'.$row1[$i1][4].'</b>'.PHP_EOL.'‚ÜïÔ∏è–†–∞–∑–º–µ—Ä: &#160;&#160;<b>'.$row1[$i1][5].'</b>'.PHP_EOL.'üíµ–¶–µ–Ω–∞: &#160;&#160;<b>'.$row1[$i1][6].'</b>'.PHP_EOL.'üìã–û–ø–∏—Å–∞–Ω–∏–µ: &#160;&#160;'.$row1[$i1][7].''.PHP_EOL.''.PHP_EOL.''.PHP_EOL.'<b>ID —Ç–æ–≤–∞—Ä–∞: '.$messageid.'</b>'.PHP_EOL.''.PHP_EOL.'üìÅüìÅüìÅüìÅüìÅüìÅüìÅüìÅüìÅüìÅüìÅüìÅ';
					
					$photo=$row1[$i1][8];
					
					$include=''.dirname(__FILE__).'/include'.$this->api->chatId.'.php';
			
					if(file_exists($include)==FALSE)
					{
						touch($include);
						
						$insert='<?php
					
					
						class TelegramBotfunc{';
						file_put_contents($include, $insert . PHP_EOL,FILE_APPEND);
						
					}
					else
					{
						$getinclude=file($include);
						unset($getinclude[array_key_last($getinclude)]);
						file_put_contents($include, $getinclude);
					}
					
					
					$merge=[];
					$merge[]= [['text' => 'üõí–ö—É–ø–∏—Ç—å', 'callback_data' => 'buy_ready_gender_'.$this->api->chatId.'_'.$messageid.'']]  ;
					
					if(preg_match('/callback_buy_ready_gender_'.$this->api->chatId.'_'.$messageid.'/', file_get_contents($include))==FALSE)
					{
						$insert='
						public function callback_buy_ready_gender_'.$this->api->chatId.'_'.$messageid.'()
						{	
					
							$bot = new TestBot;
							$bot->api->getWebhookUpdate();
					
							$text=&#039;–í—ã –∑–∞–ø—Ä–æ—Å–∏–ª–∏ —Ç–æ–≤–∞—Ä —Å <b>ID ‚Ññ'.$messageid.'.</b> &#039;.PHP_EOL.&#039;&#039;.PHP_EOL.&#039;<b>–í—ã —Ç–æ—á–Ω–æ —Ö–æ—Ç–∏—Ç–µ –∫—É–ø–∏—Ç—å –µ–≥–æ?</b>&#039;.$bot->pre.&#039;&#039;;
							$merge=[];
							$merge[] = [[&#039;text&#039; => &#039;üü¢–î–∞&#039;, &#039;callback_data&#039; => &#039;byrecordid_default_buy_yes&#039;], [&#039;text&#039; => &#039;üî¥–ù–µ—Ç&#039;, &#039;callback_data&#039; => &#039;byrecordid_default_buy_no&#039;]];
							$merge[] = [[&#039;text&#039; => &#039;‚¨ÖÔ∏è–ù–∞–∑–∞–¥&#039;, &#039;callback_data&#039; => &#039;back_byrecordid_default_buy&#039;], [&#039;text&#039; => &#039;‚§¥Ô∏è–í—ã–π—Ç–∏&#039;, &#039;callback_data&#039; => &#039;exit_byrecordid_default_buy&#039;]];
							
							if(isset($bot->api->body[&#039;callback_query&#039;]["id"]))
							{
								$callback_query_id=$bot->api->body[&#039;callback_query&#039;]["id"];
								$bot->api->answerCallbackQuery($callback_query_id);
							}
							
							$bot->api->sendMessage([
							&#039;text&#039; => $text,
							&#039;reply_markup&#039; => json_encode( [&#039;inline_keyboard&#039;=>$merge]),
							&#039;disable_notification&#039; => TRUE,
							&#039;disable_web_page_preview&#039; => TRUE,
							&#039;parse_mode&#039;=> "HTML"
							]);
							usleep(100000);
							
						}';
						file_put_contents($include, html_entity_decode($insert, ENT_QUOTES) . PHP_EOL . PHP_EOL,FILE_APPEND);
						
					}
					
					$insert='}';
					file_put_contents($include, $insert,FILE_APPEND);
					
					if(preg_match('/;/', $photo)==FALSE)
					{
						$this->api->sendPhoto([
						'photo' => $photo,
						'caption' => $caption,
						'disable_notification' => TRUE,
						'parse_mode' => "HTML"
						]);
						usleep(250000);
					
						
						$text='–ö—É–ø–∏—Ç—å <b>ID ‚Ññ'.$messageid.'</b>';
						$this->api->sendMessage([
						'text' => $text,
						'reply_markup' => json_encode( ['inline_keyboard'=>$merge]),
						'disable_notification' => TRUE,
						'disable_web_page_preview' => TRUE,
						'parse_mode'=> "HTML"
						]);
						usleep(100000);
					
					}
					else
					{
						$media=[];
						$temp=explode(';', $photo);
						$cnt=count($temp);
						for($o=0;$o<$cnt;$o++)
						{
						
						
							if($o==0)
							{
								$put=['type' => 'photo', 'media' =>  ''.$temp[$o].'', 'caption' => ''.$caption.'', 'parse_mode' => "HTML" ];
							}
							else
							{
								$put=['type' => 'photo', 'media' =>  ''.$temp[$o].'' ];
							}
					
							$media[$o]=$put;
						}
						
						
						$this->api->sendMediaGroup([
						'media' => json_encode($media),
						]);
						usleep(350000);
						
			
						$text='–ö—É–ø–∏—Ç—å <b>ID ‚Ññ'.$messageid.'</b>';
						$this->api->sendMessage([
						'text' => $text,
						'reply_markup' => json_encode( ['inline_keyboard'=>$merge]),
						'disable_notification' => TRUE,
						'disable_web_page_preview' => TRUE,
						'parse_mode'=> "HTML"
						]);
						usleep(100000);
					}
				}
				
				/* $tab='tabtype'.$this->api->chatId.'';
		
				//if(mysqli_query($con_sql2, 'SELECT 1 FROM '.$tab.' LIMIT 1'))
				//{
					mysqli_query($con_sql2, 'DROP TABLE '.$tab.'');
					usleep(100000);	
				//}
				
				$tab='tabcat'.$this->api->chatId.'';
				
				//if(mysqli_query($con_sql2, 'SELECT 1 FROM '.$tab.' LIMIT 1'))
				//{
					mysqli_query($con_sql2, 'DROP TABLE '.$tab.'');
					usleep(100000);
				//}
				
				$tab='tabgender'.$this->api->chatId.'';
				
				//if(mysqli_query($con_sql2, 'SELECT 1 FROM '.$tab.' LIMIT 1'))
				//{
					mysqli_query($con_sql2, 'DROP TABLE '.$tab.'');
					usleep(100000);
				//}
				
				$tab='tabcond'.$this->api->chatId.'';
				
				//if(mysqli_query($con_sql2, 'SELECT 1 FROM '.$tab.' LIMIT 1'))
				//{
					mysqli_query($con_sql2, 'DROP TABLE '.$tab.'');
					usleep(100000);
				//}
				
				$tab='tabprice'.$this->api->chatId.'';
				
				//if(mysqli_query($con_sql2, 'SELECT 1 FROM '.$tab.' LIMIT 1'))
				//{
					mysqli_query($con_sql2, 'DROP TABLE '.$tab.'');
					usleep(100000);
				//}
				
				
				$tab='tabservice'.$this->api->chatId.'';
				
				//if(mysqli_query($con_sql2, 'SELECT 1 FROM '.$tab.' LIMIT 1'))
				//{
					mysqli_query($con_sql2, 'DROP TABLE '.$tab.'');
					usleep(100000);
				//} */
					
				if(isset($this->api->body['callback_query']["id"]))
				{
					$callback_query_id=$this->api->body['callback_query']["id"];
					$this->api->answerCallbackQuery($callback_query_id);
				}
											
				$text='<b>–°–≤–µ—Ä—Ö—É –ø–æ–∫–∞–∑–∞–Ω—ã –≤—Å–µ —Ç–æ–≤–∞—Ä—ã, —Å–æ–≥–ª–∞—Å–Ω–æ –í–∞—à–µ–≥–æ –∑–∞–ø—Ä–æ—Å–∞.</b>'.PHP_EOL.''.PHP_EOL.'–í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ –º–µ–Ω—é <b>–ö—É–ø–∏—Ç—å.</b>'.$this->pre.'';
				
				$this->api->sendMessage([
				'text' => $text,
				'reply_markup' => json_encode( ['inline_keyboard'=>$this->keyboards['inline_buy_default']]),
				'disable_notification' => TRUE,
				'disable_web_page_preview' => TRUE,
				'parse_mode'=> "HTML"
				]);
				usleep(100000);
				
				
			
			}
			else
			{
				$text='–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é –≤ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç <b>–Ω–µ—Ç —Ç–æ–≤–∞—Ä–æ–≤ –≤ –ø—Ä–æ–¥–∞–∂–µ</b>. –í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ –º–µ–Ω—é <b>–ö—É–ø–∏—Ç—å</b>.'.$this->pre.'';
				$this->callbackAnswer( $text, $this->keyboards['inline_buy_default']);
			}
			
		}
		
	}


/////
	public function callback_filter_buy_gender_next()
	{		
		$con_sql2=$this->cmd_sql();
		
		$tabgender='tabgender'.$this->api->chatId.'';
		$tabservice='tabservice'.$this->api->chatId.'';
		$tabmain='tabmain'.$this->api->chatId.'';
		
		if(mysqli_query($con_sql2, 'SELECT 1 FROM '.$tabservice.' LIMIT 1'))
		{
			if(mysqli_query($con_sql2, 'SELECT 1 FROM '.$tabgender.' LIMIT 1'))
			{
				$query2=mysqli_query($con_sql2, 'SELECT DISTINCT gender FROM '.$tabgender.' WHERE messid!="0"');
				$con2=mysqli_num_rows($query2);
				$addtext="";
				for($i1=0;$i1<$con2;$i1++)
				{
					
					mysqli_data_seek($query2, $i1);
					$row2[$i1]=mysqli_fetch_row($query2);
					
					$row2[$i1][0]=$this->convert_rus($row2[$i1][0]);
					
					
					if($i1==0)
					{
						$addtext=$row2[$i1][0];
					}
					else
					{
						$addtext = $addtext . ', '.$row2[$i1][0].'';
					}
				}
				
				if(explode(',', $addtext))
				{
					$text='–í—ã –≤—ã–±—Ä–∞–ª–∏ –ü–æ–ª <b>'.$addtext.'</b>.'.PHP_EOL.'–í—ã–±–∏—Ä–∏—Ç–µ –¥—Ä—É–≥–æ–π –ø–∞—Ä–∞–º–µ—Ç—Ä –∏–ª–∏ –Ω–∞–∂–º–∏—Ç–µ <b>–°–±—Ä–æ—Å–∏—Ç—å —Ñ–∏–ª—å—Ç—Ä—ã</b> –¥–ª—è –≤—ã–±–æ—Ä–∞ –Ω–æ–≤–æ–≥–æ –ø–æ–ª–∞ —Ç–æ–≤–∞—Ä–∞.'.$this->pre.'';
					
				}
				else
				{
					$text='–í—ã –≤—ã–±—Ä–∞–ª–∏ –ü–æ–ª <b>'.$addtext.'</b>.'.PHP_EOL.'–í—ã–±–∏—Ä–∏—Ç–µ –¥—Ä—É–≥–æ–π –ø–∞—Ä–∞–º–µ—Ç—Ä –∏–ª–∏ –Ω–∞–∂–º–∏—Ç–µ <b>–°–±—Ä–æ—Å–∏—Ç—å —Ñ–∏–ª—å—Ç—Ä—ã</b> –¥–ª—è –≤—ã–±–æ—Ä–∞ –Ω–æ–≤–æ–≥–æ –ø–æ–ª–∞ —Ç–æ–≤–∞—Ä–∞.'.$this->pre.'';
					
				}
				
				
				mysqli_query($con_sql2, 'DROP TABLE '.$tabservice.'');
				usleep(250000);
				mysqli_query($con_sql2, 'CREATE TABLE '.$tabservice.' LIKE '.$tabgender.'');
				usleep(250000);
				mysqli_query($con_sql2, 'INSERT INTO '.$tabservice.' (type, cat, gender, brand, size, price, alt, pic, date, time, messid, cond, chatid) SELECT type, cat, gender, brand, size, price, alt, pic, date, time, messid, cond, chatid FROM '.$tabgender.'');
				usleep(250000);
				
				
				$merge=$this->cmd_filter_buy_cond();
				$merge[] = [["text" => "‚ñ∂Ô∏è–ü–æ–∫–∞–∑–∞—Ç—å", "callback_data" => "ready_buy_cond"]];
				//$merge[] = [["text" => "‚û°Ô∏è–î–∞–ª–µ–µ", "callback_data" => "filter_buy_cond_next"], ["text" => "‚ñ∂Ô∏è–ü–æ–∫–∞–∑–∞—Ç—å", "callback_data" => "ready_buy_cond"]];
				//$merge[] = [["text" => "üîÄ–°–±—Ä–æ—Å–∏—Ç—å —Ñ–∏–ª—å—Ç—Ä—ã", "callback_data" => "resetfilters_buy_choose"]];
				$merge[] = [["text" => "‚§¥Ô∏è–í—ã–π—Ç–∏", "callback_data" => "buy_exit_choose_main"]];
				
				$text='–í—ã–±–∏—Ä–∏—Ç–µ –æ–¥–Ω–æ –∏–ª–∏ –Ω–µ—Å–∫–æ–ª—å–∫–æ <b>–°–æ—Å—Ç–æ—è–Ω–∏–π</b>, –∑–∞—Ç–µ–º –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É <b>–ü–æ–∫–∞–∑–∞—Ç—å</b> –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤.'.$this->pre.'';
				$this->callbackAnswer( $text, $merge);
				

			}
			else
			{
				$merge=$this->cmd_filter_buy_cond();
				$merge[] = [["text" => "‚ñ∂Ô∏è–ü–æ–∫–∞–∑–∞—Ç—å", "callback_data" => "ready_buy_cond"]];
				//$merge[] = [["text" => "‚û°Ô∏è–î–∞–ª–µ–µ", "callback_data" => "filter_buy_cond_next"], ["text" => "‚ñ∂Ô∏è–ü–æ–∫–∞–∑–∞—Ç—å", "callback_data" => "ready_buy_cond"]];
				//$merge[] = [["text" => "üîÄ–°–±—Ä–æ—Å–∏—Ç—å —Ñ–∏–ª—å—Ç—Ä—ã", "callback_data" => "resetfilters_buy_choose"]];
				$merge[] = [["text" => "‚§¥Ô∏è–í—ã–π—Ç–∏", "callback_data" => "buy_exit_choose_main"]];
				
				$text='–í—ã–±–∏—Ä–∏—Ç–µ –æ–¥–Ω–æ –∏–ª–∏ –Ω–µ—Å–∫–æ–ª—å–∫–æ <b>–°–æ—Å—Ç–æ—è–Ω–∏–π</b>, –∑–∞—Ç–µ–º –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É <b>–ü–æ–∫–∞–∑–∞—Ç—å</b> –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤.'.$this->pre.'';
				$this->callbackAnswer( $text, $merge);
			}
		}
		else
		{
			if(mysqli_query($con_sql2, 'SELECT 1 FROM '.$tabgender.' LIMIT 1'))
			{
				
				$query2=mysqli_query($con_sql2, 'SELECT DISTINCT gender FROM '.$tabgender.' WHERE messid!="0"');
				$con2=mysqli_num_rows($query2);
				$addtext="";
				for($i1=0;$i1<$con2;$i1++)
				{
					
					mysqli_data_seek($query2, $i1);
					$row2[$i1]=mysqli_fetch_row($query2);
					
					$row2[$i1][0]=$this->convert_rus($row2[$i1][0]);
					
					
					if($i1==0)
					{
						$addtext=$row2[$i1][0];
					}
					else
					{
						$addtext = $addtext . ', '.$row2[$i1][0].'';
					}
				}
				
				if(explode(',', $addtext))
				{
					$text='–í—ã –≤—ã–±—Ä–∞–ª–∏ –ø–æ–ª —Ç–æ–≤–∞—Ä–∞ <b>'.$addtext.'</b>.'.PHP_EOL.'–í—ã–±–∏—Ä–∏—Ç–µ –¥—Ä—É–≥–æ–π –ø–∞—Ä–∞–º–µ—Ç—Ä –∏–ª–∏ –Ω–∞–∂–º–∏—Ç–µ <b>–°–±—Ä–æ—Å–∏—Ç—å —Ñ–∏–ª—å—Ç—Ä—ã</b> –¥–ª—è –≤—ã–±–æ—Ä–∞ –Ω–æ–≤–æ–≥–æ –ø–æ–ª–∞ —Ç–æ–≤–∞—Ä–∞.'.$this->pre.'';
					
				}
				else
				{
					$text='–í—ã –≤—ã–±—Ä–∞–ª–∏ –ø–æ–ª —Ç–æ–≤–∞—Ä–∞ <b>'.$addtext.'</b>.'.PHP_EOL.'–í—ã–±–∏—Ä–∏—Ç–µ –¥—Ä—É–≥–æ–π –ø–∞—Ä–∞–º–µ—Ç—Ä –∏–ª–∏ –Ω–∞–∂–º–∏—Ç–µ <b>–°–±—Ä–æ—Å–∏—Ç—å —Ñ–∏–ª—å—Ç—Ä—ã</b> –¥–ª—è –≤—ã–±–æ—Ä–∞ –Ω–æ–≤–æ–≥–æ –ø–æ–ª–∞ —Ç–æ–≤–∞—Ä–∞.'.$this->pre.'';
					
				}
				
				mysqli_query($con_sql2, 'CREATE TABLE '.$tabservice.' LIKE '.$tabgender.'');
				usleep(250000);
				mysqli_query($con_sql2, 'INSERT INTO '.$tabservice.' (type, cat, gender, brand, size, price, alt, pic, date, time, messid, cond, chatid) SELECT type, cat, gender, brand, size, price, alt, pic, date, time, messid, cond, chatid FROM '.$tabgender.'');
				usleep(250000);
				/* mysqli_query($con_sql2, 'DROP TABLE '.$tabgender.'');
				usleep(250000); */
				
				$merge=$this->cmd_filter_buy_cond();
				$merge[] = [["text" => "‚ñ∂Ô∏è–ü–æ–∫–∞–∑–∞—Ç—å", "callback_data" => "ready_buy_cond"]];
				//$merge[] = [["text" => "‚û°Ô∏è–î–∞–ª–µ–µ", "callback_data" => "filter_buy_cond_next"], ["text" => "‚ñ∂Ô∏è–ü–æ–∫–∞–∑–∞—Ç—å", "callback_data" => "ready_buy_cond"]];
				//$merge[] = [["text" => "üîÄ–°–±—Ä–æ—Å–∏—Ç—å —Ñ–∏–ª—å—Ç—Ä—ã", "callback_data" => "resetfilters_buy_choose"]];
				$merge[] = [["text" => "‚§¥Ô∏è–í—ã–π—Ç–∏", "callback_data" => "buy_exit_choose_main"]];
				
				$text='–í—ã–±–∏—Ä–∏—Ç–µ –æ–¥–Ω–æ –∏–ª–∏ –Ω–µ—Å–∫–æ–ª—å–∫–æ <b>–°–æ—Å—Ç–æ—è–Ω–∏–π</b>, –∑–∞—Ç–µ–º –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É <b>–ü–æ–∫–∞–∑–∞—Ç—å</b> –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤.'.$this->pre.'';
				$this->callbackAnswer( $text, $merge);
			}
			else
			{
				$merge=$this->cmd_filter_buy_cond();
				$merge[] = [["text" => "‚ñ∂Ô∏è–ü–æ–∫–∞–∑–∞—Ç—å", "callback_data" => "ready_buy_cond"]];
				//$merge[] = [["text" => "‚û°Ô∏è–î–∞–ª–µ–µ", "callback_data" => "filter_buy_cond_next"], ["text" => "‚ñ∂Ô∏è–ü–æ–∫–∞–∑–∞—Ç—å", "callback_data" => "ready_buy_cond"]];
				//$merge[] = [["text" => "üîÄ–°–±—Ä–æ—Å–∏—Ç—å —Ñ–∏–ª—å—Ç—Ä—ã", "callback_data" => "resetfilters_buy_choose"]];
				$merge[] = [["text" => "‚§¥Ô∏è–í—ã–π—Ç–∏", "callback_data" => "buy_exit_choose_main"]];
				
				$text='–í—ã–±–∏—Ä–∏—Ç–µ –æ–¥–Ω–æ –∏–ª–∏ –Ω–µ—Å–∫–æ–ª—å–∫–æ <b>–°–æ—Å—Ç–æ—è–Ω–∏–π</b>, –∑–∞—Ç–µ–º –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É <b>–ü–æ–∫–∞–∑–∞—Ç—å</b> –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤.'.$this->pre.'';
				$this->callbackAnswer( $text, $merge);
			}
			
		}
		
	}	




	public function cmd_filter_buy_cond()
	{
		
		$con_sql2=$this->cmd_sql();
	
		$tabcond='tabcond'.$this->api->chatId.'';
		$tabservice='tabservice'.$this->api->chatId.'';
		$tabmain='tabmain'.$this->api->chatId.'';
		
		
		if(mysqli_query($con_sql2, 'SELECT 1 FROM '.$tabservice.' LIMIT 1'))
		{

			$query2=mysqli_query($con_sql2, 'SELECT DISTINCT cond FROM '.$tabservice.' WHERE messid!="0"');
			$con2=mysqli_num_rows($query2);
			
			$puttemp=[];
			
			for($i1=0;$i1<$con2;$i1++)
			{
				mysqli_data_seek($query2, $i1);
				$row2[$i1]=mysqli_fetch_row($query2);
			
				if(in_array($row2[$i1][0], $puttemp)==FALSE)								
				{
					$puttemp[]=$row2[$i1][0];
				}
			}
			
			if(mysqli_query($con_sql2, 'SELECT 1 FROM '.$tabcond.' LIMIT 1'))
			{
				$query2=mysqli_query($con_sql2, 'SELECT DISTINCT cond FROM '.$tabcond.' WHERE messid!="0"');
				$con2=mysqli_num_rows($query2);
				
				for($i1=0;$i1<$con2;$i1++)
				{
					mysqli_data_seek($query2, $i1);
					$row2[$i1]=mysqli_fetch_row($query2);
				
					if(in_array($row2[$i1][0], $puttemp))
					{	
						$search=array_search($row2[$i1][0], $puttemp);
						unset($puttemp[$search]);
					}
				}
			}
			
		}
		else
		{
		
			$query1=mysqli_query($con_sql2, 'SHOW TABLES LIKE "tabmain%"');
			$con1=mysqli_num_rows($query1);
			
			$table=[];
			
			for($i=0;$i<$con1;$i++)
			{
				mysqli_data_seek($query1, $i);
				$row1[$i]=mysqli_fetch_row($query1);
				$table[]=$row1[$i][0];	
			}
			
			$puttemp=[];
		
			for($i=0;$i<$con1;$i++)
			{
				
				$tab=$table[$i];
	
				$query2=mysqli_query($con_sql2, 'SELECT DISTINCT cond FROM '.$tab.' WHERE messid!="0"');
				usleep(100000);
				$con2=mysqli_num_rows($query2);
				
				if($con2!=0)
				{
					for($i1=0;$i1<$con2;$i1++)
					{
						mysqli_data_seek($query2, $i1);
						$row2[$i1]=mysqli_fetch_row($query2);
						
						if(in_array($row2[$i1][0], $puttemp)==FALSE)								
						{
							$puttemp[]=$row2[$i1][0];
						}
					}
				}
				
			}
			
			
			if(mysqli_query($con_sql2, 'SELECT 1 FROM '.$tabcond.' LIMIT 1'))
			{
				$query2=mysqli_query($con_sql2, 'SELECT DISTINCT cond FROM '.$tabcond.' WHERE messid!="0"');
				$con2=mysqli_num_rows($query2);
				
				for($i1=0;$i1<$con2;$i1++)
				{
					mysqli_data_seek($query2, $i1);
					$row2[$i1]=mysqli_fetch_row($query2);
				
					if(in_array($row2[$i1][0], $puttemp))
					{	
						$search=array_search($row2[$i1][0], $puttemp);
						unset($puttemp[$search]);
					}
				}
			}
			
		}
		
		
		$put=[];
		
		foreach($puttemp as $value)
		{
			$put[]=$value;
		}
		
		
		$cnt=count($put);

		$maxbuttons=1;
		$ceil=ceil($cnt/$maxbuttons);
 
		$include=''.dirname(__FILE__).'/include'.$this->api->chatId.'.php';
		
		if(file_exists($include)==FALSE)
		{
			touch($include);
				
			$insert='<?php
		
		
			class TelegramBotfunc{';
			file_put_contents($include, $insert . PHP_EOL,FILE_APPEND);
				
		}
		else
		{
			$getinclude=file($include);
			unset($getinclude[array_key_last($getinclude)]);
			file_put_contents($include, $getinclude);
		}
		
		$u=0;
		$merge=[];
	
		
		for($i1=0;$i1<$ceil;$i1++)
		{
			$put1=[];
			
			for($i2=0;$i2<$maxbuttons;$i2++)
			{	
		
				if(isset($put[$u]))
				{
					
					$buttext=$this->convert_rus($put[$u]);
					
					$put1[]=["text" => "$buttext", "callback_data" => 'buy_select_cond_'.$this->api->chatId.'_'.$put[$u].''];
					
					if(preg_match('/callback_buy_select_cond_'.$this->api->chatId.'_'.$put[$u].'/', file_get_contents($include))==FALSE)
					{
						$insert='
						public function callback_buy_select_cond_'.$this->api->chatId.'_'.$put[$u].'()
						{	
					
							$bot = new TestBot;
							$bot->api->getWebhookUpdate();
							
							$con_sql2=$bot->cmd_sql();

							if(mysqli_query($con_sql2, &#039;SELECT 1 FROM '.$tabservice.' LIMIT 1&#039;))
							{	
						
								if(mysqli_query($con_sql2, &#039;SELECT 1 FROM '.$tabcond.' LIMIT 1&#039;)==FALSE)
								{
									mysqli_query($con_sql2, &#039;CREATE TABLE '.$tabcond.' LIKE '.$tabmain.'&#039;);
									usleep(250000);
								}
								
								mysqli_query($con_sql2, &#039;INSERT INTO '.$tabcond.' (type, cat, gender, brand, size, price, alt, pic, date, time, messid, cond, chatid) SELECT type, cat, gender, brand, size, price, alt, pic, date, time, messid, cond, chatid FROM '.$tabservice.' WHERE cond="'.$put[$u].'"&#039;);
								usleep(250000);
								
								$merge=$bot->cmd_filter_buy_cond();
								usleep(100000);
								
								$merge[] = [["text" => "‚ñ∂Ô∏è–ü–æ–∫–∞–∑–∞—Ç—å", "callback_data" => "ready_buy_cond"]];
								//$merge[] = [["text" => "‚û°Ô∏è–î–∞–ª–µ–µ", "callback_data" => "filter_buy_cond_next"], ["text" => "‚ñ∂Ô∏è–ü–æ–∫–∞–∑–∞—Ç—å", "callback_data" => "ready_buy_cond"]];
								//$merge[] = [["text" => "üîÄ–°–±—Ä–æ—Å–∏—Ç—å —Ñ–∏–ª—å—Ç—Ä—ã", "callback_data" => "resetfilters_buy_choose"]];
								$merge[] = [["text" => "‚§¥Ô∏è–í—ã–π—Ç–∏", "callback_data" => "buy_exit_choose_main"]];
								
								if(isset($bot->api->body[&#039;callback_query&#039;]["id"]))
								{
									$callback_query_id=$bot->api->body[&#039;callback_query&#039;]["id"];
									$bot->api->answerCallbackQuery($callback_query_id);
								}
								
								$text = &#039;–í—ã –≤—ã–±—Ä–∞–ª–∏ —Å–æ—Å—Ç–æ—è–Ω–∏–µ <b>'.$buttext.'</b>.'.PHP_EOL.'–ú–æ–∂–µ—Ç–µ –≤—ã–±—Ä–∞—Ç—å –µ—â–µ –æ–¥–Ω–æ –∏–ª–∏ –Ω–∞–∂–∞—Ç—å –∫–Ω–æ–ø–∫—É <b>–ü–æ–∫–∞–∑–∞—Ç—å</b> –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤.&#039;.$bot->pre.&#039;&#039;;
								
								$bot->api->editMessageText([
								&#039;chat_id&#039; => $bot->api->body[&#039;callback_query&#039;][&#039;message&#039;][&#039;chat&#039;]["id"],
								&#039;message_id&#039; => $bot->api->body[&#039;callback_query&#039;][&#039;message&#039;][&#039;message_id&#039;],
								&#039;text&#039; => $text,
								&#039;parse_mode&#039; => "HTML",
								&#039;reply_markup&#039; => json_encode( [&#039;inline_keyboard&#039;=>$merge] ),
								]);
								usleep(100000);
								
							}
							else
							{
								
								if(mysqli_query($con_sql2, &#039;SELECT 1 FROM '.$tabcond.' LIMIT 1&#039;)==FALSE)
								{
									mysqli_query($con_sql2, &#039;CREATE TABLE '.$tabcond.' LIKE '.$tabmain.'&#039;);
									usleep(250000);
									
									$query2=mysqli_query($con_sql2, &#039;SHOW TABLES LIKE "tabmain%"&#039;);
									$con2=mysqli_num_rows($query2);
									$table=[];
								
									for($i=0;$i<$con2;$i++)
									{
										mysqli_data_seek($query2, $i);
										$row2[$i]=mysqli_fetch_row($query2);
										$table[]=$row2[$i][0];	
											
										mysqli_query($con_sql2, &#039;INSERT INTO '.$tabcond.' (type, cat, gender, brand, size, price, alt, pic, date, time, messid, cond, chatid) SELECT type, cat, gender, brand, size, price, alt, pic, date, time, messid, cond, chatid FROM &#039;.$table[$i].&#039; WHERE cond="'.$put[$u].'"&#039;);
										usleep(250000);
									}
								}
								else
								{
									$query1=mysqli_query($con_sql2, &#039;SELECT DISTINCT cond FROM '.$tabcond.' WHERE messid!="0"&#039;);
									$con1=mysqli_num_rows($query1);
									
									for($i1=0;$i1<$con1;$i1++)
									{
										mysqli_data_seek($query1, $i1);
										$row1[$i1]=mysqli_fetch_row($query1);
									}
									
									if(in_array(&#039;'.$put[$u].'&#039;, $row1)==FALSE)
									{
									
										$query2=mysqli_query($con_sql2, &#039;SHOW TABLES LIKE "tabmain%"&#039;);
										$con2=mysqli_num_rows($query2);
										$table=[];
									
										for($i=0;$i<$con2;$i++)
										{
											mysqli_data_seek($query2, $i);
											$row2[$i]=mysqli_fetch_row($query2);
											$table[]=$row2[$i][0];	
												
											mysqli_query($con_sql2, &#039;INSERT INTO '.$tabcond.' (type, cat, gender, brand, size, price, alt, pic, date, time, messid, cond, chatid) SELECT type, cat, gender, brand, size, price, alt, pic, date, time, messid, cond, chatid FROM &#039;.$table[$i].&#039; WHERE cond="'.$put[$u].'"&#039;);
											usleep(250000);
										}
										
									}
								}

								$merge=$bot->cmd_filter_buy_cond();
								usleep(100000);
								
								$merge[] = [["text" => "‚ñ∂Ô∏è–ü–æ–∫–∞–∑–∞—Ç—å", "callback_data" => "ready_buy_cond"]];
								//$merge[] = [["text" => "‚û°Ô∏è–î–∞–ª–µ–µ", "callback_data" => "filter_buy_cond_next"], ["text" => "‚ñ∂Ô∏è–ü–æ–∫–∞–∑–∞—Ç—å", "callback_data" => "ready_buy_cond"]];
								//$merge[] = [["text" => "üîÄ–°–±—Ä–æ—Å–∏—Ç—å —Ñ–∏–ª—å—Ç—Ä—ã", "callback_data" => "resetfilters_buy_choose"]];
								$merge[] = [["text" => "‚§¥Ô∏è–í—ã–π—Ç–∏", "callback_data" => "buy_exit_choose_main"]];
								
								if(isset($bot->api->body[&#039;callback_query&#039;]["id"]))
								{
									$callback_query_id=$bot->api->body[&#039;callback_query&#039;]["id"];
									$bot->api->answerCallbackQuery($callback_query_id);
								}
								$text = &#039;–í—ã –≤—ã–±—Ä–∞–ª–∏ —Å–æ—Å—Ç–æ—è–Ω–∏–µ<b>'.$buttext.'</b>.'.PHP_EOL.'–ú–æ–∂–µ—Ç–µ –≤—ã–±—Ä–∞—Ç—å –µ—â–µ –æ–¥–Ω–æ –∏–ª–∏ –Ω–∞–∂–∞—Ç—å –∫–Ω–æ–ø–∫—É <b>–ü–æ–∫–∞–∑–∞—Ç—å</b> –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤.&#039;.$bot->pre.&#039;&#039;;
								
								$bot->api->editMessageText([
								&#039;chat_id&#039; => $bot->api->body[&#039;callback_query&#039;][&#039;message&#039;][&#039;chat&#039;]["id"],
								&#039;message_id&#039; => $bot->api->body[&#039;callback_query&#039;][&#039;message&#039;][&#039;message_id&#039;],
								&#039;text&#039; => $text,
								&#039;parse_mode&#039; => "HTML",
								&#039;reply_markup&#039; => json_encode( [&#039;inline_keyboard&#039;=>$merge] ),
								]);
								usleep(100000);
								
							}

						}';
						file_put_contents($include, html_entity_decode($insert, ENT_QUOTES) . PHP_EOL . PHP_EOL,FILE_APPEND);
					}
				
				}
				
				$u++;
			}	
			
			$merge[]=$put1;
			unset($put1);
			
		}
		

		$insert='}';
		file_put_contents($include, $insert,FILE_APPEND);
		
		
		return $merge;
	}



/////
	public function callback_ready_buy_cond()
	{
		$con_sql2=$this->cmd_sql();
		
		$tabcond='tabcond'.$this->api->chatId.'';
		$tabservice='tabservice'.$this->api->chatId.'';
		$tabmain='tabmain'.$this->api->chatId.'';
		
		if(mysqli_query($con_sql2, 'SELECT 1 FROM '.$tabservice.' LIMIT 1'))
		{
			if(mysqli_query($con_sql2, 'SELECT 1 FROM '.$tabcond.' LIMIT 1'))
			{

				mysqli_query($con_sql2, 'DROP TABLE '.$tabservice.'');
				usleep(250000);
				mysqli_query($con_sql2, 'CREATE TABLE '.$tabservice.' LIKE '.$tabcond.'');
				usleep(250000);
				mysqli_query($con_sql2, 'INSERT INTO '.$tabservice.' (type, cat, gender, brand, size, price, alt, pic, date, time, messid, cond, chatid) SELECT type, cat, gender, brand, size, price, alt, pic, date, time, messid, cond, chatid FROM '.$tabcond.'');
				usleep(250000);

			}
		
		}
		else
		{
			if(mysqli_query($con_sql2, 'SELECT 1 FROM '.$tabcond.' LIMIT 1'))
			{
				
				mysqli_query($con_sql2, 'CREATE TABLE '.$tabservice.' LIKE '.$tabcond.'');
				usleep(250000);
				mysqli_query($con_sql2, 'INSERT INTO '.$tabservice.' (type, cat, gender, brand, size, price, alt, pic, date, time, messid, cond, chatid) SELECT type, cat, gender, brand, size, price, alt, pic, date, time, messid, cond, chatid FROM '.$tabcond.'');
				usleep(250000);
				/* mysqli_query($con_sql2, 'DROP TABLE '.$tabcond.'');
				usleep(250000); */
			
			}
		}
		
		
		
		
		$tabservice='tabservice'.$this->api->chatId.'';
		
		if(mysqli_query($con_sql2, 'SELECT 1 FROM '.$tabservice.' LIMIT 1')==FALSE)
		{
			$query1=mysqli_query($con_sql2, 'SHOW TABLES LIKE "tabmain%"');
			$con1=mysqli_num_rows($query1);
			
			if($con1!=0)
			{	
			
				$table=[];
				$check=0;
				
				for($i1=0;$i1<$con1;$i1++)
				{
					mysqli_data_seek($query1, $i1);
					$row1[$i1]=mysqli_fetch_row($query1);
					$tab=$row1[$i1][0];
					
					$query=mysqli_query($con_sql2, 'SELECT * FROM '.$tab.' WHERE messid!="0" ORDER by messid ASC');
					usleep(100000);
					$con=mysqli_num_rows($query);
						
					if($con!=0)
					{	

						$check=1;
						
						for($i=0;$i<$con;$i++)
						{
							mysqli_data_seek($query, $i);
							$row[$i]=mysqli_fetch_row($query);
						}
						usleep(100000);
						
		
						for($i=0;$i<$con;$i++)
						{
						
						
							$type=$this->convert_rus($row[$i][1]);
							$cat=$this->convert_rus($row[$i][2]);
							$gender=$this->convert_rus($row[$i][3]);
							$cond=$this->convert_rus($row[$i][12]);
						
						
						
							/* $text='‚ùáÔ∏è‚ùáÔ∏è‚ùáÔ∏è‚ùáÔ∏è‚ùáÔ∏è‚ùáÔ∏è‚ùáÔ∏è‚ùáÔ∏è‚ùáÔ∏è‚ùáÔ∏è‚ùáÔ∏è‚ùáÔ∏è‚ùáÔ∏è‚ùáÔ∏è‚ùáÔ∏è‚ùáÔ∏è‚ùáÔ∏è‚ùáÔ∏è‚ùáÔ∏è‚ùáÔ∏è';
							
							$this->api->sendMessage([
							'text' => $text,
							'disable_notification' => TRUE,
							'disable_web_page_preview' => TRUE,
							'parse_mode'=> "HTML"
							]);
							usleep(100000); */
							
							
							$messageid=$row[$i][11];
							
							$caption='üìñ–ö–∞—Ç–µ–≥–æ—Ä–∏—è: &#160;&#160;<b>'.$type.'</b>'.PHP_EOL.'üßæ–í–∏–¥: &#160;&#160;<b>'.$cat.'</b>'.PHP_EOL.'üë®‚Äçüë©‚Äçüë¶–ü–æ–ª: &#160;&#160;<b>'.$gender.'</b>'.PHP_EOL.'üéè–°–æ—Å—Ç–æ—è–Ω–∏–µ: <b>'.$cond.'</b>'.PHP_EOL.'¬ÆÔ∏è–ë—Ä–µ–Ω–¥: &#160;&#160;<b>'.$row[$i][4].'</b>'.PHP_EOL.'‚ÜïÔ∏è–†–∞–∑–º–µ—Ä: &#160;&#160;<b>'.$row[$i][5].'</b>'.PHP_EOL.'üíµ–¶–µ–Ω–∞: &#160;&#160;<b>'.$row[$i][6].'</b>'.PHP_EOL.'üìã–û–ø–∏—Å–∞–Ω–∏–µ: &#160;&#160;'.$row[$i][7].''.PHP_EOL.''.PHP_EOL.''.PHP_EOL.'<b>ID —Ç–æ–≤–∞—Ä–∞: '.$messageid.'</b>'.PHP_EOL.''.PHP_EOL.'üìÅüìÅüìÅüìÅüìÅüìÅüìÅüìÅüìÅüìÅüìÅüìÅ';
							
							$photo=$row[$i][8];
							
							$include=''.dirname(__FILE__).'/include'.$this->api->chatId.'.php';
			
							if(file_exists($include)==FALSE)
							{
								touch($include);
								
								$insert='<?php
						
						
								class TelegramBotfunc{';
								file_put_contents($include, $insert . PHP_EOL,FILE_APPEND);
								
							}
							else
							{
								$getinclude=file($include);
								unset($getinclude[array_key_last($getinclude)]);
								file_put_contents($include, $getinclude);
							}
							
		
							$merge=[];
							$merge[]= [['text' => 'üõí–ö—É–ø–∏—Ç—å', 'callback_data' => 'buy_ready_cond_'.$this->api->chatId.'_'.$messageid.'']]  ;
							
							if(preg_match('/callback_buy_ready_cond_'.$this->api->chatId.'_'.$messageid.'/', file_get_contents($include))==FALSE)
							{
								$insert='
								public function callback_buy_ready_cond_'.$this->api->chatId.'_'.$messageid.'()
								{	
						
									$bot = new TestBot;
									$bot->api->getWebhookUpdate();

									$text=&#039;–í—ã –∑–∞–ø—Ä–æ—Å–∏–ª–∏ —Ç–æ–≤–∞—Ä —Å <b>ID ‚Ññ'.$messageid.'.</b> &#039;.PHP_EOL.&#039;&#039;.PHP_EOL.&#039;<b>–í—ã —Ç–æ—á–Ω–æ —Ö–æ—Ç–∏—Ç–µ –∫—É–ø–∏—Ç—å –µ–≥–æ?</b>&#039;.$bot->pre.&#039;&#039;;
									$merge=[];
									$merge[] = [[&#039;text&#039; => &#039;üü¢–î–∞&#039;, &#039;callback_data&#039; => &#039;byrecordid_default_buy_yes&#039;], [&#039;text&#039; => &#039;üî¥–ù–µ—Ç&#039;, &#039;callback_data&#039; => &#039;byrecordid_default_buy_no&#039;]];
									$merge[] = [[&#039;text&#039; => &#039;‚¨ÖÔ∏è–ù–∞–∑–∞–¥&#039;, &#039;callback_data&#039; => &#039;back_byrecordid_default_buy&#039;], [&#039;text&#039; => &#039;‚§¥Ô∏è–í—ã–π—Ç–∏&#039;, &#039;callback_data&#039; => &#039;exit_byrecordid_default_buy&#039;]];
									
									if(isset($bot->api->body[&#039;callback_query&#039;]["id"]))
									{
										$callback_query_id=$bot->api->body[&#039;callback_query&#039;]["id"];
										$bot->api->answerCallbackQuery($callback_query_id);
									}
							
									$bot->api->sendMessage([
									&#039;text&#039; => $text,
									&#039;reply_markup&#039; => json_encode( [&#039;inline_keyboard&#039;=>$merge]),
									&#039;disable_notification&#039; => TRUE,
									&#039;disable_web_page_preview&#039; => TRUE,
									&#039;parse_mode&#039;=> "HTML"
									]);
									usleep(100000);
									
								}';
								file_put_contents($include, html_entity_decode($insert, ENT_QUOTES) . PHP_EOL . PHP_EOL,FILE_APPEND);
								
							}
							
							$insert='}';
							file_put_contents($include, $insert,FILE_APPEND);
							
							
							if(preg_match('/;/', $photo)==FALSE)
							{
								$this->api->sendPhoto([
								'photo' => $photo,
								'caption' => $caption,
								//'reply_markup' => json_encode( ['inline_keyboard'=>$this->keyboards['inline_ask_admin']]),
								//'reply_markup' => json_encode( ['inline_keyboard'=>$merge]),
								'disable_notification' => TRUE,
								'parse_mode' => "HTML"
								]);
								usleep(250000);
								
								$text='–ö—É–ø–∏—Ç—å <b>ID ‚Ññ'.$messageid.'</b>';
								$this->api->sendMessage([
								'text' => $text,
								'reply_markup' => json_encode( ['inline_keyboard'=>$merge]),
								'disable_notification' => TRUE,
								'disable_web_page_preview' => TRUE,
								'parse_mode'=> "HTML"
								]);
								usleep(100000);
								
							
							}
							else
							{
								$media=[];
								$temp=explode(';', $photo);
								$cnt=count($temp);
								for($o=0;$o<$cnt;$o++)
								{
								
								
									if($o==0)
									{
										//$put=['type' => 'photo', 'media' =>  ''.$temp[$o].'', 'caption' => ''.$caption.'', 'parse_mode' => "HTML", 'reply_markup' => ['inline_keyboard'=>$merge]];
										//$put=['type' => 'photo', 'media' =>  ''.$temp[$o].'', 'caption' => ''.$caption.'', 'parse_mode' => "HTML", 'reply_markup' => 'inline_keyboard'=>$this->keyboards['inline_ask_admin']];
										$put=['type' => 'photo', 'media' =>  ''.$temp[$o].'', 'caption' => ''.$caption.'', 'parse_mode' => "HTML"];
									}
									else
									{
										$put=['type' => 'photo', 'media' =>  ''.$temp[$o].''];
									}
							
									$media[$o]=$put;
								}
								
								
								$this->api->sendMediaGroup([
								'media' => json_encode($media),
								//'reply_markup' => json_encode( ['inline_keyboard'=>$merge])
								]);
								usleep(350000);
								
								$text='–ö—É–ø–∏—Ç—å <b>ID ‚Ññ'.$messageid.'</b>';
								$this->api->sendMessage([
								'text' => $text,
								'reply_markup' => json_encode( ['inline_keyboard'=>$merge]),
								'disable_notification' => TRUE,
								'disable_web_page_preview' => TRUE,
								'parse_mode'=> "HTML"
								]);
								usleep(100000);
							}
						}
			
					}
				}
				
				if($check==1)
				{
					/* $tab='tabtype'.$this->api->chatId.'';
		
					//if(mysqli_query($con_sql2, 'SELECT 1 FROM '.$tab.' LIMIT 1'))
					//{
						mysqli_query($con_sql2, 'DROP TABLE '.$tab.'');
						usleep(100000);
					//}
					
					$tab='tabcat'.$this->api->chatId.'';
					
					//if(mysqli_query($con_sql2, 'SELECT 1 FROM '.$tab.' LIMIT 1'))
					//{
						mysqli_query($con_sql2, 'DROP TABLE '.$tab.'');
						usleep(100000);
					//}
					
					$tab='tabgender'.$this->api->chatId.'';
					
					//if(mysqli_query($con_sql2, 'SELECT 1 FROM '.$tab.' LIMIT 1'))
					//{
						mysqli_query($con_sql2, 'DROP TABLE '.$tab.'');
						usleep(100000);
					//}
				
					$tab='tabcond'.$this->api->chatId.'';
					
					//if(mysqli_query($con_sql2, 'SELECT 1 FROM '.$tab.' LIMIT 1'))
					//{
						mysqli_query($con_sql2, 'DROP TABLE '.$tab.'');
						usleep(100000);
					//}
				
					$tab='tabprice'.$this->api->chatId.'';
					
					//if(mysqli_query($con_sql2, 'SELECT 1 FROM '.$tab.' LIMIT 1'))
					//{
						mysqli_query($con_sql2, 'DROP TABLE '.$tab.'');
						usleep(100000);
					//}
					
					
					$tab='tabservice'.$this->api->chatId.'';
					
					//if(mysqli_query($con_sql2, 'SELECT 1 FROM '.$tab.' LIMIT 1'))
					//{
						mysqli_query($con_sql2, 'DROP TABLE '.$tab.'');
						usleep(100000);
					//} */
					
					if(isset($this->api->body['callback_query']["id"]))
						{
							$callback_query_id=$this->api->body['callback_query']["id"];
							$this->api->answerCallbackQuery($callback_query_id);
						}

					$text='–°–≤–µ—Ä—Ö—É <b>–ø–æ–∫–∞–∑–∞–Ω—ã –≤—Å–µ —Ç–æ–≤–∞—Ä—ã</b>, —Å–æ–≥–ª–∞—Å–Ω–æ –í–∞—à–µ–≥–æ –∑–∞–ø—Ä–æ—Å–∞.'.PHP_EOL.''.PHP_EOL.'–í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ –º–µ–Ω—é <b>–ö—É–ø–∏—Ç—å</b>.'.$this->pre.'';
					
					$this->api->sendMessage([
					'text' => $text,
					'reply_markup' => json_encode( ['inline_keyboard'=>$this->keyboards['inline_buy_default']]),
					'disable_notification' => TRUE,
					'disable_web_page_preview' => TRUE,
					'parse_mode'=> "HTML"
					]);
					usleep(100000);	
				}
				else
				{
					$text='–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é –≤ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç <b>–Ω–µ—Ç —Ç–æ–≤–∞—Ä–æ–≤ –≤ –ø—Ä–æ–¥–∞–∂–µ</b>. –í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ –º–µ–Ω—é <b>–ö—É–ø–∏—Ç—å</b>.'.$this->pre.'';
					$this->callbackAnswer( $text, $this->keyboards['inline_buy_default']);	
				}
				
				
			}
			else
			{
				$text='–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é –≤ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç <b>–Ω–µ—Ç —Ç–æ–≤–∞—Ä–æ–≤ –≤ –ø—Ä–æ–¥–∞–∂–µ</b>. –í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ –º–µ–Ω—é <b>–ö—É–ø–∏—Ç—å</b>.'.$this->pre.'';
				$this->callbackAnswer( $text, $this->keyboards['inline_buy_default']);	
			}
			
		}
		else
		{
			$query1=mysqli_query($con_sql2, 'SELECT * FROM '.$tabservice.' WHERE messid!="0" ORDER by messid ASC');
			usleep(100000);
			$con1=mysqli_num_rows($query1);
				
			if($con1!=0)
			{					
				for($i1=0;$i1<$con1;$i1++)
				{
					mysqli_data_seek($query1, $i1);
					$row1[$i1]=mysqli_fetch_row($query1);
				}
				usleep(100000);
				
			
				for($i1=0;$i1<$con1;$i1++)
				{
				
				
					$type=$this->convert_rus($row1[$i1][1]);
					$cat=$this->convert_rus($row1[$i1][2]);
					$gender=$this->convert_rus($row1[$i1][3]);
					$cond=$this->convert_rus($row1[$i1][12]);
				
				
					/* $text='‚ùáÔ∏è‚ùáÔ∏è‚ùáÔ∏è‚ùáÔ∏è‚ùáÔ∏è‚ùáÔ∏è‚ùáÔ∏è‚ùáÔ∏è‚ùáÔ∏è‚ùáÔ∏è‚ùáÔ∏è‚ùáÔ∏è‚ùáÔ∏è‚ùáÔ∏è‚ùáÔ∏è‚ùáÔ∏è‚ùáÔ∏è‚ùáÔ∏è‚ùáÔ∏è‚ùáÔ∏è';
					
					$this->api->sendMessage([
					'text' => $text,
					'disable_notification' => TRUE,
					'disable_web_page_preview' => TRUE,
					'parse_mode'=> "HTML"
					]);
					usleep(100000); */
					
					
					$messageid=$row1[$i1][11];
					
					$caption='üìñ–ö–∞—Ç–µ–≥–æ—Ä–∏—è: &#160;&#160;<b>'.$type.'</b>'.PHP_EOL.'üßæ–í–∏–¥: &#160;&#160;<b>'.$cat.'</b>'.PHP_EOL.'üë®‚Äçüë©‚Äçüë¶–ü–æ–ª: &#160;&#160;<b>'.$gender.'</b>'.PHP_EOL.'üéè–°–æ—Å—Ç–æ—è–Ω–∏–µ: <b>'.$cond.'</b>'.PHP_EOL.'¬ÆÔ∏è–ë—Ä–µ–Ω–¥: &#160;&#160;<b>'.$row1[$i1][4].'</b>'.PHP_EOL.'‚ÜïÔ∏è–†–∞–∑–º–µ—Ä: &#160;&#160;<b>'.$row1[$i1][5].'</b>'.PHP_EOL.'üíµ–¶–µ–Ω–∞: &#160;&#160;<b>'.$row1[$i1][6].'</b>'.PHP_EOL.'üìã–û–ø–∏—Å–∞–Ω–∏–µ: &#160;&#160;'.$row1[$i1][7].''.PHP_EOL.''.PHP_EOL.''.PHP_EOL.'<b>ID —Ç–æ–≤–∞—Ä–∞: '.$messageid.'</b>'.PHP_EOL.''.PHP_EOL.'üìÅüìÅüìÅüìÅüìÅüìÅüìÅüìÅüìÅüìÅüìÅüìÅ';
					
					$photo=$row1[$i1][8];
					
					$include=''.dirname(__FILE__).'/include'.$this->api->chatId.'.php';
			
					if(file_exists($include)==FALSE)
					{
						touch($include);
						
						$insert='<?php
					
					
						class TelegramBotfunc{';
						file_put_contents($include, $insert . PHP_EOL,FILE_APPEND);
						
					}
					else
					{
						$getinclude=file($include);
						unset($getinclude[array_key_last($getinclude)]);
						file_put_contents($include, $getinclude);
					}
					
					
					$merge=[];
					$merge[]= [['text' => 'üõí–ö—É–ø–∏—Ç—å', 'callback_data' => 'buy_ready_cond_'.$this->api->chatId.'_'.$messageid.'']]  ;
					
					if(preg_match('/callback_buy_ready_cond_'.$this->api->chatId.'_'.$messageid.'/', file_get_contents($include))==FALSE)
					{
						$insert='
						public function callback_buy_ready_cond_'.$this->api->chatId.'_'.$messageid.'()
						{	
					
							$bot = new TestBot;
							$bot->api->getWebhookUpdate();
					
							$text=&#039;–í—ã –∑–∞–ø—Ä–æ—Å–∏–ª–∏ —Ç–æ–≤–∞—Ä —Å <b>ID ‚Ññ'.$messageid.'.</b> &#039;.PHP_EOL.&#039;&#039;.PHP_EOL.&#039;<b>–í—ã —Ç–æ—á–Ω–æ —Ö–æ—Ç–∏—Ç–µ –∫—É–ø–∏—Ç—å –µ–≥–æ?</b>&#039;.$bot->pre.&#039;&#039;;
							$merge=[];
							$merge[] = [[&#039;text&#039; => &#039;üü¢–î–∞&#039;, &#039;callback_data&#039; => &#039;byrecordid_default_buy_yes&#039;], [&#039;text&#039; => &#039;üî¥–ù–µ—Ç&#039;, &#039;callback_data&#039; => &#039;byrecordid_default_buy_no&#039;]];
							$merge[] = [[&#039;text&#039; => &#039;‚¨ÖÔ∏è–ù–∞–∑–∞–¥&#039;, &#039;callback_data&#039; => &#039;back_byrecordid_default_buy&#039;], [&#039;text&#039; => &#039;‚§¥Ô∏è–í—ã–π—Ç–∏&#039;, &#039;callback_data&#039; => &#039;exit_byrecordid_default_buy&#039;]];
							
							if(isset($bot->api->body[&#039;callback_query&#039;]["id"]))
							{
								$callback_query_id=$bot->api->body[&#039;callback_query&#039;]["id"];
								$bot->api->answerCallbackQuery($callback_query_id);
							}
							
							$bot->api->sendMessage([
							&#039;text&#039; => $text,
							&#039;reply_markup&#039; => json_encode( [&#039;inline_keyboard&#039;=>$merge]),
							&#039;disable_notification&#039; => TRUE,
							&#039;disable_web_page_preview&#039; => TRUE,
							&#039;parse_mode&#039;=> "HTML"
							]);
							usleep(100000);
							
						}';
						file_put_contents($include, html_entity_decode($insert, ENT_QUOTES) . PHP_EOL . PHP_EOL,FILE_APPEND);
						
					}
					
					$insert='}';
					file_put_contents($include, $insert,FILE_APPEND);
					
					if(preg_match('/;/', $photo)==FALSE)
					{
						$this->api->sendPhoto([
						'photo' => $photo,
						'caption' => $caption,
						'disable_notification' => TRUE,
						'parse_mode' => "HTML"
						]);
						usleep(250000);
					

						$text='–ö—É–ø–∏—Ç—å <b>ID ‚Ññ'.$messageid.'</b>';
						$this->api->sendMessage([
						'text' => $text,
						'reply_markup' => json_encode( ['inline_keyboard'=>$merge]),
						'disable_notification' => TRUE,
						'disable_web_page_preview' => TRUE,
						'parse_mode'=> "HTML"
						]);
						usleep(100000);
					
					}
					else
					{
						$media=[];
						$temp=explode(';', $photo);
						$cnt=count($temp);
						for($o=0;$o<$cnt;$o++)
						{
						
						
							if($o==0)
							{
								$put=['type' => 'photo', 'media' =>  ''.$temp[$o].'', 'caption' => ''.$caption.'', 'parse_mode' => "HTML" ];
							}
							else
							{
								$put=['type' => 'photo', 'media' =>  ''.$temp[$o].'' ];
							}
					
							$media[$o]=$put;
						}
						
						
						$this->api->sendMediaGroup([
						'media' => json_encode($media),
						]);
						usleep(350000);
						

						
						$text='–ö—É–ø–∏—Ç—å <b>ID ‚Ññ'.$messageid.'</b>';
						$this->api->sendMessage([
						'text' => $text,
						'reply_markup' => json_encode( ['inline_keyboard'=>$merge]),
						'disable_notification' => TRUE,
						'disable_web_page_preview' => TRUE,
						'parse_mode'=> "HTML"
						]);
						usleep(100000);
					}
				}
				
				/* $tab='tabtype'.$this->api->chatId.'';
		
				//if(mysqli_query($con_sql2, 'SELECT 1 FROM '.$tab.' LIMIT 1'))
				//{
					mysqli_query($con_sql2, 'DROP TABLE '.$tab.'');
					usleep(100000);	
				//}
				
				$tab='tabcat'.$this->api->chatId.'';
				
				//if(mysqli_query($con_sql2, 'SELECT 1 FROM '.$tab.' LIMIT 1'))
				//{
					mysqli_query($con_sql2, 'DROP TABLE '.$tab.'');
					usleep(100000);
				//}
				
				$tab='tabgender'.$this->api->chatId.'';
				
				//if(mysqli_query($con_sql2, 'SELECT 1 FROM '.$tab.' LIMIT 1'))
				//{
					mysqli_query($con_sql2, 'DROP TABLE '.$tab.'');
					usleep(100000);
				//}
				
				$tab='tabcond'.$this->api->chatId.'';
				
				//if(mysqli_query($con_sql2, 'SELECT 1 FROM '.$tab.' LIMIT 1'))
				//{
					mysqli_query($con_sql2, 'DROP TABLE '.$tab.'');
					usleep(100000);
				//}
				
				$tab='tabprice'.$this->api->chatId.'';
				
				//if(mysqli_query($con_sql2, 'SELECT 1 FROM '.$tab.' LIMIT 1'))
				//{
					mysqli_query($con_sql2, 'DROP TABLE '.$tab.'');
					usleep(100000);
				//}
				
				
				$tab='tabservice'.$this->api->chatId.'';
				
				//if(mysqli_query($con_sql2, 'SELECT 1 FROM '.$tab.' LIMIT 1'))
				//{
					mysqli_query($con_sql2, 'DROP TABLE '.$tab.'');
					usleep(100000);
				//} */
					
				if(isset($this->api->body['callback_query']["id"]))
				{
					$callback_query_id=$this->api->body['callback_query']["id"];
					$this->api->answerCallbackQuery($callback_query_id);
				}
											
				$text='<b>–°–≤–µ—Ä—Ö—É –ø–æ–∫–∞–∑–∞–Ω—ã –≤—Å–µ —Ç–æ–≤–∞—Ä—ã, —Å–æ–≥–ª–∞—Å–Ω–æ –í–∞—à–µ–≥–æ –∑–∞–ø—Ä–æ—Å–∞.</b>'.PHP_EOL.''.PHP_EOL.'–í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ –º–µ–Ω—é <b>–ö—É–ø–∏—Ç—å.</b>'.$this->pre.'';
				
				$this->api->sendMessage([
				'text' => $text,
				'reply_markup' => json_encode( ['inline_keyboard'=>$this->keyboards['inline_buy_default']]),
				'disable_notification' => TRUE,
				'disable_web_page_preview' => TRUE,
				'parse_mode'=> "HTML"
				]);
				usleep(100000);
				
				
			
			}
			else
			{
				$text='–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é –≤ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç <b>–Ω–µ—Ç —Ç–æ–≤–∞—Ä–æ–≤ –≤ –ø—Ä–æ–¥–∞–∂–µ</b>. –í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ –º–µ–Ω—é <b>–ö—É–ø–∏—Ç—å</b>.'.$this->pre.'';
				$this->callbackAnswer( $text, $this->keyboards['inline_buy_default']);
			}
			
		}
		
	}

/////
	public function callback_filter_buy_cond_next()
	{		
		$con_sql2=$this->cmd_sql();
		
		$tabcond='tabcond'.$this->api->chatId.'';
		$tabservice='tabservice'.$this->api->chatId.'';
		$tabmain='tabmain'.$this->api->chatId.'';
		
		if(mysqli_query($con_sql2, 'SELECT 1 FROM '.$tabservice.' LIMIT 1'))
		{
			if(mysqli_query($con_sql2, 'SELECT 1 FROM '.$tabcond.' LIMIT 1'))
			{
				$query2=mysqli_query($con_sql2, 'SELECT DISTINCT cond FROM '.$tabcond.' WHERE messid!="0"');
				$con2=mysqli_num_rows($query2);
				$addtext="";
				for($i1=0;$i1<$con2;$i1++)
				{
					
					mysqli_data_seek($query2, $i1);
					$row2[$i1]=mysqli_fetch_row($query2);
					
					$row2[$i1][0]=$this->convert_rus($row2[$i1][0]);
					
					
					if($i1==0)
					{
						$addtext=$row2[$i1][0];
					}
					else
					{
						$addtext = $addtext . ', '.$row2[$i1][0].'';
					}
				}
				
				if(explode(',', $addtext))
				{
					$text='–í—ã –≤—ã–±—Ä–∞–ª–∏ —Å–æ—Å—Ç–æ—è–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞ <b>'.$addtext.'</b>.'.PHP_EOL.'–í—ã–±–∏—Ä–∏—Ç–µ –¥—Ä—É–≥–æ–π –ø–∞—Ä–∞–º–µ—Ç—Ä –∏–ª–∏ –Ω–∞–∂–º–∏—Ç–µ <b>–°–±—Ä–æ—Å–∏—Ç—å —Ñ–∏–ª—å—Ç—Ä—ã</b> –¥–ª—è –≤—ã–±–æ—Ä–∞ –Ω–æ–≤–æ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è —Ç–æ–≤–∞—Ä–∞.'.$this->pre.'';
					
				}
				else
				{
					$text='–í—ã –≤—ã–±—Ä–∞–ª–∏ —Å–æ—Å—Ç–æ—è–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞ <b>'.$addtext.'</b>.'.PHP_EOL.'–í—ã–±–∏—Ä–∏—Ç–µ –¥—Ä—É–≥–æ–π –ø–∞—Ä–∞–º–µ—Ç—Ä –∏–ª–∏ –Ω–∞–∂–º–∏—Ç–µ <b>–°–±—Ä–æ—Å–∏—Ç—å —Ñ–∏–ª—å—Ç—Ä—ã</b> –¥–ª—è –≤—ã–±–æ—Ä–∞ –Ω–æ–≤–æ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è —Ç–æ–≤–∞—Ä–∞.'.$this->pre.'';
					
				}
				
				
				mysqli_query($con_sql2, 'DROP TABLE '.$tabservice.'');
				usleep(250000);
				mysqli_query($con_sql2, 'CREATE TABLE '.$tabservice.' LIKE '.$tabcond.'');
				usleep(250000);
				mysqli_query($con_sql2, 'INSERT INTO '.$tabservice.' (type, cat, gender, brand, size, price, alt, pic, date, time, messid, cond, chatid) SELECT type, cat, gender, brand, size, price, alt, pic, date, time, messid, cond, chatid FROM '.$tabcond.'');
				usleep(250000);
				
				
				$merge[] = [["text" => "‚ñ∂Ô∏è–ü–æ–∫–∞–∑–∞—Ç—å", "callback_data" => "ready_buy_cond"]];
				$merge[] = [["text" => "üîÄ–°–±—Ä–æ—Å–∏—Ç—å —Ñ–∏–ª—å—Ç—Ä—ã", "callback_data" => "resetfilters_buy_choose"]];
				$merge[] = [["text" => "‚§¥Ô∏è–í—ã–π—Ç–∏", "callback_data" => "buy_exit_choose_main"]];
				
				$text='–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É <b>–ü–æ–∫–∞–∑–∞—Ç—å</b> –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤.'.$this->pre.'';
				$this->callbackAnswer( $text, $merge);

			}
			else
			{
				
				$merge[] = [["text" => "‚ñ∂Ô∏è–ü–æ–∫–∞–∑–∞—Ç—å", "callback_data" => "ready_buy_cond"]];
				$merge[] = [["text" => "üîÄ–°–±—Ä–æ—Å–∏—Ç—å —Ñ–∏–ª—å—Ç—Ä—ã", "callback_data" => "resetfilters_buy_choose"]];
				$merge[] = [["text" => "‚§¥Ô∏è–í—ã–π—Ç–∏", "callback_data" => "buy_exit_choose_main"]];
				
				$text='–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –ü–æ–∫–∞–∑–∞—Ç—å –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤.'.$this->pre.'';
				$this->callbackAnswer( $text, $merge);
			}
		}
		else
		{
			if(mysqli_query($con_sql2, 'SELECT 1 FROM '.$tabcond.' LIMIT 1'))
			{
				
				$query2=mysqli_query($con_sql2, 'SELECT DISTINCT cond FROM '.$tabcond.' WHERE messid!="0"');
				$con2=mysqli_num_rows($query2);
				$addtext="";
				for($i1=0;$i1<$con2;$i1++)
				{
					
					mysqli_data_seek($query2, $i1);
					$row2[$i1]=mysqli_fetch_row($query2);
					
					$row2[$i1][0]=$this->convert_rus($row2[$i1][0]);
					
					
					if($i1==0)
					{
						$addtext=$row2[$i1][0];
					}
					else
					{
						$addtext = $addtext . ', '.$row2[$i1][0].'';
					}
				}
				
				if(explode(',', $addtext))
				{
					$text='–í—ã –≤—ã–±—Ä–∞–ª–∏ —Å–æ—Å—Ç–æ—è–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞ <b>'.$addtext.'</b>.'.PHP_EOL.'–í—ã–±–∏—Ä–∏—Ç–µ –¥—Ä—É–≥–æ–π –ø–∞—Ä–∞–º–µ—Ç—Ä –∏–ª–∏ –Ω–∞–∂–º–∏—Ç–µ <b>–°–±—Ä–æ—Å–∏—Ç—å —Ñ–∏–ª—å—Ç—Ä—ã</b> –¥–ª—è –≤—ã–±–æ—Ä–∞ –Ω–æ–≤–æ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è —Ç–æ–≤–∞—Ä–∞.'.$this->pre.'';
					
				}
				else
				{
					$text='–í—ã –≤—ã–±—Ä–∞–ª–∏ —Å–æ—Å—Ç–æ—è–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞ <b>'.$addtext.'</b>.'.PHP_EOL.'–í—ã–±–∏—Ä–∏—Ç–µ –¥—Ä—É–≥–æ–π –ø–∞—Ä–∞–º–µ—Ç—Ä –∏–ª–∏ –Ω–∞–∂–º–∏—Ç–µ <b>–°–±—Ä–æ—Å–∏—Ç—å —Ñ–∏–ª—å—Ç—Ä—ã</b> –¥–ª—è –≤—ã–±–æ—Ä–∞ –Ω–æ–≤–æ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è —Ç–æ–≤–∞—Ä–∞.'.$this->pre.'';
					
				}
				
				mysqli_query($con_sql2, 'CREATE TABLE '.$tabservice.' LIKE '.$tabcond.'');
				usleep(250000);
				mysqli_query($con_sql2, 'INSERT INTO '.$tabservice.' (type, cat, gender, brand, size, price, alt, pic, date, time, messid, cond, chatid) SELECT type, cat, gender, brand, size, price, alt, pic, date, time, messid, cond, chatid FROM '.$tabcond.'');
				usleep(250000);
				/* mysqli_query($con_sql2, 'DROP TABLE '.$tabgender.'');
				usleep(250000); */
				
				$merge[] = [["text" => "‚ñ∂Ô∏è–ü–æ–∫–∞–∑–∞—Ç—å", "callback_data" => "ready_buy_cond"]];
				$merge[] = [["text" => "üîÄ–°–±—Ä–æ—Å–∏—Ç—å —Ñ–∏–ª—å—Ç—Ä—ã", "callback_data" => "resetfilters_buy_choose"]];
				$merge[] = [["text" => "‚§¥Ô∏è–í—ã–π—Ç–∏", "callback_data" => "buy_exit_choose_main"]];
				
				$text='–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É <b>–ü–æ–∫–∞–∑–∞—Ç—å</b> –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤.'.$this->pre.'';
				$this->callbackAnswer( $text, $merge);
			}
			else
			{
				$merge[] = [["text" => "‚ñ∂Ô∏è–ü–æ–∫–∞–∑–∞—Ç—å", "callback_data" => "ready_buy_cond"]];
				$merge[] = [["text" => "üîÄ–°–±—Ä–æ—Å–∏—Ç—å —Ñ–∏–ª—å—Ç—Ä—ã", "callback_data" => "resetfilters_buy_choose"]];
				$merge[] = [["text" => "‚§¥Ô∏è–í—ã–π—Ç–∏", "callback_data" => "buy_exit_choose_main"]];
				
				$text='–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É <b>–ü–æ–∫–∞–∑–∞—Ç—å</b> –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤.'.$this->pre.'';
				$this->callbackAnswer( $text, $merge);
			}
			
			
		}
		
		
	}









/////////////////////////////////////////////////FILTER///////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////
	/* public function callback_filter_default_buy()
	{		
		$con_sql2=$this->cmd_sql();
		$tabservice='tabservice'.$this->api->chatId.'';
		
		if(mysqli_query($con_sql2, 'SELECT 1 FROM '.$tabservice.' LIMIT 1')==FALSE)
		{
			$query1=mysqli_query($con_sql2, 'SHOW TABLES LIKE "tabmain%"');
			$con1=mysqli_num_rows($query1);
			
			if($con1!=0)
			{	
			
				$table=[];
				$check=0;
				
				for($i=0;$i<$con1;$i++)
				{
					mysqli_data_seek($query1, $i);
					$row1[$i]=mysqli_fetch_row($query1);
					$tab=$row1[$i][0];
					
					$query=mysqli_query($con_sql2, 'SELECT * FROM '.$tab.' WHERE messid!="0" ORDER by id ASC');
					usleep(100000);
					$con=mysqli_num_rows($query);
						
					if($con!=0)
					{	
						$check=1;
						break;
					}
				}
				
				if($check==1)
				{
				
					$text="–í—ã–±–∏—Ä–∏—Ç–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ —Ñ–∏–ª—å—Ç—Ä—ã. –ü–æ—Å–ª–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Ñ–∏–ª—å—Ç—Ä–æ–≤, –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –ù–∞–∑–∞–¥ –¥–ª—è –ø–µ—Ä–µ—Ö–æ–¥–∞ –≤ –º–µ–Ω—é –ö—É–ø–∏—Ç—å —Ç–æ–≤–∞—Ä.";
					$this->callbackAnswer( $text, $this->keyboards['inline_buy_filter']);
					usleep(100000);
				}
				else
				{
					$text='–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é –≤ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç <b>–Ω–µ—Ç —Ç–æ–≤–∞—Ä–æ–≤ –≤ –ø—Ä–æ–¥–∞–∂–µ</b>. –í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ –º–µ–Ω—é –ö—É–ø–∏—Ç—å —Ç–æ–≤–∞—Ä.';
					$this->callbackAnswer( $text, $this->keyboards['inline_buy_default']);	
				}
				
			}
			else
			{
				$text='–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é –≤ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç <b>–Ω–µ—Ç —Ç–æ–≤–∞—Ä–æ–≤ –≤ –ø—Ä–æ–¥–∞–∂–µ</b>. –í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ –º–µ–Ω—é –ö—É–ø–∏—Ç—å —Ç–æ–≤–∞—Ä.';
				$this->callbackAnswer( $text, $this->keyboards['inline_buy_default']);	
			}
		}
		else
		{
			$query=mysqli_query($con_sql2, 'SELECT * FROM '.$tabservice.' WHERE messid!="0" ORDER by id ASC');
			usleep(100000);
			$con=mysqli_num_rows($query);
			
			if($con!=0)
			{	
				$text="–í—ã–±–∏—Ä–∏—Ç–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ —Ñ–∏–ª—å—Ç—Ä—ã. –ü–æ—Å–ª–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Ñ–∏–ª—å—Ç—Ä–æ–≤, –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –ù–∞–∑–∞–¥ –¥–ª—è –ø–µ—Ä–µ—Ö–æ–¥–∞ –≤ –º–µ–Ω—é –ö—É–ø–∏—Ç—å —Ç–æ–≤–∞—Ä.";
				$this->callbackAnswer( $text, $this->keyboards['inline_buy_filter']);
			}
			else
			{
				$text='–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é –≤ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç <b>–Ω–µ—Ç —Ç–æ–≤–∞—Ä–æ–≤ –≤ –ø—Ä–æ–¥–∞–∂–µ</b>. –í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ –º–µ–Ω—é –ö—É–ø–∏—Ç—å —Ç–æ–≤–∞—Ä.';
				$this->callbackAnswer( $text, $this->keyboards['inline_buy_default']);	
			}
		}
		
	}	 */



/////////////////////////////////////////////////FILTER TYPE///////////////////////////////////////////////////////
/////
/* 	public function callback_filter_buy_type()
	{	
		$con_sql2=$this->cmd_sql();
	
		$tabtype='tabtype'.$this->api->chatId.'';
		$tabservice='tabservice'.$this->api->chatId.'';

		if(mysqli_query($con_sql2, 'SELECT 1 FROM '.$tabservice.' LIMIT 1'))
		{
			if(mysqli_query($con_sql2, 'SELECT 1 FROM '.$tabtype.' LIMIT 1'))
			{
				$query2=mysqli_query($con_sql2, 'SELECT DISTINCT type FROM '.$tabtype.' WHERE messid!="0"') ;
				$con2=mysqli_num_rows($query2);
				$addtext="";
				for($i1=0;$i1<$con2;$i1++)
				{
					
					mysqli_data_seek($query2, $i1);
					$row2[$i1]=mysqli_fetch_row($query2);
					

					$row2[$i1][0]=$this->convert_rus($row2[$i1][0]);
					
					if($i1==0)
					{
						$addtext=$row2[$i1][0];
					}
					else
					{
						$addtext = $addtext . ', '.$row2[$i1][0].'';
					}
				}
				
				if(explode(',', $addtext))
				{
					$text='–í—ã —É–∂–µ –≤—ã–±—Ä–∞–ª–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ —Ç–æ–≤–∞—Ä–∞ <b>'.$addtext.'</b>.'.PHP_EOL.'–í—ã–±–∏—Ä–∏—Ç–µ –¥—Ä—É–≥–æ–π –ø–∞—Ä–∞–º–µ—Ç—Ä –∏–ª–∏ –Ω–∞–∂–º–∏—Ç–µ <b>–°–±—Ä–æ—Å–∏—Ç—å —Ñ–∏–ª—å—Ç—Ä—ã</b> –¥–ª—è –≤—ã–±–æ—Ä–∞ –Ω–æ–≤–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ —Ç–æ–≤–∞—Ä–∞.';
					$this->callbackAnswer( $text, $this->keyboards['inline_buy_filter']);
				}
				else
				{
					$text='–í—ã —É–∂–µ –≤—ã–±—Ä–∞–ª–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏—é —Ç–æ–≤–∞—Ä–∞ <b>'.$addtext.'</b>.'.PHP_EOL.'–í—ã–±–∏—Ä–∏—Ç–µ –¥—Ä—É–≥–æ–π –ø–∞—Ä–∞–º–µ—Ç—Ä –∏–ª–∏ –Ω–∞–∂–º–∏—Ç–µ <b>–°–±—Ä–æ—Å–∏—Ç—å —Ñ–∏–ª—å—Ç—Ä—ã</b> –¥–ª—è –≤—ã–±–æ—Ä–∞ –Ω–æ–≤–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ —Ç–æ–≤–∞—Ä–∞.';
					$this->callbackAnswer( $text, $this->keyboards['inline_buy_filter']);
				}
			}
			else
			{
				$merge=$this->cmd_filter_buy_type();
				$merge[] = [["text" => "üîÉ–°–±—Ä–æ—Å–∏—Ç—å —Ñ–∏–ª—å—Ç—Ä—ã", "callback_data" => "resetfilters_default_buy"]];
				$merge[] = [["text" => "‚¨ÖÔ∏è–ù–∞–∑–∞–¥", "callback_data" => "buy_back_filter_type"], ["text" => "‚§¥Ô∏è–í—ã–π—Ç–∏", "callback_data" => "buy_exit_filter_type"]];

				$text="–í—ã–±–∏—Ä–∏—Ç–µ –æ–¥–Ω—É –∏–ª–∏ –Ω–µ—Å–∫–æ–ª—å–∫–æ –∫–∞—Ç–µ–≥–æ—Ä–∏–π —Ç–æ–≤–∞—Ä–∞, –∑–∞—Ç–µ–º –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –ù–∞–∑–∞–¥ –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏. ";
				$this->callbackAnswer( $text, $merge);
			}
		}
		else
		{
			$merge=$this->cmd_filter_buy_type();
			$merge[] = [["text" => "üîÉ–°–±—Ä–æ—Å–∏—Ç—å —Ñ–∏–ª—å—Ç—Ä—ã", "callback_data" => "resetfilters_default_buy"]];
			$merge[] = [["text" => "‚¨ÖÔ∏è–ù–∞–∑–∞–¥", "callback_data" => "buy_back_filter_type"], ["text" => "‚§¥Ô∏è–í—ã–π—Ç–∏", "callback_data" => "buy_exit_filter_type"]];

			$text="–í—ã–±–∏—Ä–∏—Ç–µ –æ–¥–Ω—É –∏–ª–∏ –Ω–µ—Å–∫–æ–ª—å–∫–æ –∫–∞—Ç–µ–≥–æ—Ä–∏–π —Ç–æ–≤–∞—Ä–∞, –∑–∞—Ç–µ–º –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –ù–∞–∑–∞–¥ –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏. ";
			$this->callbackAnswer( $text, $merge);
		}
	}	

/////
	public function cmd_filter_buy_type()
	{
		
		$con_sql2=$this->cmd_sql();
	
		$tabtype='tabtype'.$this->api->chatId.'';
		$tabservice='tabservice'.$this->api->chatId.'';
		$tabmain='tabmain'.$this->api->chatId.'';
		
		
		if(mysqli_query($con_sql2, 'SELECT 1 FROM '.$tabservice.' LIMIT 1'))
		{

			$query2=mysqli_query($con_sql2, 'SELECT DISTINCT type FROM '.$tabservice.' WHERE messid!="0"') ;
			$con2=mysqli_num_rows($query2);
			
			$puttemp=[];
			
			for($i1=0;$i1<$con2;$i1++)
			{
				mysqli_data_seek($query2, $i1);
				$row2[$i1]=mysqli_fetch_row($query2);
			
				if(in_array($row2[$i1][0], $puttemp)==FALSE)								
				{
					$puttemp[]=$row2[$i1][0];
				}
			}
			
			if(mysqli_query($con_sql2, 'SELECT 1 FROM '.$tabtype.' LIMIT 1'))
			{
				$query2=mysqli_query($con_sql2, 'SELECT DISTINCT type FROM '.$tabtype.' WHERE messid!="0"') ;
				$con2=mysqli_num_rows($query2);
				
				for($i1=0;$i1<$con2;$i1++)
				{
					mysqli_data_seek($query2, $i1);
					$row2[$i1]=mysqli_fetch_row($query2);
				
					if(in_array($row2[$i1][0], $puttemp))
					{	
						$search=array_search($row2[$i1][0], $puttemp);
						unset($puttemp[$search]);
					}
				}
			}
			
		}
		else
		{
		
			$query1=mysqli_query($con_sql2, 'SHOW TABLES LIKE "tabmain%"') ;
			$con1=mysqli_num_rows($query1);
			
			$table=[];
			
			for($i=0;$i<$con1;$i++)
			{
				mysqli_data_seek($query1, $i);
				$row1[$i]=mysqli_fetch_row($query1);
				$table[]=$row1[$i][0];	
			}
			
			$puttemp=[];
		
			for($i=0;$i<$con1;$i++)
			{
				
				$tab=$table[$i];
	
				$query2=mysqli_query($con_sql2, 'SELECT DISTINCT type FROM '.$tab.' WHERE messid!="0"') ;
				usleep(150000);
				$con2=mysqli_num_rows($query2);
				
				if($con2!=0)
				{
					for($i1=0;$i1<$con2;$i1++)
					{
						mysqli_data_seek($query2, $i1);
						$row2[$i1]=mysqli_fetch_row($query2);
						
						if(in_array($row2[$i1][0], $puttemp)==FALSE)								
						{
							$puttemp[]=$row2[$i1][0];
						}
					}
				}
				
			}
			
			
			if(mysqli_query($con_sql2, 'SELECT 1 FROM '.$tabtype.' LIMIT 1'))
			{
				$query2=mysqli_query($con_sql2, 'SELECT DISTINCT type FROM '.$tabtype.' WHERE messid!="0"') ;
				$con2=mysqli_num_rows($query2);
				
				for($i1=0;$i1<$con2;$i1++)
				{
					mysqli_data_seek($query2, $i1);
					$row2[$i1]=mysqli_fetch_row($query2);
				
					if(in_array($row2[$i1][0], $puttemp))
					{	
						$search=array_search($row2[$i1][0], $puttemp);
						unset($puttemp[$search]);
					}
				}
			}
			
		}
		
		
		$put=[];
		
		foreach($puttemp as $value)
		{
			$put[]=$value;
		}
		
		$cnt=count($put);
	
		$maxbuttons=1;
		$ceil=ceil($cnt/$maxbuttons);

		$include=''.dirname(__FILE__).'/include.php';
		
		if(file_exists($include)==FALSE)
		{
			touch($include);
				
			$insert='<?php
		
		
			class TelegramBotfunc{';
			file_put_contents($include, $insert . PHP_EOL,FILE_APPEND);
				
		}
		else
		{
			$getinclude=file($include);
			unset($getinclude[array_key_last($getinclude)]);
			file_put_contents($include, $getinclude);
		}
		
		$u=0;
		$merge=[];
	
		
		for($i1=0;$i1<$ceil;$i1++)
		{
			$put1=[];
			
			for($i2=0;$i2<$maxbuttons;$i2++)
			{	
		
				if(isset($put[$u]))
				{
					
					$buttext=$this->convert_rus($put[$u]);
					
					$put1[]=["text" => "$buttext", "callback_data" => 'buy_select_type_'.$this->api->chatId.'_'.$put[$u].''];
					
					if(preg_match('/callback_buy_select_type_'.$this->api->chatId.'_'.$put[$u].'/', file_get_contents($include))==FALSE)
					{
						$insert='
						public function callback_buy_select_type_'.$this->api->chatId.'_'.$put[$u].'()
						{	
					
							$bot = new TestBot;
							$bot->api->getWebhookUpdate();
							
							$con_sql2=$bot->cmd_sql1();
							
							if(mysqli_query($con_sql2, &#039;SELECT 1 FROM '.$tabservice.' LIMIT 1&#039;))
							{	
								if(mysqli_query($con_sql2, &#039;SELECT 1 FROM '.$tabtype.' LIMIT 1&#039;)==FALSE)
								{
									mysqli_query($con_sql2, &#039;CREATE TABLE '.$tabtype.' LIKE '.$tabmain.'&#039;) ;
									usleep(250000);
								}
								
								mysqli_query($con_sql2, &#039;INSERT INTO '.$tabtype.' (type, cat, gender, brand, size, price, alt, pic, date, time, messid, cond, chatid) SELECT type, cat, gender, brand, size, price, alt, pic, date, time, messid, cond, chatid FROM '.$tabservice.' WHERE type="'.$put[$u].'"&#039;);
								usleep(250000);
								
								$merge=$bot->cmd_filter_buy_type();
								usleep(150000);
								
								$merge[] = [["text" => "üîÉ–°–±—Ä–æ—Å–∏—Ç—å —Ñ–∏–ª—å—Ç—Ä—ã", "callback_data" => "resetfilters_default_buy"]];
								$merge[] = [["text" => "‚¨ÖÔ∏è–ù–∞–∑–∞–¥", "callback_data" => "buy_back_filter_type"], ["text" => "‚§¥Ô∏è–í—ã–π—Ç–∏", "callback_data" => "buy_exit_filter_type"]];
								
								if(isset($bot->api->body[&#039;callback_query&#039;]["id"]))
								{
									$callback_query_id=$bot->api->body[&#039;callback_query&#039;]["id"];
									$bot->api->answerCallbackQuery($callback_query_id);
								}
								
								$text = "–í—ã –≤—ã–±—Ä–∞–ª–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏—é —Ç–æ–≤–∞—Ä–∞ <b>'.$buttext.'</b>.'.PHP_EOL.'–ú–æ–∂–µ—Ç–µ –≤—ã–±—Ä–∞—Ç—å –µ—â–µ –æ–¥–Ω—É –∏–ª–∏ –Ω–∞–∂–∞—Ç—å –∫–Ω–æ–ø–∫—É <b>–ù–∞–∑–∞–¥</b> –¥–ª—è –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –≤—ã–±—Ä–∞–Ω–Ω—ã—Ö —Ñ–∏–ª—å—Ç—Ä–æ–≤.";
								
								$bot->api->editMessageText([
								&#039;chat_id&#039; => $bot->api->body[&#039;callback_query&#039;][&#039;message&#039;][&#039;chat&#039;]["id"],
								&#039;message_id&#039; => $bot->api->body[&#039;callback_query&#039;][&#039;message&#039;][&#039;message_id&#039;],
								&#039;text&#039; => $text,
								&#039;parse_mode&#039; => "HTML",
								&#039;reply_markup&#039; => json_encode( [&#039;inline_keyboard&#039;=>$merge] ),
								]);
								usleep(150000);
				
							}
							else
							{
								
								if(mysqli_query($con_sql2, &#039;SELECT 1 FROM '.$tabtype.' LIMIT 1&#039;)==FALSE)
								{
									mysqli_query($con_sql2, &#039;CREATE TABLE '.$tabtype.' LIKE '.$tabmain.'&#039;) ;
									usleep(250000);
									
									$query2=mysqli_query($con_sql2, &#039;SHOW TABLES LIKE "tabmain%"&#039;) ;
									$con2=mysqli_num_rows($query2);
									$table=[];
								
									for($i=0;$i<$con2;$i++)
									{
										mysqli_data_seek($query2, $i);
										$row2[$i]=mysqli_fetch_row($query2);
										$table[]=$row2[$i][0];	
											
										mysqli_query($con_sql2, &#039;INSERT INTO '.$tabtype.' (type, cat, gender, brand, size, price, alt, pic, date, time, messid, cond, chatid) SELECT type, cat, gender, brand, size, price, alt, pic, date, time, messid, cond, chatid FROM &#039;.$table[$i].&#039; WHERE type="'.$put[$u].'"&#039;);
										usleep(250000);
									}
								}
								else
								{	
									$query1=mysqli_query($con_sql2, &#039;SELECT DISTINCT type FROM '.$tabtype.' WHERE messid!="0"&#039;) ;
									$con1=mysqli_num_rows($query1);
									
									for($i1=0;$i1<$con1;$i1++)
									{
										mysqli_data_seek($query1, $i1);
										$row1[$i1]=mysqli_fetch_row($query1);
									}
									
									if(in_array(&#039;'.$put[$u].'&#039;, $row1)==FALSE)
									{
										$query2=mysqli_query($con_sql2, &#039;SHOW TABLES LIKE "tabmain%"&#039;) ;
										$con2=mysqli_num_rows($query2);
										$table=[];
									
										for($i=0;$i<$con2;$i++)
										{
											mysqli_data_seek($query2, $i);
											$row2[$i]=mysqli_fetch_row($query2);
											$table[]=$row2[$i][0];	
												
											mysqli_query($con_sql2, &#039;INSERT INTO '.$tabtype.' (type, cat, gender, brand, size, price, alt, pic, date, time, messid, cond, chatid) SELECT type, cat, gender, brand, size, price, alt, pic, date, time, messid, cond, chatid FROM &#039;.$table[$i].&#039; WHERE type="'.$put[$u].'"&#039;);
											usleep(250000);
										}
									}
								}
									
								$merge=$bot->cmd_filter_buy_type();
								usleep(150000);
								
								$merge[] = [["text" => "üîÉ–°–±—Ä–æ—Å–∏—Ç—å —Ñ–∏–ª—å—Ç—Ä—ã", "callback_data" => "resetfilters_default_buy"]];
								$merge[] = [["text" => "‚¨ÖÔ∏è–ù–∞–∑–∞–¥", "callback_data" => "buy_back_filter_type"], ["text" => "‚§¥Ô∏è–í—ã–π—Ç–∏", "callback_data" => "buy_exit_filter_type"]];
								
								if(isset($bot->api->body[&#039;callback_query&#039;]["id"]))
								{
									$callback_query_id=$bot->api->body[&#039;callback_query&#039;]["id"];
									$bot->api->answerCallbackQuery($callback_query_id);
								}
								$text = "–í—ã –≤—ã–±—Ä–∞–ª–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏—é —Ç–æ–≤–∞—Ä–∞ <b>'.$buttext.'</b>.'.PHP_EOL.'–ú–æ–∂–µ—Ç–µ –≤—ã–±—Ä–∞—Ç—å –µ—â–µ –æ–¥–Ω—É –∏–ª–∏ –Ω–∞–∂–∞—Ç—å –∫–Ω–æ–ø–∫—É <b>–ù–∞–∑–∞–¥</b> –¥–ª—è –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –≤—ã–±—Ä–∞–Ω–Ω—ã—Ö —Ñ–∏–ª—å—Ç—Ä–æ–≤.";
								
								$bot->api->editMessageText([
								&#039;chat_id&#039; => $bot->api->body[&#039;callback_query&#039;][&#039;message&#039;][&#039;chat&#039;]["id"],
								&#039;message_id&#039; => $bot->api->body[&#039;callback_query&#039;][&#039;message&#039;][&#039;message_id&#039;],
								&#039;text&#039; => $text,
								&#039;parse_mode&#039; => "HTML",
								&#039;reply_markup&#039; => json_encode( [&#039;inline_keyboard&#039;=>$merge] ),
								]);
								usleep(150000);
							}
								
						}';
						file_put_contents($include, html_entity_decode($insert, ENT_QUOTES) . PHP_EOL . PHP_EOL,FILE_APPEND);
					}
				
				}
				
				$u++;
			}	
			
			$merge[]=$put1;
			unset($put1);
			
		}
		

		$insert='}';
		file_put_contents($include, $insert,FILE_APPEND);
		
		
		return $merge;
	}



/////
	public function callback_buy_back_filter_type()
	{		
		$con_sql2=$this->cmd_sql();
		
		$tabtype='tabtype'.$this->api->chatId.'';
		$tabservice='tabservice'.$this->api->chatId.'';
		$tabmain='tabmain'.$this->api->chatId.'';
		
		if(mysqli_query($con_sql2, 'SELECT 1 FROM '.$tabservice.' LIMIT 1'))
		{
			if(mysqli_query($con_sql2, 'SELECT 1 FROM '.$tabtype.' LIMIT 1'))
			{
				$query2=mysqli_query($con_sql2, 'SELECT DISTINCT type FROM '.$tabtype.' WHERE messid!="0"') ;
				$con2=mysqli_num_rows($query2);
				$addtext="";
				for($i1=0;$i1<$con2;$i1++)
				{
					
					mysqli_data_seek($query2, $i1);
					$row2[$i1]=mysqli_fetch_row($query2);
					
					$row2[$i1][0]=$this->convert_rus($row2[$i1][0]);
					
					
					if($i1==0)
					{
						$addtext=$row2[$i1][0];
					}
					else
					{
						$addtext = $addtext . ', '.$row2[$i1][0].'';
					}
				}
				
				if(explode(',', $addtext))
				{
					$text='–í—ã –≤—ã–±—Ä–∞–ª–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ —Ç–æ–≤–∞—Ä–∞ <b>'.$addtext.'</b>.'.PHP_EOL.'–í—ã–±–∏—Ä–∏—Ç–µ –¥—Ä—É–≥–æ–π –ø–∞—Ä–∞–º–µ—Ç—Ä –∏–ª–∏ –Ω–∞–∂–º–∏—Ç–µ <b>–°–±—Ä–æ—Å–∏—Ç—å —Ñ–∏–ª—å—Ç—Ä—ã</b> –¥–ª—è –≤—ã–±–æ—Ä–∞ –Ω–æ–≤–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ —Ç–æ–≤–∞—Ä–∞.';
					
				}
				else
				{
					$text='–í—ã –≤—ã–±—Ä–∞–ª–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏—é —Ç–æ–≤–∞—Ä–∞ <b>'.$addtext.'</b>.'.PHP_EOL.'–í—ã–±–∏—Ä–∏—Ç–µ –¥—Ä—É–≥–æ–π –ø–∞—Ä–∞–º–µ—Ç—Ä –∏–ª–∏ –Ω–∞–∂–º–∏—Ç–µ <b>–°–±—Ä–æ—Å–∏—Ç—å —Ñ–∏–ª—å—Ç—Ä—ã</b> –¥–ª—è –≤—ã–±–æ—Ä–∞ –Ω–æ–≤–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ —Ç–æ–≤–∞—Ä–∞.';
					
				}
				
				
				mysqli_query($con_sql2, 'DROP TABLE '.$tabservice.'');
				usleep(250000);
				mysqli_query($con_sql2, 'CREATE TABLE '.$tabservice.' LIKE '.$tabtype.'');
				usleep(250000);
				mysqli_query($con_sql2, 'INSERT INTO '.$tabservice.' (type, cat, gender, brand, size, price, alt, pic, date, time, messid, cond, chatid) SELECT type, cat, gender, brand, size, price, alt, pic, date, time, messid, cond, chatid FROM '.$tabtype.'');
				usleep(250000);
				
				
				$this->callbackAnswer( $text, $this->keyboards['inline_buy_filter']);

			}
			else
			{
				$text="–í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –≤ —Ä–∞–∑–¥–µ–ª –§–∏–ª—å—Ç—Ä –º–µ–Ω—é –ö—É–ø–∏—Ç—å —Ç–æ–≤–∞—Ä. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–¥–µ–ª–∞–π—Ç–µ —Å–≤–æ–π –≤—ã–±–æ—Ä.";
				$this->callbackAnswer( $text, $this->keyboards['inline_buy_filter']);
			}
		}
		else
		{
			if(mysqli_query($con_sql2, 'SELECT 1 FROM '.$tabtype.' LIMIT 1'))
			{
				
				$query2=mysqli_query($con_sql2, 'SELECT DISTINCT type FROM '.$tabtype.' WHERE messid!="0"') ;
				$con2=mysqli_num_rows($query2);
				$addtext="";
				for($i1=0;$i1<$con2;$i1++)
				{
					
					mysqli_data_seek($query2, $i1);
					$row2[$i1]=mysqli_fetch_row($query2);
					
					$row2[$i1][0]=$this->convert_rus($row2[$i1][0]);
					
					
					if($i1==0)
					{
						$addtext=$row2[$i1][0];
					}
					else
					{
						$addtext = $addtext . ', '.$row2[$i1][0].'';
					}
				}
				
				if(explode(',', $addtext))
				{
					$text='–í—ã –≤—ã–±—Ä–∞–ª–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ —Ç–æ–≤–∞—Ä–∞ <b>'.$addtext.'</b>.'.PHP_EOL.'–í—ã–±–∏—Ä–∏—Ç–µ –¥—Ä—É–≥–æ–π –ø–∞—Ä–∞–º–µ—Ç—Ä –∏–ª–∏ –Ω–∞–∂–º–∏—Ç–µ <b>–°–±—Ä–æ—Å–∏—Ç—å —Ñ–∏–ª—å—Ç—Ä—ã</b> –¥–ª—è –≤—ã–±–æ—Ä–∞ –Ω–æ–≤–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ —Ç–æ–≤–∞—Ä–∞.';
					
				}
				else
				{
					$text='–í—ã –≤—ã–±—Ä–∞–ª–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏—é —Ç–æ–≤–∞—Ä–∞ <b>'.$addtext.'</b>.'.PHP_EOL.'–í—ã–±–∏—Ä–∏—Ç–µ –¥—Ä—É–≥–æ–π –ø–∞—Ä–∞–º–µ—Ç—Ä –∏–ª–∏ –Ω–∞–∂–º–∏—Ç–µ <b>–°–±—Ä–æ—Å–∏—Ç—å —Ñ–∏–ª—å—Ç—Ä—ã</b> –¥–ª—è –≤—ã–±–æ—Ä–∞ –Ω–æ–≤–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ —Ç–æ–≤–∞—Ä–∞.';
					
				}
				
				mysqli_query($con_sql2, 'CREATE TABLE '.$tabservice.' LIKE '.$tabtype.'');
				usleep(250000);
				mysqli_query($con_sql2, 'INSERT INTO '.$tabservice.' (type, cat, gender, brand, size, price, alt, pic, date, time, messid, cond, chatid) SELECT type, cat, gender, brand, size, price, alt, pic, date, time, messid, cond, chatid FROM '.$tabtype.'');
				usleep(250000);
				mysqli_query($con_sql2, 'DROP TABLE '.$tabtype.'');
				usleep(250000);
				
				$this->callbackAnswer( $text, $this->keyboards['inline_buy_filter']);
			}
			else
			{
				$text="–í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –≤ —Ä–∞–∑–¥–µ–ª –§–∏–ª—å—Ç—Ä –º–µ–Ω—é –ö—É–ø–∏—Ç—å —Ç–æ–≤–∞—Ä. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–¥–µ–ª–∞–π—Ç–µ —Å–≤–æ–π –≤—ã–±–æ—Ä.";
				$this->callbackAnswer( $text, $this->keyboards['inline_buy_filter']);
			}
			
			
		}
		
		
	}	
	

/////
	public function callback_buy_exit_filter_type()
	{		
		$con_sql2=$this->cmd_sql();
		
		if($this->cmd_isadmin())
		{
			$text='–í—ã –≤—ã—à–ª–∏ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–¥–µ–ª–∞–π—Ç–µ —Å–≤–æ–π –≤—ã–±–æ—Ä.';
		
			//$this->callbackAnswer( $text, $this->keyboards['inline_default_admin']);
	
			
			if(isset($this->api->body['callback_query']["id"]))
			{
				$callback_query_id=$this->api->body['callback_query']["id"];
				$this->api->answerCallbackQuery($callback_query_id);
			}
			
			$this->api->sendMessage([
				'text' => $text,
				'reply_markup' => json_encode( ['inline_keyboard'=>$this->keyboards['inline_default_admin']]),
				'disable_notification' => TRUE,
				'disable_web_page_preview' => TRUE,
				'parse_mode'=> "HTML"
				]);
				usleep(150000);
		}
		else
		{
			$text='–í—ã –≤—ã—à–ª–∏ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–¥–µ–ª–∞–π—Ç–µ —Å–≤–æ–π –≤—ã–±–æ—Ä.';
		
			//$this->callbackAnswer( $text, $this->keyboards['inline_default']);

			
			if(isset($this->api->body['callback_query']["id"]))
			{
				$callback_query_id=$this->api->body['callback_query']["id"];
				$this->api->answerCallbackQuery($callback_query_id);
			}
			
			$this->api->sendMessage([
				'text' => $text,
				'reply_markup' => json_encode( ['inline_keyboard'=>$this->keyboards['inline_default']]),
				'disable_notification' => TRUE,
				'disable_web_page_preview' => TRUE,
				'parse_mode'=> "HTML"
				]);
				usleep(150000);
		}
			
	} */
/////////////////////////////////////////////////FILTER CAT///////////////////////////////////////////////////////
/////
/* 	public function callback_filter_buy_cat()
	{	
		$con_sql2=$this->cmd_sql();
	
		$tabcat='tabcat'.$this->api->chatId.'';
		$tabservice='tabservice'.$this->api->chatId.'';

		if(mysqli_query($con_sql2, 'SELECT 1 FROM '.$tabservice.' LIMIT 1'))
		{
			if(mysqli_query($con_sql2, 'SELECT 1 FROM '.$tabcat.' LIMIT 1'))
			{
				$query2=mysqli_query($con_sql2, 'SELECT DISTINCT cat FROM '.$tabcat.' WHERE messid!="0"');
				$con2=mysqli_num_rows($query2);
				$addtext="";
				for($i1=0;$i1<$con2;$i1++)
				{
					
					mysqli_data_seek($query2, $i1);
					$row2[$i1]=mysqli_fetch_row($query2);
					
					
					$row2[$i1][0]=$this->convert_rus($row2[$i1][0]);
					
					if($i1==0)
					{
						$addtext=$row2[$i1][0];
					}
					else
					{
						$addtext = $addtext . ', '.$row2[$i1][0].'';
					}
				}
				
				if(explode(',', $addtext))
				{
					$text='–í—ã —É–∂–µ –≤—ã–±—Ä–∞–ª–∏ –Ω–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏—è —Ç–æ–≤–∞—Ä–∞ <b>'.$addtext.'</b>.'.PHP_EOL.'–í—ã–±–∏—Ä–∏—Ç–µ –¥—Ä—É–≥–æ–π –ø–∞—Ä–∞–º–µ—Ç—Ä –∏–ª–∏ –Ω–∞–∂–º–∏—Ç–µ <b>–°–±—Ä–æ—Å–∏—Ç—å —Ñ–∏–ª—å—Ç—Ä—ã</b> –¥–ª—è –≤—ã–±–æ—Ä–∞ –¥—Ä—É–≥–æ–≥–æ –Ω–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏—è —Ç–æ–≤–∞—Ä–∞.';
					$this->callbackAnswer( $text, $this->keyboards['inline_buy_filter']);
				}
				else
				{
					$text='–í—ã —É–∂–µ –≤—ã–±—Ä–∞–ª–∏ –≤–∏–¥ <b>'.$addtext.'</b>.'.PHP_EOL.'–í—ã–±–∏—Ä–∏—Ç–µ –¥—Ä—É–≥–æ–π –ø–∞—Ä–∞–º–µ—Ç—Ä –∏–ª–∏ –Ω–∞–∂–º–∏—Ç–µ <b>–°–±—Ä–æ—Å–∏—Ç—å —Ñ–∏–ª—å—Ç—Ä—ã</b> –¥–ª—è –≤—ã–±–æ—Ä–∞ –¥—Ä—É–≥–æ–≥–æ –Ω–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏—è —Ç–æ–≤–∞—Ä–∞.';
					$this->callbackAnswer( $text, $this->keyboards['inline_buy_filter']);
				}
			}
			else
			{
				$merge=$this->cmd_filter_buy_cat();
				$merge[] = [["text" => "üîÄ–°–±—Ä–æ—Å–∏—Ç—å —Ñ–∏–ª—å—Ç—Ä—ã", "callback_data" => "resetfilters_default_buy"]];
				$merge[] = [["text" => "‚¨ÖÔ∏è–ù–∞–∑–∞–¥", "callback_data" => "buy_back_filter_cat"], ["text" => "‚§¥Ô∏è–í—ã–π—Ç–∏", "callback_data" => "buy_exit_filter_type"]];

				$text="–í—ã–±–∏—Ä–∏—Ç–µ –æ–¥–Ω–æ –∏–ª–∏ –Ω–µ—Å–∫–æ–ª—å–∫–æ –Ω–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–π —Ç–æ–≤–∞—Ä–∞, –∑–∞—Ç–µ–º –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –ù–∞–∑–∞–¥ –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏. ";
				$this->callbackAnswer( $text, $merge);
			}
		}
		else
		{
			$merge=$this->cmd_filter_buy_cat();
			$merge[] = [["text" => "üîÄ–°–±—Ä–æ—Å–∏—Ç—å —Ñ–∏–ª—å—Ç—Ä—ã", "callback_data" => "resetfilters_default_buy"]];
			$merge[] = [["text" => "‚¨ÖÔ∏è–ù–∞–∑–∞–¥", "callback_data" => "buy_back_filter_cat"], ["text" => "‚§¥Ô∏è–í—ã–π—Ç–∏", "callback_data" => "buy_exit_filter_type"]];

			$text="–í—ã–±–∏—Ä–∏—Ç–µ –æ–¥–Ω–æ –∏–ª–∏ –Ω–µ—Å–∫–æ–ª—å–∫–æ –Ω–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–π —Ç–æ–≤–∞—Ä–∞, –∑–∞—Ç–µ–º –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –ù–∞–∑–∞–¥ –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏. ";
			$this->callbackAnswer( $text, $merge);
		}
	}	


/////
	public function cmd_filter_buy_cat()
	{
		
		$con_sql2=$this->cmd_sql();
	
		$tabcat='tabcat'.$this->api->chatId.'';
		$tabservice='tabservice'.$this->api->chatId.'';
		$tabmain='tabmain'.$this->api->chatId.'';
		
		
		if(mysqli_query($con_sql2, 'SELECT 1 FROM '.$tabservice.' LIMIT 1'))
		{

			$query2=mysqli_query($con_sql2, 'SELECT DISTINCT cat FROM '.$tabservice.' WHERE messid!="0"');
			$con2=mysqli_num_rows($query2);
			
			$puttemp=[];
			
			for($i1=0;$i1<$con2;$i1++)
			{
				mysqli_data_seek($query2, $i1);
				$row2[$i1]=mysqli_fetch_row($query2);
			
				if(in_array($row2[$i1][0], $puttemp)==FALSE)								
				{
					$puttemp[]=$row2[$i1][0];
				}
			}
			
			if(mysqli_query($con_sql2, 'SELECT 1 FROM '.$tabcat.' LIMIT 1'))
			{
				$query2=mysqli_query($con_sql2, 'SELECT DISTINCT cat FROM '.$tabcat.' WHERE messid!="0"');
				$con2=mysqli_num_rows($query2);
				
				for($i1=0;$i1<$con2;$i1++)
				{
					mysqli_data_seek($query2, $i1);
					$row2[$i1]=mysqli_fetch_row($query2);
				
					if(in_array($row2[$i1][0], $puttemp))
					{	
						$search=array_search($row2[$i1][0], $puttemp);
						unset($puttemp[$search]);
					}
				}
			}
			
		}
		else
		{
		
			$query1=mysqli_query($con_sql2, 'SHOW TABLES LIKE "tabmain%"');
			$con1=mysqli_num_rows($query1);
			
			$table=[];
			
			for($i=0;$i<$con1;$i++)
			{
				mysqli_data_seek($query1, $i);
				$row1[$i]=mysqli_fetch_row($query1);
				$table[]=$row1[$i][0];	
			}
			
			$puttemp=[];
		
			for($i=0;$i<$con1;$i++)
			{
				
				$tab=$table[$i];
	
				$query2=mysqli_query($con_sql2, 'SELECT DISTINCT cat FROM '.$tab.' WHERE messid!="0"');
				usleep(100000);
				$con2=mysqli_num_rows($query2);
				
				if($con2!=0)
				{
					for($i1=0;$i1<$con2;$i1++)
					{
						mysqli_data_seek($query2, $i1);
						$row2[$i1]=mysqli_fetch_row($query2);
						
						if(in_array($row2[$i1][0], $puttemp)==FALSE)								
						{
							$puttemp[]=$row2[$i1][0];
						}
					}
				}
				
			}
			
			
			if(mysqli_query($con_sql2, 'SELECT 1 FROM '.$tabcat.' LIMIT 1'))
			{
				$query2=mysqli_query($con_sql2, 'SELECT DISTINCT cat FROM '.$tabcat.' WHERE messid!="0"');
				$con2=mysqli_num_rows($query2);
				
				for($i1=0;$i1<$con2;$i1++)
				{
					mysqli_data_seek($query2, $i1);
					$row2[$i1]=mysqli_fetch_row($query2);
				
					if(in_array($row2[$i1][0], $puttemp))
					{	
						$search=array_search($row2[$i1][0], $puttemp);
						unset($puttemp[$search]);
					}
				}
			}
			
		}
		
		
		$put=[];
		
		foreach($puttemp as $value)
		{
			$put[]=$value;
		}
			
		$cnt=count($put);
		
		$maxbuttons=1;
		$ceil=ceil($cnt/$maxbuttons);

		$include=''.dirname(__FILE__).'/include'.$this->api->chatId.'.php';
		
		if(file_exists($include)==FALSE)
		{
			touch($include);
				
			$insert='<?php
		
		
			class TelegramBotfunc{';
			file_put_contents($include, $insert . PHP_EOL,FILE_APPEND);
				
		}
		else
		{
			$getinclude=file($include);
			unset($getinclude[array_key_last($getinclude)]);
			file_put_contents($include, $getinclude);
		}
		
		$u=0;
		$merge=[];
		
		
		for($i1=0;$i1<$ceil;$i1++)
		{
			$put1=[];
			
			for($i2=0;$i2<$maxbuttons;$i2++)
			{	
		
				if(isset($put[$u]))
				{
					
					$buttext=$this->convert_rus($put[$u]);
					
					$put1[]=["text" => "$buttext", "callback_data" => 'buy_select_cat_'.$this->api->chatId.'_'.$put[$u].''];
					
					if(preg_match('/callback_buy_select_cat_'.$this->api->chatId.'_'.$put[$u].'/', file_get_contents($include))==FALSE)
					{
						$insert='
						public function callback_buy_select_cat_'.$this->api->chatId.'_'.$put[$u].'()
						{	
					
							$bot = new TestBot;
							$bot->api->getWebhookUpdate();
							
							$con_sql2=$bot->cmd_sql();
							

							if(mysqli_query($con_sql2, &#039;SELECT 1 FROM '.$tabservice.' LIMIT 1&#039;))
							{	
								if(mysqli_query($con_sql2, &#039;SELECT 1 FROM '.$tabcat.' LIMIT 1&#039;)==FALSE)
								{
									mysqli_query($con_sql2, &#039;CREATE TABLE '.$tabcat.' LIKE '.$tabmain.'&#039;);
									usleep(250000);
								}
								
								mysqli_query($con_sql2, &#039;INSERT INTO '.$tabcat.' (type, cat, gender, brand, size, price, alt, pic, date, time, messid, cond, chatid) SELECT type, cat, gender, brand, size, price, alt, pic, date, time, messid, cond, chatid FROM '.$tabservice.' WHERE cat="'.$put[$u].'"&#039;);
								usleep(250000);
								

								$merge=$bot->cmd_filter_buy_cat();
								usleep(100000);
								
								$merge[] = [["text" => "üîÄ–°–±—Ä–æ—Å–∏—Ç—å —Ñ–∏–ª—å—Ç—Ä—ã", "callback_data" => "resetfilters_default_buy"]];
								$merge[] = [["text" => "‚¨ÖÔ∏è–ù–∞–∑–∞–¥", "callback_data" => "buy_back_filter_cat"], ["text" => "‚§¥Ô∏è–í—ã–π—Ç–∏", "callback_data" => "buy_exit_filter_type"]];
								
								if(isset($bot->api->body[&#039;callback_query&#039;]["id"]))
								{
									$callback_query_id=$bot->api->body[&#039;callback_query&#039;]["id"];
									$bot->api->answerCallbackQuery($callback_query_id);
								}
								
								$text = "–í—ã –≤—ã–±—Ä–∞–ª–∏ –≤–∏–¥ <b>'.$buttext.'</b>.'.PHP_EOL.'–ú–æ–∂–µ—Ç–µ –≤—ã–±—Ä–∞—Ç—å –µ—â–µ –æ–¥–Ω–æ –∏–ª–∏ –Ω–∞–∂–∞—Ç—å –∫–Ω–æ–ø–∫—É <b>–ù–∞–∑–∞–¥</b> –¥–ª—è –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –≤—ã–±—Ä–∞–Ω–Ω—ã—Ö —Ñ–∏–ª—å—Ç—Ä–æ–≤.";
								
								$bot->api->editMessageText([
								&#039;chat_id&#039; => $bot->api->body[&#039;callback_query&#039;][&#039;message&#039;][&#039;chat&#039;]["id"],
								&#039;message_id&#039; => $bot->api->body[&#039;callback_query&#039;][&#039;message&#039;][&#039;message_id&#039;],
								&#039;text&#039; => $text,
								&#039;parse_mode&#039; => "HTML",
								&#039;reply_markup&#039; => json_encode( [&#039;inline_keyboard&#039;=>$merge] ),
								]);
								usleep(100000);
							}
							else
							{
								if(mysqli_query($con_sql2, &#039;SELECT 1 FROM '.$tabcat.' LIMIT 1&#039;)==FALSE)
								{
									mysqli_query($con_sql2, &#039;CREATE TABLE '.$tabcat.' LIKE '.$tabmain.'&#039;);
									usleep(250000);
									
									$query2=mysqli_query($con_sql2, &#039;SHOW TABLES LIKE "tabmain%"&#039;);
									$con2=mysqli_num_rows($query2);
									$table=[];
								
									for($i=0;$i<$con2;$i++)
									{
										mysqli_data_seek($query2, $i);
										$row2[$i]=mysqli_fetch_row($query2);
										$table[]=$row2[$i][0];	
											
										mysqli_query($con_sql2, &#039;INSERT INTO '.$tabcat.' (type, cat, gender, brand, size, price, alt, pic, date, time, messid, cond, chatid) SELECT type, cat, gender, brand, size, price, alt, pic, date, time, messid, cond, chatid FROM &#039;.$table[$i].&#039; WHERE cat="'.$put[$u].'"&#039;);
										usleep(250000);
									}
								}
								else
								{
									$query1=mysqli_query($con_sql2, &#039;SELECT DISTINCT cat FROM '.$tabcat.' WHERE messid!="0"&#039;);
									$con1=mysqli_num_rows($query1);
									
									for($i1=0;$i1<$con1;$i1++)
									{
										mysqli_data_seek($query1, $i1);
										$row1[$i1]=mysqli_fetch_row($query1);
									}
									
									if(in_array(&#039;'.$put[$u].'&#039;, $row1)==FALSE)
									{
									
										$query2=mysqli_query($con_sql2, &#039;SHOW TABLES LIKE "tabmain%"&#039;);
										$con2=mysqli_num_rows($query2);
										$table=[];
									
										for($i=0;$i<$con2;$i++)
										{
											mysqli_data_seek($query2, $i);
											$row2[$i]=mysqli_fetch_row($query2);
											$table[]=$row2[$i][0];	
			
											mysqli_query($con_sql2, &#039;INSERT INTO '.$tabcat.' (type, cat, gender, brand, size, price, alt, pic, date, time, messid, cond, chatid) SELECT type, cat, gender, brand, size, price, alt, pic, date, time, messid, cond, chatid FROM &#039;.$table[$i].&#039; WHERE cat="'.$put[$u].'"&#039;);
											usleep(250000);
										}
									}
								}
		
								$merge=$bot->cmd_filter_buy_cat();
								usleep(100000);
								
								$merge[] = [["text" => "üîÄ–°–±—Ä–æ—Å–∏—Ç—å —Ñ–∏–ª—å—Ç—Ä—ã", "callback_data" => "resetfilters_default_buy"]];
								$merge[] = [["text" => "‚¨ÖÔ∏è–ù–∞–∑–∞–¥", "callback_data" => "buy_back_filter_cat"], ["text" => "‚§¥Ô∏è–í—ã–π—Ç–∏", "callback_data" => "buy_exit_filter_type"]];
								
								if(isset($bot->api->body[&#039;callback_query&#039;]["id"]))
								{
									$callback_query_id=$bot->api->body[&#039;callback_query&#039;]["id"];
									$bot->api->answerCallbackQuery($callback_query_id);
								}
								$text = "–í—ã –≤—ã–±—Ä–∞–ª–∏ –≤–∏–¥ <b>'.$buttext.'</b>.'.PHP_EOL.'–ú–æ–∂–µ—Ç–µ –≤—ã–±—Ä–∞—Ç—å –µ—â–µ –æ–¥–∏–Ω –∏–ª–∏ –Ω–∞–∂–∞—Ç—å –∫–Ω–æ–ø–∫—É <b>–ù–∞–∑–∞–¥</b> –¥–ª—è –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –≤—ã–±—Ä–∞–Ω–Ω—ã—Ö —Ñ–∏–ª—å—Ç—Ä–æ–≤.";
								
								$bot->api->editMessageText([
								&#039;chat_id&#039; => $bot->api->body[&#039;callback_query&#039;][&#039;message&#039;][&#039;chat&#039;]["id"],
								&#039;message_id&#039; => $bot->api->body[&#039;callback_query&#039;][&#039;message&#039;][&#039;message_id&#039;],
								&#039;text&#039; => $text,
								&#039;parse_mode&#039; => "HTML",
								&#039;reply_markup&#039; => json_encode( [&#039;inline_keyboard&#039;=>$merge] ),
								]);
								usleep(100000);
								
								
							}
		
						}';
						file_put_contents($include, html_entity_decode($insert, ENT_QUOTES) . PHP_EOL . PHP_EOL,FILE_APPEND);
					}
				
				}
				
				$u++;
			}	
			
			$merge[]=$put1;
			unset($put1);
			
		}
		

		$insert='}';
		file_put_contents($include, $insert,FILE_APPEND);
		
		
		return $merge;
	}

 */

/////
	/* public function callback_buy_back_filter_cat()
	{		
		$con_sql2=$this->cmd_sql();
		
		$tabcat='tabcat'.$this->api->chatId.'';
		$tabservice='tabservice'.$this->api->chatId.'';
		$tabmain='tabmain'.$this->api->chatId.'';
		
		if(mysqli_query($con_sql2, 'SELECT 1 FROM '.$tabservice.' LIMIT 1'))
		{
			if(mysqli_query($con_sql2, 'SELECT 1 FROM '.$tabcat.' LIMIT 1'))
			{
				$query2=mysqli_query($con_sql2, 'SELECT DISTINCT cat FROM '.$tabcat.' WHERE messid!="0"');
				$con2=mysqli_num_rows($query2);
				$addtext="";
				for($i1=0;$i1<$con2;$i1++)
				{
					
					mysqli_data_seek($query2, $i1);
					$row2[$i1]=mysqli_fetch_row($query2);
					
					$row2[$i1][0]=$this->convert_rus($row2[$i1][0]);
					
					
					if($i1==0)
					{
						$addtext=$row2[$i1][0];
					}
					else
					{
						$addtext = $addtext . ', '.$row2[$i1][0].'';
					}
				}
				
				if(explode(',', $addtext))
				{
					$text='–í—ã –≤—ã–±—Ä–∞–ª–∏ –Ω–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏—è —Ç–æ–≤–∞—Ä–∞ <b>'.$addtext.'</b>.'.PHP_EOL.'–í—ã–±–∏—Ä–∏—Ç–µ –¥—Ä—É–≥–æ–π –ø–∞—Ä–∞–º–µ—Ç—Ä –∏–ª–∏ –Ω–∞–∂–º–∏—Ç–µ <b>–°–±—Ä–æ—Å–∏—Ç—å —Ñ–∏–ª—å—Ç—Ä—ã</b> –¥–ª—è –≤—ã–±–æ—Ä–∞ –Ω–æ–≤–æ–≥–æ –Ω–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏—è —Ç–æ–≤–∞—Ä–∞.';
					
				}
				else
				{
					$text='–í—ã –≤—ã–±—Ä–∞–ª–∏ –≤–∏–¥ <b>'.$addtext.'</b>.'.PHP_EOL.'–í—ã–±–∏—Ä–∏—Ç–µ –¥—Ä—É–≥–æ–π –ø–∞—Ä–∞–º–µ—Ç—Ä –∏–ª–∏ –Ω–∞–∂–º–∏—Ç–µ <b>–°–±—Ä–æ—Å–∏—Ç—å —Ñ–∏–ª—å—Ç—Ä—ã</b> –¥–ª—è –≤—ã–±–æ—Ä–∞ –Ω–æ–≤–æ–≥–æ –≤–∏–¥–∞ —Ç–æ–≤–∞—Ä–∞.';
					
				}
				
				
				mysqli_query($con_sql2, 'DROP TABLE '.$tabservice.'');
				usleep(250000);
				mysqli_query($con_sql2, 'CREATE TABLE '.$tabservice.' LIKE '.$tabcat.'');
				usleep(250000);
				mysqli_query($con_sql2, 'INSERT INTO '.$tabservice.' (type, cat, gender, brand, size, price, alt, pic, date, time, messid, cond, chatid) SELECT type, cat, gender, brand, size, price, alt, pic, date, time, messid, cond, chatid FROM '.$tabcat.'');
				usleep(250000);
				
				
				$this->callbackAnswer( $text, $this->keyboards['inline_buy_filter']);

			}
			else
			{
				$text="–í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –≤ —Ä–∞–∑–¥–µ–ª –§–∏–ª—å—Ç—Ä –º–µ–Ω—é –ö—É–ø–∏—Ç—å —Ç–æ–≤–∞—Ä.";
				$this->callbackAnswer( $text, $this->keyboards['inline_buy_filter']);
			}
		}
		else
		{
			if(mysqli_query($con_sql2, 'SELECT 1 FROM '.$tabcat.' LIMIT 1'))
			{
				
				$query2=mysqli_query($con_sql2, 'SELECT DISTINCT cat FROM '.$tabcat.' WHERE messid!="0"');
				$con2=mysqli_num_rows($query2);
				$addtext="";
				for($i1=0;$i1<$con2;$i1++)
				{
					
					mysqli_data_seek($query2, $i1);
					$row2[$i1]=mysqli_fetch_row($query2);
					
					$row2[$i1][0]=$this->convert_rus($row2[$i1][0]);
					
					
					if($i1==0)
					{
						$addtext=$row2[$i1][0];
					}
					else
					{
						$addtext = $addtext . ', '.$row2[$i1][0].'';
					}
				}
				
				if(explode(',', $addtext))
				{
					$text='–í—ã –≤—ã–±—Ä–∞–ª–∏ –Ω–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏—è —Ç–æ–≤–∞—Ä–∞ <b>'.$addtext.'</b>.'.PHP_EOL.'–í—ã–±–∏—Ä–∏—Ç–µ –¥—Ä—É–≥–æ–π –ø–∞—Ä–∞–º–µ—Ç—Ä –∏–ª–∏ –Ω–∞–∂–º–∏—Ç–µ <b>–°–±—Ä–æ—Å–∏—Ç—å —Ñ–∏–ª—å—Ç—Ä—ã</b> –¥–ª—è –≤—ã–±–æ—Ä–∞ –Ω–æ–≤–æ–≥–æ –Ω–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏—è —Ç–æ–≤–∞—Ä–∞.';
					
				}
				else
				{
					$text='–í—ã –≤—ã–±—Ä–∞–ª–∏ –≤–∏–¥ <b>'.$addtext.'</b>.'.PHP_EOL.'–í—ã–±–∏—Ä–∏—Ç–µ –¥—Ä—É–≥–æ–π –ø–∞—Ä–∞–º–µ—Ç—Ä –∏–ª–∏ –Ω–∞–∂–º–∏—Ç–µ <b>–°–±—Ä–æ—Å–∏—Ç—å —Ñ–∏–ª—å—Ç—Ä—ã</b> –¥–ª—è –≤—ã–±–æ—Ä–∞ –Ω–æ–≤–æ–≥–æ –Ω–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏—è —Ç–æ–≤–∞—Ä–∞.';
					
				}
				
				mysqli_query($con_sql2, 'CREATE TABLE '.$tabservice.' LIKE '.$tabcat.'');
				usleep(250000);
				mysqli_query($con_sql2, 'INSERT INTO '.$tabservice.' (type, cat, gender, brand, size, price, alt, pic, date, time, messid, cond, chatid) SELECT type, cat, gender, brand, size, price, alt, pic, date, time, messid, cond, chatid FROM '.$tabcat.'');
				usleep(250000);
				mysqli_query($con_sql2, 'DROP TABLE '.$tabcat.'');
				usleep(250000);
				
				$this->callbackAnswer( $text, $this->keyboards['inline_buy_filter']);
			}
			else
			{
				$text="–í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –≤ —Ä–∞–∑–¥–µ–ª –§–∏–ª—å—Ç—Ä –º–µ–Ω—é –ö—É–ø–∏—Ç—å —Ç–æ–≤–∞—Ä.";
				$this->callbackAnswer( $text, $this->keyboards['inline_buy_filter']);
			}
			
			
		}
		
		
	}	 */
	

/////////////////////////////////////////////////FILTER GENDER///////////////////////////////////////////////////////
/////
	/* public function callback_filter_buy_gender()
	{	
		$con_sql2=$this->cmd_sql();
	
		$tabgender='tabgender'.$this->api->chatId.'';
		$tabservice='tabservice'.$this->api->chatId.'';

		if(mysqli_query($con_sql2, 'SELECT 1 FROM '.$tabservice.' LIMIT 1'))
		{
			if(mysqli_query($con_sql2, 'SELECT 1 FROM '.$tabgender.' LIMIT 1'))
			{
				$query2=mysqli_query($con_sql2, 'SELECT DISTINCT gender FROM '.$tabgender.' WHERE messid!="0"');
				$con2=mysqli_num_rows($query2);
				$addtext="";
				for($i1=0;$i1<$con2;$i1++)
				{
					
					mysqli_data_seek($query2, $i1);
					$row2[$i1]=mysqli_fetch_row($query2);
					
					$row2[$i1][0]=$this->convert_rus($row2[$i1][0]);
					
					
					if($i1==0)
					{
						$addtext=$row2[$i1][0];
					}
					else
					{
						$addtext = $addtext . ', '.$row2[$i1][0].'';
					}
				}
				
				if(explode(',', $addtext))
				{
					$text='–í—ã —É–∂–µ –≤—ã–±—Ä–∞–ª–∏ –ø–æ–ª —Ç–æ–≤–∞—Ä–∞ <b>'.$addtext.'</b>.'.PHP_EOL.'–í—ã–±–∏—Ä–∏—Ç–µ –¥—Ä—É–≥–æ–π –ø–∞—Ä–∞–º–µ—Ç—Ä –∏–ª–∏ –Ω–∞–∂–º–∏—Ç–µ <b>–°–±—Ä–æ—Å–∏—Ç—å —Ñ–∏–ª—å—Ç—Ä—ã</b> –¥–ª—è –≤—ã–±–æ—Ä–∞ –Ω–æ–≤–æ–≥–æ –ø–æ–ª–∞ —Ç–æ–≤–∞—Ä–∞.';
					$this->callbackAnswer( $text, $this->keyboards['inline_buy_filter']);
				}
				else
				{
					$text='–í—ã —É–∂–µ –≤—ã–±—Ä–∞–ª–∏ –ø–æ–ª —Ç–æ–≤–∞—Ä–∞ <b>'.$addtext.'</b>.'.PHP_EOL.'–í—ã–±–∏—Ä–∏—Ç–µ –¥—Ä—É–≥–æ–π –ø–∞—Ä–∞–º–µ—Ç—Ä –∏–ª–∏ –Ω–∞–∂–º–∏—Ç–µ <b>–°–±—Ä–æ—Å–∏—Ç—å —Ñ–∏–ª—å—Ç—Ä—ã</b> –¥–ª—è –≤—ã–±–æ—Ä–∞ –Ω–æ–≤–æ–≥–æ –ø–æ–ª–∞ —Ç–æ–≤–∞—Ä–∞.';
					$this->callbackAnswer( $text, $this->keyboards['inline_buy_filter']);
				}
			}
			else
			{
				$merge=$this->cmd_filter_buy_gender();
				$merge[] = [["text" => "üîÄ–°–±—Ä–æ—Å–∏—Ç—å —Ñ–∏–ª—å—Ç—Ä—ã", "callback_data" => "resetfilters_default_buy"]];
				$merge[] = [["text" => "‚¨ÖÔ∏è–ù–∞–∑–∞–¥", "callback_data" => "buy_back_filter_gender"], ["text" => "‚§¥Ô∏è–í—ã–π—Ç–∏", "callback_data" => "buy_exit_filter_type"]];

				$text="–í—ã–±–∏—Ä–∏—Ç–µ –æ–¥–∏–Ω –∏–ª–∏ –Ω–µ—Å–∫–æ–ª—å–∫–æ –ø–æ–ª–æ–≤ —Ç–æ–≤–∞—Ä–∞, –∑–∞—Ç–µ–º –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –ù–∞–∑–∞–¥ –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏.";
				$this->callbackAnswer( $text, $merge);
			}
		}
		else
		{
			$merge=$this->cmd_filter_buy_gender();
			$merge[] = [["text" => "üîÄ–°–±—Ä–æ—Å–∏—Ç—å —Ñ–∏–ª—å—Ç—Ä—ã", "callback_data" => "resetfilters_default_buy"]];
			$merge[] = [["text" => "‚¨ÖÔ∏è–ù–∞–∑–∞–¥", "callback_data" => "buy_back_filter_gender"], ["text" => "‚§¥Ô∏è–í—ã–π—Ç–∏", "callback_data" => "buy_exit_filter_type"]];

			$text="–í—ã–±–∏—Ä–∏—Ç–µ –æ–¥–∏–Ω –∏–ª–∏ –Ω–µ—Å–∫–æ–ª—å–∫–æ –ø–æ–ª–æ–≤ —Ç–æ–≤–∞—Ä–∞, –∑–∞—Ç–µ–º –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –ù–∞–∑–∞–¥ –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏.";
			$this->callbackAnswer( $text, $merge);
		}
	}	 */

/* /////
	public function cmd_filter_buy_gender()
	{
		
		$con_sql2=$this->cmd_sql();
	
		$tabgender='tabgender'.$this->api->chatId.'';
		$tabservice='tabservice'.$this->api->chatId.'';
		$tabmain='tabmain'.$this->api->chatId.'';
		
		
		if(mysqli_query($con_sql2, 'SELECT 1 FROM '.$tabservice.' LIMIT 1'))
		{

			$query2=mysqli_query($con_sql2, 'SELECT DISTINCT gender FROM '.$tabservice.' WHERE messid!="0"');
			$con2=mysqli_num_rows($query2);
			
			$puttemp=[];
			
			for($i1=0;$i1<$con2;$i1++)
			{
				mysqli_data_seek($query2, $i1);
				$row2[$i1]=mysqli_fetch_row($query2);
			
				if(in_array($row2[$i1][0], $puttemp)==FALSE)								
				{
					$puttemp[]=$row2[$i1][0];
				}
			}
			
			if(mysqli_query($con_sql2, 'SELECT 1 FROM '.$tabgender.' LIMIT 1'))
			{
				$query2=mysqli_query($con_sql2, 'SELECT DISTINCT gender FROM '.$tabgender.' WHERE messid!="0"');
				$con2=mysqli_num_rows($query2);
				
				for($i1=0;$i1<$con2;$i1++)
				{
					mysqli_data_seek($query2, $i1);
					$row2[$i1]=mysqli_fetch_row($query2);
				
					if(in_array($row2[$i1][0], $puttemp))
					{	
						$search=array_search($row2[$i1][0], $puttemp);
						unset($puttemp[$search]);
					}
				}
			}
			
		}
		else
		{
		
			$query1=mysqli_query($con_sql2, 'SHOW TABLES LIKE "tabmain%"');
			$con1=mysqli_num_rows($query1);
			
			$table=[];
			
			for($i=0;$i<$con1;$i++)
			{
				mysqli_data_seek($query1, $i);
				$row1[$i]=mysqli_fetch_row($query1);
				$table[]=$row1[$i][0];	
			}
			
			$puttemp=[];
		
			for($i=0;$i<$con1;$i++)
			{
				
				$tab=$table[$i];
	
				$query2=mysqli_query($con_sql2, 'SELECT DISTINCT gender FROM '.$tab.' WHERE messid!="0"');
				usleep(100000);
				$con2=mysqli_num_rows($query2);
				
				if($con2!=0)
				{
					for($i1=0;$i1<$con2;$i1++)
					{
						mysqli_data_seek($query2, $i1);
						$row2[$i1]=mysqli_fetch_row($query2);
						
						if(in_array($row2[$i1][0], $puttemp)==FALSE)								
						{
							$puttemp[]=$row2[$i1][0];
						}
					}
				}
				
			}
			
			
			if(mysqli_query($con_sql2, 'SELECT 1 FROM '.$tabgender.' LIMIT 1'))
			{
				$query2=mysqli_query($con_sql2, 'SELECT DISTINCT gender FROM '.$tabgender.' WHERE messid!="0"');
				$con2=mysqli_num_rows($query2);
				
				for($i1=0;$i1<$con2;$i1++)
				{
					mysqli_data_seek($query2, $i1);
					$row2[$i1]=mysqli_fetch_row($query2);
				
					if(in_array($row2[$i1][0], $puttemp))
					{	
						$search=array_search($row2[$i1][0], $puttemp);
						unset($puttemp[$search]);
					}
				}
			}
			
		}
		
		
		$put=[];
		
		foreach($puttemp as $value)
		{
			$put[]=$value;
		}
		
		
		$cnt=count($put);

		$maxbuttons=1;
		$ceil=ceil($cnt/$maxbuttons);
 
		$include=''.dirname(__FILE__).'/include'.$this->api->chatId.'.php';
		
		if(file_exists($include)==FALSE)
		{
			touch($include);
				
			$insert='<?php
		
		
			class TelegramBotfunc{';
			file_put_contents($include, $insert . PHP_EOL,FILE_APPEND);
				
		}
		else
		{
			$getinclude=file($include);
			unset($getinclude[array_key_last($getinclude)]);
			file_put_contents($include, $getinclude);
		}
		
		$u=0;
		$merge=[];
	
		
		for($i1=0;$i1<$ceil;$i1++)
		{
			$put1=[];
			
			for($i2=0;$i2<$maxbuttons;$i2++)
			{	
		
				if(isset($put[$u]))
				{
					
					$buttext=$this->convert_rus($put[$u]);
					
					$put1[]=["text" => "$buttext", "callback_data" => 'buy_select_gender_'.$this->api->chatId.'_'.$put[$u].''];
					
					if(preg_match('/callback_buy_select_gender_'.$this->api->chatId.'_'.$put[$u].'/', file_get_contents($include))==FALSE)
					{
						$insert='
						public function callback_buy_select_gender_'.$this->api->chatId.'_'.$put[$u].'()
						{	
					
							$bot = new TestBot;
							$bot->api->getWebhookUpdate();
							
							$con_sql2=$bot->cmd_sql();

							if(mysqli_query($con_sql2, &#039;SELECT 1 FROM '.$tabservice.' LIMIT 1&#039;))
							{	
						
								if(mysqli_query($con_sql2, &#039;SELECT 1 FROM '.$tabgender.' LIMIT 1&#039;)==FALSE)
								{
									mysqli_query($con_sql2, &#039;CREATE TABLE '.$tabgender.' LIKE '.$tabmain.'&#039;);
									usleep(250000);
								}
								
								mysqli_query($con_sql2, &#039;INSERT INTO '.$tabgender.' (type, cat, gender, brand, size, price, alt, pic, date, time, messid, cond, chatid) SELECT type, cat, gender, brand, size, price, alt, pic, date, time, messid, cond, chatid FROM '.$tabservice.' WHERE gender="'.$put[$u].'"&#039;);
								usleep(250000);
								
								$merge=$bot->cmd_filter_buy_gender();
								usleep(100000);
								
								$merge[] = [["text" => "üîÄ–°–±—Ä–æ—Å–∏—Ç—å —Ñ–∏–ª—å—Ç—Ä—ã", "callback_data" => "resetfilters_default_buy"]];
								$merge[] = [["text" => "‚¨ÖÔ∏è–ù–∞–∑–∞–¥", "callback_data" => "buy_back_filter_gender"], ["text" => "‚§¥Ô∏è–í—ã–π—Ç–∏", "callback_data" => "buy_exit_filter_type"]];
								
								if(isset($bot->api->body[&#039;callback_query&#039;]["id"]))
								{
									$callback_query_id=$bot->api->body[&#039;callback_query&#039;]["id"];
									$bot->api->answerCallbackQuery($callback_query_id);
								}
								
								$text = "–í—ã –≤—ã–±—Ä–∞–ª–∏ –ø–æ–ª —Ç–æ–≤–∞—Ä–∞ <b>'.$buttext.'</b>.'.PHP_EOL.'–ú–æ–∂–µ—Ç–µ –≤—ã–±—Ä–∞—Ç—å –µ—â–µ –æ–¥–∏–Ω –∏–ª–∏ –Ω–∞–∂–∞—Ç—å –∫–Ω–æ–ø–∫—É <b>–ù–∞–∑–∞–¥</b> –¥–ª—è –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –≤—ã–±—Ä–∞–Ω–Ω—ã—Ö —Ñ–∏–ª—å—Ç—Ä–æ–≤.";
								
								$bot->api->editMessageText([
								&#039;chat_id&#039; => $bot->api->body[&#039;callback_query&#039;][&#039;message&#039;][&#039;chat&#039;]["id"],
								&#039;message_id&#039; => $bot->api->body[&#039;callback_query&#039;][&#039;message&#039;][&#039;message_id&#039;],
								&#039;text&#039; => $text,
								&#039;parse_mode&#039; => "HTML",
								&#039;reply_markup&#039; => json_encode( [&#039;inline_keyboard&#039;=>$merge] ),
								]);
								usleep(100000);
								
							}
							else
							{
								
								if(mysqli_query($con_sql2, &#039;SELECT 1 FROM '.$tabgender.' LIMIT 1&#039;)==FALSE)
								{
									mysqli_query($con_sql2, &#039;CREATE TABLE '.$tabgender.' LIKE '.$tabmain.'&#039;);
									usleep(250000);
									
									$query2=mysqli_query($con_sql2, &#039;SHOW TABLES LIKE "tabmain%"&#039;);
									$con2=mysqli_num_rows($query2);
									$table=[];
								
									for($i=0;$i<$con2;$i++)
									{
										mysqli_data_seek($query2, $i);
										$row2[$i]=mysqli_fetch_row($query2);
										$table[]=$row2[$i][0];	
											
										mysqli_query($con_sql2, &#039;INSERT INTO '.$tabgender.' (type, cat, gender, brand, size, price, alt, pic, date, time, messid, cond, chatid) SELECT type, cat, gender, brand, size, price, alt, pic, date, time, messid, cond, chatid FROM &#039;.$table[$i].&#039; WHERE gender="'.$put[$u].'"&#039;);
										usleep(250000);
									}
								}
								else
								{
									$query1=mysqli_query($con_sql2, &#039;SELECT DISTINCT gender FROM '.$tabgender.' WHERE messid!="0"&#039;);
									$con1=mysqli_num_rows($query1);
									
									for($i1=0;$i1<$con1;$i1++)
									{
										mysqli_data_seek($query1, $i1);
										$row1[$i1]=mysqli_fetch_row($query1);
									}
									
									if(in_array(&#039;'.$put[$u].'&#039;, $row1)==FALSE)
									{
									
										$query2=mysqli_query($con_sql2, &#039;SHOW TABLES LIKE "tabmain%"&#039;);
										$con2=mysqli_num_rows($query2);
										$table=[];
									
										for($i=0;$i<$con2;$i++)
										{
											mysqli_data_seek($query2, $i);
											$row2[$i]=mysqli_fetch_row($query2);
											$table[]=$row2[$i][0];	
												
											mysqli_query($con_sql2, &#039;INSERT INTO '.$tabgender.' (type, cat, gender, brand, size, price, alt, pic, date, time, messid, cond, chatid) SELECT type, cat, gender, brand, size, price, alt, pic, date, time, messid, cond, chatid FROM &#039;.$table[$i].&#039; WHERE gender="'.$put[$u].'"&#039;);
											usleep(250000);
										}
										
									}
								}

								$merge=$bot->cmd_filter_buy_gender();
								usleep(100000);
								
								$merge[] = [["text" => "üîÄ–°–±—Ä–æ—Å–∏—Ç—å —Ñ–∏–ª—å—Ç—Ä—ã", "callback_data" => "resetfilters_default_buy"]];
								$merge[] = [["text" => "‚¨ÖÔ∏è–ù–∞–∑–∞–¥", "callback_data" => "buy_back_filter_gender"], ["text" => "‚§¥Ô∏è–í—ã–π—Ç–∏", "callback_data" => "buy_exit_filter_type"]];
								
								if(isset($bot->api->body[&#039;callback_query&#039;]["id"]))
								{
									$callback_query_id=$bot->api->body[&#039;callback_query&#039;]["id"];
									$bot->api->answerCallbackQuery($callback_query_id);
								}
								$text = "–í—ã –≤—ã–±—Ä–∞–ª–∏ –ø–æ–ª —Ç–æ–≤–∞—Ä–∞ <b>'.$buttext.'</b>.'.PHP_EOL.'–ú–æ–∂–µ—Ç–µ –≤—ã–±—Ä–∞—Ç—å –µ—â–µ –æ–¥–∏–Ω –∏–ª–∏ –Ω–∞–∂–∞—Ç—å –∫–Ω–æ–ø–∫—É <b>–ù–∞–∑–∞–¥</b> –¥–ª—è –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –≤—ã–±—Ä–∞–Ω–Ω—ã—Ö —Ñ–∏–ª—å—Ç—Ä–æ–≤.";
								
								$bot->api->editMessageText([
								&#039;chat_id&#039; => $bot->api->body[&#039;callback_query&#039;][&#039;message&#039;][&#039;chat&#039;]["id"],
								&#039;message_id&#039; => $bot->api->body[&#039;callback_query&#039;][&#039;message&#039;][&#039;message_id&#039;],
								&#039;text&#039; => $text,
								&#039;parse_mode&#039; => "HTML",
								&#039;reply_markup&#039; => json_encode( [&#039;inline_keyboard&#039;=>$merge] ),
								]);
								usleep(100000);
								
							}

						}';
						file_put_contents($include, html_entity_decode($insert, ENT_QUOTES) . PHP_EOL . PHP_EOL,FILE_APPEND);
					}
				
				}
				
				$u++;
			}	
			
			$merge[]=$put1;
			unset($put1);
			
		}
		

		$insert='}';
		file_put_contents($include, $insert,FILE_APPEND);
		
		
		return $merge;
	} */



/////
/* 	public function callback_buy_back_filter_gender()
	{		
		$con_sql2=$this->cmd_sql();
		
		$tabgender='tabgender'.$this->api->chatId.'';
		$tabservice='tabservice'.$this->api->chatId.'';
		$tabmain='tabmain'.$this->api->chatId.'';
		
		if(mysqli_query($con_sql2, 'SELECT 1 FROM '.$tabservice.' LIMIT 1'))
		{
			if(mysqli_query($con_sql2, 'SELECT 1 FROM '.$tabgender.' LIMIT 1'))
			{
				$query2=mysqli_query($con_sql2, 'SELECT DISTINCT gender FROM '.$tabgender.' WHERE messid!="0"');
				$con2=mysqli_num_rows($query2);
				$addtext="";
				for($i1=0;$i1<$con2;$i1++)
				{
					
					mysqli_data_seek($query2, $i1);
					$row2[$i1]=mysqli_fetch_row($query2);
					
					$row2[$i1][0]=$this->convert_rus($row2[$i1][0]);
					
					
					if($i1==0)
					{
						$addtext=$row2[$i1][0];
					}
					else
					{
						$addtext = $addtext . ', '.$row2[$i1][0].'';
					}
				}
				
				if(explode(',', $addtext))
				{
					$text='–í—ã –≤—ã–±—Ä–∞–ª–∏ –ø–æ–ª —Ç–æ–≤–∞—Ä–∞ <b>'.$addtext.'</b>.'.PHP_EOL.'–í—ã–±–∏—Ä–∏—Ç–µ –¥—Ä—É–≥–æ–π –ø–∞—Ä–∞–º–µ—Ç—Ä –∏–ª–∏ –Ω–∞–∂–º–∏—Ç–µ <b>–°–±—Ä–æ—Å–∏—Ç—å —Ñ–∏–ª—å—Ç—Ä—ã</b> –¥–ª—è –≤—ã–±–æ—Ä–∞ –Ω–æ–≤–æ–≥–æ –ø–æ–ª–∞ —Ç–æ–≤–∞—Ä–∞.';
					
				}
				else
				{
					$text='–í—ã –≤—ã–±—Ä–∞–ª–∏ –ø–æ–ª —Ç–æ–≤–∞—Ä–∞ <b>'.$addtext.'</b>.'.PHP_EOL.'–í—ã–±–∏—Ä–∏—Ç–µ –¥—Ä—É–≥–æ–π –ø–∞—Ä–∞–º–µ—Ç—Ä –∏–ª–∏ –Ω–∞–∂–º–∏—Ç–µ <b>–°–±—Ä–æ—Å–∏—Ç—å —Ñ–∏–ª—å—Ç—Ä—ã</b> –¥–ª—è –≤—ã–±–æ—Ä–∞ –Ω–æ–≤–æ–≥–æ –ø–æ–ª–∞ —Ç–æ–≤–∞—Ä–∞.';
					
				}
				
				
				mysqli_query($con_sql2, 'DROP TABLE '.$tabservice.'');
				usleep(250000);
				mysqli_query($con_sql2, 'CREATE TABLE '.$tabservice.' LIKE '.$tabgender.'');
				usleep(250000);
				mysqli_query($con_sql2, 'INSERT INTO '.$tabservice.' (type, cat, gender, brand, size, price, alt, pic, date, time, messid, cond, chatid) SELECT type, cat, gender, brand, size, price, alt, pic, date, time, messid, cond, chatid FROM '.$tabgender.'');
				usleep(250000);
				
				
				$this->callbackAnswer( $text, $this->keyboards['inline_buy_filter']);

			}
			else
			{
				$text="–í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –≤ —Ä–∞–∑–¥–µ–ª –§–∏–ª—å—Ç—Ä –º–µ–Ω—é –ö—É–ø–∏—Ç—å —Ç–æ–≤–∞—Ä.";
				$this->callbackAnswer( $text, $this->keyboards['inline_buy_filter']);
			}
		}
		else
		{
			if(mysqli_query($con_sql2, 'SELECT 1 FROM '.$tabgender.' LIMIT 1'))
			{
				
				$query2=mysqli_query($con_sql2, 'SELECT DISTINCT gender FROM '.$tabgender.' WHERE messid!="0"');
				$con2=mysqli_num_rows($query2);
				$addtext="";
				for($i1=0;$i1<$con2;$i1++)
				{
					
					mysqli_data_seek($query2, $i1);
					$row2[$i1]=mysqli_fetch_row($query2);
					
					$row2[$i1][0]=$this->convert_rus($row2[$i1][0]);
					
					
					if($i1==0)
					{
						$addtext=$row2[$i1][0];
					}
					else
					{
						$addtext = $addtext . ', '.$row2[$i1][0].'';
					}
				}
				
				if(explode(',', $addtext))
				{
					$text='–í—ã –≤—ã–±—Ä–∞–ª–∏ –ø–æ–ª —Ç–æ–≤–∞—Ä–∞ <b>'.$addtext.'</b>.'.PHP_EOL.'–í—ã–±–∏—Ä–∏—Ç–µ –¥—Ä—É–≥–æ–π –ø–∞—Ä–∞–º–µ—Ç—Ä –∏–ª–∏ –Ω–∞–∂–º–∏—Ç–µ <b>–°–±—Ä–æ—Å–∏—Ç—å —Ñ–∏–ª—å—Ç—Ä—ã</b> –¥–ª—è –≤—ã–±–æ—Ä–∞ –Ω–æ–≤–æ–≥–æ –ø–æ–ª–∞ —Ç–æ–≤–∞—Ä–∞.';
					
				}
				else
				{
					$text='–í—ã –≤—ã–±—Ä–∞–ª–∏ –ø–æ–ª —Ç–æ–≤–∞—Ä–∞ <b>'.$addtext.'</b>.'.PHP_EOL.'–í—ã–±–∏—Ä–∏—Ç–µ –¥—Ä—É–≥–æ–π –ø–∞—Ä–∞–º–µ—Ç—Ä –∏–ª–∏ –Ω–∞–∂–º–∏—Ç–µ <b>–°–±—Ä–æ—Å–∏—Ç—å —Ñ–∏–ª—å—Ç—Ä—ã</b> –¥–ª—è –≤—ã–±–æ—Ä–∞ –Ω–æ–≤–æ–≥–æ –ø–æ–ª–∞ —Ç–æ–≤–∞—Ä–∞.';
					
				}
				
				mysqli_query($con_sql2, 'CREATE TABLE '.$tabservice.' LIKE '.$tabgender.'');
				usleep(250000);
				mysqli_query($con_sql2, 'INSERT INTO '.$tabservice.' (type, cat, gender, brand, size, price, alt, pic, date, time, messid, cond, chatid) SELECT type, cat, gender, brand, size, price, alt, pic, date, time, messid, cond, chatid FROM '.$tabgender.'');
				usleep(250000);
				mysqli_query($con_sql2, 'DROP TABLE '.$tabgender.'');
				usleep(250000);
				
				$this->callbackAnswer( $text, $this->keyboards['inline_buy_filter']);
			}
			else
			{
				$text="–í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –≤ —Ä–∞–∑–¥–µ–ª –§–∏–ª—å—Ç—Ä –º–µ–Ω—é –ö—É–ø–∏—Ç—å —Ç–æ–≤–∞—Ä.";
				$this->callbackAnswer( $text, $this->keyboards['inline_buy_filter']);
			}
			
			
		}
		
		
	}	 */
	


/////////////////////////////////////////////////FILTER COND///////////////////////////////////////////////////////
/////
/* 	public function callback_filter_buy_cond()
	{	
		$con_sql2=$this->cmd_sql();
	
		$tabcond='tabcond'.$this->api->chatId.'';
		$tabservice='tabservice'.$this->api->chatId.'';

		if(mysqli_query($con_sql2, 'SELECT 1 FROM '.$tabservice.' LIMIT 1'))
		{
			if(mysqli_query($con_sql2, 'SELECT 1 FROM '.$tabcond.' LIMIT 1'))
			{
				$query2=mysqli_query($con_sql2, 'SELECT DISTINCT cond FROM '.$tabcond.' WHERE messid!="0"');
				$con2=mysqli_num_rows($query2);
				$addtext="";
				for($i1=0;$i1<$con2;$i1++)
				{
					
					mysqli_data_seek($query2, $i1);
					$row2[$i1]=mysqli_fetch_row($query2);
					
					$row2[$i1][0]=$this->convert_rus($row2[$i1][0]);
					
					
					if($i1==0)
					{
						$addtext=$row2[$i1][0];
					}
					else
					{
						$addtext = $addtext . ', '.$row2[$i1][0].'';
					}
				}
				
				if(explode(',', $addtext))
				{
					$text='–í—ã —É–∂–µ –≤—ã–±—Ä–∞–ª–∏ —Å–æ—Å—Ç–æ—è–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞ <b>'.$addtext.'</b>.'.PHP_EOL.'–í—ã–±–∏—Ä–∏—Ç–µ –¥—Ä—É–≥–æ–π –ø–∞—Ä–∞–º–µ—Ç—Ä –∏–ª–∏ –Ω–∞–∂–º–∏—Ç–µ <b>–°–±—Ä–æ—Å–∏—Ç—å —Ñ–∏–ª—å—Ç—Ä—ã</b> –¥–ª—è –≤—ã–±–æ—Ä–∞ –Ω–æ–≤–æ–≥–æ –ø–æ–ª–∞ —Ç–æ–≤–∞—Ä–∞.';
					$this->callbackAnswer( $text, $this->keyboards['inline_buy_filter']);
				}
				else
				{
					$text='–í—ã —É–∂–µ –≤—ã–±—Ä–∞–ª–∏ —Å–æ—Å—Ç–æ—è–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞ <b>'.$addtext.'</b>.'.PHP_EOL.'–í—ã–±–∏—Ä–∏—Ç–µ –¥—Ä—É–≥–æ–π –ø–∞—Ä–∞–º–µ—Ç—Ä –∏–ª–∏ –Ω–∞–∂–º–∏—Ç–µ <b>–°–±—Ä–æ—Å–∏—Ç—å —Ñ–∏–ª—å—Ç—Ä—ã</b> –¥–ª—è –≤—ã–±–æ—Ä–∞ –Ω–æ–≤–æ–≥–æ –ø–æ–ª–∞ —Ç–æ–≤–∞—Ä–∞.';
					$this->callbackAnswer( $text, $this->keyboards['inline_buy_filter']);
				}
			}
			else
			{
				$merge=$this->cmd_filter_buy_cond();
				$merge[] = [["text" => "üîÄ–°–±—Ä–æ—Å–∏—Ç—å —Ñ–∏–ª—å—Ç—Ä—ã", "callback_data" => "resetfilters_default_buy"]];
				$merge[] = [["text" => "‚¨ÖÔ∏è–ù–∞–∑–∞–¥", "callback_data" => "buy_back_filter_cond"], ["text" => "‚§¥Ô∏è–í—ã–π—Ç–∏", "callback_data" => "buy_exit_filter_type"]];

				$text="–í—ã–±–∏—Ä–∏—Ç–µ –æ–¥–∏–Ω –∏–ª–∏ –Ω–µ—Å–∫–æ–ª—å–∫–æ —Å–æ—Å—Ç–æ—è–Ω–∏–π —Ç–æ–≤–∞—Ä–∞, –∑–∞—Ç–µ–º –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –ù–∞–∑–∞–¥ –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏.";
				$this->callbackAnswer( $text, $merge);
			}
		}
		else
		{
			$merge=$this->cmd_filter_buy_cond();
			$merge[] = [["text" => "üîÄ–°–±—Ä–æ—Å–∏—Ç—å —Ñ–∏–ª—å—Ç—Ä—ã", "callback_data" => "resetfilters_default_buy"]];
			$merge[] = [["text" => "‚¨ÖÔ∏è–ù–∞–∑–∞–¥", "callback_data" => "buy_back_filter_cond"], ["text" => "‚§¥Ô∏è–í—ã–π—Ç–∏", "callback_data" => "buy_exit_filter_type"]];

			$text="–í—ã–±–∏—Ä–∏—Ç–µ –æ–¥–∏–Ω –∏–ª–∏ –Ω–µ—Å–∫–æ–ª—å–∫–æ —Å–æ—Å—Ç–æ—è–Ω–∏–π —Ç–æ–≤–∞—Ä–∞, –∑–∞—Ç–µ–º –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –ù–∞–∑–∞–¥ –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏.";
			$this->callbackAnswer( $text, $merge);
		}
	}	 */

/////
/* 	public function cmd_filter_buy_cond()
	{
		
		$con_sql2=$this->cmd_sql();
	
		$tabcond='tabcond'.$this->api->chatId.'';
		$tabservice='tabservice'.$this->api->chatId.'';
		$tabmain='tabmain'.$this->api->chatId.'';
		
		
		if(mysqli_query($con_sql2, 'SELECT 1 FROM '.$tabservice.' LIMIT 1'))
		{

			$query2=mysqli_query($con_sql2, 'SELECT DISTINCT cond FROM '.$tabservice.' WHERE messid!="0"');
			$con2=mysqli_num_rows($query2);
			
			$puttemp=[];
			
			for($i1=0;$i1<$con2;$i1++)
			{
				mysqli_data_seek($query2, $i1);
				$row2[$i1]=mysqli_fetch_row($query2);
			
				if(in_array($row2[$i1][0], $puttemp)==FALSE)								
				{
					$puttemp[]=$row2[$i1][0];
				}
			}
			
			if(mysqli_query($con_sql2, 'SELECT 1 FROM '.$tabcond.' LIMIT 1'))
			{
				$query2=mysqli_query($con_sql2, 'SELECT DISTINCT cond FROM '.$tabcond.' WHERE messid!="0"');
				$con2=mysqli_num_rows($query2);
				
				for($i1=0;$i1<$con2;$i1++)
				{
					mysqli_data_seek($query2, $i1);
					$row2[$i1]=mysqli_fetch_row($query2);
				
					if(in_array($row2[$i1][0], $puttemp))
					{	
						$search=array_search($row2[$i1][0], $puttemp);
						unset($puttemp[$search]);
					}
				}
			}
			
		}
		else
		{
		
			$query1=mysqli_query($con_sql2, 'SHOW TABLES LIKE "tabmain%"');
			$con1=mysqli_num_rows($query1);
			
			$table=[];
			
			for($i=0;$i<$con1;$i++)
			{
				mysqli_data_seek($query1, $i);
				$row1[$i]=mysqli_fetch_row($query1);
				$table[]=$row1[$i][0];	
			}
			
			$puttemp=[];
		
			for($i=0;$i<$con1;$i++)
			{
				
				$tab=$table[$i];
	
				$query2=mysqli_query($con_sql2, 'SELECT DISTINCT cond FROM '.$tab.' WHERE messid!="0"');
				usleep(100000);
				$con2=mysqli_num_rows($query2);
				
				if($con2!=0)
				{
					for($i1=0;$i1<$con2;$i1++)
					{
						mysqli_data_seek($query2, $i1);
						$row2[$i1]=mysqli_fetch_row($query2);
						
						if(in_array($row2[$i1][0], $puttemp)==FALSE)								
						{
							$puttemp[]=$row2[$i1][0];
						}
					}
				}
				
			}
			
			
			if(mysqli_query($con_sql2, 'SELECT 1 FROM '.$tabcond.' LIMIT 1'))
			{
				$query2=mysqli_query($con_sql2, 'SELECT DISTINCT cond FROM '.$tabcond.' WHERE messid!="0"');
				$con2=mysqli_num_rows($query2);
				
				for($i1=0;$i1<$con2;$i1++)
				{
					mysqli_data_seek($query2, $i1);
					$row2[$i1]=mysqli_fetch_row($query2);
				
					if(in_array($row2[$i1][0], $puttemp))
					{	
						$search=array_search($row2[$i1][0], $puttemp);
						unset($puttemp[$search]);
					}
				}
			}
			
		}
		
		
		$put=[];
		
		foreach($puttemp as $value)
		{
			$put[]=$value;
		}
		
		
		$cnt=count($put);

		$maxbuttons=1;
		$ceil=ceil($cnt/$maxbuttons);
 
		$include=''.dirname(__FILE__).'/include'.$this->api->chatId.'.php';
		
		if(file_exists($include)==FALSE)
		{
			touch($include);
				
			$insert='<?php
		
		
			class TelegramBotfunc{';
			file_put_contents($include, $insert . PHP_EOL,FILE_APPEND);
				
		}
		else
		{
			$getinclude=file($include);
			unset($getinclude[array_key_last($getinclude)]);
			file_put_contents($include, $getinclude);
		}
		
		$u=0;
		$merge=[];
	
		
		for($i1=0;$i1<$ceil;$i1++)
		{
			$put1=[];
			
			for($i2=0;$i2<$maxbuttons;$i2++)
			{	
		
				if(isset($put[$u]))
				{
					
					$buttext=$this->convert_rus($put[$u]);
					
					$put1[]=["text" => "$buttext", "callback_data" => 'buy_select_cond_'.$this->api->chatId.'_'.$put[$u].''];
					
					if(preg_match('/callback_buy_select_cond_'.$this->api->chatId.'_'.$put[$u].'/', file_get_contents($include))==FALSE)
					{
						$insert='
						public function callback_buy_select_cond_'.$this->api->chatId.'_'.$put[$u].'()
						{	
					
							$bot = new TestBot;
							$bot->api->getWebhookUpdate();
							
							$con_sql2=$bot->cmd_sql();

							if(mysqli_query($con_sql2, &#039;SELECT 1 FROM '.$tabservice.' LIMIT 1&#039;))
							{	
						
								if(mysqli_query($con_sql2, &#039;SELECT 1 FROM '.$tabcond.' LIMIT 1&#039;)==FALSE)
								{
									mysqli_query($con_sql2, &#039;CREATE TABLE '.$tabcond.' LIKE '.$tabmain.'&#039;);
									usleep(250000);
								}
								
								mysqli_query($con_sql2, &#039;INSERT INTO '.$tabcond.' (type, cat, gender, brand, size, price, alt, pic, date, time, messid, cond, chatid) SELECT type, cat, gender, brand, size, price, alt, pic, date, time, messid, cond, chatid FROM '.$tabservice.' WHERE cond="'.$put[$u].'"&#039;);
								usleep(250000);
								
								$merge=$bot->cmd_filter_buy_cond();
								usleep(100000);
								
								$merge[] = [["text" => "üîÄ–°–±—Ä–æ—Å–∏—Ç—å —Ñ–∏–ª—å—Ç—Ä—ã", "callback_data" => "resetfilters_default_buy"]];
								$merge[] = [["text" => "‚¨ÖÔ∏è–ù–∞–∑–∞–¥", "callback_data" => "buy_back_filter_cond"], ["text" => "‚§¥Ô∏è–í—ã–π—Ç–∏", "callback_data" => "buy_exit_filter_type"]];
								
								if(isset($bot->api->body[&#039;callback_query&#039;]["id"]))
								{
									$callback_query_id=$bot->api->body[&#039;callback_query&#039;]["id"];
									$bot->api->answerCallbackQuery($callback_query_id);
								}
								
								$text = "–í—ã –≤—ã–±—Ä–∞–ª–∏ —Å–æ—Å—Ç–æ—è–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞ <b>'.$buttext.'</b>.'.PHP_EOL.'–ú–æ–∂–µ—Ç–µ –≤—ã–±—Ä–∞—Ç—å –µ—â–µ –æ–¥–Ω–æ –∏–ª–∏ –Ω–∞–∂–∞—Ç—å –∫–Ω–æ–ø–∫—É <b>–ù–∞–∑–∞–¥</b> –¥–ª—è –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –≤—ã–±—Ä–∞–Ω–Ω—ã—Ö —Ñ–∏–ª—å—Ç—Ä–æ–≤.";
								
								$bot->api->editMessageText([
								&#039;chat_id&#039; => $bot->api->body[&#039;callback_query&#039;][&#039;message&#039;][&#039;chat&#039;]["id"],
								&#039;message_id&#039; => $bot->api->body[&#039;callback_query&#039;][&#039;message&#039;][&#039;message_id&#039;],
								&#039;text&#039; => $text,
								&#039;parse_mode&#039; => "HTML",
								&#039;reply_markup&#039; => json_encode( [&#039;inline_keyboard&#039;=>$merge] ),
								]);
								usleep(100000);
								
							}
							else
							{
								
								if(mysqli_query($con_sql2, &#039;SELECT 1 FROM '.$tabcond.' LIMIT 1&#039;)==FALSE)
								{
									mysqli_query($con_sql2, &#039;CREATE TABLE '.$tabcond.' LIKE '.$tabmain.'&#039;);
									usleep(250000);
									
									$query2=mysqli_query($con_sql2, &#039;SHOW TABLES LIKE "tabmain%"&#039;);
									$con2=mysqli_num_rows($query2);
									$table=[];
								
									for($i=0;$i<$con2;$i++)
									{
										mysqli_data_seek($query2, $i);
										$row2[$i]=mysqli_fetch_row($query2);
										$table[]=$row2[$i][0];	
											
										mysqli_query($con_sql2, &#039;INSERT INTO '.$tabcond.' (type, cat, gender, brand, size, price, alt, pic, date, time, messid, cond, chatid) SELECT type, cat, gender, brand, size, price, alt, pic, date, time, messid, cond, chatid FROM &#039;.$table[$i].&#039; WHERE cond="'.$put[$u].'"&#039;);
										usleep(250000);
									}
								}
								else
								{
									$query1=mysqli_query($con_sql2, &#039;SELECT DISTINCT cond FROM '.$tabcond.' WHERE messid!="0"&#039;);
									$con1=mysqli_num_rows($query1);
									
									for($i1=0;$i1<$con1;$i1++)
									{
										mysqli_data_seek($query1, $i1);
										$row1[$i1]=mysqli_fetch_row($query1);
									}
									
									if(in_array(&#039;'.$put[$u].'&#039;, $row1)==FALSE)
									{
									
										$query2=mysqli_query($con_sql2, &#039;SHOW TABLES LIKE "tabmain%"&#039;);
										$con2=mysqli_num_rows($query2);
										$table=[];
									
										for($i=0;$i<$con2;$i++)
										{
											mysqli_data_seek($query2, $i);
											$row2[$i]=mysqli_fetch_row($query2);
											$table[]=$row2[$i][0];	
												
											mysqli_query($con_sql2, &#039;INSERT INTO '.$tabcond.' (type, cat, gender, brand, size, price, alt, pic, date, time, messid, cond, chatid) SELECT type, cat, gender, brand, size, price, alt, pic, date, time, messid, cond, chatid FROM &#039;.$table[$i].&#039; WHERE cond="'.$put[$u].'"&#039;);
											usleep(250000);
										}
										
									}
								}

								$merge=$bot->cmd_filter_buy_cond();
								usleep(100000);
								
								$merge[] = [["text" => "üîÄ–°–±—Ä–æ—Å–∏—Ç—å —Ñ–∏–ª—å—Ç—Ä—ã", "callback_data" => "resetfilters_default_buy"]];
								$merge[] = [["text" => "‚¨ÖÔ∏è–ù–∞–∑–∞–¥", "callback_data" => "buy_back_filter_cond"], ["text" => "‚§¥Ô∏è–í—ã–π—Ç–∏", "callback_data" => "buy_exit_filter_type"]];
								
								if(isset($bot->api->body[&#039;callback_query&#039;]["id"]))
								{
									$callback_query_id=$bot->api->body[&#039;callback_query&#039;]["id"];
									$bot->api->answerCallbackQuery($callback_query_id);
								}
								$text = "–í—ã –≤—ã–±—Ä–∞–ª–∏ —Å–æ—Å—Ç–æ—è–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞ <b>'.$buttext.'</b>.'.PHP_EOL.'–ú–æ–∂–µ—Ç–µ –≤—ã–±—Ä–∞—Ç—å –µ—â–µ –æ–¥–Ω–æ –∏–ª–∏ –Ω–∞–∂–∞—Ç—å –∫–Ω–æ–ø–∫—É <b>–ù–∞–∑–∞–¥</b> –¥–ª—è –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –≤—ã–±—Ä–∞–Ω–Ω—ã—Ö —Ñ–∏–ª—å—Ç—Ä–æ–≤.";
								
								$bot->api->editMessageText([
								&#039;chat_id&#039; => $bot->api->body[&#039;callback_query&#039;][&#039;message&#039;][&#039;chat&#039;]["id"],
								&#039;message_id&#039; => $bot->api->body[&#039;callback_query&#039;][&#039;message&#039;][&#039;message_id&#039;],
								&#039;text&#039; => $text,
								&#039;parse_mode&#039; => "HTML",
								&#039;reply_markup&#039; => json_encode( [&#039;inline_keyboard&#039;=>$merge] ),
								]);
								usleep(100000);
								
							}

						}';
						file_put_contents($include, html_entity_decode($insert, ENT_QUOTES) . PHP_EOL . PHP_EOL,FILE_APPEND);
					}
				
				}
				
				$u++;
			}	
			
			$merge[]=$put1;
			unset($put1);
			
		}
		

		$insert='}';
		file_put_contents($include, $insert,FILE_APPEND);
		
		
		return $merge;
	} */



/////
/* 	public function callback_buy_back_filter_cond()
	{		
		$con_sql2=$this->cmd_sql();
		
		$tabcond='tabcond'.$this->api->chatId.'';
		$tabservice='tabservice'.$this->api->chatId.'';
		$tabmain='tabmain'.$this->api->chatId.'';
		
		if(mysqli_query($con_sql2, 'SELECT 1 FROM '.$tabservice.' LIMIT 1'))
		{
			if(mysqli_query($con_sql2, 'SELECT 1 FROM '.$tabcond.' LIMIT 1'))
			{
				$query2=mysqli_query($con_sql2, 'SELECT DISTINCT cond FROM '.$tabcond.' WHERE messid!="0"');
				$con2=mysqli_num_rows($query2);
				$addtext="";
				for($i1=0;$i1<$con2;$i1++)
				{
					
					mysqli_data_seek($query2, $i1);
					$row2[$i1]=mysqli_fetch_row($query2);
					
					$row2[$i1][0]=$this->convert_rus($row2[$i1][0]);
					
					
					if($i1==0)
					{
						$addtext=$row2[$i1][0];
					}
					else
					{
						$addtext = $addtext . ', '.$row2[$i1][0].'';
					}
				}
				
				if(explode(',', $addtext))
				{
					$text='–í—ã –≤—ã–±—Ä–∞–ª–∏ —Å–æ—Å—Ç–æ—è–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞ <b>'.$addtext.'</b>.'.PHP_EOL.'–í—ã–±–∏—Ä–∏—Ç–µ –¥—Ä—É–≥–æ–π –ø–∞—Ä–∞–º–µ—Ç—Ä –∏–ª–∏ –Ω–∞–∂–º–∏—Ç–µ <b>–°–±—Ä–æ—Å–∏—Ç—å —Ñ–∏–ª—å—Ç—Ä—ã</b> –¥–ª—è –≤—ã–±–æ—Ä–∞ –Ω–æ–≤–æ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è —Ç–æ–≤–∞—Ä–∞.';
					
				}
				else
				{
					$text='–í—ã –≤—ã–±—Ä–∞–ª–∏ —Å–æ—Å—Ç–æ—è–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞ <b>'.$addtext.'</b>.'.PHP_EOL.'–í—ã–±–∏—Ä–∏—Ç–µ –¥—Ä—É–≥–æ–π –ø–∞—Ä–∞–º–µ—Ç—Ä –∏–ª–∏ –Ω–∞–∂–º–∏—Ç–µ <b>–°–±—Ä–æ—Å–∏—Ç—å —Ñ–∏–ª—å—Ç—Ä—ã</b> –¥–ª—è –≤—ã–±–æ—Ä–∞ –Ω–æ–≤–æ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è —Ç–æ–≤–∞—Ä–∞.';
					
				}
				
				
				mysqli_query($con_sql2, 'DROP TABLE '.$tabservice.'');
				usleep(250000);
				mysqli_query($con_sql2, 'CREATE TABLE '.$tabservice.' LIKE '.$tabcond.'');
				usleep(250000);
				mysqli_query($con_sql2, 'INSERT INTO '.$tabservice.' (type, cat, gender, brand, size, price, alt, pic, date, time, messid, cond, chatid) SELECT type, cat, gender, brand, size, price, alt, pic, date, time, messid, cond, chatid FROM '.$tabcond.'');
				usleep(250000);
				
				
				$this->callbackAnswer( $text, $this->keyboards['inline_buy_filter']);

			}
			else
			{
				$text="–í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –≤ —Ä–∞–∑–¥–µ–ª –§–∏–ª—å—Ç—Ä –º–µ–Ω—é –ö—É–ø–∏—Ç—å —Ç–æ–≤–∞—Ä.";
				$this->callbackAnswer( $text, $this->keyboards['inline_buy_filter']);
			}
		}
		else
		{
			if(mysqli_query($con_sql2, 'SELECT 1 FROM '.$tabcond.' LIMIT 1'))
			{
				
				$query2=mysqli_query($con_sql2, 'SELECT DISTINCT cond FROM '.$tabcond.' WHERE messid!="0"');
				$con2=mysqli_num_rows($query2);
				$addtext="";
				for($i1=0;$i1<$con2;$i1++)
				{
					
					mysqli_data_seek($query2, $i1);
					$row2[$i1]=mysqli_fetch_row($query2);
					
					$row2[$i1][0]=$this->convert_rus($row2[$i1][0]);
					
					
					if($i1==0)
					{
						$addtext=$row2[$i1][0];
					}
					else
					{
						$addtext = $addtext . ', '.$row2[$i1][0].'';
					}
				}
				
				if(explode(',', $addtext))
				{
					$text='–í—ã –≤—ã–±—Ä–∞–ª–∏ —Å–æ—Å—Ç–æ—è–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞ <b>'.$addtext.'</b>.'.PHP_EOL.'–í—ã–±–∏—Ä–∏—Ç–µ –¥—Ä—É–≥–æ–π –ø–∞—Ä–∞–º–µ—Ç—Ä –∏–ª–∏ –Ω–∞–∂–º–∏—Ç–µ <b>–°–±—Ä–æ—Å–∏—Ç—å —Ñ–∏–ª—å—Ç—Ä—ã</b> –¥–ª—è –≤—ã–±–æ—Ä–∞ –Ω–æ–≤–æ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è —Ç–æ–≤–∞—Ä–∞.';
					
				}
				else
				{
					$text='–í—ã –≤—ã–±—Ä–∞–ª–∏ —Å–æ—Å—Ç–æ—è–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞ <b>'.$addtext.'</b>.'.PHP_EOL.'–í—ã–±–∏—Ä–∏—Ç–µ –¥—Ä—É–≥–æ–π –ø–∞—Ä–∞–º–µ—Ç—Ä –∏–ª–∏ –Ω–∞–∂–º–∏—Ç–µ <b>–°–±—Ä–æ—Å–∏—Ç—å —Ñ–∏–ª—å—Ç—Ä—ã</b> –¥–ª—è –≤—ã–±–æ—Ä–∞ –Ω–æ–≤–æ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è —Ç–æ–≤–∞—Ä–∞.';
					
				}
				
				mysqli_query($con_sql2, 'CREATE TABLE '.$tabservice.' LIKE '.$tabcond.'');
				usleep(250000);
				mysqli_query($con_sql2, 'INSERT INTO '.$tabservice.' (type, cat, gender, brand, size, price, alt, pic, date, time, messid, cond, chatid) SELECT type, cat, gender, brand, size, price, alt, pic, date, time, messid, cond, chatid FROM '.$tabcond.'');
				usleep(250000);
				mysqli_query($con_sql2, 'DROP TABLE '.$tabgender.'');
				usleep(250000);
				
				$this->callbackAnswer( $text, $this->keyboards['inline_buy_filter']);
			}
			else
			{
				$text="–í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –≤ —Ä–∞–∑–¥–µ–ª –§–∏–ª—å—Ç—Ä –º–µ–Ω—é –ö—É–ø–∏—Ç—å —Ç–æ–≤–∞—Ä.";
				$this->callbackAnswer( $text, $this->keyboards['inline_buy_filter']);
			}
			
			
		}
		
		
	} */
/////////////////////////////////////////////////FILTER PRICE///////////////////////////////////////////////////////

/////
	public function callback_filter_buy_price()
	{	
		$con_sql2=$this->cmd_sql();
	
		$tabprice='tabprice'.$this->api->chatId.'';
		$tabservice='tabservice'.$this->api->chatId.'';

		if(mysqli_query($con_sql2, 'SELECT 1 FROM '.$tabservice.' LIMIT 1'))
		{
			if(mysqli_query($con_sql2, 'SELECT 1 FROM '.$tabprice.' LIMIT 1'))
			{
				$query2=mysqli_query($con_sql2, 'SELECT DISTINCT price FROM '.$tabprice.' WHERE messid!="0" AND price!="0"');
				$con2=mysqli_num_rows($query2);
				$addtext="";
				for($i1=0;$i1<$con2;$i1++)
				{
					
					mysqli_data_seek($query2, $i1);
					$row2[$i1]=mysqli_fetch_row($query2);
							
					if($row2[$i1][0]<1000 && $row2[$i1][0]>0)
					{
						$price='–î–æ 1000 –≥—Ä–Ω';
					}
					if($row2[$i1][0]>=1000 && $row2[$i1][0]<=5000)
					{
						$price='–û—Ç 1000 –¥–æ 5000 –≥—Ä–Ω';
					}
					if($row2[$i1][0]>5000)
					{
						$price='–°–≤—ã—à–µ 5000 –≥—Ä–Ω';
					}
					
					if(preg_match('/'.preg_quote($price).'/', $addtext)==FALSE)
					{
						if($i1==0)
						{
							$addtext=$price;
						}
						else
						{
							$addtext = $addtext . ', '.$price.'';
						}
					}
				}
				
				if(explode(',', $addtext))
				{
					$text='–í—ã —É–∂–µ –≤—ã–±—Ä–∞–ª–∏ —Å—Ç–æ–∏–º–æ—Å—Ç—å —Ç–æ–≤–∞—Ä–∞ <b>'.$addtext.'</b>. –í—ã–±–∏—Ä–∏—Ç–µ –¥—Ä—É–≥–∏–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –∏–ª–∏ –Ω–∞–∂–º–∏—Ç–µ –°–±—Ä–æ—Å–∏—Ç—å —Ñ–∏–ª—å—Ç—Ä—ã –¥–ª—è –≤—ã–±–æ—Ä–∞ –Ω–æ–≤–æ–π —Å—Ç–æ–∏–º–æ—Å—Ç–∏ —Ç–æ–≤–∞—Ä–∞.'.$this->pre.'';
					$this->callbackAnswer( $text, $this->keyboards['inline_buy_filter']);
				}
				else
				{
					$text='–í—ã —É–∂–µ –≤—ã–±—Ä–∞–ª–∏ —Å—Ç–æ–∏–º–æ—Å—Ç—å —Ç–æ–≤–∞—Ä–∞ <b>'.$addtext.'</b>. –í—ã–±–∏—Ä–∏—Ç–µ –¥—Ä—É–≥–∏–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –∏–ª–∏ –Ω–∞–∂–º–∏—Ç–µ –°–±—Ä–æ—Å–∏—Ç—å —Ñ–∏–ª—å—Ç—Ä—ã –¥–ª—è –≤—ã–±–æ—Ä–∞ –Ω–æ–≤–æ–π —Å—Ç–æ–∏–º–æ—Å—Ç–∏ —Ç–æ–≤–∞—Ä–∞.'.$this->pre.'';
					$this->callbackAnswer( $text, $this->keyboards['inline_buy_filter']);
				}
			}
			else
			{
				$merge=$this->cmd_filter_buy_price();
				$merge[] = [["text" => "üîÄ–°–±—Ä–æ—Å–∏—Ç—å —Ñ–∏–ª—å—Ç—Ä—ã", "callback_data" => "resetfilters_default_buy"]];
				$merge[] = [["text" => "‚¨ÖÔ∏è–ù–∞–∑–∞–¥", "callback_data" => "buy_back_filter_price"], ["text" => "‚§¥Ô∏è–í—ã–π—Ç–∏", "callback_data" => "buy_exit_filter_type"]];

				$text='–í—ã–±–∏—Ä–∏—Ç–µ –æ–¥–Ω—É –∏–ª–∏ –Ω–µ—Å–∫–æ–ª—å–∫–æ —Ü–µ–Ω —Ç–æ–≤–∞—Ä–∞, –∑–∞—Ç–µ–º –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –ù–∞–∑–∞–¥ –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏.'.$this->pre.'';
				$this->callbackAnswer( $text, $merge);
			}
		}
		else
		{
			$merge=$this->cmd_filter_buy_price();
			$merge[] = [["text" => "üîÄ–°–±—Ä–æ—Å–∏—Ç—å —Ñ–∏–ª—å—Ç—Ä—ã", "callback_data" => "resetfilters_default_buy"]];
			$merge[] = [["text" => "‚¨ÖÔ∏è–ù–∞–∑–∞–¥", "callback_data" => "buy_back_filter_price"], ["text" => "‚§¥Ô∏è–í—ã–π—Ç–∏", "callback_data" => "buy_exit_filter_type"]];

			$text='–í—ã–±–∏—Ä–∏—Ç–µ –æ–¥–Ω—É –∏–ª–∏ –Ω–µ—Å–∫–æ–ª—å–∫–æ —Ü–µ–Ω —Ç–æ–≤–∞—Ä–∞, –∑–∞—Ç–µ–º –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –ù–∞–∑–∞–¥ –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏.'.$this->pre.'';
			$this->callbackAnswer( $text, $merge);
		}
	}	

/////
	public function cmd_filter_buy_price()
	{
		
		$con_sql2=$this->cmd_sql();
	
		$tabprice='tabprice'.$this->api->chatId.'';
		$tabservice='tabservice'.$this->api->chatId.'';
		$tabmain='tabmain'.$this->api->chatId.'';
		
		
		if(mysqli_query($con_sql2, 'SELECT 1 FROM '.$tabservice.' LIMIT 1'))
		{

			$query2=mysqli_query($con_sql2, 'SELECT DISTINCT price FROM '.$tabservice.' WHERE messid!="0" AND price!="0"');
			$con2=mysqli_num_rows($query2);
			
			$puttemp=[];
			
			for($i1=0;$i1<$con2;$i1++)
			{
				mysqli_data_seek($query2, $i1);
				$row2[$i1]=mysqli_fetch_row($query2);
			
				if($row2[$i1][0]<1000 && $row2[$i1][0]>0)
				{
					$price1='lesshundred';
				}
				if($row2[$i1][0]>=1000 && $row2[$i1][0]<=5000)
				{
					$price1='middlehundred';
				}
				if($row2[$i1][0]>5000)
				{
					$price1='overhundred';
				}
				
				if(in_array($price1, $puttemp)==FALSE)
				{
					$puttemp[]=$price1;
				}
			}
			
			
			if(mysqli_query($con_sql2, 'SELECT 1 FROM '.$tabprice.' LIMIT 1'))
			{
				$query2=mysqli_query($con_sql2, 'SELECT DISTINCT price FROM '.$tabprice.' WHERE messid!="0" AND price!="0"');
				$con2=mysqli_num_rows($query2);
				
				for($i1=0;$i1<$con2;$i1++)
				{
					mysqli_data_seek($query2, $i1);
					$row2[$i1]=mysqli_fetch_row($query2);
				
					if($row2[$i1][0]<1000 && $row2[$i1][0]>0)
					{
						$price2='lesshundred';
					}
					if($row2[$i1][0]>=1000 && $row2[$i1][0]<=5000)
					{
						$price2='middlehundred';
					}
					if($row2[$i1][0]>5000)
					{
						$price2='overhundred';
					}
					
					if(in_array($price2, $puttemp))
					{	
						$search=array_search($price2, $puttemp);
						unset($puttemp[$search]);
					}
				}
			}

		}
		else
		{
		
			$query1=mysqli_query($con_sql2, 'SHOW TABLES LIKE "tabmain%"');
			$con1=mysqli_num_rows($query1);
			
			$table=[];
			
			for($i=0;$i<$con1;$i++)
			{
				mysqli_data_seek($query1, $i);
				$row1[$i]=mysqli_fetch_row($query1);
				$table[]=$row1[$i][0];	
			}
			
		
			$puttemp=[];
					
			for($i=0;$i<$con1;$i++)
			{
				$tab=$table[$i];
	
				$query2=mysqli_query($con_sql2, 'SELECT DISTINCT price FROM '.$tab.' WHERE messid!="0" AND price!="0"');
				$con2=mysqli_num_rows($query2);
				usleep(100000);
				
				if($con2!=0)
				{
					for($i1=0;$i1<$con2;$i1++)
					{
						mysqli_data_seek($query2, $i1);
						$row2[$i1]=mysqli_fetch_row($query2);
					
						
						if($row2[$i1][0]<1000 && $row2[$i1][0]>0)
						{
							$price1='lesshundred';
						}
						if($row2[$i1][0]>=1000 && $row2[$i1][0]<=5000)
						{
							$price1='middlehundred';
						}
						if($row2[$i1][0]>5000)
						{
							$price1='overhundred';
						}
						
						if(in_array($price1, $puttemp)==FALSE)								
						{
							$puttemp[]=$price1;
						}
					}
				}
				
			}
			
				/* foreach($puttemp as $value)
				{
					$this->api->sendMessage([
					'text' => $value,
					'disable_notification' => TRUE,
					'disable_web_page_preview' => TRUE,
					'parse_mode'=> "HTML"
					]);
				}
				$this->api->sendMessage([
					'text' => "***************************",
					'disable_notification' => TRUE,
					'disable_web_page_preview' => TRUE,
					'parse_mode'=> "HTML"
					]); */
				
			
			
			if(mysqli_query($con_sql2, 'SELECT 1 FROM '.$tabprice.' LIMIT 1'))
			{
				$query2=mysqli_query($con_sql2, 'SELECT DISTINCT price FROM '.$tabprice.' WHERE messid!="0" AND price!="0"');
				$con2=mysqli_num_rows($query2);
				
							
				for($i1=0;$i1<$con2;$i1++)
				{
					mysqli_data_seek($query2, $i1);
					$row2[$i1]=mysqli_fetch_row($query2);
				
					if($row2[$i1][0]<1000 && $row2[$i1][0]>0)
					{
						$price2='lesshundred';
					}
					if($row2[$i1][0]>=1000 && $row2[$u][0]<=5000)
					{
						$price2='middlehundred';
					}
					if($row2[$i1][0]>5000)
					{
						$price2='overhundred';
					}
										
					if(in_array($price2, $puttemp))
					{	
						$search=array_search($price2, $puttemp);
						unset($puttemp[$search]);
					}
				}
				
			}
			
		}
		
		$put=[];
		
		foreach($puttemp as $value)
		{
			$put[]=$value;
		}
			
		
		sort($put);
		$cnt=count($put);
				
		
		$maxbuttons=1;
		$ceil=ceil($cnt/$maxbuttons);
		
		$include=''.dirname(__FILE__).'/include'.$this->api->chatId.'.php';
		
		if(file_exists($include)==FALSE)
		{
			touch($include);
				
			$insert='<?php
		
		
			class TelegramBotfunc{';
			file_put_contents($include, $insert . PHP_EOL,FILE_APPEND);
				
		}
		else
		{
			$getinclude=file($include);
			unset($getinclude[array_key_last($getinclude)]);
			file_put_contents($include, $getinclude);
		}
		
		$u=0;
		$merge=[];
		
		
		for($i1=0;$i1<$ceil;$i1++)
		{
			$put1=[];
			
			for($i2=0;$i2<$maxbuttons;$i2++)
			{	
		
				if(isset($put[$u]))
				{
					if($put[$u]=='lesshundred')
					{
						$buttext='–î–æ 1000 –≥—Ä–Ω';
					}
					elseif($put[$u]=='middlehundred')
					{
						$buttext='–û—Ç 1000 –¥–æ 5000 –≥—Ä–Ω';
					}
					elseif($put[$u]=='overhundred')
					{
						$buttext='–°–≤—ã—à–µ 5000 –≥—Ä–Ω';
					}
				
					
					$put1[]=["text" => "$buttext", "callback_data" => 'buy_select_price_'.$this->api->chatId.'_'.$put[$u].''];
					
					if(preg_match('/callback_buy_select_price_'.$this->api->chatId.'_'.$put[$u].'/', file_get_contents($include))==FALSE)
					{
						$insert='
						public function callback_buy_select_price_'.$this->api->chatId.'_'.$put[$u].'()
						{	
					
							$bot = new TestBot;
							$bot->api->getWebhookUpdate();
							
							$con_sql2=$bot->cmd_sql();
							
							$priceinput=&#039;'.$put[$u].'&#039;;


							if(mysqli_query($con_sql2, &#039;SELECT 1 FROM '.$tabservice.' LIMIT 1&#039;))
							{	
								
								if(mysqli_query($con_sql2, &#039;SELECT 1 FROM '.$tabprice.' LIMIT 1&#039;)==FALSE)
								{
									mysqli_query($con_sql2, &#039;CREATE TABLE '.$tabprice.' LIKE '.$tabmain.'&#039;);
									usleep(250000);
								}
								
								if($priceinput==&#039;lesshundred&#039;)
								{
									$cat1=1000;
									mysqli_query($con_sql2, &#039;INSERT INTO '.$tabprice.' (type, cat, gender, brand, size, price, alt, pic, date, time, messid, cond, chatid) SELECT type, cat, gender, brand, size, price, alt, pic, date, time, messid, cond, chatid FROM '.$tabservice.' WHERE price<"&#039;.$cat1.&#039;" AND price>"0" AND messid!="0"&#039;);
									usleep(250000);
									$buttext="–î–æ 1000 –≥—Ä–Ω";
								}
								elseif($priceinput==&#039;middlehundred&#039;)
								{
									$cat1=1000;
									$cat2=5000;
									mysqli_query($con_sql2, &#039;INSERT INTO '.$tabprice.' (type, cat, gender, brand, size, price, alt, pic, date, time, messid, cond, chatid) SELECT type, cat, gender, brand, size, price, alt, pic, date, time, messid, cond, chatid FROM '.$tabservice.' WHERE price>"&#039;.$cat1.&#039;" AND price<"&#039;.$cat2.&#039;" AND messid!="0"&#039;);
									usleep(250000);
									$buttext="–û—Ç 1000 –¥–æ 5000 –≥—Ä–Ω";
								}
								elseif($priceinput==&#039;overhundred&#039;)
								{
									$cat1=5000;
									mysqli_query($con_sql2, &#039;INSERT INTO '.$tabprice.' (type, cat, gender, brand, size, price, alt, pic, date, time, messid, cond, chatid) SELECT type, cat, gender, brand, size, price, alt, pic, date, time, messid, cond, chatid FROM '.$tabservice.' WHERE price>"&#039;.$cat1.&#039;" AND messid!="0"&#039;);
									usleep(250000);
									$buttext="–°–≤—ã—à–µ 5000 –≥—Ä–Ω";
								}
								

								$merge=$bot->cmd_filter_buy_price();
								usleep(100000);
								
								$merge[] = [["text" => "üîÄ–°–±—Ä–æ—Å–∏—Ç—å —Ñ–∏–ª—å—Ç—Ä—ã", "callback_data" => "resetfilters_default_buy"]];
								$merge[] = [["text" => "‚¨ÖÔ∏è–ù–∞–∑–∞–¥", "callback_data" => "buy_back_filter_price"], ["text" => "‚§¥Ô∏è–í—ã–π—Ç–∏", "callback_data" => "buy_exit_filter_type"]];
								
								if(isset($bot->api->body[&#039;callback_query&#039;]["id"]))
								{
									$callback_query_id=$bot->api->body[&#039;callback_query&#039;]["id"];
									$bot->api->answerCallbackQuery($callback_query_id);
								}
								
								$text = &#039;–í—ã –≤—ã–±—Ä–∞–ª–∏ —Å—Ç–æ–∏–º–æ—Å—Ç—å —Ç–æ–≤–∞—Ä–∞ <b>'.$buttext.'</b>.'.PHP_EOL.'–ú–æ–∂–µ—Ç–µ –≤—ã–±—Ä–∞—Ç—å –µ—â–µ –æ–¥–Ω—É –∏–ª–∏ –Ω–∞–∂–∞—Ç—å –∫–Ω–æ–ø–∫—É <b>–ù–∞–∑–∞–¥</b> –¥–ª—è –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –≤—ã–±—Ä–∞–Ω–Ω—ã—Ö —Ñ–∏–ª—å—Ç—Ä–æ–≤.&#039;.$bot->pre.&#039;&#039;;
								
								$bot->api->editMessageText([
								&#039;chat_id&#039; => $bot->api->body[&#039;callback_query&#039;][&#039;message&#039;][&#039;chat&#039;]["id"],
								&#039;message_id&#039; => $bot->api->body[&#039;callback_query&#039;][&#039;message&#039;][&#039;message_id&#039;],
								&#039;text&#039; => $text,
								&#039;parse_mode&#039; => "HTML",
								&#039;reply_markup&#039; => json_encode( [&#039;inline_keyboard&#039;=>$merge] ),
								]);
								usleep(100000);
										
							}
							else
							{
								
								if(mysqli_query($con_sql2, &#039;SELECT 1 FROM '.$tabprice.' LIMIT 1&#039;)==FALSE)
								{
									mysqli_query($con_sql2, &#039;CREATE TABLE '.$tabprice.' LIKE '.$tabmain.'&#039;);
									usleep(250000);
									
									$query2=mysqli_query($con_sql2, &#039;SHOW TABLES LIKE "tabmain%"&#039;);
									$con2=mysqli_num_rows($query2);
									
								
									for($i=0;$i<$con2;$i++)
									{
										mysqli_data_seek($query2, $i);
										$row2[$i]=mysqli_fetch_row($query2);
										$table[$i]=$row2[$i][0];	
									
										if($priceinput==&#039;lesshundred&#039;)
										{
											$cat1=1000;
											mysqli_query($con_sql2, &#039;INSERT INTO '.$tabprice.' (type, cat, gender, brand, size, price, alt, pic, date, time, messid, cond, chatid) SELECT type, cat, gender, brand, size, price, alt, pic, date, time, messid, cond, chatid FROM &#039;.$table[$i].&#039; WHERE price<"&#039;.$cat1.&#039;"  AND price>"0" AND messid!="0"&#039;);
											usleep(250000);
										}
										elseif($priceinput==&#039;middlehundred&#039;)
										{
											$cat1=1000;
											$cat2=5000;
											mysqli_query($con_sql2, &#039;INSERT INTO '.$tabprice.' (type, cat, gender, brand, size, price, alt, pic, date, time, messid, cond, chatid) SELECT type, cat, gender, brand, size, price, alt, pic, date, time, messid, cond, chatid FROM &#039;.$table[$i].&#039; WHERE price>"&#039;.$cat1.&#039;" AND price<"&#039;.$cat2.&#039;" AND messid!="0"&#039;);
											usleep(250000);
										}
										elseif($priceinput==&#039;overhundred&#039;)
										{
											$cat1=5000;
											mysqli_query($con_sql2, &#039;INSERT INTO '.$tabprice.' (type, cat, gender, brand, size, price, alt, pic, date, time, messid, cond, chatid) SELECT type, cat, gender, brand, size, price, alt, pic, date, time, messid, cond, chatid FROM &#039;.$table[$i].&#039; WHERE price>"&#039;.$cat1.&#039;" AND messid!="0"&#039;);
											usleep(250000);
										}
									}
								}
								else
								{
									$query1=mysqli_query($con_sql2, &#039;SELECT DISTINCT price FROM '.$tabprice.' WHERE messid!="0" AND price!="0"&#039;);
									$con1=mysqli_num_rows($query1);
									
									$price3=[];
									
									for($i1=0;$i1<$con1;$i1++)
									{
										mysqli_data_seek($query1, $i1);
										$row1[$i1]=mysqli_fetch_row($query1);
									
									
										if($row1[$i1][0]<1000 && $row1[$i1][0]>0)
										{
											$putprice=&#039;lesshundred&#039;;
										}
										if($row1[$i1][0]>=1000 && $row1[$i1][0]<=5000)
										{
											$putprice=&#039;middlehundred&#039;;
										}
										if($row1[$i1][0]>5000)
										{
											$putprice=&#039;overhundred&#039;;
										}
										
										if(in_array($putprice, $price3)==FALSE)
										{
											$price3[]=$putprice;
										}
									}
									
									if(in_array($priceinput, $price3)==FALSE)
									{
									
										$query2=mysqli_query($con_sql2, &#039;SHOW TABLES LIKE "tabmain%"&#039;);
										$con2=mysqli_num_rows($query2);
										
									
										for($i=0;$i<$con2;$i++)
										{
											mysqli_data_seek($query2, $i);
											$row2[$i]=mysqli_fetch_row($query2);
											$table[$i]=$row2[$i][0];	
									
											if($priceinput==&#039;lesshundred&#039;)
											{
												$cat1=1000;
												mysqli_query($con_sql2, &#039;INSERT INTO '.$tabprice.' (type, cat, gender, brand, size, price, alt, pic, date, time, messid, cond, chatid) SELECT type, cat, gender, brand, size, price, alt, pic, date, time, messid, cond, chatid FROM &#039;.$table[$i].&#039; WHERE price<"&#039;.$cat1.&#039;" AND price>"0" AND messid!="0"&#039;);
												usleep(250000);
											}
											elseif($priceinput==&#039;middlehundred&#039;)
											{
												$cat1=1000;
												$cat2=5000;
												mysqli_query($con_sql2, &#039;INSERT INTO '.$tabprice.' (type, cat, gender, brand, size, price, alt, pic, date, time, messid, cond, chatid) SELECT type, cat, gender, brand, size, price, alt, pic, date, time, messid, cond, chatid FROM &#039;.$table[$i].&#039; WHERE price>"&#039;.$cat1.&#039;" AND price<"&#039;.$cat2.&#039;" AND messid!="0"&#039;);
												usleep(250000);
											}
											elseif($priceinput==&#039;overhundred&#039;)
											{
												$cat1=5000;
												mysqli_query($con_sql2, &#039;INSERT INTO '.$tabprice.' (type, cat, gender, brand, size, price, alt, pic, date, time, messid, cond, chatid) SELECT type, cat, gender, brand, size, price, alt, pic, date, time, messid, cond, chatid FROM &#039;.$table[$i].&#039; WHERE price>"&#039;.$cat1.&#039;" AND messid!="0"&#039;);
												usleep(250000);
											}
										}
									}
								
								}
								
								$merge=$bot->cmd_filter_buy_price();
								usleep(100000);
								
								$merge[] = [["text" => "üîÄ–°–±—Ä–æ—Å–∏—Ç—å —Ñ–∏–ª—å—Ç—Ä—ã", "callback_data" => "resetfilters_default_buy"]];
								$merge[] = [["text" => "‚¨ÖÔ∏è–ù–∞–∑–∞–¥", "callback_data" => "buy_back_filter_price"], ["text" => "‚§¥Ô∏è–í—ã–π—Ç–∏", "callback_data" => "buy_exit_filter_type"]];
								
								if(isset($bot->api->body[&#039;callback_query&#039;]["id"]))
								{
									$callback_query_id=$bot->api->body[&#039;callback_query&#039;]["id"];
									$bot->api->answerCallbackQuery($callback_query_id);
								}
								$text = &#039;–í—ã –≤—ã–±—Ä–∞–ª–∏ —Å—Ç–æ–∏–º–æ—Å—Ç—å —Ç–æ–≤–∞—Ä–∞ <b>'.$buttext.'</b>.'.PHP_EOL.'–ú–æ–∂–µ—Ç–µ –≤—ã–±—Ä–∞—Ç—å –µ—â–µ –æ–¥–Ω—É –∏–ª–∏ –Ω–∞–∂–∞—Ç—å –∫–Ω–æ–ø–∫—É <b>–ù–∞–∑–∞–¥</b> –¥–ª—è –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –≤—ã–±—Ä–∞–Ω–Ω—ã—Ö —Ñ–∏–ª—å—Ç—Ä–æ–≤.&#039;.$bot->pre.&#039;&#039;;
								
								$bot->api->editMessageText([
								&#039;chat_id&#039; => $bot->api->body[&#039;callback_query&#039;][&#039;message&#039;][&#039;chat&#039;]["id"],
								&#039;message_id&#039; => $bot->api->body[&#039;callback_query&#039;][&#039;message&#039;][&#039;message_id&#039;],
								&#039;text&#039; => $text,
								&#039;parse_mode&#039; => "HTML",
								&#039;reply_markup&#039; => json_encode( [&#039;inline_keyboard&#039;=>$merge] ),
								]);
								usleep(100000);
								
							}
		
						}';
						file_put_contents($include, html_entity_decode($insert, ENT_QUOTES) . PHP_EOL . PHP_EOL,FILE_APPEND);
					}
				
				}
				
				$u++;
			}	
			
			$merge[]=$put1;
			unset($put1);
			
		}
		

		$insert='}';
		file_put_contents($include, $insert,FILE_APPEND);
		
		
		return $merge;
	}



/////
	public function callback_buy_back_filter_price()
	{		
		$con_sql2=$this->cmd_sql();
		
		$tabprice='tabprice'.$this->api->chatId.'';
		$tabservice='tabservice'.$this->api->chatId.'';
		$tabmain='tabmain'.$this->api->chatId.'';
		
		if(mysqli_query($con_sql2, 'SELECT 1 FROM '.$tabservice.' LIMIT 1'))
		{
			if(mysqli_query($con_sql2, 'SELECT 1 FROM '.$tabprice.' LIMIT 1'))
			{
				$query2=mysqli_query($con_sql2, 'SELECT DISTINCT price FROM '.$tabprice.' WHERE messid!="0" AND price!="0"');
				$con2=mysqli_num_rows($query2);
				$addtext="";
				$buttextarray=[];
				
				for($i1=0;$i1<$con2;$i1++)
				{
					mysqli_data_seek($query2, $i1);
					$row2[$i1]=mysqli_fetch_row($query2);
				
					if($row2[$i1][0]<1000 && $row2[$i1][0]>0)
					{
						$buttext='–î–æ 1000 –≥—Ä–Ω';
					}
					if($row2[$i1][0]>=1000 && $row2[$i1][0]<=5000)
					{
						$buttext='–û—Ç 1000 –¥–æ 5000 –≥—Ä–Ω';
					}
					if($row2[$i1][0]>5000)
					{
						$buttext='–°–≤—ã—à–µ 5000 –≥—Ä–Ω';
					}
					
					if(in_array($buttext, $buttextarray)==FALSE)
					{
						$buttextarray[]=$buttext;
					}
				}
				
				
				$cnt=count($buttextarray);
				
				for($i1=0;$i1<$cnt;$i1++)
				{
					if($i1==0)
					{
						$addtext=$buttextarray[$i1];
					}
					else
					{
						$addtext = $addtext . ', '.$buttextarray[$i1].'';
					}
				}
		
				
				if(preg_match('/,/', $addtext))
				{
					$text='–í—ã –≤—ã–±—Ä–∞–ª–∏ —Å—Ç–æ–∏–º–æ—Å—Ç—å —Ç–æ–≤–∞—Ä–∞ <b>'.$addtext.'</b>.'.PHP_EOL.'–í—ã–±–∏—Ä–∏—Ç–µ –¥—Ä—É–≥–æ–π –ø–∞—Ä–∞–º–µ—Ç—Ä –∏–ª–∏ –Ω–∞–∂–º–∏—Ç–µ <b>–°–±—Ä–æ—Å–∏—Ç—å —Ñ–∏–ª—å—Ç—Ä—ã</b> –¥–ª—è –≤—ã–±–æ—Ä–∞ –Ω–æ–≤–æ–π —Å—Ç–æ–∏–º–æ—Å—Ç–∏ —Ç–æ–≤–∞—Ä–∞.'.$this->pre.'';
				}
				else
				{
					$text='–í—ã –≤—ã–±—Ä–∞–ª–∏ —Å—Ç–æ–∏–º–æ—Å—Ç—å —Ç–æ–≤–∞—Ä–∞ <b>'.$addtext.'</b>.'.PHP_EOL.'–í—ã–±–∏—Ä–∏—Ç–µ –¥—Ä—É–≥–æ–π –ø–∞—Ä–∞–º–µ—Ç—Ä –∏–ª–∏ –Ω–∞–∂–º–∏—Ç–µ <b>–°–±—Ä–æ—Å–∏—Ç—å —Ñ–∏–ª—å—Ç—Ä—ã</b> –¥–ª—è –≤—ã–±–æ—Ä–∞ –Ω–æ–≤–æ–π —Å—Ç–æ–∏–º–æ—Å—Ç–∏ —Ç–æ–≤–∞—Ä–∞.'.$this->pre.'';
				}
				
				
				mysqli_query($con_sql2, 'DROP TABLE '.$tabservice.'');
				usleep(250000);
				mysqli_query($con_sql2, 'CREATE TABLE '.$tabservice.' LIKE '.$tabprice.'');
				usleep(250000);
				mysqli_query($con_sql2, 'INSERT INTO '.$tabservice.' (type, cat, gender, brand, size, price, alt, pic, date, time, messid, cond, chatid) SELECT type, cat, gender, brand, size, price, alt, pic, date, time, messid, cond, chatid FROM '.$tabprice.'');
				usleep(250000);
				
				$this->callbackAnswer( $text, $this->keyboards['inline_buy_filter']);

			}
			else
			{
				$text='–í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –≤ —Ä–∞–∑–¥–µ–ª –§–∏–ª—å—Ç—Ä –º–µ–Ω—é –ö—É–ø–∏—Ç—å —Ç–æ–≤–∞—Ä.'.$this->pre.'';
				$this->callbackAnswer( $text, $this->keyboards['inline_buy_filter']);
			}
		}
		else
		{
			if(mysqli_query($con_sql2, 'SELECT 1 FROM '.$tabprice.' LIMIT 1'))
			{
				
				$query2=mysqli_query($con_sql2, 'SELECT DISTINCT price FROM '.$tabprice.' WHERE messid!="0"');
				$con2=mysqli_num_rows($query2);
				$addtext="";
				$buttextarray=[];
				for($i1=0;$i1<$con2;$i1++)
				{
					
					mysqli_data_seek($query2, $i1);
					$row2[$i1]=mysqli_fetch_row($query2);
				
					
			
					if($row2[$i1][0]<1000 && $row2[$i1][0]>0)
					{
						$buttext='–î–æ 1000 –≥—Ä–Ω';
					}
					if($row2[$i1][0]>=1000 && $row2[$i1][0]<=5000)
					{
						$buttext='–û—Ç 1000 –¥–æ 5000 –≥—Ä–Ω';
					}
					if($row2[$i1][0]>5000)
					{
						$buttext='–°–≤—ã—à–µ 5000 –≥—Ä–Ω';
					}
					
					if(in_array($buttext, $buttextarray)==FALSE)
					{
						$buttextarray[]=$buttext;
					}
					
				}
				
				
				$cnt=count($buttextarray);
				for($i1=0;$i1<$cnt;$i1++)
				{
					if($i1==0)
					{
						$addtext=$buttextarray[$i1];
					}
					else
					{
						$addtext = $addtext . ', '.$buttextarray[$i1].'';
					}
				}
		
				
				if(preg_match('/,/', $addtext))
				{
					$text='–í—ã –≤—ã–±—Ä–∞–ª–∏ —Å—Ç–æ–∏–º–æ—Å—Ç—å —Ç–æ–≤–∞—Ä–∞ <b>'.$addtext.'</b>.'.PHP_EOL.'–í—ã–±–∏—Ä–∏—Ç–µ –¥—Ä—É–≥–æ–π –ø–∞—Ä–∞–º–µ—Ç—Ä –∏–ª–∏ –Ω–∞–∂–º–∏—Ç–µ <b>–°–±—Ä–æ—Å–∏—Ç—å —Ñ–∏–ª—å—Ç—Ä—ã</b> –¥–ª—è –≤—ã–±–æ—Ä–∞ –Ω–æ–≤–æ–π —Å—Ç–æ–∏–º–æ—Å—Ç–∏ —Ç–æ–≤–∞—Ä–∞.'.$this->pre.'';
					
				}
				else
				{
					$text='–í—ã –≤—ã–±—Ä–∞–ª–∏ —Å—Ç–æ–∏–º–æ—Å—Ç—å —Ç–æ–≤–∞—Ä–∞ <b>'.$addtext.'</b>.'.PHP_EOL.'–í—ã–±–∏—Ä–∏—Ç–µ –¥—Ä—É–≥–æ–π –ø–∞—Ä–∞–º–µ—Ç—Ä –∏–ª–∏ –Ω–∞–∂–º–∏—Ç–µ <b>–°–±—Ä–æ—Å–∏—Ç—å —Ñ–∏–ª—å—Ç—Ä—ã</b> –¥–ª—è –≤—ã–±–æ—Ä–∞ –Ω–æ–≤–æ–π —Å—Ç–æ–∏–º–æ—Å—Ç–∏ —Ç–æ–≤–∞—Ä–∞.'.$this->pre.'';
					
				}
				
				mysqli_query($con_sql2, 'CREATE TABLE '.$tabservice.' LIKE '.$tabprice.'');
				usleep(250000);
				mysqli_query($con_sql2, 'INSERT INTO '.$tabservice.' (type, cat, gender, brand, size, price, alt, pic, date, time, messid, cond, chatid) SELECT type, cat, gender, brand, size, price, alt, pic, date, time, messid, cond, chatid FROM '.$tabprice.'');
				usleep(250000);
				/* mysqli_query($con_sql2, 'DROP TABLE '.$tabprice.'');
				usleep(250000); */
				
				$this->callbackAnswer( $text, $this->keyboards['inline_buy_filter']);
			}
			else
			{
				$text='–í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –≤ —Ä–∞–∑–¥–µ–ª –§–∏–ª—å—Ç—Ä –º–µ–Ω—é –ö—É–ø–∏—Ç—å —Ç–æ–≤–∞—Ä.'.$this->pre.'';
				$this->callbackAnswer( $text, $this->keyboards['inline_buy_filter']);
			}
			
			
		}
		
		
	}
	

///////////////////////////////////////////////END FILTER/////////////////////////////////////////////////
/////
	public function callback_filter_buy_back_main()
	{

		$text='–í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é <b>–ö—É–ø–∏—Ç—å —Ç–æ–≤–∞—Ä</b>.'.PHP_EOL.'–ú–æ–∂–µ—Ç–µ –Ω–∞–∂–∞—Ç—å –∫–Ω–æ–ø–∫—É <b>–ü–æ–∫–∞–∑–∞—Ç—å</b> –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤.'.$this->pre.'';
		$this->callbackAnswer( $text, $this->keyboards['inline_buy_default']);
	}	

/////
	public function callback_filter_buy_exit_main()
	{
		
		$con_sql2=$this->cmd_sql();
		
		$tab='tabtype'.$this->api->chatId.'';
		
		if(mysqli_query($con_sql2, 'SELECT 1 FROM '.$tab.' LIMIT 1'))
		{
			$query1=mysqli_query($con_sql2, 'DROP TABLE '.$tab.'');
			usleep(250000);	
		}
		
		$tab='tabcat'.$this->api->chatId.'';
		
		if(mysqli_query($con_sql2, 'SELECT 1 FROM '.$tab.' LIMIT 1'))
		{
			$query1=mysqli_query($con_sql2, 'DROP TABLE '.$tab.'');
			usleep(250000);	
		}
		
		$tab='tabgender'.$this->api->chatId.'';
		
		if(mysqli_query($con_sql2, 'SELECT 1 FROM '.$tab.' LIMIT 1'))
		{
			$query1=mysqli_query($con_sql2, 'DROP TABLE '.$tab.'');
			usleep(250000);	
		}
		
		$tab='tabcond'.$this->api->chatId.'';
		
		if(mysqli_query($con_sql2, 'SELECT 1 FROM '.$tab.' LIMIT 1'))
		{
			$query1=mysqli_query($con_sql2, 'DROP TABLE '.$tab.'');
			usleep(250000);	
		}
	
		$tab='tabprice'.$this->api->chatId.'';
		
		if(mysqli_query($con_sql2, 'SELECT 1 FROM '.$tab.' LIMIT 1'))
		{
			$query1=mysqli_query($con_sql2, 'DROP TABLE '.$tab.'');
			usleep(250000);	
		}
		
		
		$tab='tabservice'.$this->api->chatId.'';
		
		if(mysqli_query($con_sql2, 'SELECT 1 FROM '.$tab.' LIMIT 1'))
		{
			$query1=mysqli_query($con_sql2, 'DROP TABLE '.$tab.'');
			usleep(250000);	
		}
		


		
		if($this->cmd_isadmin())
		{
			$text='–í—ã –≤—ã—à–ª–∏ –≤ <b>–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é</b>.'.$this->pre.'';
		
			//$this->callbackAnswer( $text, $this->keyboards['inline_default_admin']);
			
			if(isset($this->api->body['callback_query']["id"]))
			{
				$callback_query_id=$this->api->body['callback_query']["id"];
				$this->api->answerCallbackQuery($callback_query_id);
			}
			
			$this->api->sendMessage([
				'text' => $text,
				'reply_markup' => json_encode( ['inline_keyboard'=>$this->keyboards['inline_default_admin']]),
				'disable_notification' => TRUE,
				'disable_web_page_preview' => TRUE,
				'parse_mode'=> "HTML"
				]);
				usleep(100000);
		}
		else
		{
			$text='–í—ã –≤—ã—à–ª–∏ –≤ <b>–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é</b>.'.$this->pre.'';
		
			//$this->callbackAnswer( $text, $this->keyboards['inline_default']);
			
			if(isset($this->api->body['callback_query']["id"]))
			{
				$callback_query_id=$this->api->body['callback_query']["id"];
				$this->api->answerCallbackQuery($callback_query_id);
			}
			
			$this->api->sendMessage([
				'text' => $text,
				'reply_markup' => json_encode( ['inline_keyboard'=>$this->keyboards['inline_default']]),
				'disable_notification' => TRUE,
				'disable_web_page_preview' => TRUE,
				'parse_mode'=> "HTML"
				]);
				usleep(100000);
		}
		
	
	}
	

/////
	public function callback_filter_resetfilters_buy()
	{
		
		$con_sql2=$this->cmd_sql();
		
		$tab='tabtype'.$this->api->chatId.'';
		
		if(mysqli_query($con_sql2, 'SELECT 1 FROM '.$tab.' LIMIT 1'))
		{
			$query1=mysqli_query($con_sql2, 'DROP TABLE '.$tab.'');
			usleep(250000);	
		}
		
		$tab='tabcat'.$this->api->chatId.'';
		
		if(mysqli_query($con_sql2, 'SELECT 1 FROM '.$tab.' LIMIT 1'))
		{
			$query1=mysqli_query($con_sql2, 'DROP TABLE '.$tab.'');
			usleep(250000);	
		}
		
		$tab='tabgender'.$this->api->chatId.'';
		
		if(mysqli_query($con_sql2, 'SELECT 1 FROM '.$tab.' LIMIT 1'))
		{
			$query1=mysqli_query($con_sql2, 'DROP TABLE '.$tab.'');
			usleep(250000);	
		}
		
		$tab='tabcond'.$this->api->chatId.'';
		
		if(mysqli_query($con_sql2, 'SELECT 1 FROM '.$tab.' LIMIT 1'))
		{
			$query1=mysqli_query($con_sql2, 'DROP TABLE '.$tab.'');
			usleep(250000);	
		}
	
		$tab='tabprice'.$this->api->chatId.'';
		
		if(mysqli_query($con_sql2, 'SELECT 1 FROM '.$tab.' LIMIT 1'))
		{
			$query1=mysqli_query($con_sql2, 'DROP TABLE '.$tab.'');
			usleep(250000);	
		}
		
		
		$tab='tabservice'.$this->api->chatId.'';
		
		if(mysqli_query($con_sql2, 'SELECT 1 FROM '.$tab.' LIMIT 1'))
		{
			$query1=mysqli_query($con_sql2, 'DROP TABLE '.$tab.'');
			usleep(250000);	
		}
		
		
		$text='<b>–í–∞—à–∏ —Ñ–∏–ª—å—Ç—Ä—ã —Å–±—Ä–æ—à–µ–Ω—ã!</b>'.PHP_EOL.''.PHP_EOL.'–í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ <b>–§–∏–ª—å—Ç—Ä</b> —Ä–∞–∑–¥–µ–ª–∞ <b>–ö—É–ø–∏—Ç—å —Ç–æ–≤–∞—Ä</b>.'.$this->pre.'';
		$this->callbackAnswer( $text, $this->keyboards['inline_buy_filter']);
	}
	



///////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////SELL//////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////
	public function callback_default_sell()
	{
		$con_sql2=$this->cmd_sql();
		$tabserviceapproved='tabserviceapproved';
		$tabservicewant='tabservicewant';
		$tabserviceusers='tabserviceusers';
		$tabservicebanned='tabservicebanned';
		$tabservicedenied='tabservicedenied';
		
		
		
		
		if(preg_match('/'.$this->api->chatId.'/', file_get_contents(''.dirname(__FILE__).'/usersapproved.txt')))
		{
		
		
			$tabserviceadd='tabserviceadd'.$this->api->chatId.'';
			//if(mysqli_num_rows(mysqli_query($con_sql2, 'SELECT 1 FROM '.$tabserviceadd.' WHERE id LIKE "%" LIMIT 1'))!=0)
			//{
				mysqli_query($con_sql2, 'TRUNCATE TABLE '.$tabserviceadd.'');
				usleep(100000);
			//}
			
			$tabtempphoto='tabtempphoto'.$this->api->chatId.'';
			//if(mysqli_num_rows(mysqli_query($con_sql2, 'SELECT 1 FROM '.$tabtempphoto.' WHERE id LIKE "%" LIMIT 1'))!=0)
			//if(mysqli_query($con_sql2, 'SELECT 1 FROM '.$tabtempphoto.' LIMIT 1'))
			//{
				mysqli_query($con_sql2, 'TRUNCATE TABLE '.$tabtempphoto.'');
				usleep(100000);
			//}
			
			$tabserviceuser='tabserviceuser'.$this->api->chatId.'';
			//if(mysqli_num_rows(mysqli_query($con_sql2, 'SELECT 1 FROM '.$tabserviceuser.' WHERE id LIKE "%" LIMIT 1'))!=0)
			//{
				mysqli_query($con_sql2, 'TRUNCATE TABLE '.$tabserviceuser.'');
				usleep(100000);
			//}
			
			if($this->cmd_isadmin())
			{
				$tabserviceadmin='tabserviceadmin'.$this->api->chatId.'';
				mysqli_query($con_sql2, 'TRUNCATE TABLE '.$tabserviceadmin.'');
				usleep(100000);
			}
			
			$text='–í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ –º–µ–Ω—é <b>–ü—Ä–æ–¥–∞—Ç—å</b>. <b>–í—ã–±–µ—Ä–∏—Ç–µ, —á—Ç–æ –í—ã —Ö–æ—Ç–∏—Ç–µ —Å–¥–µ–ª–∞—Ç—å</b>üëá'.$this->pre.'';
			$this->callbackAnswer( $text, $this->keyboards['inline_sell']);
		}
		elseif(preg_match('/'.$this->api->chatId.'/', file_get_contents(''.dirname(__FILE__).'/usersall.txt')))
		{
			if($this->cmd_sql_searchchatidtable($tabservicedenied, $this->api->chatId))
			{
				$text='–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –í–∞–º <b>–±—ã–ª–æ –æ—Ç–∫–∞–∑–∞–Ω–æ</b> –≤ –ø—Ä–∞–≤–µ —Ä–∞–∑–º–µ—â–∞—Ç—å –æ–±—ä—è–≤–ª–µ–Ω–∏—è –≤ –∫–∞–Ω–∞–ª–µ!'.$this->pre.'';
				//$this->callback_inline_close($this->api->messageid);
				$this->callbackAnswer( $text, $this->keyboards['inline_default']);
				
			}
			elseif($this->cmd_sql_searchchatidtable($tabservicewant, $this->api->chatId))
			{
				$text='–í—ã <b>—É–∂–µ –æ—Ç–ø—Ä–∞–≤–∏–ª–∏ –∑–∞–ø—Ä–æ—Å –∞–¥–º–∏–Ω—É</b> –Ω–∞ –ø–æ–ª—É—á–µ–Ω–∏–µ –ø—Ä–∞–≤–∞ —Ä–∞–∑–º–µ—â–∞—Ç—å –æ–±—ä—è–≤–ª–µ–Ω–∏—è –≤ –∫–∞–Ω–∞–ª–µ! –í—ã –ø–æ–ª—É—á–∏—Ç–µ —Å–ª—É–∂–µ–±–Ω–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞—Ö.'.$this->pre.'';
				//$this->callbackAnswer3( $text );
				$this->callbackAnswer( $text, $this->keyboards['inline_default']);
			}
			else
			{
				$text='–ß—Ç–æ–±—ã —Ä–∞–∑–º–µ—â–∞—Ç—å –æ–±—ä—è–≤–ª–µ–Ω–∏—è –≤ –∫–∞–Ω–∞–ª–µ, –í–∞–º –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ <b>–ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –∞–¥–º–∏–Ω–∞.</b>'.PHP_EOL.'–í—ã –º–æ–∂–µ—Ç–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –∑–∞–ø—Ä–æ—Å –∞–¥–º–∏–Ω—É, –Ω–∞–∂–∞–≤ –∫–Ω–æ–ø–∫—É üì£<b>–û—Ç–ø—Ä–∞–≤–∏—Ç—å –∑–∞–ø—Ä–æ—Å</b> —Å–Ω–∏–∑—Éüëá'.$this->pre.'';
				
				$this->api->sendMessage([
				'text' => $text,
				'reply_markup' => json_encode( ['inline_keyboard'=>$this->keyboards['inline_want_user']]),
				'disable_notification' => TRUE,
				'disable_web_page_preview' => TRUE,
				'parse_mode'=> "HTML"
				]);
				usleep(100000);
			}
		}

	}
	
////	
	public function callback_back_sell_main()
	{
		if($this->cmd_isadmin())
		{
			$text='–í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –≤ <b>–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é</b>.'.$this->pre.'';
		
			$this->callbackAnswer( $text, $this->keyboards['inline_default_admin']);
			usleep(100000);
		}
		else
		{
			$text='–í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –≤ <b>–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é</b>.'.$this->pre.'';
		
			$this->callbackAnswer( $text, $this->keyboards['inline_default']);
			usleep(100000);
		}
	}
	
////	
	public function callback_exit_sell_main()
	{
		
		$con_sql2=$this->cmd_sql();
		
		$tabserviceadd='tabserviceadd'.$this->api->chatId.'';
		//if(mysqli_num_rows(mysqli_query($con_sql2, 'SELECT 1 FROM '.$tabserviceadd.' WHERE id LIKE "%" LIMIT 1'))!=0)
		//{
			mysqli_query($con_sql2, 'TRUNCATE TABLE '.$tabserviceadd.'');
			usleep(100000);
		//}
		
		$tabtempphoto='tabtempphoto'.$this->api->chatId.'';
		//if(mysqli_num_rows(mysqli_query($con_sql2, 'SELECT 1 FROM '.$tabtempphoto.' WHERE id LIKE "%" LIMIT 1'))!=0)
		//if(mysqli_query($con_sql2, 'SELECT 1 FROM '.$tabtempphoto.' LIMIT 1'))
		//{
			mysqli_query($con_sql2, 'TRUNCATE TABLE '.$tabtempphoto.'');
			usleep(100000);
		//}
		
		$tabserviceuser='tabserviceuser'.$this->api->chatId.'';
		//if(mysqli_num_rows(mysqli_query($con_sql2, 'SELECT 1 FROM '.$tabserviceuser.' WHERE id LIKE "%" LIMIT 1'))!=0)
		//{
			mysqli_query($con_sql2, 'TRUNCATE TABLE '.$tabserviceuser.'');
			usleep(100000);
		//}
		
		
		if($this->cmd_isadmin())
		{
			
			$tabserviceadmin='tabserviceadmin'.$this->api->chatId.'';
			mysqli_query($con_sql2, 'TRUNCATE TABLE '.$tabserviceadmin.'');
			usleep(100000);

			
			$text='–í—ã –≤—ã—à–ª–∏ –≤ <b>–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é</b>.'.$this->pre.'';
		
			//$this->callbackAnswer( $text, $this->keyboards['inline_default_admin']);
			
			if(isset($this->api->body['callback_query']["id"]))
			{
				$callback_query_id=$this->api->body['callback_query']["id"];
				$this->api->answerCallbackQuery($callback_query_id);
			}
			
			$this->api->sendMessage([
				'text' => $text,
				'reply_markup' => json_encode( ['inline_keyboard'=>$this->keyboards['inline_default_admin']]),
				'disable_notification' => TRUE,
				'disable_web_page_preview' => TRUE,
				'parse_mode'=> "HTML"
				]);
				usleep(100000);
		}
		else
		{
			$text='–í—ã –≤—ã—à–ª–∏ –≤ <b>–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é</b>.'.$this->pre.'';
		
			//$this->callbackAnswer( $text, $this->keyboards['inline_default']);
			
			if(isset($this->api->body['callback_query']["id"]))
			{
				$callback_query_id=$this->api->body['callback_query']["id"];
				$this->api->answerCallbackQuery($callback_query_id);
			}
			
			$this->api->sendMessage([
				'text' => $text,
				'reply_markup' => json_encode( ['inline_keyboard'=>$this->keyboards['inline_default']]),
				'disable_notification' => TRUE,
				'disable_web_page_preview' => TRUE,
				'parse_mode'=> "HTML"
				]);
				usleep(100000);
		}
		
		
	}	
	
	
	
//////////////////////////////////////////////////////////////ADD/////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////ADD TYPE//////////////////////////////////////////////////////////////////////////	
/* 	public function callback_sell_add()
	{
		
		$con_sql2=$this->cmd_sql();
		$tab='tabmain'.$this->api->chatId.'';
		
		$tabservicetime='tabservicetime'.$this->api->chatId.'';
		mysqli_query($con_sql2, 'DROP TABLE '.$tabservicetime.'');
		usleep(100000);
		
		$tabservicetemp='tabservicetemp'.$this->api->chatId.'';
		mysqli_query($con_sql2, 'DROP TABLE '.$tabservicetemp.'');
		usleep(100000);
		
		$tabserviceadd='tabserviceadd'.$this->api->chatId.'';
		//if(mysqli_num_rows(mysqli_query($con_sql2, 'SELECT 1 FROM '.$tabserviceadd.' WHERE id LIKE "%" LIMIT 1'))!=0)
		//{
			mysqli_query($con_sql2, 'DROP TABLE '.$tabserviceadd.'');
			usleep(100000);
		//}
		
		$tabtempphoto='tabtempphoto'.$this->api->chatId.'';
		//if(mysqli_num_rows(mysqli_query($con_sql2, 'SELECT 1 FROM '.$tabtempphoto.' WHERE id LIKE "%" LIMIT 1'))!=0)
		//if(mysqli_query($con_sql2, 'SELECT 1 FROM '.$tabtempphoto.' LIMIT 1'))
		//{
			mysqli_query($con_sql2, 'DROP TABLE '.$tabtempphoto.'');
			usleep(100000);
		//}
		
		$tabserviceuser='tabserviceuser'.$this->api->chatId.'';
		//if(mysqli_num_rows(mysqli_query($con_sql2, 'SELECT 1 FROM '.$tabserviceuser.' WHERE id LIKE "%" LIMIT 1'))!=0)
		//{
			mysqli_query($con_sql2, 'DROP TABLE '.$tabserviceuser.'');
			usleep(100000);
		//}
			
		if(mysqli_query($con_sql2, 'SELECT 1 FROM '.$tab.' LIMIT 1')==FALSE)
		{
			$query1='CREATE TABLE '.$tab.' (id INT(4) UNSIGNED AUTO_INCREMENT PRIMARY KEY,type VARCHAR(15), cat VARCHAR(15), gender VARCHAR(10), brand VARCHAR(30), size VARCHAR(30), price NUMERIC(7,0), alt VARCHAR(512), pic VARCHAR(512), date VARCHAR(11), time VARCHAR(11), messid VARCHAR(15), cond VARCHAR(10), chatid VARCHAR(15)) ENGINE = InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;';
			$result1=mysqli_query($con_sql2, $query1);
			usleep(250000);
			
			$queue='INSERT INTO '.$tab.' (type, cat, gender, brand, size, price, alt, pic, date, time, messid, cond, chatid) VALUES ("0","0","0","0","0","0","0","0","0","0","0","0","0")';
			$result=mysqli_query($con_sql2, $queue);
			usleep(100000);
		}
		else
		{
			if(mysqli_num_rows(mysqli_query($con_sql2, 'SELECT 1 FROM '.$tab.' WHERE id LIKE "%" LIMIT 1'))==0)
			{
				
				$queue='INSERT INTO '.$tab.' (type, cat, gender, brand, size, price, alt, pic, date, time, messid, cond, chatid) VALUES ("0","0","0","0","0","0","0","0","0","0","0","0","0")';
				$result=mysqli_query($con_sql2, $queue);
				usleep(100000);
			}
			else
			{
				$query=mysqli_query($con_sql2, 'SELECT * FROM '.$tab.' WHERE id LIKE "%" ORDER by id ASC');
				usleep(100000);
				$con=mysqli_num_rows($query);
				
				for($i=0;$i<$con;$i++)
				{
					mysqli_data_seek($query, $i);
					$row[$i]=mysqli_fetch_row($query);
				}
					usleep(100000);
				
				if($row[$con-1][8]!=="0")
				{
					$queue='INSERT INTO '.$tab.' (type, cat, gender, brand, size, price, alt, pic, date, time, messid, cond, chatid) VALUES ("0","0","0","0","0","0","0","0","0","0","0","0","0")';
					$result=mysqli_query($con_sql2, $queue);
					usleep(100000);
				}
				
			}
			
		}


		$merge=$this->cmd_sell_add_type();
		usleep(100000);
		$merge[] = [['text' => '‚¨ÖÔ∏è–ù–∞–∑–∞–¥', 'callback_data' => 'back_sell_add_type'], ['text' => '‚§¥Ô∏è–í—ã–π—Ç–∏', 'callback_data' => 'exit_sell_add_type']];
		$text='üìÇ–£–∫–∞–∂–∏—Ç–µ <b>–∫–∞—Ç–µ–≥–æ—Ä–∏—é</b>üëá';
		$this->callbackAnswer( $text, $merge);
	
	} */
	


	public function callback_sell_add()
	{
		
		$con_sql2=$this->cmd_sql();
		$tab='tabmain'.$this->api->chatId.'';
		
		$tabserviceadd='tabserviceadd'.$this->api->chatId.'';
		mysqli_query($con_sql2, 'TRUNCATE TABLE '.$tabserviceadd.'');
		usleep(100000);

		$tabtempphoto='tabtempphoto'.$this->api->chatId.'';
		mysqli_query($con_sql2, 'TRUNCATE TABLE '.$tabtempphoto.'');
		usleep(100000);
		
		$tabserviceuser='tabserviceuser'.$this->api->chatId.'';
		mysqli_query($con_sql2, 'TRUNCATE TABLE '.$tabserviceuser.'');
		usleep(100000);
		
		if(mysqli_query($con_sql2, 'SELECT 1 FROM '.$tab.' LIMIT 1')==FALSE)
		{
			$query1='CREATE TABLE '.$tab.' (id INT(4) UNSIGNED AUTO_INCREMENT PRIMARY KEY,type VARCHAR(15), cat VARCHAR(15), gender VARCHAR(10), brand VARCHAR(30), size VARCHAR(30), price NUMERIC(7,0), alt VARCHAR(512), pic VARCHAR(512), date VARCHAR(11), time VARCHAR(11), messid VARCHAR(15), cond VARCHAR(10), chatid VARCHAR(15)) ENGINE = InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;';
			$result1=mysqli_query($con_sql2, $query1);
			usleep(100000);
			
			$queue='INSERT INTO '.$tab.' (type, cat, gender, brand, size, price, alt, pic, date, time, messid, cond, chatid) VALUES ("0","0","0","0","0","0","0","0","0","0","0","0","0")';
			$result=mysqli_query($con_sql2, $queue);
			usleep(100000);
		}
		else
		{
			if(mysqli_num_rows(mysqli_query($con_sql2, 'SELECT 1 FROM '.$tab.' WHERE id LIKE "%" LIMIT 1'))==0)
			{
				
				$queue='INSERT INTO '.$tab.' (type, cat, gender, brand, size, price, alt, pic, date, time, messid, cond, chatid) VALUES ("0","0","0","0","0","0","0","0","0","0","0","0","0")';
				$result=mysqli_query($con_sql2, $queue);
				usleep(100000);
			}
			else
			{
				$query=mysqli_query($con_sql2, 'SELECT * FROM '.$tab.' WHERE id LIKE "%" ORDER by id ASC');
				usleep(100000);
				$con=mysqli_num_rows($query);
				
				for($i=0;$i<$con;$i++)
				{
					mysqli_data_seek($query, $i);
					$row[$i]=mysqli_fetch_row($query);
				}
					usleep(100000);
				
				if($row[$con-1][8]!=="0")
				{
					$queue='INSERT INTO '.$tab.' (type, cat, gender, brand, size, price, alt, pic, date, time, messid, cond, chatid) VALUES ("0","0","0","0","0","0","0","0","0","0","0","0","0")';
					$result=mysqli_query($con_sql2, $queue);
					usleep(100000);
				}
				
			}
			
		}


		$merge=$this->cmd_sell_add_type();
		usleep(100000);
		$merge[] = [['text' => '‚¨ÖÔ∏è–ù–∞–∑–∞–¥', 'callback_data' => 'back_sell_add_type'], ['text' => '‚§¥Ô∏è–í—ã–π—Ç–∏', 'callback_data' => 'exit_sell_add_type']];
		
		$text='üìÇ–£–∫–∞–∂–∏—Ç–µ <b>–∫–∞—Ç–µ–≥–æ—Ä–∏—é</b>üëá'.$this->pre.'';
		//$text='<pre>                                                                                                       ‚ùóÔ∏è</pre>';
		$this->callbackAnswer( $text, $merge);
	
	}
	

/////
	public function cmd_sell_add_type()
	{
		
		$arraybuttons=$this->arraybuttonstype;
		$arraycallback=$this->arraycallbacktype;
	
		$cnt=count($arraybuttons);
		$maxbuttons=1;
		$ceil=ceil($cnt/$maxbuttons);
			
			
		$include=''.dirname(__FILE__).'/include'.$this->api->chatId.'.php';
			
		if(file_exists($include)==FALSE)
		{
			touch($include);
				
			$insert='<?php
		
		
			class TelegramBotfunc{';
			file_put_contents($include, $insert . PHP_EOL,FILE_APPEND);
				
		}
		else
		{
			$getinclude=file($include);
			unset($getinclude[array_key_last($getinclude)]);
			file_put_contents($include, $getinclude);
		}
			
		$u=0;
		$merge=[];
			
		for($i1=0;$i1<$ceil;$i1++)
		{
			$put=[];
			for($i2=0;$i2<$maxbuttons;$i2++)
			{	
				
				$buttext=''.$arraybuttons[$u].'';
				$put[]=["text" => "$buttext", "callback_data" => 'sell_add_type_'.$this->api->chatId.'_'.$arraycallback[$u].''];
				
				if(preg_match('/callback_sell_add_type_'.$this->api->chatId.'_'.$arraycallback[$u].'/', file_get_contents($include))==FALSE)
				{
					$insert='
					public function callback_sell_add_type_'.$this->api->chatId.'_'.$arraycallback[$u].'()
					{	
				
						$bot = new TestBot;
						$bot->api->getWebhookUpdate();
							
						$con_sql2=$bot->cmd_sql();
						$tabmain=&#039;tabmain&#039;.$bot->api->chatId.&#039;&#039;;
						
						$query=mysqli_query($con_sql2, &#039;SELECT * FROM &#039;.$tabmain.&#039; WHERE id LIKE "%" ORDER by id ASC&#039;);
						$con=mysqli_num_rows($query);
						usleep(100000);
				
						for($i=0;$i<$con;$i++)
						{
							mysqli_data_seek($query, $i);
							$row[$i]=mysqli_fetch_row($query);
						}
						usleep(100000);
						

						$query1=&#039;UPDATE &#039;.$tabmain.&#039; SET type = REPLACE(type, "&#039;.$row[$con-1][1].&#039;", "'.$arraycallback[$u].'") WHERE id="&#039;.$row[$con-1][0].&#039;"&#039;; 
						$result1=mysqli_query($con_sql2, $query1);
						
						if(isset($bot->api->body[&#039;callback_query&#039;]["id"]))
						{
							$callback_query_id=$bot->api->body[&#039;callback_query&#039;]["id"];
							$bot->api->answerCallbackQuery($callback_query_id);
						}
								
						//$bot->cmd_sell_add_cat_main("'.$arraybuttons[$u].'", "'.$arraycallback[$u].'");
						$bot->cmd_sell_add_cat_main();

					}';
					file_put_contents($include, html_entity_decode($insert, ENT_QUOTES) . PHP_EOL . PHP_EOL,FILE_APPEND);
				}
		
				$u++;	
			}
				
			$merge[]=$put;
			unset($put);
			
		}
		
		$insert='}';
		file_put_contents($include, $insert,FILE_APPEND);
		
		return $merge;

		
		
		
	}


////	
	public function callback_back_sell_add_type()
	{
	
		$text='–í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –≤ —Ä–∞–∑–¥–µ–ª <b>–ü—Ä–æ–¥–∞—Ç—å</b>.'.$this->pre.'';
		$this->callbackAnswer( $text, $this->keyboards['inline_sell']);

	}
	
////	
	public function callback_exit_sell_add_type()
	{

		if(isset($this->api->body['callback_query']["id"]))
		{
			$callback_query_id=$this->api->body['callback_query']["id"];
			$this->api->answerCallbackQuery($callback_query_id);
		}
		
		$con_sql2=$this->cmd_sql();
		
		$tabserviceadd='tabserviceadd'.$this->api->chatId.'';
		//if(mysqli_num_rows(mysqli_query($con_sql2, 'SELECT 1 FROM '.$tabserviceadd.' WHERE id LIKE "%" LIMIT 1'))!=0)
		//{
			mysqli_query($con_sql2, 'TRUNCATE TABLE '.$tabserviceadd.'');
			usleep(100000);
		//}
		
		$tabtempphoto='tabtempphoto'.$this->api->chatId.'';
		//if(mysqli_num_rows(mysqli_query($con_sql2, 'SELECT 1 FROM '.$tabtempphoto.' WHERE id LIKE "%" LIMIT 1'))!=0)
		//if(mysqli_query($con_sql2, 'SELECT 1 FROM '.$tabtempphoto.' LIMIT 1'))
		//{
			mysqli_query($con_sql2, 'TRUNCATE TABLE '.$tabtempphoto.'');
			usleep(100000);
		//}
		
		$tabserviceuser='tabserviceuser'.$this->api->chatId.'';
		//if(mysqli_num_rows(mysqli_query($con_sql2, 'SELECT 1 FROM '.$tabserviceuser.' WHERE id LIKE "%" LIMIT 1'))!=0)
		//{
			mysqli_query($con_sql2, 'TRUNCATE TABLE '.$tabserviceuser.'');
			usleep(100000);
		//}
			
		if($this->cmd_isadmin())
		{
			$text='–í—ã –≤—ã—à–ª–∏ –≤ <b>–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é</b>.'.$this->pre.'';
			
			$this->api->sendMessage([
			'text' => $text,
			'reply_markup' => json_encode( ['inline_keyboard'=>$this->keyboards['inline_default_admin']]),
			'disable_notification' => TRUE,
			'disable_web_page_preview' => TRUE,
			'parse_mode'=> "HTML"
			]);
		}
		else
		{
			$text='–í—ã –≤—ã—à–ª–∏ –≤ <b>–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é</b>.'.$this->pre.'';
			
			$this->api->sendMessage([
			'text' => $text,
			'reply_markup' => json_encode( ['inline_keyboard'=>$this->keyboards['inline_default']]),
			'disable_notification' => TRUE,
			'disable_web_page_preview' => TRUE,
			'parse_mode'=> "HTML"
			]);
		}

	}



///////////////////////////////////////////////////////ADD CAT//////////////////////////////////////////////////////////////////////////

////
	//public function cmd_sell_add_cat_main($arraybuttons, $arraycallback)
	public function cmd_sell_add_cat_main()
	{
		
		$con_sql2=$this->cmd_sql();
		$tab='tabmain'.$this->api->chatId.'';
			
		$query=mysqli_query($con_sql2, 'SELECT * FROM '.$tab.' WHERE id LIKE "%" ORDER by id ASC');
		usleep(100000);
		$con=mysqli_num_rows($query);
		
		for($i=0;$i<$con;$i++)
		{
			mysqli_data_seek($query, $i);
			$row[$i]=mysqli_fetch_row($query);
		}
			usleep(100000);
		
		
		$type=$this->convert_rus($row[$con-1][1]);
		
		$text='–í—ã –≤—ã–±—Ä–∞–ª–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏—é <b>'.$type.'</b>.'.PHP_EOL.''.PHP_EOL.'–£–∫–∞–∂–∏—Ç–µ <b>–≤–∏–¥</b>üëá'.$this->pre.'';
		
		$merge=$this->cmd_sell_add_cat_cat($row[$con-1][1]);
		usleep(100000);
		$merge[] = [['text' => '‚¨ÖÔ∏è–ù–∞–∑–∞–¥', 'callback_data' => 'back_sell_add_cat'], ['text' => '‚§¥Ô∏è–í—ã–π—Ç–∏', 'callback_data' => 'exit_sell_add_cat']];
				
		if(isset($this->api->body['callback_query']["id"]))
		{
			$callback_query_id=$this->api->body['callback_query']["id"];
			$this->api->answerCallbackQuery($callback_query_id);
		}	
		
		$this->api->editMessageText([
			'chat_id' => $this->api->body['callback_query']['message']['chat']["id"],
			'message_id' => $this->api->body['callback_query']['message']['message_id'],
			'text' => $text,
			'parse_mode' => "HTML",
			'reply_markup' => json_encode( ['inline_keyboard'=>$merge] ),
		]);
		
	}
	
	
	
public function cmd_sell_add_cat_cat($arraycallback1)
	{
		if($arraycallback1=='clothes')
		{
			$arraybuttons=$this->arraybuttonsclothes;
			$arraycallback=$this->arraycallbackclothes;
		}
		elseif($arraycallback1=='shoes')
		{
			$arraybuttons=$this->arraybuttonsshoes;
			$arraycallback=$this->arraycallbackshoes;
		}
		elseif($arraycallback1=='accessories')
		{
			$arraybuttons=$this->arraybuttonsaccessories;
			$arraycallback=$this->arraycallbackaccessories;
		}
		elseif($arraycallback1=='toys')
		{
			$arraybuttons=$this->arraybuttonstoys;
			$arraycallback=$this->arraycallbacktoys;
		}
		elseif($arraycallback1=='bags')
		{
			$arraybuttons=$this->arraybuttonsbags;
			$arraycallback=$this->arraycallbackbags;
		}
		elseif($arraycallback1=='cosmetics')
		{
			$arraybuttons=$this->arraybuttonscosmetics;
			$arraycallback=$this->arraycallbackcosmetics;
		}
		elseif($arraycallback1=='other1')
		{
			$arraybuttons=$this->arraybuttonsother;
			$arraycallback=$this->arraycallbackother;
		}
		
	
		$cnt=count($arraybuttons);
		$maxbuttons=1;
		$ceil=ceil($cnt/$maxbuttons);
			
			
		$include=''.dirname(__FILE__).'/include'.$this->api->chatId.'.php';
			
		if(file_exists($include)==FALSE)
		{
			touch($include);
				
			$insert='<?php
		
		
			class TelegramBotfunc{';
			file_put_contents($include, $insert . PHP_EOL,FILE_APPEND);
				
		}
		else
		{
			$getinclude=file($include);
			unset($getinclude[array_key_last($getinclude)]);
			file_put_contents($include, $getinclude);
		}
			
		$u=0;
		$merge=[];
			
		for($i1=0;$i1<$ceil;$i1++)
		{
			$put=[];
			for($i2=0;$i2<$maxbuttons;$i2++)
			{	
				
				$buttext=''.$arraybuttons[$u].'';
				$put[]=["text" => "$buttext", "callback_data" => 'sell_add_cat_'.$this->api->chatId.'_'.$arraycallback[$u].''];
				
				if(preg_match('/callback_sell_add_cat_'.$this->api->chatId.'_'.$arraycallback[$u].'/', file_get_contents($include))==FALSE)
				{
					$insert='
					public function callback_sell_add_cat_'.$this->api->chatId.'_'.$arraycallback[$u].'()
					{	
				
						$bot = new TestBot;
						$bot->api->getWebhookUpdate();
						
						$con_sql2=$bot->cmd_sql();
						$tabmain=&#039;tabmain&#039;.$bot->api->chatId.&#039;&#039;;
						
						$query=mysqli_query($con_sql2, &#039;SELECT * FROM &#039;.$tabmain.&#039; WHERE id LIKE "%" ORDER by id ASC&#039;);
						$con=mysqli_num_rows($query);
						usleep(100000);
				
						for($i=0;$i<$con;$i++)
						{
							mysqli_data_seek($query, $i);
							$row[$i]=mysqli_fetch_row($query);
						}
						usleep(100000);
						
						if(isset($bot->api->body[&#039;callback_query&#039;]["id"]))
						{
							$callback_query_id=$bot->api->body[&#039;callback_query&#039;]["id"];
							$bot->api->answerCallbackQuery($callback_query_id);
						}
						
						$query1=&#039;UPDATE &#039;.$tabmain.&#039; SET cat = REPLACE(cat, "&#039;.$row[$con-1][2].&#039;", "'.$arraycallback[$u].'") WHERE id="&#039;.$row[$con-1][0].&#039;"&#039;; 
						mysqli_query($con_sql2, $query1);


						//$bot->cmd_sell_add_gender_main("'.$arraybuttons[$u].'", "'.$arraycallback[$u].'");
						$bot->cmd_sell_add_gender_main();

					}';
					file_put_contents($include, html_entity_decode($insert, ENT_QUOTES) . PHP_EOL . PHP_EOL,FILE_APPEND);
				}
		
				$u++;	
			}
				
			$merge[]=$put;
			unset($put);
			
		}
		
		$insert='}';
		file_put_contents($include, $insert,FILE_APPEND);
		
		return $merge;

	}
	
	
////	
	public function callback_back_sell_add_cat()
	{
		
		$merge=$this->cmd_sell_add_type();
		usleep(100000);
		$merge[] = [['text' => '‚¨ÖÔ∏è–ù–∞–∑–∞–¥', 'callback_data' => 'back_sell_add_type'], ['text' => '‚§¥Ô∏è–í—ã–π—Ç–∏', 'callback_data' => 'exit_sell_add_type']];
		$text='–í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –∫ –≤—ã–±–æ—Ä—É üìÇ<b>–∫–∞—Ç–µ–≥–æ—Ä–∏–∏</b>.'.PHP_EOL.''.PHP_EOL.'–í—ã–±–∏—Ä–∏—Ç–µ üìÇ<b>–∫–∞—Ç–µ–≥–æ—Ä–∏—é</b>üëá'.$this->pre.'';
		$this->callbackAnswer( $text, $merge);
		
	}
	
////	
	public function callback_exit_sell_add_cat()
	{
		if(isset($this->api->body['callback_query']["id"]))
		{
			$callback_query_id=$this->api->body['callback_query']["id"];
			$this->api->answerCallbackQuery($callback_query_id);
		}

		$con_sql2=$this->cmd_sql();
		
		$tabserviceadd='tabserviceadd'.$this->api->chatId.'';
		//if(mysqli_num_rows(mysqli_query($con_sql2, 'SELECT 1 FROM '.$tabserviceadd.' WHERE id LIKE "%" LIMIT 1'))!=0)
		//{
			mysqli_query($con_sql2, 'TRUNCATE TABLE '.$tabserviceadd.'');
			usleep(100000);
		//}
		
		$tabtempphoto='tabtempphoto'.$this->api->chatId.'';
		//if(mysqli_num_rows(mysqli_query($con_sql2, 'SELECT 1 FROM '.$tabtempphoto.' WHERE id LIKE "%" LIMIT 1'))!=0)
		//if(mysqli_query($con_sql2, 'SELECT 1 FROM '.$tabtempphoto.' LIMIT 1'))
		//{
			mysqli_query($con_sql2, 'TRUNCATE TABLE '.$tabtempphoto.'');
			usleep(100000);
		//}
		
		$tabserviceuser='tabserviceuser'.$this->api->chatId.'';
		//if(mysqli_num_rows(mysqli_query($con_sql2, 'SELECT 1 FROM '.$tabserviceuser.' WHERE id LIKE "%" LIMIT 1'))!=0)
		//{
			mysqli_query($con_sql2, 'TRUNCATE TABLE '.$tabserviceuser.'');
			usleep(100000);
		//}		
			
		if($this->cmd_isadmin())
		{
			$text='–í—ã –≤—ã—à–ª–∏ –≤ <b>–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é</b>.'.$this->pre.'';
			
			$this->api->sendMessage([
			'text' => $text,
			'reply_markup' => json_encode( ['inline_keyboard'=>$this->keyboards['inline_default_admin']]),
			'disable_notification' => TRUE,
			'disable_web_page_preview' => TRUE,
			'parse_mode'=> "HTML"
			]);
		}
		else
		{
			$text='–í—ã –≤—ã—à–ª–∏ –≤ <b>–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é</b>.'.$this->pre.'';
			
			$this->api->sendMessage([
			'text' => $text,
			'reply_markup' => json_encode( ['inline_keyboard'=>$this->keyboards['inline_default']]),
			'disable_notification' => TRUE,
			'disable_web_page_preview' => TRUE,
			'parse_mode'=> "HTML"
			]);
		}
		
	}
	



///////////////////////////////////////////////////////ADD GENDER//////////////////////////////////////////////////////////////////////////	
/////
	//public function cmd_sell_add_gender_main($arraybuttons, $arraycallback)
	public function cmd_sell_add_gender_main()
	{
		$con_sql2=$this->cmd_sql();
		$tab='tabmain'.$this->api->chatId.'';
		
		$query=mysqli_query($con_sql2, 'SELECT * FROM '.$tab.' WHERE id LIKE "%" ORDER by id ASC');
		usleep(100000);
		$con=mysqli_num_rows($query);
		
		for($i=0;$i<$con;$i++)
		{
			mysqli_data_seek($query, $i);
			$row[$i]=mysqli_fetch_row($query);
		}
			usleep(100000);
		
		$cat=$this->convert_rus($row[$con-1][2]);
		$text='–í—ã –≤—ã–±—Ä–∞–ª–∏ —Ä–∞–∑–¥–µ–ª <b>'.$cat.'</b>.'.PHP_EOL.''.PHP_EOL.'–£–∫–∞–∂–∏—Ç–µ <b>–ø–æ–ª</b>üëá'.$this->pre.'';
		
		$merge=$this->cmd_sell_add_gender_gender($cat);
		usleep(100000);
		$merge[] = [['text' => '‚¨ÖÔ∏è–ù–∞–∑–∞–¥', 'callback_data' => 'back_sell_add_gender'], ['text' => '‚§¥Ô∏è–í—ã–π—Ç–∏', 'callback_data' => 'exit_sell_add_gender']];
				
		if(isset($this->api->body['callback_query']["id"]))
		{
			$callback_query_id=$this->api->body['callback_query']["id"];
			$this->api->answerCallbackQuery($callback_query_id);
		}	
		
		$this->api->editMessageText([
			'chat_id' => $this->api->body['callback_query']['message']['chat']["id"],
			'message_id' => $this->api->body['callback_query']['message']['message_id'],
			'text' => $text,
			'parse_mode' => "HTML",
			'reply_markup' => json_encode( ['inline_keyboard'=>$merge] ),
		]);
		
		
	}
	
/////	
	public function cmd_sell_add_gender_gender($input)
	{
		
		$arraybuttons=$this->arraybuttonsgender;
		$arraycallback=$this->arraycallbackgender;
		
		if($input=="–ú—è–≥–∫–∏–µ –∏–≥—Ä—É—à–∫–∏")
		{
			$arraybuttons=$this->arraybuttonsgender1;
			$arraycallback=$this->arraycallbackgender1;
		}
		
		$cnt=count($arraybuttons);
		$maxbuttons=1;
		$ceil=ceil($cnt/$maxbuttons);
			
			
		$include=''.dirname(__FILE__).'/include'.$this->api->chatId.'.php';
			
		if(file_exists($include)==FALSE)
		{
			touch($include);
				
			$insert='<?php
		
		
			class TelegramBotfunc{';
			file_put_contents($include, $insert . PHP_EOL,FILE_APPEND);
				
		}
		else
		{
			$getinclude=file($include);
			unset($getinclude[array_key_last($getinclude)]);
			file_put_contents($include, $getinclude);
		}
			
		$u=0;
		$merge=[];
			
		for($i1=0;$i1<$ceil;$i1++)
		{
			$put=[];
			for($i2=0;$i2<$maxbuttons;$i2++)
			{	
				
				$buttext=''.$arraybuttons[$u].'';
				$put[]=["text" => "$buttext", "callback_data" => 'sell_add_gender_'.$this->api->chatId.'_'.$arraycallback[$u].''];
				
				if(preg_match('/callback_sell_add_gender_'.$this->api->chatId.'_'.$arraycallback[$u].'/', file_get_contents($include))==FALSE)
				{
					$insert='
					public function callback_sell_add_gender_'.$this->api->chatId.'_'.$arraycallback[$u].'()
					{	
				
						$bot = new TestBot;
						$bot->api->getWebhookUpdate();

						$con_sql2=$bot->cmd_sql();
						$tabmain=&#039;tabmain&#039;.$bot->api->chatId.&#039;&#039;;
						
						$query=mysqli_query($con_sql2, &#039;SELECT * FROM &#039;.$tabmain.&#039; WHERE id LIKE "%" ORDER by id ASC&#039;);
						$con=mysqli_num_rows($query);
						usleep(100000);
				
						for($i=0;$i<$con;$i++)
						{
							mysqli_data_seek($query, $i);
							$row[$i]=mysqli_fetch_row($query);
						}
						usleep(100000);
						
						$query1=&#039;UPDATE &#039;.$tabmain.&#039; SET gender = REPLACE(gender, "&#039;.$row[$con-1][3].&#039;", "'.$arraycallback[$u].'") WHERE id="&#039;.$row[$con-1][0].&#039;"&#039;; 
						mysqli_query($con_sql2, $query1);
						
						if(isset($bot->api->body[&#039;callback_query&#039;]["id"]))
						{
							$callback_query_id=$bot->api->body[&#039;callback_query&#039;]["id"];
							$bot->api->answerCallbackQuery($callback_query_id);
						}
						
						//$bot->cmd_sell_add_cond_main("'.$arraybuttons[$u].'", "'.$arraycallback[$u].'");
						$bot->cmd_sell_add_cond_main();

					}';
					file_put_contents($include, html_entity_decode($insert, ENT_QUOTES) . PHP_EOL . PHP_EOL,FILE_APPEND);
				}
		
				$u++;	
			}
				
			$merge[]=$put;
			unset($put);
			
		}
		
		$insert='}';
		file_put_contents($include, $insert,FILE_APPEND);
		
		return $merge;
		
		
		
	}
	
	
	
////	
	public function callback_back_sell_add_gender()
	{
	
		if(isset($this->api->body['callback_query']["id"]))
		{
			$callback_query_id=$this->api->body['callback_query']["id"];
			$this->api->answerCallbackQuery($callback_query_id);
		}	
		
		$this->cmd_sell_add_cat_main();
		
	}
	
////	
	public function callback_exit_sell_add_gender()
	{
		
		if(isset($this->api->body['callback_query']["id"]))
		{
			$callback_query_id=$this->api->body['callback_query']["id"];
			$this->api->answerCallbackQuery($callback_query_id);
		}

		$con_sql2=$this->cmd_sql();
		
		$tabserviceadd='tabserviceadd'.$this->api->chatId.'';
		//if(mysqli_num_rows(mysqli_query($con_sql2, 'SELECT 1 FROM '.$tabserviceadd.' WHERE id LIKE "%" LIMIT 1'))!=0)
		//{
			mysqli_query($con_sql2, 'TRUNCATE TABLE '.$tabserviceadd.'');
			usleep(100000);
		//}
		
		$tabtempphoto='tabtempphoto'.$this->api->chatId.'';
		//if(mysqli_num_rows(mysqli_query($con_sql2, 'SELECT 1 FROM '.$tabtempphoto.' WHERE id LIKE "%" LIMIT 1'))!=0)
		//if(mysqli_query($con_sql2, 'SELECT 1 FROM '.$tabtempphoto.' LIMIT 1'))
		//{
			mysqli_query($con_sql2, 'TRUNCATE TABLE '.$tabtempphoto.'');
			usleep(100000);
		//}
		
		$tabserviceuser='tabserviceuser'.$this->api->chatId.'';
		//if(mysqli_num_rows(mysqli_query($con_sql2, 'SELECT 1 FROM '.$tabserviceuser.' WHERE id LIKE "%" LIMIT 1'))!=0)
		//{
			mysqli_query($con_sql2, 'TRUNCATE TABLE '.$tabserviceuser.'');
			usleep(100000);
		//}			
			
		if($this->cmd_isadmin())
		{
			$text='–í—ã –≤—ã—à–ª–∏ –≤ <b>–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é</b>.'.$this->pre.'';
			
			$this->api->sendMessage([
			'text' => $text,
			'reply_markup' => json_encode( ['inline_keyboard'=>$this->keyboards['inline_default_admin']]),
			'disable_notification' => TRUE,
			'disable_web_page_preview' => TRUE,
			'parse_mode'=> "HTML"
			]);
		}
		else
		{
			$text='–í—ã –≤—ã—à–ª–∏ –≤ <b>–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é</b>.'.$this->pre.'';
			
			$this->api->sendMessage([
			'text' => $text,
			'reply_markup' => json_encode( ['inline_keyboard'=>$this->keyboards['inline_default']]),
			'disable_notification' => TRUE,
			'disable_web_page_preview' => TRUE,
			'parse_mode'=> "HTML"
			]);
		}
	}
	
	
	
	
///////////////////////////////////////////////////////ADD COND//////////////////////////////////////////////////////////////////////////	
/////
	//public function cmd_sell_add_cond_main($arraybuttons, $arraycallback)
	public function cmd_sell_add_cond_main()
	{
		$con_sql2=$this->cmd_sql();
		$tab='tabmain'.$this->api->chatId.'';
		
		$query=mysqli_query($con_sql2, 'SELECT * FROM '.$tab.' WHERE id LIKE "%" ORDER by id ASC');
		usleep(100000);
		$con=mysqli_num_rows($query);
		
		for($i=0;$i<$con;$i++)
		{
			mysqli_data_seek($query, $i);
			$row[$i]=mysqli_fetch_row($query);
		}
			usleep(100000);
			
		$gender=$this->convert_rus($row[$con-1][3]);
		
		$text='–í—ã –≤—ã–±—Ä–∞–ª–∏ –ø–æ–ª —Ç–æ–≤–∞—Ä–∞ <b>'.$gender.'</b>.'.PHP_EOL.''.PHP_EOL.'–£–∫–∞–∂–∏—Ç–µ <b>—Å–æ—Å—Ç–æ—è–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞</b>üëá'.$this->pre.'';
		
		$merge=$this->cmd_sell_add_cond_cond();
		usleep(100000);
		$merge[] = [['text' => '‚¨ÖÔ∏è–ù–∞–∑–∞–¥', 'callback_data' => 'back_sell_add_cond'], ['text' => '‚§¥Ô∏è–í—ã–π—Ç–∏', 'callback_data' => 'exit_sell_add_cond']];
				
		if(isset($this->api->body['callback_query']["id"]))
		{
			$callback_query_id=$this->api->body['callback_query']["id"];
			$this->api->answerCallbackQuery($callback_query_id);
		}	
		
		$this->api->editMessageText([
			'chat_id' => $this->api->body['callback_query']['message']['chat']["id"],
			'message_id' => $this->api->body['callback_query']['message']['message_id'],
			'text' => $text,
			'parse_mode' => "HTML",
			'reply_markup' => json_encode( ['inline_keyboard'=>$merge] ),
		]);
	
	}
	
/////	
	public function cmd_sell_add_cond_cond()
	{
		
		
		$arraybuttons=$this->arraybuttonscond;
		$arraycallback=$this->arraycallbackcond;
	
		$cnt=count($arraybuttons);
		$maxbuttons=2;
		$ceil=ceil($cnt/$maxbuttons);
			
			
		$include=''.dirname(__FILE__).'/include'.$this->api->chatId.'.php';
			
		if(file_exists($include)==FALSE)
		{
			touch($include);
				
			$insert='<?php
		
		
			class TelegramBotfunc{';
			file_put_contents($include, $insert . PHP_EOL,FILE_APPEND);
				
		}
		else
		{
			$getinclude=file($include);
			unset($getinclude[array_key_last($getinclude)]);
			file_put_contents($include, $getinclude);
		}
			
		$u=0;
		$merge=[];
			
		for($i1=0;$i1<$ceil;$i1++)
		{
			$put=[];
			for($i2=0;$i2<$maxbuttons;$i2++)
			{	
				
				$buttext=''.$arraybuttons[$u].'';
				$put[]=["text" => "$buttext", "callback_data" => 'sell_add_cond_'.$this->api->chatId.'_'.$arraycallback[$u].''];
				
				if(preg_match('/callback_sell_add_cond_'.$this->api->chatId.'_'.$arraycallback[$u].'/', file_get_contents($include))==FALSE)
				{
					$insert='
					public function callback_sell_add_cond_'.$this->api->chatId.'_'.$arraycallback[$u].'()
					{	
				
						$bot = new TestBot;
						$bot->api->getWebhookUpdate();

						$con_sql2=$bot->cmd_sql();
						$tabmain=&#039;tabmain&#039;.$bot->api->chatId.&#039;&#039;;
						
						$query=mysqli_query($con_sql2, &#039;SELECT * FROM &#039;.$tabmain.&#039; WHERE id LIKE "%" ORDER by id ASC&#039;);
						$con=mysqli_num_rows($query);
						usleep(100000);
				
						for($i=0;$i<$con;$i++)
						{
							mysqli_data_seek($query, $i);
							$row[$i]=mysqli_fetch_row($query);
						}
						usleep(100000);
						
						$query1=&#039;UPDATE &#039;.$tabmain.&#039; SET cond = REPLACE(cond, "&#039;.$row[$con-1][12].&#039;", "'.$arraycallback[$u].'") WHERE id="&#039;.$row[$con-1][0].&#039;"&#039;; 
						mysqli_query($con_sql2, $query1);
						
						if(isset($bot->api->body[&#039;callback_query&#039;]["id"]))
						{
							$callback_query_id=$bot->api->body[&#039;callback_query&#039;]["id"];
							$bot->api->answerCallbackQuery($callback_query_id);
						}
						
						//$bot->cmd_sell_add_brand_main("'.$arraybuttons[$u].'");
						$bot->cmd_sell_add_brand_main();
					}';
					file_put_contents($include, html_entity_decode($insert, ENT_QUOTES) . PHP_EOL . PHP_EOL,FILE_APPEND);
				}
		
				$u++;	
			}
				
			$merge[]=$put;
			unset($put);
			
		}
		
		$insert='}';
		file_put_contents($include, $insert,FILE_APPEND);
		
		return $merge;
		
		
		
	}
	
	
	
////	
	public function callback_back_sell_add_cond()
	{
	
		if(isset($this->api->body['callback_query']["id"]))
		{
			$callback_query_id=$this->api->body['callback_query']["id"];
			$this->api->answerCallbackQuery($callback_query_id);
		}	
		
		$this->cmd_sell_add_gender_main();
	}
	
////	
	public function callback_exit_sell_add_cond()
	{
		
		if(isset($this->api->body['callback_query']["id"]))
		{
			$callback_query_id=$this->api->body['callback_query']["id"];
			$this->api->answerCallbackQuery($callback_query_id);
		}
		
		$con_sql2=$this->cmd_sql();
		
		$tabserviceadd='tabserviceadd'.$this->api->chatId.'';
		//if(mysqli_num_rows(mysqli_query($con_sql2, 'SELECT 1 FROM '.$tabserviceadd.' WHERE id LIKE "%" LIMIT 1'))!=0)
		//{
			mysqli_query($con_sql2, 'TRUNCATE TABLE '.$tabserviceadd.'');
			usleep(100000);
		//}
		
		$tabtempphoto='tabtempphoto'.$this->api->chatId.'';
		//if(mysqli_num_rows(mysqli_query($con_sql2, 'SELECT 1 FROM '.$tabtempphoto.' WHERE id LIKE "%" LIMIT 1'))!=0)
		//if(mysqli_query($con_sql2, 'SELECT 1 FROM '.$tabtempphoto.' LIMIT 1'))
		//{
			mysqli_query($con_sql2, 'TRUNCATE TABLE '.$tabtempphoto.'');
			usleep(100000);
		//}
		
		$tabserviceuser='tabserviceuser'.$this->api->chatId.'';
		//if(mysqli_num_rows(mysqli_query($con_sql2, 'SELECT 1 FROM '.$tabserviceuser.' WHERE id LIKE "%" LIMIT 1'))!=0)
		//{
			mysqli_query($con_sql2, 'TRUNCATE TABLE '.$tabserviceuser.'');
			usleep(100000);
		//}			
		
		if($this->cmd_isadmin())
		{
			$text='–í—ã –≤—ã—à–ª–∏ –≤ <b>–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é</b>.'.$this->pre.'';
			
			$this->api->sendMessage([
			'text' => $text,
			'reply_markup' => json_encode( ['inline_keyboard'=>$this->keyboards['inline_default_admin']]),
			'disable_notification' => TRUE,
			'disable_web_page_preview' => TRUE,
			'parse_mode'=> "HTML"
			]);
		}
		else
		{
			$text='–í—ã –≤—ã—à–ª–∏ –≤ <b>–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é</b>.'.$this->pre.'';
			
			$this->api->sendMessage([
			'text' => $text,
			'reply_markup' => json_encode( ['inline_keyboard'=>$this->keyboards['inline_default']]),
			'disable_notification' => TRUE,
			'disable_web_page_preview' => TRUE,
			'parse_mode'=> "HTML"
			]);
		}
	}
	
///////////////////////////////////////////////////////ADD BRAND//////////////////////////////////////////////////////////////////////////
	public function cmd_sell_add_brand_main()
	{
		
		$con_sql2=$this->cmd_sql();
		$tab='tabserviceadd'.$this->api->chatId.'';	
		$tabmain='tabmain'.$this->api->chatId.'';
		
		if(mysqli_query($con_sql2, 'SELECT 1 FROM '.$tab.' LIMIT 1')==FALSE)
		{
			mysqli_query($con_sql2, 'CREATE TABLE '.$tab.' (id INT(4) UNSIGNED AUTO_INCREMENT PRIMARY KEY,info VARCHAR(10)) ENGINE = InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;');
			usleep(100000);
			
			mysqli_query($con_sql2, 'INSERT INTO '.$tab.' (info) VALUES ("brand")');
			usleep(100000);
		}
		else
		{
			if(mysqli_num_rows(mysqli_query($con_sql2, 'SELECT 1 FROM '.$tab.' WHERE id="1" LIMIT 1'))==0)
			{
				mysqli_query($con_sql2, 'INSERT INTO '.$tab.' (info) VALUES ("brand")');
				usleep(100000);
			}
			else
			{
				$query=mysqli_query($con_sql2, 'SELECT * FROM '.$tab.' WHERE id="1"');
				usleep(100000);
				$con=mysqli_num_rows($query);
				
				for($i=0;$i<$con;$i++)
				{
					mysqli_data_seek($query, $i);
					$row[$i]=mysqli_fetch_row($query);
				}
				usleep(100000);
								
				$query1='UPDATE '.$tab.' SET info = REPLACE(info, "'.$row[0][1].'", "brand") WHERE id="'.$row[0][0].'"'; 
				mysqli_query($con_sql2, $query1);
			}
			
		}
		
		
		$query=mysqli_query($con_sql2, 'SELECT * FROM '.$tabmain.' WHERE id LIKE "%" ORDER by id ASC');
		usleep(100000);
		$con=mysqli_num_rows($query);
		
		for($i=0;$i<$con;$i++)
		{
			mysqli_data_seek($query, $i);
			$row[$i]=mysqli_fetch_row($query);
		}
			usleep(100000);
			
		$cond=$this->convert_rus($row[$con-1][12]);
		
		$text='–£–∫–∞–∂–∏—Ç–µ <b>–Ω–∞–∑–≤–∞–Ω–∏–µ –±—Ä–µ–Ω–¥–∞</b> (–Ω–∞ –∞–Ω–≥–ª–∏–π—Å–∫–æ–º —è–∑—ã–∫–µ, –∫–∞–∫ —É–∫–∞–∑–∞–Ω–æ –Ω–∞ —ç—Ç–∏–∫–µ—Ç–∫–µ —Ç–æ–≤–∞—Ä–∞) –æ—Ç–ø—Ä–∞–≤–∏–≤ —Å–æ–æ–±—â–µ–Ω–∏–µüëá'.$this->pre.'';
		
		$merge=[];
		$merge[] = [['text' => '‚¨ÖÔ∏è–ù–∞–∑–∞–¥', 'callback_data' => 'back_sell_add_brand'], ['text' => '‚§¥Ô∏è–í—ã–π—Ç–∏', 'callback_data' => 'exit_sell_add_brand']];
				
			
		if(isset($this->api->body['callback_query']["id"]))
		{
			$callback_query_id=$this->api->body['callback_query']["id"];
			$this->api->answerCallbackQuery($callback_query_id);
		}	

		$this->api->sendMessage([
		'text' => $text,
		'reply_markup' => json_encode( ['inline_keyboard'=>$merge]),
		'disable_notification' => TRUE,
		'disable_web_page_preview' => TRUE,
		'parse_mode'=> "HTML"
		]);

			
		/* $text='–£–∫–∞–∂–∏—Ç–µ <b>–Ω–∞–∑–≤–∞–Ω–∏–µ –±—Ä–µ–Ω–¥–∞</b> (–Ω–∞ –∞–Ω–≥–ª–∏–π—Å–∫–æ–º —è–∑—ã–∫–µ, –∫–∞–∫ —É–∫–∞–∑–∞–Ω–æ –Ω–∞ —ç—Ç–∏–∫–µ—Ç–∫–µ —Ç–æ–≤–∞—Ä–∞) –≤ —Å—Ç—Ä–æ–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—èüëá';
		$this->api->sendMessage([
		'text' => $text,
		'reply_markup' => json_encode( ['force_reply' => true, 'input_field_placeholder' => '–£–∫–∞–∂–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –±—Ä–µ–Ω–¥–∞'] ),
		'disable_notification' => TRUE,
		'disable_web_page_preview' => TRUE,
		'parse_mode'=> "HTML"
		]);
		usleep(100000); */
	
	}

/////
	public function cmd_sell_add_brand()
	{
	
		$con_sql2=$this->cmd_sql();
		$tabmain='tabmain'.$this->api->chatId.'';
		
		$input=$this->api->body["message"]["text"];
		if(strlen($input)>30)
		{
			
			$text='–í—ã –≤–≤–µ–ª–∏ —Å–ª–∏—à–∫–æ–º –¥–ª–∏–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç. –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è –¥–ª–∏–Ω–∞ 30 —Å–∏–º–≤–æ–ª–æ–≤.'.$this->pre.'';
			$this->api->sendMessage([
			'text' => $text,
			'disable_notification' => TRUE,
			'disable_web_page_preview' => TRUE,
			'parse_mode'=> "HTML"
			]);

			
			$this->cmd_sell_add_brand_main();
		}
		else
		{
			
			$query=mysqli_query($con_sql2, 'SELECT * FROM '.$tabmain.' WHERE id LIKE "%" ORDER by id ASC');
			$con=mysqli_num_rows($query);
			usleep(100000);
			
			for($i=0;$i<$con;$i++)
			{
				mysqli_data_seek($query, $i);
				$row[$i]=mysqli_fetch_row($query);
			}
			usleep(100000);
			
			$query1='UPDATE '.$tabmain.' SET brand = REPLACE(brand, "'.$row[$con-1][4].'", "'.$this->api->body["message"]["text"].'") WHERE id="'.$row[$con-1][0].'"'; 
			mysqli_query($con_sql2, $query1);
			
			$this->cmd_sell_add_size_main();
		}
	
	}

////	
	public function callback_back_sell_add_brand()
	{
		
		if(isset($this->api->body['callback_query']["id"]))
		{
			$callback_query_id=$this->api->body['callback_query']["id"];
			$this->api->answerCallbackQuery($callback_query_id);
		}	
		
		$this->cmd_sell_add_cond_main();
	}
	
////	
	public function callback_exit_sell_add_brand()
	{
		
		if(isset($this->api->body['callback_query']["id"]))
		{
			$callback_query_id=$this->api->body['callback_query']["id"];
			$this->api->answerCallbackQuery($callback_query_id);
		}	
		
		$con_sql2=$this->cmd_sql();
		
		$tabserviceadd='tabserviceadd'.$this->api->chatId.'';
		//if(mysqli_num_rows(mysqli_query($con_sql2, 'SELECT 1 FROM '.$tabserviceadd.' WHERE id LIKE "%" LIMIT 1'))!=0)
		//{
			mysqli_query($con_sql2, 'TRUNCATE TABLE '.$tabserviceadd.'');
			usleep(100000);
		//}
		
		$tabtempphoto='tabtempphoto'.$this->api->chatId.'';
		//if(mysqli_num_rows(mysqli_query($con_sql2, 'SELECT 1 FROM '.$tabtempphoto.' WHERE id LIKE "%" LIMIT 1'))!=0)
		//if(mysqli_query($con_sql2, 'SELECT 1 FROM '.$tabtempphoto.' LIMIT 1'))
		//{
			mysqli_query($con_sql2, 'TRUNCATE TABLE '.$tabtempphoto.'');
			usleep(100000);
		//}
		
		$tabserviceuser='tabserviceuser'.$this->api->chatId.'';
		//if(mysqli_num_rows(mysqli_query($con_sql2, 'SELECT 1 FROM '.$tabserviceuser.' WHERE id LIKE "%" LIMIT 1'))!=0)
		//{
			mysqli_query($con_sql2, 'TRUNCATE TABLE '.$tabserviceuser.'');
			usleep(100000);
		//}	
		
		if($this->cmd_isadmin())
		{
			$text='–í—ã –≤—ã—à–ª–∏ –≤ <b>–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é</b>.'.$this->pre.'';
			
			$this->api->sendMessage([
			'text' => $text,
			'reply_markup' => json_encode( ['inline_keyboard'=>$this->keyboards['inline_default_admin']]),
			'disable_notification' => TRUE,
			'disable_web_page_preview' => TRUE,
			'parse_mode'=> "HTML"
			]);
		}
		else
		{
			$text='–í—ã –≤—ã—à–ª–∏ –≤ <b>–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é</b>.'.$this->pre.'';
			
			$this->api->sendMessage([
			'text' => $text,
			'reply_markup' => json_encode( ['inline_keyboard'=>$this->keyboards['inline_default']]),
			'disable_notification' => TRUE,
			'disable_web_page_preview' => TRUE,
			'parse_mode'=> "HTML"
			]);
		}
	}




///////////////////////////////////////////////////////ADD Size//////////////////////////////////////////////////////////////////////////
/////
	public function cmd_sell_add_size_main()
	{
		
		$con_sql2=$this->cmd_sql();
		$tab='tabserviceadd'.$this->api->chatId.'';	
		$tabmain='tabmain'.$this->api->chatId.'';
		
		$query=mysqli_query($con_sql2, 'SELECT * FROM '.$tab.' WHERE id="1"');
		usleep(100000);
		$con=mysqli_num_rows($query);
		
		for($i=0;$i<$con;$i++)
		{
			mysqli_data_seek($query, $i);
			$row[$i]=mysqli_fetch_row($query);
		}
			usleep(100000);
						
		$query1='UPDATE '.$tab.' SET info = REPLACE(info, "'.$row[$con-1][1].'", "size") WHERE id="'.$row[$con-1][0].'"'; 
		mysqli_query($con_sql2, $query1);
		

		$query=mysqli_query($con_sql2, 'SELECT * FROM '.$tabmain.' WHERE id LIKE "%" ORDER by id ASC');
		usleep(100000);
		$con=mysqli_num_rows($query);
		
		for($i=0;$i<$con;$i++)
		{
			mysqli_data_seek($query, $i);
			$row[$i]=mysqli_fetch_row($query);
		}
			usleep(100000);
		
		
		$brand=$row[$con-1][4];
		
		
		$merge=[];
		$merge[] = [['text' => '‚¨ÖÔ∏è–ù–∞–∑–∞–¥', 'callback_data' => 'back_sell_add_size'], ['text' => '‚§¥Ô∏è–í—ã–π—Ç–∏', 'callback_data' => 'exit_sell_add_size']];
		
		$text='–í—ã —É–∫–∞–∑–∞–ª–∏ –±—Ä–µ–Ω–¥ <b>'.$brand.'</b>.'.PHP_EOL.''.PHP_EOL.'–£–∫–∞–∂–∏—Ç–µ <b>—Ä–∞–∑–º–µ—Ä</b> (–∂–µ–ª–∞—Ç–µ–ª—å–Ω–æ —Ç–∞–∫–∂–µ —É–∫–∞–∑–∞—Ç—å —Ä–µ–∞–ª—å–Ω—ã–µ –∑–∞–º–µ—Ä—ã –≤ —Å–º) –æ—Ç–ø—Ä–∞–≤–∏–≤ —Å–æ–æ–±—â–µ–Ω–∏–µüëá'.$this->pre.'';
		
		if(isset($this->api->body['callback_query']["id"]))
		{
			$callback_query_id=$this->api->body['callback_query']["id"];
			$this->api->answerCallbackQuery($callback_query_id);
		}	
		
		
		/* $text='–£–∫–∞–∂–∏—Ç–µ <b>—Ä–∞–∑–º–µ—Ä —Ç–æ–≤–∞—Ä–∞</b>';
		$this->api->sendMessage([
			'text' => $text,
			'reply_markup' => json_encode( ['force_reply' => true, 'input_field_placeholder' => '–£–∫–∞–∂–∏—Ç–µ —Ä–∞–∑–º–µ—Ä'] ),
			'disable_notification' => TRUE,
			'disable_web_page_preview' => TRUE,
			'parse_mode'=> "HTML"
			]);
			usleep(100000); */
			
		
		$this->api->sendMessage([
			'text' => $text,
			'reply_markup' => json_encode( ['inline_keyboard'=>$merge]),
			'disable_notification' => TRUE,
			'disable_web_page_preview' => TRUE,
			'parse_mode'=> "HTML"
			]);

		
		
	}

/////
public function cmd_sell_add_size()
	{
	
		$con_sql2=$this->cmd_sql();
		$tabmain='tabmain'.$this->api->chatId.'';
		$input=$this->api->body["message"]["text"];
		
		if(strlen($input)>30)
		{
			
			$text='–í—ã –≤–≤–µ–ª–∏ —Å–ª–∏—à–∫–æ–º –¥–ª–∏–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç. –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è –¥–ª–∏–Ω–∞ 30 —Å–∏–º–≤–æ–ª–æ–≤.'.$this->pre.'';
			$this->api->sendMessage([
			'text' => $text,
			'disable_notification' => TRUE,
			'disable_web_page_preview' => TRUE,
			'parse_mode'=> "HTML"
			]);

			
			$this->cmd_sell_add_size_main();
		}
		else
		{
			$query=mysqli_query($con_sql2, 'SELECT * FROM '.$tabmain.' WHERE id LIKE "%" ORDER by id ASC');
			$con=mysqli_num_rows($query);
			usleep(100000);
			
			for($i=0;$i<$con;$i++)
			{
				mysqli_data_seek($query, $i);
				$row[$i]=mysqli_fetch_row($query);
			}
			usleep(100000);
			
			$query1='UPDATE '.$tabmain.' SET size = REPLACE(size, "'.$row[$con-1][5].'", "'.$this->api->body["message"]["text"].'") WHERE id="'.$row[$con-1][0].'"'; 
			mysqli_query($con_sql2, $query1);
			
			$this->cmd_sell_add_price_main();
		}
		
		
		
		
	}

////	
	public function callback_back_sell_add_size()
	{
				
		if(isset($this->api->body['callback_query']["id"]))
		{
			$callback_query_id=$this->api->body['callback_query']["id"];
			$this->api->answerCallbackQuery($callback_query_id);
		}
		
		$this->cmd_sell_add_brand_main();
	}
	
////	
	public function callback_exit_sell_add_size()
	{
		
		if(isset($this->api->body['callback_query']["id"]))
		{
			$callback_query_id=$this->api->body['callback_query']["id"];
			$this->api->answerCallbackQuery($callback_query_id);
		}	
		
		$con_sql2=$this->cmd_sql();
		
		$tabserviceadd='tabserviceadd'.$this->api->chatId.'';
		//if(mysqli_num_rows(mysqli_query($con_sql2, 'SELECT 1 FROM '.$tabserviceadd.' WHERE id LIKE "%" LIMIT 1'))!=0)
		//{
			mysqli_query($con_sql2, 'TRUNCATE TABLE '.$tabserviceadd.'');
			usleep(100000);
		//}
		
		$tabtempphoto='tabtempphoto'.$this->api->chatId.'';
		//if(mysqli_num_rows(mysqli_query($con_sql2, 'SELECT 1 FROM '.$tabtempphoto.' WHERE id LIKE "%" LIMIT 1'))!=0)
		//if(mysqli_query($con_sql2, 'SELECT 1 FROM '.$tabtempphoto.' LIMIT 1'))
		//{
			mysqli_query($con_sql2, 'TRUNCATE TABLE '.$tabtempphoto.'');
			usleep(100000);
		//}
		
		$tabserviceuser='tabserviceuser'.$this->api->chatId.'';
		//if(mysqli_num_rows(mysqli_query($con_sql2, 'SELECT 1 FROM '.$tabserviceuser.' WHERE id LIKE "%" LIMIT 1'))!=0)
		//{
			mysqli_query($con_sql2, 'TRUNCATE TABLE '.$tabserviceuser.'');
			usleep(100000);
		//}	
		
		if($this->cmd_isadmin())
		{
			$text='–í—ã –≤—ã—à–ª–∏ –≤ <b>–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é</b>.'.$this->pre.'';
			
			$this->api->sendMessage([
			'text' => $text,
			'reply_markup' => json_encode( ['inline_keyboard'=>$this->keyboards['inline_default_admin']]),
			'disable_notification' => TRUE,
			'disable_web_page_preview' => TRUE,
			'parse_mode'=> "HTML"
			]);
		}
		else
		{
			$text='–í—ã –≤—ã—à–ª–∏ –≤ <b>–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é</b>.'.$this->pre.'';
			
			$this->api->sendMessage([
			'text' => $text,
			'reply_markup' => json_encode( ['inline_keyboard'=>$this->keyboards['inline_default']]),
			'disable_notification' => TRUE,
			'disable_web_page_preview' => TRUE,
			'parse_mode'=> "HTML"
			]);
		}
	}



///////////////////////////////////////////////////////ADD Price//////////////////////////////////////////////////////////////////////////
/////
	public function cmd_sell_add_price_main()
	{
		
		$con_sql2=$this->cmd_sql();
		$tab='tabserviceadd'.$this->api->chatId.'';
		$tabmain='tabmain'.$this->api->chatId.'';
		
		$query=mysqli_query($con_sql2, 'SELECT * FROM '.$tab.' WHERE id LIKE "%" ORDER by id ASC');
		usleep(100000);
		$con=mysqli_num_rows($query);
		
		for($i=0;$i<$con;$i++)
		{
			mysqli_data_seek($query, $i);
			$row[$i]=mysqli_fetch_row($query);
		}
			usleep(100000);
						
		$query1='UPDATE '.$tab.' SET info = REPLACE(info, "'.$row[$con-1][1].'", "price") WHERE id="'.$row[$con-1][0].'"'; 
		mysqli_query($con_sql2, $query1);
		
	
		$query=mysqli_query($con_sql2, 'SELECT * FROM '.$tabmain.' WHERE id LIKE "%" ORDER by id ASC');
		usleep(100000);
		$con=mysqli_num_rows($query);
		
		for($i=0;$i<$con;$i++)
		{
			mysqli_data_seek($query, $i);
			$row[$i]=mysqli_fetch_row($query);
		}
			usleep(100000);
		
		
		$size=$row[$con-1][5];
		
		$text='–í—ã —É–∫–∞–∑–∞–ª–∏ —Ä–∞–∑–º–µ—Ä <b>'.$size.'</b>.'.PHP_EOL.''.PHP_EOL.'–£–∫–∞–∂–∏—Ç–µ <b>—Å—Ç–æ–∏–º–æ—Å—Ç—å —Ç–æ–≤–∞—Ä–∞</b> –≤ UAH (–≥—Ä–∏–≤–Ω–µ) –≤ —Å—Ç—Ä–æ–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è (–¥–æ–ø—É—Å–∫–∞—é—Ç—Å—è —Ç–æ–ª—å–∫–æ —Ü–µ–ª—ã–µ —á–∏—Å–ª–∞)üëá'.$this->pre.'';
		$merge=[];
		$merge[] = [['text' => '‚¨ÖÔ∏è–ù–∞–∑–∞–¥', 'callback_data' => 'back_sell_add_price'], ['text' => '‚§¥Ô∏è–í—ã–π—Ç–∏', 'callback_data' => 'exit_sell_add_price']];
			
		if(isset($this->api->body['callback_query']["id"]))
		{
			$callback_query_id=$this->api->body['callback_query']["id"];
			$this->api->answerCallbackQuery($callback_query_id);
		}	
		
		/* $text='–£–∫–∞–∂–∏—Ç–µ <b>—Å—Ç–æ–∏–º–æ—Å—Ç—å —Ç–æ–≤–∞—Ä–∞</b>';
		$this->api->sendMessage([
			'text' => $text,
			'reply_markup' => json_encode( ['force_reply' => true, 'input_field_placeholder' => '–£–∫–∞–∂–∏—Ç–µ —Å—Ç–æ–∏–º–æ—Å—Ç—å'] ),
			'disable_notification' => TRUE,
			'disable_web_page_preview' => TRUE,
			'parse_mode'=> "HTML"
			]);
			usleep(100000); */
			
		
		$this->api->sendMessage([
			'text' => $text,
			'reply_markup' => json_encode( ['inline_keyboard'=>$merge]),
			'disable_notification' => TRUE,
			'disable_web_page_preview' => TRUE,
			'parse_mode'=> "HTML"
			]);

		
		
	}

/////
public function cmd_sell_add_price()
	{
	
		$con_sql2=$this->cmd_sql();
		$tabmain='tabmain'.$this->api->chatId.'';
		$textmessage=$this->api->textmessage;
		
		if(preg_match('/\D/', $textmessage))
		{
			$merge=[];
			$merge[] = [['text' => '‚¨ÖÔ∏è–ù–∞–∑–∞–¥', 'callback_data' => 'back_sell_add_price'], ['text' => '‚§¥Ô∏è–í—ã–π—Ç–∏', 'callback_data' => 'exit_sell_add_price']];
			
			/* $text='–£–∫–∞–∂–∏—Ç–µ <b>—Å—Ç–æ–∏–º–æ—Å—Ç—å —Ç–æ–≤–∞—Ä–∞</b>';
			$this->api->sendMessage([
			'text' => $text,
			'reply_markup' => json_encode( ['force_reply' => true, 'input_field_placeholder' => '–£–∫–∞–∂–∏—Ç–µ —Å—Ç–æ–∏–º–æ—Å—Ç—å'] ),
			'disable_notification' => TRUE,
			'disable_web_page_preview' => TRUE,
			'parse_mode'=> "HTML"
			]);
			usleep(100000); */
			
			$text='–í—ã —É–∫–∞–∑–∞–ª–∏ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ. –î–æ–ø—É—Å–∫–∞—é—Ç—Å—è —Ç–æ–ª—å–∫–æ —Ü–∏—Ñ—Ä—ã.'.PHP_EOL.''.PHP_EOL.'–£–∫–∞–∂–∏—Ç–µ <b>—Å—Ç–æ–∏–º–æ—Å—Ç—å —Ç–æ–≤–∞—Ä–∞</b> –≤ UAH (–≥—Ä–∏–≤–Ω–µ) –≤ —Å—Ç—Ä–æ–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è (–¥–æ–ø—É—Å–∫–∞—é—Ç—Å—è —Ç–æ–ª—å–∫–æ —Ü–µ–ª—ã–µ —á–∏—Å–ª–∞)üëá'.$this->pre.'';
			
			$this->api->sendMessage([
			'text' => $text,
			'reply_markup' => json_encode( ['inline_keyboard'=>$merge]),
			'disable_notification' => TRUE,
			'disable_web_page_preview' => TRUE,
			'parse_mode'=> "HTML"
			]);

		}
		elseif(strlen($textmessage)>7)
		{
			$merge=[];
			$merge[] = [['text' => '‚¨ÖÔ∏è–ù–∞–∑–∞–¥', 'callback_data' => 'back_sell_add_price'], ['text' => '‚§¥Ô∏è–í—ã–π—Ç–∏', 'callback_data' => 'exit_sell_add_price']];
			
			/* $text='–£–∫–∞–∂–∏—Ç–µ <b>—Å—Ç–æ–∏–º–æ—Å—Ç—å —Ç–æ–≤–∞—Ä–∞</b>';
			$this->api->sendMessage([
			'text' => $text,
			'reply_markup' => json_encode( ['force_reply' => true, 'input_field_placeholder' => '–£–∫–∞–∂–∏—Ç–µ —Å—Ç–æ–∏–º–æ—Å—Ç—å'] ),
			'disable_notification' => TRUE,
			'disable_web_page_preview' => TRUE,
			'parse_mode'=> "HTML"
			]);
			usleep(100000); */
			
			$text='–í—ã —É–∫–∞–∑–∞–ª–∏ —Å–ª–∏—à–∫–æ–º –±–æ–ª—å—à–æ–µ —á–∏—Å–ª–æ, –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ –¥–æ–ø—É—Å–∫–∞–µ—Ç—Å—è <b>—Å–µ–º–∏–∑–Ω–∞—á–Ω–æ–µ —á–∏—Å–ª–æ!</b>'.PHP_EOL.''.PHP_EOL.'–£–∫–∞–∂–∏—Ç–µ <b>—Å—Ç–æ–∏–º–æ—Å—Ç—å —Ç–æ–≤–∞—Ä–∞</b> –≤ UAH (–≥—Ä–∏–≤–Ω–µ) –≤ —Å—Ç—Ä–æ–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è (–¥–æ–ø—É—Å–∫–∞—é—Ç—Å—è —Ç–æ–ª—å–∫–æ —Ü–µ–ª—ã–µ —á–∏—Å–ª–∞)üëá'.$this->pre.'';
			
			$this->api->sendMessage([
			'text' => $text,
			'reply_markup' => json_encode( ['inline_keyboard'=>$merge]),
			'disable_notification' => TRUE,
			'disable_web_page_preview' => TRUE,
			'parse_mode'=> "HTML"
			]);

		}
		else
		{
			$query=mysqli_query($con_sql2, 'SELECT * FROM '.$tabmain.' WHERE id LIKE "%" ORDER by id ASC');
			$con=mysqli_num_rows($query);
			usleep(100000);
			
			for($i=0;$i<$con;$i++)
			{
				mysqli_data_seek($query, $i);
				$row[$i]=mysqli_fetch_row($query);
			}
			usleep(100000);
			
			$query1='UPDATE '.$tabmain.' SET price = REPLACE(price, "'.$row[$con-1][6].'", "'.$this->api->body["message"]["text"].'") WHERE id="'.$row[$con-1][0].'"'; 
			mysqli_query($con_sql2, $query1);
			
			$this->cmd_sell_add_alt_main();
		}

	}

////	
	public function callback_back_sell_add_price()
	{

		if(isset($this->api->body['callback_query']["id"]))
		{
			$callback_query_id=$this->api->body['callback_query']["id"];
			$this->api->answerCallbackQuery($callback_query_id);
		}
		
		$this->cmd_sell_add_size_main();
	}
	
////	
	public function callback_exit_sell_add_price()
	{
		
		if(isset($this->api->body['callback_query']["id"]))
		{
			$callback_query_id=$this->api->body['callback_query']["id"];
			$this->api->answerCallbackQuery($callback_query_id);
		}	
		
		$con_sql2=$this->cmd_sql();
		
		$tabserviceadd='tabserviceadd'.$this->api->chatId.'';
		//if(mysqli_num_rows(mysqli_query($con_sql2, 'SELECT 1 FROM '.$tabserviceadd.' WHERE id LIKE "%" LIMIT 1'))!=0)
		//{
			mysqli_query($con_sql2, 'TRUNCATE TABLE '.$tabserviceadd.'');
			usleep(100000);
		//}
		
		$tabtempphoto='tabtempphoto'.$this->api->chatId.'';
		//if(mysqli_num_rows(mysqli_query($con_sql2, 'SELECT 1 FROM '.$tabtempphoto.' WHERE id LIKE "%" LIMIT 1'))!=0)
		//if(mysqli_query($con_sql2, 'SELECT 1 FROM '.$tabtempphoto.' LIMIT 1'))
		//{
			mysqli_query($con_sql2, 'TRUNCATE TABLE '.$tabtempphoto.'');
			usleep(100000);
		//}
		
		$tabserviceuser='tabserviceuser'.$this->api->chatId.'';
		//if(mysqli_num_rows(mysqli_query($con_sql2, 'SELECT 1 FROM '.$tabserviceuser.' WHERE id LIKE "%" LIMIT 1'))!=0)
		//{
			mysqli_query($con_sql2, 'TRUNCATE TABLE '.$tabserviceuser.'');
			usleep(100000);
		//}
		
		if($this->cmd_isadmin())
		{
			$text='–í—ã –≤—ã—à–ª–∏ –≤ <b>–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é</b>.'.$this->pre.'';
			
			$this->api->sendMessage([
			'text' => $text,
			'reply_markup' => json_encode( ['inline_keyboard'=>$this->keyboards['inline_default_admin']]),
			'disable_notification' => TRUE,
			'disable_web_page_preview' => TRUE,
			'parse_mode'=> "HTML"
			]);
		}
		else
		{
			$text='–í—ã –≤—ã—à–ª–∏ –≤ <b>–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é</b>.'.$this->pre.'';
			
			$this->api->sendMessage([
			'text' => $text,
			'reply_markup' => json_encode( ['inline_keyboard'=>$this->keyboards['inline_default']]),
			'disable_notification' => TRUE,
			'disable_web_page_preview' => TRUE,
			'parse_mode'=> "HTML"
			]);
		}
	}




/////
	public function cmd_sell_add_alt_main()
	{
		
		$con_sql2=$this->cmd_sql();
		$tab='tabserviceadd'.$this->api->chatId.'';	
		$tabmain='tabmain'.$this->api->chatId.'';
		
		$query=mysqli_query($con_sql2, 'SELECT * FROM '.$tab.' WHERE id LIKE "%" ORDER by id ASC');
		usleep(100000);
		$con=mysqli_num_rows($query);
		
		for($i=0;$i<$con;$i++)
		{
			mysqli_data_seek($query, $i);
			$row[$i]=mysqli_fetch_row($query);
		}
			usleep(100000);
						
		$query1='UPDATE '.$tab.' SET info = REPLACE(info, "'.$row[$con-1][1].'", "alt") WHERE id="'.$row[$con-1][0].'"'; 
		mysqli_query($con_sql2, $query1);
		
	
		$query=mysqli_query($con_sql2, 'SELECT * FROM '.$tabmain.' WHERE id LIKE "%" ORDER by id ASC');
		usleep(100000);
		$con=mysqli_num_rows($query);
		
		for($i=0;$i<$con;$i++)
		{
			mysqli_data_seek($query, $i);
			$row[$i]=mysqli_fetch_row($query);
		}
			usleep(100000);
				
		$price=$row[$con-1][6];

		$text='–í—ã —É–∫–∞–∑–∞–ª–∏ —Å—Ç–æ–∏–º–æ—Å—Ç—å <b>'.$price.' UAH</b>.'.PHP_EOL.''.PHP_EOL.'–£–∫–∞–∂–∏—Ç–µ <b>–ø–æ–¥—Ä–æ–±–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞</b> –æ—Ç–ø—Ä–∞–≤–∏–≤ —Å–æ–æ–±—â–µ–Ω–∏–µüëá'.$this->pre.'';
		
		$merge=[];
		$merge[] = [['text' => '‚¨ÖÔ∏è–ù–∞–∑–∞–¥', 'callback_data' => 'back_sell_add_alt'], ['text' => '‚§¥Ô∏è–í—ã–π—Ç–∏', 'callback_data' => 'exit_sell_add_alt']];
		
			
		if(isset($this->api->body['callback_query']["id"]))
		{
			$callback_query_id=$this->api->body['callback_query']["id"];
			$this->api->answerCallbackQuery($callback_query_id);
		}	
		
		/* $text='–£–∫–∞–∂–∏—Ç–µ <b>–æ–ø–∏—Å–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞</b>';
		$this->api->sendMessage([
			'text' => $text,
			'reply_markup' => json_encode( ['force_reply' => true, 'input_field_placeholder' => '–£–∫–∞–∂–∏—Ç–µ –æ–ø–∏—Å–∞–Ω–∏–µ'] ),
			'disable_notification' => TRUE,
			'disable_web_page_preview' => TRUE,
			'parse_mode'=> "HTML"
			]);
			usleep(100000); */
			
		$this->api->sendMessage([
			'text' => $text,
			'reply_markup' => json_encode( ['inline_keyboard'=>$merge]),
			'disable_notification' => TRUE,
			'disable_web_page_preview' => TRUE,
			'parse_mode'=> "HTML"
			]);
		
	}

/////
public function cmd_sell_add_alt()
	{
	
		$con_sql2=$this->cmd_sql();
		$tabmain='tabmain'.$this->api->chatId.'';
		$input=$this->api->body["message"]["text"];
		
		if(strlen($input)>512)
		{
			
			$text='–í—ã –≤–≤–µ–ª–∏ —Å–ª–∏—à–∫–æ–º –¥–ª–∏–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç. –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è –¥–ª–∏–Ω–∞ 512 —Å–∏–º–≤–æ–ª–æ–≤.'.$this->pre.'';
			
			$this->api->sendMessage([
			'text' => $text,
			'disable_notification' => TRUE,
			'disable_web_page_preview' => TRUE,
			'parse_mode'=> "HTML"
			]);

			$this->cmd_sell_add_alt_main();
		}
		else
		{
			$query=mysqli_query($con_sql2, 'SELECT * FROM '.$tabmain.' WHERE id LIKE "%" ORDER by id ASC');
			$con=mysqli_num_rows($query);
			usleep(100000);
			
			for($i=0;$i<$con;$i++)
			{
				mysqli_data_seek($query, $i);
				$row[$i]=mysqli_fetch_row($query);
			}
			usleep(100000);
			
			$query1='UPDATE '.$tabmain.' SET alt = REPLACE(alt, "'.$row[$con-1][7].'", "'.$this->api->body["message"]["text"].'") WHERE id="'.$row[$con-1][0].'"'; 
			mysqli_query($con_sql2, $query1);
			
			$this->cmd_sell_add_photo_main();
		}

	}

////	
	public function callback_back_sell_add_alt()
	{
			
		if(isset($this->api->body['callback_query']["id"]))
		{
			$callback_query_id=$this->api->body['callback_query']["id"];
			$this->api->answerCallbackQuery($callback_query_id);
		}
		
		$this->cmd_sell_add_price_main();
	}
	
////	
	public function callback_exit_sell_add_alt()
	{
		
		if(isset($this->api->body['callback_query']["id"]))
		{
			$callback_query_id=$this->api->body['callback_query']["id"];
			$this->api->answerCallbackQuery($callback_query_id);
		}	
		
		$con_sql2=$this->cmd_sql();
		
		$tabserviceadd='tabserviceadd'.$this->api->chatId.'';
		//if(mysqli_num_rows(mysqli_query($con_sql2, 'SELECT 1 FROM '.$tabserviceadd.' WHERE id LIKE "%" LIMIT 1'))!=0)
		//{
			mysqli_query($con_sql2, 'TRUNCATE TABLE '.$tabserviceadd.'');
			usleep(100000);
		//}
		
		$tabtempphoto='tabtempphoto'.$this->api->chatId.'';
		//if(mysqli_num_rows(mysqli_query($con_sql2, 'SELECT 1 FROM '.$tabtempphoto.' WHERE id LIKE "%" LIMIT 1'))!=0)
		//if(mysqli_query($con_sql2, 'SELECT 1 FROM '.$tabtempphoto.' LIMIT 1'))
		//{
			mysqli_query($con_sql2, 'TRUNCATE TABLE '.$tabtempphoto.'');
			usleep(100000);
		//}
		
		$tabserviceuser='tabserviceuser'.$this->api->chatId.'';
		//if(mysqli_num_rows(mysqli_query($con_sql2, 'SELECT 1 FROM '.$tabserviceuser.' WHERE id LIKE "%" LIMIT 1'))!=0)
		//{
			mysqli_query($con_sql2, 'TRUNCATE TABLE '.$tabserviceuser.'');
			usleep(100000);
		//}	
		
		if($this->cmd_isadmin())
		{
			$text='–í—ã –≤—ã—à–ª–∏ –≤ <b>–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é</b>.'.$this->pre.'';
			
			$this->api->sendMessage([
			'text' => $text,
			'reply_markup' => json_encode( ['inline_keyboard'=>$this->keyboards['inline_default_admin']]),
			'disable_notification' => TRUE,
			'disable_web_page_preview' => TRUE,
			'parse_mode'=> "HTML"
			]);
		}
		else
		{
			$text='–í—ã –≤—ã—à–ª–∏ –≤ <b>–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é</b>.'.$this->pre.'';
			
			$this->api->sendMessage([
			'text' => $text,
			'reply_markup' => json_encode( ['inline_keyboard'=>$this->keyboards['inline_default']]),
			'disable_notification' => TRUE,
			'disable_web_page_preview' => TRUE,
			'parse_mode'=> "HTML"
			]);
		}
	}
	
	
	
	









/////	
	public function callback_admin_ask_channel_see()
	{
		
		$con_sql2=$this->cmd_sql();
		
		$text1=$this->api->textmessage;
		
		preg_match_all('/\(.*\)/', $text1, $out1);
		
		$phone=preg_replace('/\(/', '', $out1[0][0]);
		$phone=preg_replace('/\)/', '', $phone);
		$phone=$this->clean($phone);
		
		$userchatid=$this->cmd_user_get_chatid_phone($phone);
		
		$tabmain='tabmain'.$userchatid.'';
		
		$fio=$this->cmd_user_get_fio($userchatid);
		
		preg_match_all('/‚Ññ.*–¥–ª—è/', $text1, $out2);
		
		$record=preg_replace('/‚Ññ/', '', $out2[0][0]);
		$record=preg_replace('/–¥–ª—è/', '', $record);
		$record=$this->clean($record);
		
		
		$query=mysqli_query($con_sql2, 'SELECT * FROM '.$tabmain.' WHERE id="'.$record.'"');
		usleep(100000);
		$con=mysqli_num_rows($query);
			
		for($i=0;$i<$con;$i++)
		{
			mysqli_data_seek($query, $i);
			$row[$i]=mysqli_fetch_row($query);
		}
		usleep(100000);
		
		
		for($i=0;$i<$con;$i++)
		{
		
			/* $text='<b>–û–±—ä—è–≤–ª–µ–Ω–∏–µ ‚Ññ'.$record.'</b>';
			
			$this->api->sendMessage([
			'text' => $text,
			'disable_notification' => TRUE,
			'disable_web_page_preview' => TRUE,
			'parse_mode'=> "HTML"
			]);
			usleep(100000); */
			
			$type=$this->convert_rus($row[0][1]);
			$cat=$this->convert_rus($row[0][2]);
			$gender=$this->convert_rus($row[0][3]);
			$cond=$this->convert_rus($row[0][12]);
						
			$caption='<b>–û–±—ä—è–≤–ª–µ–Ω–∏–µ: ‚Ññ'.$record.'</b>'.PHP_EOL.''.PHP_EOL.'üìñ–ö–∞—Ç–µ–≥–æ—Ä–∏—è: <b>'.$type.'</b>'.PHP_EOL.'üßæ–í–∏–¥: <b>'.$cat.'</b>'.PHP_EOL.'üë®‚Äçüë©‚Äçüë¶–ü–æ–ª: <b>'.$gender.'</b>'.PHP_EOL.'üéè–°–æ—Å—Ç–æ—è–Ω–∏–µ: <b>'.$cond.'</b>'.PHP_EOL.'¬Æ–ë—Ä–µ–Ω–¥: <b>'.$row[0][4].'</b>'.PHP_EOL.'‚ÜïÔ∏è–†–∞–∑–º–µ—Ä: <b>'.$row[0][5].'</b>'.PHP_EOL.'üíµ–¶–µ–Ω–∞: <b>'.$row[0][6].'</b>'.PHP_EOL.'üìã–û–ø–∏—Å–∞–Ω–∏–µ: '.$row[0][7].''.PHP_EOL.''.PHP_EOL.'–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: <b>'.$fio.' ('.$phone.')</b>';
			
			$photo=$row[0][8];
			
			if(preg_match('/;/', $photo)==FALSE)
			{
				$this->api->sendPhoto([
				'photo' => $photo,
				'caption' => $caption,
				'disable_notification' => TRUE,
				'parse_mode' => "HTML"
				]);
				usleep(250000);
			
			}
			else
			{
				$media=[];
				$temp=explode(';', $photo);
				$cnt=count($temp);
				for($o=0;$o<$cnt;$o++)
				{
				
				
					if($o==0)
					{
						$put=['type' => 'photo', 'media' =>  ''.$temp[$o].'', 'caption' => ''.$caption.'', 'parse_mode' => "HTML" ];
					}
					else
					{
						$put=['type' => 'photo', 'media' =>  ''.$temp[$o].'' ];
					}
			
					$media[$o]=$put;
				}
				
				
				$this->api->sendMediaGroup([
				'media' => json_encode($media),
				]);
				usleep(350000);
			}
			
		
		}

		$text='–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å üë§<b>'.$fio.' ('.$phone.')</b> –¥–æ–±–∞–≤–∏–ª –æ–±—ä—è–≤–ª–µ–Ω–∏–µ <b>‚Ññ'.$record.'</b> –¥–ª—è —Ä–∞–∑–º–µ—â–µ–Ω–∏—è –≤ –∫–∞–Ω–∞–ª–µ. –ß—Ç–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ —Å–¥–µ–ª–∞—Ç—å —Å –¥–∞–Ω–Ω—ã–º –æ–±—ä—è–≤–ª–µ–Ω–∏–µ–º?'.$this->pre.'';
		
		
		if(isset($this->api->body['callback_query']["id"]))
		{
			$callback_query_id=$this->api->body['callback_query']["id"];
			$this->api->answerCallbackQuery($callback_query_id);
		}
		
		$this->api->sendMessage([
			'text' => $text,
			'reply_markup' => json_encode( ['inline_keyboard'=>$this->keyboards['inline_ask_admin_channel']]),
			'disable_notification' => TRUE,
			'disable_web_page_preview' => TRUE,
			'parse_mode'=> "HTML"
		]);
		usleep(100000);
	
	}


/////	
	public function callback_admin_ask_channel_delete()
	{
		
		$con_sql2=$this->cmd_sql();
		
		$text1=$this->api->textmessage;
		
		preg_match_all('/\(.*\)/', $text1, $out1);
		
		$phone=preg_replace('/\(/', '', $out1[0][0]);
		$phone=preg_replace('/\)/', '', $phone);
		$phone=$this->clean($phone);
		
		$userchatid=$this->cmd_user_get_chatid_phone($phone);
		
		$tabmain='tabmain'.$userchatid.'';
		
		$fio=$this->cmd_user_get_fio($userchatid);
		
		preg_match_all('/‚Ññ.*–¥–ª—è/', $text1, $out2);
		
		$record=preg_replace('/‚Ññ/', '', $out2[0][0]);
		$record=preg_replace('/–¥–ª—è/', '', $record);
		$record=$this->clean($record);
		
		
		$query=mysqli_query($con_sql2, 'SELECT * FROM '.$tabmain.' WHERE id="'.$record.'"');
		usleep(100000);
		$con=mysqli_num_rows($query);
			
		for($i=0;$i<$con;$i++)
		{
			mysqli_data_seek($query, $i);
			$row[$i]=mysqli_fetch_row($query);
		}
		usleep(100000);
		
		
		$query=mysqli_query($con_sql2, 'DELETE FROM '.$tabmain.' WHERE id="'.$record.'"');
		usleep(100000);
		
		$text='–í—ã–±—Ä–∞–Ω–Ω–æ–µ –æ–±—ä—è–≤–ª–µ–Ω–∏–µ <b>‚Ññ'.$record.'</b> –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è üë§<b>'.$fio.' ('.$phone.')</b> —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω–æ –∏ –Ω–µ –±—É–¥–µ—Ç —Ä–∞–∑–º–µ—â–µ–Ω–æ –≤ –∫–∞–Ω–∞–ª–µ.'.$this->pre.'';
		$this->callbackAnswer( $text, $this->keyboards['inline_default_admin']);
		
		/* if(isset($this->api->body['callback_query']["id"]))
		{
			$callback_query_id=$this->api->body['callback_query']["id"];
			$this->api->answerCallbackQuery($callback_query_id);
		}
		
		$this->api->sendMessage([
			'text' => $text,
			'reply_markup' => json_encode( ['inline_keyboard'=>$this->keyboards['inline_default_admin']]),
			'disable_notification' => TRUE,
			'disable_web_page_preview' => TRUE,
			'parse_mode'=> "HTML"
		]);
		usleep(100000); */
		
		$text2='–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –í–∞—à–µ –æ–±—ä—è–≤–ª–µ–Ω–∏–µ <b>‚Ññ'.$record.' –±—ã–ª–æ —É–¥–∞–ª–µ–Ω–æ</b> –ø–æ—Å–ª–µ –º–æ–¥–µ—Ä–∞—Ü–∏–∏ –∏ <b>–Ω–µ –±—É–¥–µ—Ç —Ä–∞–∑–º–µ—â–µ–Ω–æ –≤ –∫–∞–Ω–∞–ª–µ</b>.'.$this->pre.'';
			
		$this->api->sendMessage([

			'chat_id' => $userchatid,
			'text' => $text2,
			'reply_markup' => json_encode( ['inline_keyboard'=>$this->keyboards['inline_sell']]),
			'parse_mode' => "HTML",
			]);
		usleep(100000);
	}


/////	
	public function callback_admin_ask_channel_send()
	{
		
		$con_sql2=$this->cmd_sql();
		
		$text1=$this->api->textmessage;
		
		preg_match_all('/\(.*\)/', $text1, $out1);
		
		$phone=preg_replace('/\(/', '', $out1[0][0]);
		$phone=preg_replace('/\)/', '', $phone);
		$phone=$this->clean($phone);
		
		$userchatid=$this->cmd_user_get_chatid_phone($phone);
		
		$tabserviceask='tabserviceask'.$userchatid.'';
		$tabmain='tabmain'.$userchatid.'';
		
		$fio=$this->cmd_user_get_fio($userchatid);
		
		preg_match_all('/‚Ññ.*–¥–ª—è/', $text1, $out2);
		
		$record=preg_replace('/‚Ññ/', '', $out2[0][0]);
		$record=preg_replace('/–¥–ª—è/', '', $record);
		$record=$this->clean($record);
		
		
		$query=mysqli_query($con_sql2, 'SELECT * FROM '.$tabmain.' WHERE id="'.$record.'"');
		usleep(100000);
		$con=mysqli_num_rows($query);
			
		for($i=0;$i<$con;$i++)
		{
			mysqli_data_seek($query, $i);
			$row[$i]=mysqli_fetch_row($query);
		}
		usleep(100000);
		
		$mainchannel=$this->mainchannel;
		
		
		/* $text='‚ùáÔ∏è‚ùáÔ∏è‚ùáÔ∏è‚ùáÔ∏è‚ùáÔ∏è‚ùáÔ∏è‚ùáÔ∏è‚ùáÔ∏è‚ùáÔ∏è‚ùáÔ∏è‚ùáÔ∏è‚ùáÔ∏è‚ùáÔ∏è‚ùáÔ∏è‚ùáÔ∏è‚ùáÔ∏è‚ùáÔ∏è‚ùáÔ∏è‚ùáÔ∏è‚ùáÔ∏è';
		$this->api->sendMessage([
		'chat_id' => $mainchannel,
		'text' => $text,
		'disable_notification' => TRUE,
		'disable_web_page_preview' => TRUE,
		'parse_mode'=> 'HTML'
		]); */
		
		$type=$this->convert_rus($row[0][1]);
		$cat=$this->convert_rus($row[0][2]);
		$gender=$this->convert_rus($row[0][3]);
		$cond=$this->convert_rus($row[0][12]);
		
		$caption='üìñ–ö–∞—Ç–µ–≥–æ—Ä–∏—è: &#160;&#160;<b>'.$type.'</b>'.PHP_EOL.'üßæ–í–∏–¥: &#160;&#160;<b>'.$cat.'</b>'.PHP_EOL.'üë®‚Äçüë©‚Äçüë¶–ü–æ–ª: &#160;&#160;<b>'.$gender.'</b>'.PHP_EOL.'üéè–°–æ—Å—Ç–æ—è–Ω–∏–µ: &#160;&#160;<b>'.$cond.'</b>'.PHP_EOL.'¬ÆÔ∏è–ë—Ä–µ–Ω–¥: &#160;&#160;<b>'.$row[0][4].'</b>'.PHP_EOL.'‚ÜïÔ∏è–†–∞–∑–º–µ—Ä: &#160;&#160;<b>'.$row[0][5].'</b>'.PHP_EOL.'üíµ–¶–µ–Ω–∞: &#160;&#160;<b>'.$row[0][6].'</b>'.PHP_EOL.'üìã–û–ø–∏—Å–∞–Ω–∏–µ: &#160;&#160;'.$row[0][7].''.PHP_EOL.''.PHP_EOL.'üìÅüìÅüìÅüìÅüìÅüìÅüìÅüìÅüìÅüìÅüìÅüìÅ';
		
		$photo=$row[0][8];
		
		if(preg_match('/;/', $photo)==FALSE)
		{
			$result=json_decode($this->api->sendPhoto([
			'chat_id' => $mainchannel,
			'photo' => $photo,
			'caption' => $caption,
			'disable_notification' => TRUE,
			'parse_mode' => "HTML"
			]), true);
			usleep(350000);
			
			$messageid=$result['result']['message_id'];
		}
		else
		{
			$tabservicerecords='tabservicerecords';
			if(mysqli_query($con_sql2, 'SELECT 1 FROM '.$tabservicerecords.' LIMIT 1')==FALSE)
			{
				mysqli_query($con_sql2, 'CREATE TABLE '.$tabservicerecords.' (id INT(4) UNSIGNED AUTO_INCREMENT PRIMARY KEY,record VARCHAR(20),messids VARCHAR(250)) ENGINE = InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;');
				usleep(250000);
			}
			
			
			$media=[];
			$temp=explode(';', $photo);
			$cnt=count($temp);
			
			for($o=0;$o<$cnt;$o++)
			{
				if($o==0)
				{
					$put=['type' => 'photo', 'media' =>  ''.$temp[$o].'', 'caption' => ''.$caption.'', 'parse_mode' => "HTML" ];
				}
				else
				{
					$put=['type' => 'photo', 'media' =>  ''.$temp[$o].'' ];
				}
		
				$media[$o]=$put;
			}
			
			
		
			$result=json_decode($this->api->sendMediaGroup([
			'chat_id' => $mainchannel,
			'media' => json_encode($media),
			]), true);
			usleep(350000);
			
			$messageid=$result['result'][0]['message_id'];
			
			mysqli_query($con_sql2, 'INSERT INTO '.$tabservicerecords.' (record, messids) VALUES ("'.$messageid.'", "0")');
			usleep(150000);
			
			$cnt=count($result['result']);
			
			for($o=0;$o<$cnt;$o++)
			{
				$messageids=$result['result'][$o]['message_id'];
				
				if($o==0)
				{
					$put=$messageids;
				}
				else
				{
					$put=''.$put.';'.$messageids.'';
				}

			}
			
			$query2=mysqli_query($con_sql2, 'SELECT * FROM '.$tabservicerecords.' WHERE record="'.$messageid.'"');
			$con2=mysqli_num_rows($query2);
			
			for($i2=0;$i2<$con2;$i2++)
			{
				mysqli_data_seek($query2, $i2);
				$row2[$i2]=mysqli_fetch_row($query2);
			}
			
			$query1='UPDATE '.$tabservicerecords.' SET messids = REPLACE(messids, "'.$row2[0][2].'", "'.$put.'") WHERE record="'.$messageid.'"'; 
			$result1=mysqli_query($con_sql2, $query1);
			usleep(100000);			
			
		}
		
		$date=date("d.m.Y");
		$time=time();
		
		$query2='UPDATE '.$tabmain.' SET date = REPLACE(date, "'.$row[0][9].'", "'.$date.'") WHERE id="'.$record.'"'; 
		$result2=mysqli_query($con_sql2, $query2);
		usleep(100000);
		
		$query2='UPDATE '.$tabmain.' SET time = REPLACE(time, "'.$row[0][10].'", "'.$time.'") WHERE id="'.$record.'"'; 
		$result2=mysqli_query($con_sql2, $query2);
		usleep(100000);
		
		$query2='UPDATE '.$tabmain.' SET messid = REPLACE(messid, "'.$row[0][11].'", "'.$messageid.'") WHERE id="'.$record.'"'; 
		$result2=mysqli_query($con_sql2, $query2);
		usleep(100000);
		
		$query2=mysqli_query($con_sql2, 'DELETE FROM '.$tabserviceask.' WHERE record="'.$record.'"');
		usleep(100000);
		
		$caption1='üìñ–ö–∞—Ç–µ–≥–æ—Ä–∏—è: &#160;&#160;<b>'.$type.'</b>'.PHP_EOL.'üßæ–í–∏–¥: &#160;&#160;<b>'.$cat.'</b>'.PHP_EOL.'üë®‚Äçüë©‚Äçüë¶–ü–æ–ª: &#160;&#160;<b>'.$gender.'</b>'.PHP_EOL.'üéè–°–æ—Å—Ç–æ—è–Ω–∏–µ: &#160;&#160;<b>'.$cond.'</b>'.PHP_EOL.'¬ÆÔ∏è–ë—Ä–µ–Ω–¥: &#160;&#160;<b>'.$row[0][4].'</b>'.PHP_EOL.'‚ÜïÔ∏è–†–∞–∑–º–µ—Ä: &#160;&#160;<b>'.$row[0][5].'</b>'.PHP_EOL.'üíµ–¶–µ–Ω–∞: &#160;&#160;<b>'.$row[0][6].'</b>'.PHP_EOL.'üìã–û–ø–∏—Å–∞–Ω–∏–µ: &#160;&#160;'.$row[0][7].''.PHP_EOL.''.PHP_EOL.''.PHP_EOL.'<i>ID —Ç–æ–≤–∞—Ä–∞: '.$messageid.'</i>'.PHP_EOL.''.PHP_EOL.'üìÅüìÅüìÅüìÅüìÅüìÅüìÅüìÅüìÅüìÅüìÅüìÅ';
		
		$this->api->editMessageCaption([
			'chat_id' => $this->mainchannel,
			'message_id' => $messageid,
			'caption' => $caption1,
			'parse_mode' => "HTML",
			]);
		
		usleep(250000);
		
		$text='–í—ã–±—Ä–∞–Ω–Ω–æ–µ –æ–±—ä—è–≤–ª–µ–Ω–∏–µ <b>‚Ññ'.$record.'</b> –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è üë§<b>'.$fio.' ('.$phone.')</b> —É—Å–ø–µ—à–Ω–æ —Ä–∞–∑–º–µ—â–µ–Ω–æ –≤ –∫–∞–Ω–∞–ª–µ —Å <b>ID —Ç–æ–≤–∞—Ä–∞ ‚Ññ '.$messageid.'</b>.'.$this->pre.'';
		
		$this->callbackAnswer( $text, $this->keyboards['inline_default_admin']);
		/* if(isset($this->api->body['callback_query']["id"]))
		{
			$callback_query_id=$this->api->body['callback_query']["id"];
			$this->api->answerCallbackQuery($callback_query_id);
		}
		
		$this->api->sendMessage([
			'text' => $text,
			'reply_markup' => json_encode( ['inline_keyboard'=>$this->keyboards['inline_default_admin']]),
			'disable_notification' => TRUE,
			'disable_web_page_preview' => TRUE,
			'parse_mode'=> "HTML"
		]);
		usleep(100000); */
		
		$text2='–í–∞—à–µ –æ–±—ä—è–≤–ª–µ–Ω–∏–µ <b>‚Ññ'.$record.'</b> —É—Å–ø–µ—à–Ω–æ —Ä–∞–∑–º–µ—â–µ–Ω–æ –≤ –∫–∞–Ω–∞–ª–µ —Å <b>ID —Ç–æ–≤–∞—Ä–∞ ‚Ññ '.$messageid.'</b>.'.$this->pre.'';
		
		/* if(isset($this->api->body['callback_query']["id"]))
		{
			$callback_query_id=$this->api->body['callback_query']["id"];
			$this->api->answerCallbackQuery($callback_query_id);
		} */
		
		/* $this->api->editMessageText([
				'chat_id' => $userchatid,
				'message_id' => $this->api->body['message']['message_id'],
				'text' => $text,
				'parse_mode' => "HTML",
				'reply_markup' => json_encode( ['inline_keyboard'=>$this->keyboards['inline_sell']]),
			]);
			usleep(100000); */
			
/* 			$this->api->editMessageText([
				'chat_id' => $this->api->body['callback_query']['message']['chat']["id"],
				'message_id' => $this->api->body['callback_query']['message']['message_id'],
				'text' => $text,
				'parse_mode' => "HTML",
				'reply_markup' => json_encode( ['inline_keyboard'=>$this->keyboards['inline_sell']]),
			]);
			usleep(100000); */
			
		$this->api->sendMessage([

			'chat_id' => $userchatid,
			'text' => $text2,
			'reply_markup' => json_encode( ['inline_keyboard'=>$this->keyboards['inline_sell']]),
			'parse_mode' => "HTML",
			]);
		usleep(100000);
	
	}


///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////RECORDS/////////////////////////////////////////////////////////////////////
	public function callback_admin_records()
	{
		$con_sql2=$this->cmd_sql();
		
		$tabserviceadmin='tabserviceadmin'.$this->api->chatId.'';
		if(mysqli_num_rows(mysqli_query($con_sql2, 'SELECT 1 FROM '.$tabserviceadmin.' WHERE id LIKE "%" LIMIT 1'))!=0)
		{
			mysqli_query($con_sql2, 'TRUNCATE TABLE '.$tabserviceadmin.'');
			usleep(100000);
		}
		
		$tabserviceadd='tabserviceadd'.$this->api->chatId.'';
		if(mysqli_num_rows(mysqli_query($con_sql2, 'SELECT 1 FROM '.$tabserviceadd.' WHERE id LIKE "%" LIMIT 1'))!=0)
		{
			mysqli_query($con_sql2, 'TRUNCATE TABLE '.$tabserviceadd.'');
			usleep(100000);
		}
		
		$tabservicefio='tabservicefio'.$this->api->chatId.'';
		if(mysqli_num_rows(mysqli_query($con_sql2, 'SELECT 1 FROM '.$tabservicefio.' WHERE id LIKE "%" LIMIT 1'))!=0)
		{
			mysqli_query($con_sql2, 'TRUNCATE TABLE '.$tabservicefio.'');
			usleep(100000);
		}
		
		$tabtempphoto='tabtempphoto'.$this->api->chatId.'';
		//if(mysqli_num_rows(mysqli_query($con_sql2, 'SELECT 1 FROM '.$tabtempphoto.' WHERE id LIKE "%" LIMIT 1'))!=0)
		if(mysqli_query($con_sql2, 'SELECT 1 FROM '.$tabtempphoto.' LIMIT 1'))
		{
			mysqli_query($con_sql2, 'DROP TABLE '.$tabtempphoto.'');
			usleep(100000);
		}
		
		$tabserviceuser='tabserviceuser'.$this->api->chatId.'';
		if(mysqli_num_rows(mysqli_query($con_sql2, 'SELECT 1 FROM '.$tabserviceuser.' WHERE id LIKE "%" LIMIT 1'))!=0)
		{
			mysqli_query($con_sql2, 'TRUNCATE TABLE '.$tabserviceuser.'');
			usleep(100000);
		}
		
		$text='–í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ –ø–æ–¥–º–µ–Ω—é <b>–û–±—ä—è–≤–ª–µ–Ω–∏—è</b> –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –º–µ–Ω—é –ê–¥–º–∏–Ω.'.$this->pre.'';
		$this->callbackAnswer( $text, $this->keyboards['inline_admin_records']);
	}


/////	
	public function callback_admin_back_records_menu()
	{
		$con_sql2=$this->cmd_sql();
		$tabserviceadmin='tabserviceadmin'.$this->api->chatId.'';
				
		if(mysqli_query($con_sql2, 'SELECT 1 FROM '.$tabserviceadmin.' LIMIT 1'))
		{
			mysqli_query($con_sql2, 'TRUNCATE TABLE '.$tabserviceadmin.'');
			usleep(100000);
		}
		
		
		$text='–í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é <b>–ê–¥–º–∏–Ω</b> –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –º–µ–Ω—é.'.$this->pre.'';
		$this->callbackAnswer( $text, $this->keyboards['inline_admin_main']);
		usleep(100000);
	}	
		/////	
	public function callback_admin_exit_records_menu()
	{
		$con_sql2=$this->cmd_sql();
		$tabserviceadmin='tabserviceadmin'.$this->api->chatId.'';
		
		if(isset($this->api->body['callback_query']["id"]))
		{
			$callback_query_id=$this->api->body['callback_query']["id"];
			$this->api->answerCallbackQuery($callback_query_id);
		}
		
		if(mysqli_query($con_sql2, 'SELECT 1 FROM '.$tabserviceadmin.' LIMIT 1'))
		{
			mysqli_query($con_sql2, 'TRUNCATE TABLE '.$tabserviceadmin.'');
			usleep(100000);
		}
		
		
		$text='–í—ã –≤—ã—à–ª–∏ –≤ <b>–ì–ª–∞–≤–Ω–æ–µ –ú–µ–Ω—é</b>.'.$this->pre.'';
		
		$this->api->sendMessage([
		'text' => $text,
		'reply_markup' => json_encode( ['inline_keyboard'=>$this->keyboards['inline_default_admin']]),
		'disable_notification' => TRUE,
		'disable_web_page_preview' => TRUE,
		'parse_mode'=> "HTML"
		]);
		usleep(100000);
	}
	
	
/////////////////////////////////////////////show records//////////////////////////////////////////
/////	
	public function callback_admin_show_records_channel()
	{
		
		$con_sql2=$this->cmd_sql();
		$tabserviceadmin='tabserviceadmin'.$this->api->chatId.'';
		
		$query=mysqli_query($con_sql2, 'SHOW TABLES LIKE "tabmain%"');
		$con=mysqli_num_rows($query);
		
		if($con!=0)
		{
		
			$a=0;
			
			for($i=0;$i<$con;$i++)
			{
				mysqli_data_seek($query, $i);
				$row[$i]=mysqli_fetch_row($query);
				if(mysqli_num_rows(mysqli_query($con_sql2, 'SELECT * FROM '.$row[$i][0].' WHERE messid!="0"'))!=0)
				{
					$a=1;
					break;

				}
			}
			
			if($a==0)
			{
				$text='–í –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç <b>–Ω–µ—Ç —Ç–æ–≤–∞—Ä–æ–≤, —Ä–∞–∑–º–µ—â–µ–Ω–Ω—ã—Ö –≤ –∫–∞–Ω–∞–ª–µ!</b>'.$this->pre.'';
				$this->callbackAnswer( $text, $this->keyboards['inline_admin_records']);
				usleep(100000);
				
			}
			else
			{
				if(mysqli_query($con_sql2, 'SELECT 1 FROM '.$tabserviceadmin.' LIMIT 1')==FALSE)
				{
					mysqli_query($con_sql2, 'CREATE TABLE '.$tabserviceadmin.' (id INT(4) UNSIGNED AUTO_INCREMENT PRIMARY KEY,info VARCHAR(20)) ENGINE = InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;');
					usleep(250000);
					mysqli_query($con_sql2, 'INSERT INTO '.$tabserviceadmin.' (info) VALUES ("show")');
					usleep(100000);
				}
				else
				{
					if(mysqli_num_rows(mysqli_query($con_sql2, 'SELECT 1 FROM '.$tabserviceadmin.' WHERE id LIKE "%" LIMIT 1'))==0)
					{
						mysqli_query($con_sql2, 'INSERT INTO '.$tabserviceadmin.' (info) VALUES ("show")');
						usleep(100000);
					}
					else
					{
						mysqli_query($con_sql2, 'TRUNCATE TABLE '.$tabserviceadmin.'');
						usleep(100000);
						mysqli_query($con_sql2, 'INSERT INTO '.$tabserviceadmin.' (info) VALUES ("show")');
						usleep(100000);
					}
				}
				
				/* if(isset($this->api->body['callback_query']["id"]))
				{
					$callback_query_id=$this->api->body['callback_query']["id"];
					$this->api->answerCallbackQuery($callback_query_id);
				} */
				
				$merge=[];
				$merge[] = [['text' => '‚¨ÖÔ∏è–ù–∞–∑–∞–¥', 'callback_data' => 'admin_back_show_records_channel'], ['text' => '‚§¥Ô∏è–í—ã–π—Ç–∏', 'callback_data' => 'admin_exit_show_records_channel']];
				
				$text='–í–≤–µ–¥–∏—Ç–µ <b>ID —Ç–æ–≤–∞—Ä–∞</b>, —á—Ç–æ–±—ã –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –Ω–µ–º.'.$this->pre.'';
				$this->callbackAnswer( $text, $merge);
				/* $this->api->sendMessage([
					'text' => $text,
					'reply_markup' => json_encode( ['inline_keyboard'=>$merge]),
					'disable_notification' => TRUE,
					'disable_web_page_preview' => TRUE,
					'parse_mode'=> "HTML"
				]); */
			
			}
			
		}
		else
		{
			$text='–í –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π <b>–Ω–µ—Ç –Ω–∏ –æ–¥–Ω–æ–≥–æ –æ–±—ä—è–≤–ª–µ–Ω–∏—è</b>.'.$this->pre.'';
			$this->callbackAnswer( $text, $this->keyboards['inline_admin_records']);
		
		}
		
		
	}

		
/////		
	public function cmd_admin_show_records_channel()
	{
	
		$con_sql2=$this->cmd_sql();
		$record=$this->api->textmessage;

		/* if(isset($this->api->body['callback_query']["id"]))
		{
			$callback_query_id=$this->api->body['callback_query']["id"];
			$this->api->answerCallbackQuery($callback_query_id);
		} */
		

		$query=mysqli_query($con_sql2, 'SHOW TABLES LIKE "tabmain%"');
		$con=mysqli_num_rows($query);
		
		if($con!=0)
		{
		
			$a=0;
			$b=0;
			for($i=0;$i<$con;$i++)
			{
				mysqli_data_seek($query, $i);
				$row[$i]=mysqli_fetch_row($query);
				if(mysqli_num_rows(mysqli_query($con_sql2, 'SELECT 1 FROM '.$row[$i][0].' WHERE messid!="0"'))!=0)
				{
					$b=1;
					if(mysqli_num_rows(mysqli_query($con_sql2, 'SELECT 1 FROM '.$row[$i][0].' WHERE messid="'.$record.'"'))!=0)
					{
						$a=1;
						$query1=mysqli_query($con_sql2, 'SELECT * FROM '.$row[$i][0].' WHERE messid="'.$record.'"');
						$con1=mysqli_num_rows($query1);
						
						for($i1=0;$i1<$con1;$i1++)
						{
							mysqli_data_seek($query1, $i1);
							$row1[$i1]=mysqli_fetch_row($query1);
							

							$fio=$this->cmd_user_get_fio($row1[$i1][13]);
							$phone=$this->cmd_user_get_phone($row1[$i1][13]);
							
							$type=$this->convert_rus($row1[$i1][1]);
							$cat=$this->convert_rus($row1[$i1][2]);
							$gender=$this->convert_rus($row1[$i1][3]);
							$cond=$this->convert_rus($row1[$i1][12]);
							
							$caption='üìñ–ö–∞—Ç–µ–≥–æ—Ä–∏—è: &#160;&#160;<b>'.$type.'</b>'.PHP_EOL.'üßæ–í–∏–¥: &#160;&#160;<b>'.$cat.'</b>'.PHP_EOL.'üë®‚Äçüë©‚Äçüë¶–ü–æ–ª: &#160;&#160;<b>'.$gender.'</b>'.PHP_EOL.'üéè–°–æ—Å—Ç–æ—è–Ω–∏–µ: <b>'.$cond.'</b>'.PHP_EOL.'¬ÆÔ∏è–ë—Ä–µ–Ω–¥: &#160;&#160;<b>'.$row1[$i1][4].'</b>'.PHP_EOL.'‚ÜïÔ∏è–†–∞–∑–º–µ—Ä: &#160;&#160;<b>'.$row1[$i1][5].'</b>'.PHP_EOL.'üíµ–¶–µ–Ω–∞: &#160;&#160;<b>'.$row1[$i1][6].'</b>'.PHP_EOL.'üìã–û–ø–∏—Å–∞–Ω–∏–µ: &#160;&#160;'.$row1[$i1][7].''.PHP_EOL.''.PHP_EOL.''.PHP_EOL.'<b>ID —Ç–æ–≤–∞—Ä–∞: '.$row1[$i1][11].'</b>'.PHP_EOL.'–ü—Ä–æ–¥–∞–≤–µ—Ü:<b> '.$fio.' ('.$phone.')</b>'.PHP_EOL.''.PHP_EOL.'üìÅüìÅüìÅüìÅüìÅüìÅüìÅüìÅüìÅüìÅüìÅüìÅ';
							
							$photo=$row1[$i1][8];
							
							if(preg_match('/;/', $photo)==FALSE)
							{
								$this->api->sendPhoto([
								'photo' => $photo,
								'caption' => $caption,
								'disable_notification' => TRUE,
								'parse_mode' => "HTML"
								]);
								usleep(250000);
							
							}
							else
							{
								$media=[];
								$temp=explode(';', $photo);
								$cnt=count($temp);
								for($o=0;$o<$cnt;$o++)
								{
								
								
									if($o==0)
									{
										$put=['type' => 'photo', 'media' =>  ''.$temp[$o].'', 'caption' => ''.$caption.'', 'parse_mode' => "HTML" ];
									}
									else
									{
										$put=['type' => 'photo', 'media' =>  ''.$temp[$o].'' ];
									}
							
									$media[$o]=$put;
								}
								
								
								$this->api->sendMediaGroup([
								'media' => json_encode($media),
								]);
								usleep(350000);
							}

							$text='–°–≤–µ—Ä—Ö—É –ø–æ–∫–∞–∑–∞–Ω —Ç–æ–≤–∞—Ä –≤ –∫–∞–Ω–∞–ª–µ —Å ID <b>‚Ññ'.$record.'</b> –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è <b>'.$fio.' ('.$phone.').</b>'.PHP_EOL.''.PHP_EOL.'–ú–æ–∂–µ—Ç–µ –≤–≤–µ—Å—Ç–∏ –¥—Ä—É–≥–æ–π <b>ID —Ç–æ–≤–∞—Ä–∞</b>, —á—Ç–æ–±—ã –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –Ω–µ–º.'.$this->pre.'';
							$merge=[];
							$merge[] = [['text' => '‚¨ÖÔ∏è–ù–∞–∑–∞–¥', 'callback_data' => 'admin_back_show_records_channel'], ['text' => '‚§¥Ô∏è–í—ã–π—Ç–∏', 'callback_data' => 'admin_exit_show_records_channel']];
							
							
							$this->api->sendMessage([
								'text' => $text,
								'reply_markup' => json_encode( ['inline_keyboard'=>$merge]),
								'disable_notification' => TRUE,
								'disable_web_page_preview' => TRUE,
								'parse_mode'=> "HTML"
								]);
							usleep(100000);
							
							
							/* $text='–í–≤–µ–¥–∏—Ç–µ ID —Ç–æ–≤–∞—Ä–∞!';
							
							$this->api->sendMessage([
								'text' => $text,
								'reply_markup' => json_encode( ['force_reply' => true, 'input_field_placeholder' => '–í–≤–µ–¥–∏—Ç–µ ID —Ç–æ–≤–∞—Ä–∞'] ),
								'disable_notification' => TRUE,
								'disable_web_page_preview' => TRUE,
								'parse_mode'=> "HTML"
								]);
							usleep(100000); */
							
							break 2;
						}
					}
				}
			}
			
			if($b==0)
			{
				$text='–í –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç <b>–Ω–µ—Ç —Ç–æ–≤–∞—Ä–æ–≤, —Ä–∞–∑–º–µ—â–µ–Ω–Ω—ã—Ö –≤ –∫–∞–Ω–∞–ª–µ!</b>'.$this->pre.'';
		
				$this->api->sendMessage([
				'text' => $text,
				'reply_markup' => json_encode( ['inline_keyboard'=>$this->keyboards['inline_admin_records']]),
				'disable_notification' => TRUE,
				'disable_web_page_preview' => TRUE,
				'parse_mode'=> "HTML"
				]);
				usleep(100000);
			}
			elseif($a==0)
			{
				$merge=[];
				$merge[] = [['text' => '‚¨ÖÔ∏è–ù–∞–∑–∞–¥', 'callback_data' => 'admin_back_show_records_channel'], ['text' => '‚§¥Ô∏è–í—ã–π—Ç–∏', 'callback_data' => 'admin_exit_show_records_channel']];
				
				/* $text='–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –¥—Ä—É–≥–æ–π ID —Ç–æ–≤–∞—Ä–∞.';
				$this->api->sendMessage([
							'text' => $text,
							'reply_markup' => json_encode( ['force_reply' => true, 'input_field_placeholder' => '–í–≤–µ–¥–∏—Ç–µ ID —Ç–æ–≤–∞—Ä–∞'] ),
							'disable_notification' => TRUE,
							'disable_web_page_preview' => TRUE,
							'parse_mode'=> "HTML"
							]);
						usleep(100000); */
						
				$text='–¢–æ–≤–∞—Ä–∞ —Å ID <b>'.$record.' –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç</b>.'.PHP_EOL.'–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –¥—Ä—É–≥–æ–π ID —Ç–æ–≤–∞—Ä–∞.'.$this->pre.'';
				$this->api->sendMessage([
					'text' => $text,
					'reply_markup' => json_encode( ['inline_keyboard'=>$merge]),
					'disable_notification' => TRUE,
					'disable_web_page_preview' => TRUE,
					'parse_mode'=> "HTML"
					]);
				usleep(100000);
			}
		}
		else
		{
			$text='–í –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π <b>–Ω–µ—Ç –Ω–∏ –æ–¥–Ω–æ–≥–æ –æ–±—ä—è–≤–ª–µ–Ω–∏—è</b>.'.$this->pre.'';
		
			$this->api->sendMessage([
			'text' => $text,
			'reply_markup' => json_encode( ['inline_keyboard'=>$this->keyboards['inline_admin_main']]),
			'disable_notification' => TRUE,
			'disable_web_page_preview' => TRUE,
			'parse_mode'=> "HTML"
			]);
			usleep(100000);
		}
	}

////	
	public function callback_admin_back_show_records_channel()
	{
		
		$con_sql2=$this->cmd_sql();
		$tabserviceadmin='tabserviceadmin'.$this->api->chatId.'';
				
		if(mysqli_query($con_sql2, 'SELECT 1 FROM '.$tabserviceadmin.' LIMIT 1'))
		{
			mysqli_query($con_sql2, 'TRUNCATE TABLE '.$tabserviceadmin.'');
			usleep(100000);
		}
		
		
		$text='–í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –≤ –ø–æ–¥–º–µ–Ω—é <b>–û–±—ä—è–≤–ª–µ–Ω–∏—è</b> –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –º–µ–Ω—é –ê–¥–º–∏–Ω.'.$this->pre.'';
		$this->callbackAnswer( $text, $this->keyboards['inline_admin_records']);
		usleep(100000);
		
	}
	
	
////	
	public function callback_admin_exit_show_records_channel()
	{
		
		$con_sql2=$this->cmd_sql();
		$tabserviceadmin='tabserviceadmin'.$this->api->chatId.'';
		
		if(isset($this->api->body['callback_query']["id"]))
		{
			$callback_query_id=$this->api->body['callback_query']["id"];
			$this->api->answerCallbackQuery($callback_query_id);
		}
		
		if(mysqli_query($con_sql2, 'SELECT 1 FROM '.$tabserviceadmin.' LIMIT 1'))
		{
			mysqli_query($con_sql2, 'TRUNCATE TABLE '.$tabserviceadmin.'');
			usleep(100000);
		}
		
		
		$text='–í—ã –≤—ã—à–ª–∏ –≤ <b>–ì–ª–∞–≤–Ω–æ–µ –ú–µ–Ω—é</b>.'.$this->pre.'';
		
		$this->api->sendMessage([
		'text' => $text,
		'reply_markup' => json_encode( ['inline_keyboard'=>$this->keyboards['inline_default_admin']]),
		'disable_notification' => TRUE,
		'disable_web_page_preview' => TRUE,
		'parse_mode'=> "HTML"
		]);
		usleep(100000);
		
	}	
	


/////		
	public function callback_admin_show_records_channel_file()
	{
		$con_sql2=$this->cmd_sql();
		
		$query=mysqli_query($con_sql2, 'SHOW TABLES LIKE "tabmain%"');
		$con=mysqli_num_rows($query);
		
		if($con!=0)
		{
			
			require_once(''.dirname(__FILE__).'/pdf/tcpdf.php');
			$pdf = new TCPDF('L', PDF_UNIT, PDF_PAGE_FORMAT, true, 'UTF-8', false);

			$pdf->SetCreator(PDF_CREATOR);
			
			$pdf->SetHeaderData(PDF_HEADER_LOGO, PDF_HEADER_LOGO_WIDTH, PDF_HEADER_TITLE.' 001', PDF_HEADER_STRING, array(0,0,0), array(0,0,0));
			$pdf->setFooterData(array(0,0,0), array(0,0,0));
			
			
			$pdf->setHeaderFont(Array(PDF_FONT_NAME_MAIN, '', PDF_FONT_SIZE_MAIN));
			$pdf->setFooterFont(Array(PDF_FONT_NAME_DATA, '', PDF_FONT_SIZE_DATA));
			$pdf->setPrintHeader(false);
			$pdf->setPrintFooter(false);
			
			$pdf->SetDefaultMonospacedFont(PDF_FONT_MONOSPACED);
			
			$pdf->SetAutoPageBreak(false, PDF_MARGIN_BOTTOM);

			$pdf->setImageScale(PDF_IMAGE_SCALE_RATIO);
			
			if (@file_exists(dirname(__FILE__).'/pdf/lang/eng.php')) {
				require_once(dirname(__FILE__).'/pdf/lang/eng.php');
				$pdf->setLanguageArray($l);
			}
			
			$pdf->SetFont('dejavusans', '', 8, '', true);

			$pdf->AddPage();
			$date=date('d.m.Y');
			$time=date('G:i:s');
			
			$htmladd='
<div style="align: center; font-size: 16px; text-align: center"><b>–¢–æ–≤–∞—Ä—ã –≤ –ø—Ä–æ–¥–∞–∂–µ –Ω–∞ '.$date.' '.$time.'</b></div><br><br>
<table border="1" cellspacing="0">
<tr style="line-height: 50px;">
<td align="center" valign="middle" width="90px"><b>–ö–∞—Ç–µ–≥–æ—Ä–∏—è</b></td>
<td align="center" valign="middle" width="90px"><b>–í–∏–¥</b></td>
<td align="center" valign="middle" width="60px"><b>–ü–æ–ª</b></td>
<td align="center" valign="middle" width="60px"><b>–°–æ—Å—Ç–æ—è–Ω–∏–µ</b></td>
<td align="center" valign="middle" width="100px"><b>–ë—Ä–µ–Ω–¥</b></td>
<td align="center" valign="middle" width="70px"><b>–†–∞–∑–º–µ—Ä</b></td>
<td align="center" valign="middle" width="100px"><b>–¶–µ–Ω–∞</b></td>
<td align="center" valign="middle" width="160px"><b>–û–ø–∏—Å–∞–Ω–∏–µ</b></td>
<td align="center" valign="middle" width="60px"><b>ID —Ç–æ–≤–∞—Ä–∞</b></td>
<td align="center" valign="middle" width="160px"><b>–ü—Ä–æ–¥–∞–≤–µ—Ü</b></td>
</tr>';
			$a=0;
			for($i=0;$i<$con;$i++)
			{
				mysqli_data_seek($query, $i);
				$row[$i]=mysqli_fetch_row($query);
			
				$tabbuy=$row[$i][0];

				if(mysqli_num_rows(mysqli_query($con_sql2, 'SELECT 1 FROM '.$tabbuy.' WHERE messid!="0"'))!=0)
				{
					$a=1;
					$query1=mysqli_query($con_sql2, 'SELECT * FROM '.$tabbuy.' WHERE messid!="0"');
					$con1=mysqli_num_rows($query1);
					
					for($i1=0;$i1<$con1;$i1++)
					{
						mysqli_data_seek($query1, $i1);
						$row1[$i1]=mysqli_fetch_row($query1);
						
						$type=$this->convert_rus($row1[$i1][1]);
						$cat=$this->convert_rus($row1[$i1][2]);
						$gender=$this->convert_rus($row1[$i1][3]);
						$cond=$this->convert_rus($row1[$i1][12]);
						
					
						$htmladd=''.$htmladd.''.PHP_EOL.'<tr>';
					
	
						$put='<td style="text-align: center; valign: middle; font-size: 10px;">'.$type.'</td>';
						$htmladd=''.$htmladd.''.PHP_EOL.''.$put.'';
						
						$put='<td style="text-align: center; valign: middle; font-size: 10px;">'.$cat.'</td>';
						$htmladd=''.$htmladd.''.PHP_EOL.''.$put.'';
						
						$put='<td style="text-align: center; valign: middle; font-size: 10px;">'.$gender.'</td>';
						$htmladd=''.$htmladd.''.PHP_EOL.''.$put.'';
						
						$put='<td style="text-align: center; valign: middle; font-size: 10px;">'.$cond.'</td>';
						$htmladd=''.$htmladd.''.PHP_EOL.''.$put.'';
						
						$put='<td style="text-align: center; valign: middle; font-size: 10px;">'.$row1[$i1][4].'</td>';
						$htmladd=''.$htmladd.''.PHP_EOL.''.$put.'';
						
						$put='<td style="text-align: center; valign: middle; font-size: 10px;">'.$row1[$i1][5].'</td>';
						$htmladd=''.$htmladd.''.PHP_EOL.''.$put.'';
						
						$put='<td style="text-align: center; valign: middle; font-size: 10px;">'.$row1[$i1][6].'</td>';
						$htmladd=''.$htmladd.''.PHP_EOL.''.$put.'';
						
						$put='<td style="text-align: center; valign: middle; font-size: 8px;">'.$row1[$i1][7].'</td>';
						$htmladd=''.$htmladd.''.PHP_EOL.''.$put.'';
						
						$put='<td style="text-align: center; valign: middle; font-size: 10px;">'.$row1[$i1][11].'</td>';
						$htmladd=''.$htmladd.''.PHP_EOL.''.$put.'';
						
						$fioseller=$this->cmd_user_get_fio($row1[$i1][13]);
						$phoneseller=$this->cmd_user_get_phone($row1[$i1][13]);
						
						$put='<td style="text-align: center; valign: middle; font-size: 10px;">'.$fioseller.' ('.$phoneseller.')</td>';
						$htmladd=''.$htmladd.''.PHP_EOL.''.$put.'';
						
						
						
						$htmladd=''.$htmladd.''.PHP_EOL.'</tr>';
					}
				}
				
			}
			
			$htmladd=''.$htmladd.''.PHP_EOL.'</table>';
			$html = <<<EOD
$htmladd
EOD;
			
			if($a==1)
			{
				array_map('unlink', glob(''.dirname(__FILE__).'/pdf/channel*.pdf'));
				usleep(250000);
				
				$time=date('G.i.s');
				
				$pdf->writeHTMLCell(0, 0, '', '', $html, 0, 1, 0, true, '', true);
				$pdf->Output(''.dirname(__FILE__).'/pdf/channel_'.$date.'_'.$time.'.pdf', 'F');
				usleep(250000);
				
				$this->api->sendDocument([
					'document' => 'https://domain.com/pdf/channel_'.$date.'_'.$time.'.pdf',
					'disable_notification' => TRUE,
					'parse_mode'=> "HTML"
					]);
				usleep(250000);
				
				
				$text='–í–∞–º –±—ã–ª –≤—ã—Å–ª–∞–Ω —Ñ–∞–π–ª —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ —Ç–æ–≤–∞—Ä–∞—Ö –≤ –ø—Ä–æ–¥–∞–∂–µ. –í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ –º–µ–Ω—é <b>–û–±—ä—è–≤–ª–µ–Ω–∏—è</b>.'.$this->pre.'';
					
				if(isset($this->api->body['callback_query']["id"]))
				{
					$callback_query_id=$this->api->body['callback_query']["id"];
					$this->api->answerCallbackQuery($callback_query_id);
				}
				
				$this->api->sendMessage([
					'text' => $text,
					'reply_markup' => json_encode( ['inline_keyboard'=>$this->keyboards['inline_admin_records']]),
					'disable_notification' => TRUE,
					'disable_web_page_preview' => TRUE,
					'parse_mode'=> "HTML"
					]);
				usleep(100000);
			}
			else
			{
				$text='–í –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç —É –í–∞—Å <b>–Ω–µ—Ç –Ω–∏ –æ–¥–Ω–æ–≥–æ —Ç–æ–≤–∞—Ä–∞ –≤ –∫–∞–Ω–∞–ª–µ</b>.'.$this->pre.'';
				$this->callbackAnswer( $text, $this->keyboards['inline_admin_records']);
				usleep(100000);
			}
				
		}
		else
		{
							
			$text='–í –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç —É –í–∞—Å <b>–Ω–µ—Ç –Ω–∏ –æ–¥–Ω–æ–≥–æ —Ç–æ–≤–∞—Ä–∞ –≤ –∫–∞–Ω–∞–ª–µ</b>.'.$this->pre.'';
			$this->callbackAnswer( $text, $this->keyboards['inline_admin_records']);
			usleep(100000);
		}
	}



/////	
	public function callback_admin_delete_records_channel()
	{
		
		$con_sql2=$this->cmd_sql();
		$tabserviceadmin='tabserviceadmin'.$this->api->chatId.'';
		
		$query=mysqli_query($con_sql2, 'SHOW TABLES LIKE "tabmain%"');
		$con=mysqli_num_rows($query);
		
		if($con!=0)
		{
		
			$a=0;
			for($i=0;$i<$con;$i++)
			{
				mysqli_data_seek($query, $i);
				$row[$i]=mysqli_fetch_row($query);
				if(mysqli_num_rows(mysqli_query($con_sql2, 'SELECT * FROM '.$row[$i][0].' WHERE messid!="0"'))!=0)
				{
					$a=1;
					break;

				}
			}
			
			if($a==0)
			{

				$text='–í –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç <b>–Ω–µ—Ç —Ç–æ–≤–∞—Ä–æ–≤, —Ä–∞–∑–º–µ—â–µ–Ω–Ω—ã—Ö –≤ –∫–∞–Ω–∞–ª–µ!</b>'.$this->pre.'';
				$this->callbackAnswer( $text, $this->keyboards['inline_admin_records']);
				usleep(100000);
				
			}
			else
			{
				if(mysqli_query($con_sql2, 'SELECT 1 FROM '.$tabserviceadmin.' LIMIT 1')==FALSE)
				{
					mysqli_query($con_sql2, 'CREATE TABLE '.$tabserviceadmin.' (id INT(4) UNSIGNED AUTO_INCREMENT PRIMARY KEY,info VARCHAR(20)) ENGINE = InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;');
					usleep(250000);
					mysqli_query($con_sql2, 'INSERT INTO '.$tabserviceadmin.' (info) VALUES ("delete")');
					usleep(100000);
				}
				else
				{
					if(mysqli_num_rows(mysqli_query($con_sql2, 'SELECT 1 FROM '.$tabserviceadmin.' WHERE id LIKE "%" LIMIT 1'))==0)
					{
						mysqli_query($con_sql2, 'INSERT INTO '.$tabserviceadmin.' (info) VALUES ("delete")');
						usleep(100000);
					}
					else
					{
						mysqli_query($con_sql2, 'TRUNCATE TABLE '.$tabserviceadmin.'');
						usleep(100000);
						mysqli_query($con_sql2, 'INSERT INTO '.$tabserviceadmin.' (info) VALUES ("delete")');
						usleep(100000);
					}
				}
				
				/* if(isset($this->api->body['callback_query']["id"]))
				{
					$callback_query_id=$this->api->body['callback_query']["id"];
					$this->api->answerCallbackQuery($callback_query_id);
				} */
				
				$merge=[];
				$merge[] = [['text' => '‚¨ÖÔ∏è–ù–∞–∑–∞–¥', 'callback_data' => 'admin_back_show_records_channel'], ['text' => '‚§¥Ô∏è–í—ã–π—Ç–∏', 'callback_data' => 'admin_exit_show_records_channel']];
				
				$text='–í–≤–µ–¥–∏—Ç–µ <b>ID —Ç–æ–≤–∞—Ä–∞</b>, —á—Ç–æ–±—ã —É–¥–∞–ª–∏—Ç—å –µ–≥–æ –∏–∑ –∫–∞–Ω–∞–ª–∞.'.$this->pre.'';
				
				$this->callbackAnswer( $text, $merge);
				
				/* $this->api->sendMessage([
					'text' => $text,
					//'reply_markup' => json_encode( ['force_reply' => true, 'input_field_placeholder' => '–í–≤–µ–¥–∏—Ç–µ ID —Ç–æ–≤–∞—Ä–∞'] ),
					'disable_notification' => TRUE,
					'disable_web_page_preview' => TRUE,
					'parse_mode'=> "HTML"
				]); */
			
			}
			
		}
		else
		{
	
			$text='–í –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π <b>–Ω–µ—Ç –Ω–∏ –æ–¥–Ω–æ–≥–æ –æ–±—ä—è–≤–ª–µ–Ω–∏—è</b>.'.$this->pre.'';
			$this->callbackAnswer( $text, $this->keyboards['inline_admin_records']);
			
		}
		
	}
	
/////		
	public function cmd_admin_delete_records_channel()
	{
	
		$con_sql2=$this->cmd_sql();

		$record=$this->api->textmessage;
		
		$query=mysqli_query($con_sql2, 'SHOW TABLES LIKE "tabmain%"');
		$con=mysqli_num_rows($query);
		
		if($con!=0)
		{
		
			$a=0;
			$b=0;
			for($i=0;$i<$con;$i++)
			{
				mysqli_data_seek($query, $i);
				$row[$i]=mysqli_fetch_row($query);
				
				if(mysqli_num_rows(mysqli_query($con_sql2, 'SELECT 1 FROM '.$row[$i][0].' WHERE messid!="0"'))!=0)
				{
					$b=1;
					if(mysqli_num_rows(mysqli_query($con_sql2, 'SELECT 1 FROM '.$row[$i][0].' WHERE messid="'.$record.'"'))!=0)
					{
						$a=1;
						
						$query1=mysqli_query($con_sql2, 'SELECT * FROM '.$row[$i][0].' WHERE messid="'.$record.'"');
						usleep(100000);
						$con1=mysqli_num_rows($query1);
							
						for($i1=0;$i1<$con1;$i1++)
						{
							mysqli_data_seek($query1, $i1);
							$row1[$i1]=mysqli_fetch_row($query1);
						}
						
						$photo=$row1[0][8];
						$messageid=$row1[0][11];
						$timeold=$row1[0][10];
						$timediff=time()-$timeold;
						

						if(preg_match('/;/', $photo)==FALSE)
						{
							if($timediff>172000)
							{
								$text='<b><i>–¢–æ–≤–∞—Ä —É–¥–∞–ª–µ–Ω</i></b>'.PHP_EOL.'‚õîÔ∏è‚õîÔ∏è‚õîÔ∏è‚õîÔ∏è‚õîÔ∏è‚õîÔ∏è‚õîÔ∏è‚õîÔ∏è‚õîÔ∏è‚õîÔ∏è‚õîÔ∏è‚õîÔ∏è‚õîÔ∏è‚õîÔ∏è‚õîÔ∏è‚õîÔ∏è‚õîÔ∏è‚õîÔ∏è‚õîÔ∏è‚õîÔ∏è';
								$photodelete='https://domain.com/photodelete.png';
								
								$this->api->editMessageMedia([
								'chat_id' => $this->mainchannel,
								'message_id' => $messageid,
								'media' => json_encode( ['type' => 'photo', 'media' => $photodelete]),
								]);
							
								$this->api->editMessageCaption([
								'chat_id' => $this->mainchannel,
								'message_id' => $messageid,
								'caption' => $text,
								'parse_mode' => "HTML",
								]);
								
								
								$photo=str_replace('https://domain.com', ''.dirname(__FILE__).'', $photo);
								unlink($photo);
								usleep(100000);
							}
							else
							{
								$this->api->deleteMessage([
								'chat_id' => $this->mainchannel,
								'message_id' => $messageid
								]);
								
								$photo=str_replace('https://domain.com', ''.dirname(__FILE__).'', $photo);
								unlink($photo);
								usleep(100000);
							}
						}
						else
						{
							$tabservicerecords='tabservicerecords';
							$text='<b><i>–¢–æ–≤–∞—Ä —É–¥–∞–ª–µ–Ω</i></b>'.PHP_EOL.'‚õîÔ∏è‚õîÔ∏è‚õîÔ∏è‚õîÔ∏è‚õîÔ∏è‚õîÔ∏è‚õîÔ∏è‚õîÔ∏è‚õîÔ∏è‚õîÔ∏è‚õîÔ∏è‚õîÔ∏è‚õîÔ∏è‚õîÔ∏è‚õîÔ∏è‚õîÔ∏è‚õîÔ∏è‚õîÔ∏è‚õîÔ∏è‚õîÔ∏è';
							$photodelete='https://domain.com/photodelete.png';
							
							if($timediff>172000)
							{

								$this->api->editMessageCaption([
								'chat_id' => $this->mainchannel,
								'message_id' => $messageid,
								'caption' => $text,
								'parse_mode' => "HTML",
								]);
								
								
								$query2=mysqli_query($con_sql2, 'SELECT * FROM '.$tabservicerecords.' WHERE record="'.$messageid.'"');
								$con2=mysqli_num_rows($query2);
			
								for($i2=0;$i2<$con2;$i2++)
								{
									mysqli_data_seek($query2, $i2);
									$row2[$i2]=mysqli_fetch_row($query2);
								}
								
								$messageids=explode(';', $row2[0][2]);
								$count1=count($messageids);
								
								for($e=0;$e<$count1;$e++)
								{
									if($e==0)
									{
										$this->api->editMessageMedia([
										'chat_id' => $this->mainchannel,
										'message_id' => $messageids[$e],
										'media' => json_encode( ['type' => 'photo', 'media' => $photodelete, 'caption' => $text, 'parse_mode' => "HTML" ]),
										]);
									}
									else
									{
										$this->api->editMessageMedia([
										'chat_id' => $this->mainchannel,
										'message_id' => $messageids[$e],
										'media' => json_encode( ['type' => 'photo', 'media' => $photodelete]),
										]);
									}
								}
								
								$photos=explode(';', $photo);
								$cnt=count($photos);
								
								for($y=0;$y<$cnt;$y++)
								{
									$photos[$y]=str_replace('https://domain.com', ''.dirname(__FILE__).'', $photos[$y]);
									unlink($photos[$y]);
									usleep(100000);
								}
							}
							else
							{
								
								$query2=mysqli_query($con_sql2, 'SELECT * FROM '.$tabservicerecords.' WHERE record="'.$messageid.'"');
								$con2=mysqli_num_rows($query2);
			
								for($i2=0;$i2<$con2;$i2++)
								{
									mysqli_data_seek($query2, $i2);
									$row2[$i2]=mysqli_fetch_row($query2);
								}
								
								$messageids=explode(';', $row2[0][2]);
								$count1=count($messageids);
								
								for($e=0;$e<$count1;$e++)
								{
									$this->api->deleteMessage([
									'chat_id' => $this->mainchannel,
									'message_id' => $messageids[$e]
									]);
									usleep(100000);
								}
								
								$photos=explode(';', $photo);
								$cnt=count($photos);
								
								for($y=0;$y<$cnt;$y++)
								{
									$photos[$y]=str_replace('https://domain.com', ''.dirname(__FILE__).'', $photos[$y]);
									unlink($photos[$y]);
									usleep(100000);
								}
								
							}
							
							mysqli_query($con_sql2, 'DELETE FROM '.$tabservicerecords.' WHERE record="'.$messageid.'"');
							
						}
						
						
						mysqli_query($con_sql2, 'DELETE FROM '.$row[$i][0].' WHERE messid="'.$record.'"');
						
						
						$query4=mysqli_query($con_sql2, 'SHOW TABLES LIKE "tabservicebuy%"');
						$con4=mysqli_num_rows($query4);
						
						if($con4!=0)
						{
						
							for($i4=0;$i4<$con4;$i4++)
							{
								mysqli_data_seek($query4, $i4);
								$row4[$i4]=mysqli_fetch_row($query4);
								
								if(mysqli_num_rows(mysqli_query($con_sql2, 'SELECT 1 FROM '.$row4[$i4][0].' WHERE messid="'.$record.'"'))!=0)
								{
									
										mysqli_query($con_sql2, 'DELETE FROM '.$row4[$i4][0].' WHERE messid="'.$record.'"');
										usleep(100000);
										
										$chatidbuyers=str_replace('tabservicebuy', '', $row4[$i4][0]);
										$chatidbuyers=$this->clean($chatidbuyers);
										
										$text3='–í–∞—à–∞ –∑–∞—è–≤–∫–∞ –Ω–∞ –ø–æ–∫—É–ø–∫—É —Ç–æ–≤–∞—Ä–∞ —Å ID <b>‚Ññ'.$record.'</b> –±—ã–ª–∞ <b>–æ—Ç–º–µ–Ω–µ–Ω–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º</b>.'.PHP_EOL.''.PHP_EOL.'–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –¥–∞–Ω–Ω–æ–≥–æ —Ç–æ–≤–∞—Ä–∞ –Ω–µ—Ç –≤ –Ω–∞–ª–∏—á–∏–∏. –ò–∑–≤–∏–Ω–∏—Ç–µ –∑–∞ –Ω–µ—É–¥–æ–±—Å—Ç–≤–∞.'.$this->pre.'';
										
										$this->api->sendMessage([
										'chat_id' => $chatidbuyers,
										'text' => $text3,
										'reply_markup' => json_encode( ['inline_keyboard'=>$this->keyboards['inline_buy_default']]),
										'parse_mode' => "HTML",
										]);
										usleep(100000);
										
								}
								
							}
						}
						
						
						
						$userchatid=str_replace('tabmain', '', $row[$i][0]);
						$fio=$this->cmd_user_get_fio($userchatid);
						$phone=$this->cmd_user_get_phone($userchatid);
						
						$text2='–í–∞—à —Ç–æ–≤–∞—Ä —Å ID <b>‚Ññ'.$record.'</b> –±—ã–ª <b>—É–¥–∞–ª–µ–Ω –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º –∏–∑ –∫–∞–Ω–∞–ª–∞</b>. –ü—Ä–∏–Ω–æ—Å–∏–º –∏–∑–≤–∏–Ω–µ–Ω–∏—è –∑–∞ –Ω–µ—É–¥–æ–±—Å—Ç–≤–∞.'.$this->pre.'';

						$this->api->sendMessage([
							'chat_id' => $userchatid,
							'text' => $text2,
							'reply_markup' => json_encode( ['inline_keyboard'=>$this->keyboards['inline_default']]),
							'parse_mode' => "HTML",
							]);
						usleep(100000);
						
						$text='–í—ã–±—Ä–∞–Ω–Ω—ã–π —Ç–æ–≤–∞—Ä —Å <b>ID ‚Ññ'.$record.'</b> –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è üë§<b>'.$fio.' ('.$phone.').</b> —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω –∏–∑ –∫–∞–Ω–∞–ª–∞.'.PHP_EOL.''.PHP_EOL.'–í—ã –º–æ–∂–µ—Ç–µ –≤–≤–µ—Å—Ç–∏ –Ω–æ–≤—ã–π ID —Ç–æ–≤–∞—Ä–∞, —á—Ç–æ–±—ã —É–¥–∞–ª–∏—Ç—å –µ–≥–æ –∏–∑ –∫–∞–Ω–∞–ª–∞.'.$this->pre.'';
						$merge=[];
						$merge[] = [['text' => '‚¨ÖÔ∏è–ù–∞–∑–∞–¥', 'callback_data' => 'admin_back_show_records_channel'], ['text' => '‚§¥Ô∏è–í—ã–π—Ç–∏', 'callback_data' => 'admin_exit_show_records_channel']];
						
						
						$this->api->sendMessage([
							'text' => $text,
							'reply_markup' => json_encode( ['inline_keyboard'=>$merge]),
							'disable_notification' => TRUE,
							'disable_web_page_preview' => TRUE,
							'parse_mode'=> "HTML"
							]);
						usleep(100000);
						
						
						/* $text='–í–≤–µ–¥–∏—Ç–µ ID —Ç–æ–≤–∞—Ä–∞!';
						
						$this->api->sendMessage([
							'text' => $text,
							'reply_markup' => json_encode( ['force_reply' => true, 'input_field_placeholder' => '–í–≤–µ–¥–∏—Ç–µ ID —Ç–æ–≤–∞—Ä–∞'] ),
							'disable_notification' => TRUE,
							'disable_web_page_preview' => TRUE,
							'parse_mode'=> "HTML"
							]);
						usleep(100000); */
										
						break;
						
					}
				}
			}
			
			if($b==0)
			{
				$text='–í –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç <b>–Ω–µ—Ç —Ç–æ–≤–∞—Ä–æ–≤, —Ä–∞–∑–º–µ—â–µ–Ω–Ω—ã—Ö –≤ –∫–∞–Ω–∞–ª–µ!</b>'.$this->pre.'';
		
				$this->api->sendMessage([
				'text' => $text,
				'reply_markup' => json_encode( ['inline_keyboard'=>$this->keyboards['inline_admin_records']]),
				'disable_notification' => TRUE,
				'disable_web_page_preview' => TRUE,
				'parse_mode'=> "HTML"
				]);
				usleep(100000);
			}
			elseif($a==0)
			{
				$merge=[];
				$merge[] = [['text' => '‚¨ÖÔ∏è–ù–∞–∑–∞–¥', 'callback_data' => 'admin_back_show_records_channel'], ['text' => '‚§¥Ô∏è–í—ã–π—Ç–∏', 'callback_data' => 'admin_exit_show_records_channel']];
				
				/* $text='–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –¥—Ä—É–≥–æ–π ID —Ç–æ–≤–∞—Ä–∞.';
				$this->api->sendMessage([
							'text' => $text,
							'reply_markup' => json_encode( ['force_reply' => true, 'input_field_placeholder' => '–í–≤–µ–¥–∏—Ç–µ ID —Ç–æ–≤–∞—Ä–∞'] ),
							'disable_notification' => TRUE,
							'disable_web_page_preview' => TRUE,
							'parse_mode'=> "HTML"
							]);
						usleep(100000); */
						
				$text='–¢–æ–≤–∞—Ä–∞ —Å ID <b>'.$record.' –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç</b>.'.PHP_EOL.'–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –¥—Ä—É–≥–æ–π ID —Ç–æ–≤–∞—Ä–∞.'.$this->pre.'';
				$this->api->sendMessage([
					'text' => $text,
					'reply_markup' => json_encode( ['inline_keyboard'=>$merge]),
					'disable_notification' => TRUE,
					'disable_web_page_preview' => TRUE,
					'parse_mode'=> "HTML"
					]);
				usleep(100000);
			}
		}
		else
		{
			$text='–í –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π <b>–Ω–µ—Ç –Ω–∏ –æ–¥–Ω–æ–≥–æ –æ–±—ä—è–≤–ª–µ–Ω–∏—è</b>.'.$this->pre.'';
		
			$this->api->sendMessage([
			'text' => $text,
			'reply_markup' => json_encode( ['inline_keyboard'=>$this->keyboards['inline_admin_main']]),
			'disable_notification' => TRUE,
			'disable_web_page_preview' => TRUE,
			'parse_mode'=> "HTML"
			]);
			usleep(100000);
		}
	}	
	


	
/////	
	public function callback_admin_sendsold_records_channel()
	{
		
		$con_sql2=$this->cmd_sql();
		$tabserviceadmin='tabserviceadmin'.$this->api->chatId.'';
		
		$query=mysqli_query($con_sql2, 'SHOW TABLES LIKE "tabservicebuy%"');
		$con=mysqli_num_rows($query);
		
		if($con!=0)
		{
			
			$a=0;
			for($i=0;$i<$con;$i++)
			{
				mysqli_data_seek($query, $i);
				$row[$i]=mysqli_fetch_row($query);
				if(mysqli_num_rows(mysqli_query($con_sql2, 'SELECT * FROM '.$row[$i][0].' WHERE messid!="0"'))!=0)
				{
					$a=1;
					break;

				}
			}
			
			if($a==0)
			{

				$text='–í –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç —É –í–∞—Å <b>–Ω–µ—Ç –∑–∞–∫–∞–∑–æ–≤</b>.'.$this->pre.'';
				$this->callbackAnswer( $text, $this->keyboards['inline_admin_records']);
				usleep(100000);
				
			}
			else
			{
				if(mysqli_query($con_sql2, 'SELECT 1 FROM '.$tabserviceadmin.' LIMIT 1')==FALSE)
				{
					mysqli_query($con_sql2, 'CREATE TABLE '.$tabserviceadmin.' (id INT(4) UNSIGNED AUTO_INCREMENT PRIMARY KEY,info VARCHAR(20)) ENGINE = InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;');
					usleep(250000);
					mysqli_query($con_sql2, 'INSERT INTO '.$tabserviceadmin.' (info) VALUES ("sendsold")');
					usleep(100000);
				}
				else
				{
					if(mysqli_num_rows(mysqli_query($con_sql2, 'SELECT 1 FROM '.$tabserviceadmin.' WHERE id LIKE "%" LIMIT 1'))==0)
					{
						mysqli_query($con_sql2, 'INSERT INTO '.$tabserviceadmin.' (info) VALUES ("sendsold")');
						usleep(100000);
					}
					else
					{
						mysqli_query($con_sql2, 'TRUNCATE TABLE '.$tabserviceadmin.'');
						usleep(100000);
						mysqli_query($con_sql2, 'INSERT INTO '.$tabserviceadmin.' (info) VALUES ("sendsold")');
						usleep(100000);
					}
				}
				

				if(isset($this->api->body['callback_query']["id"]))
				{
					$callback_query_id=$this->api->body['callback_query']["id"];
					$this->api->answerCallbackQuery($callback_query_id);
				}
				
				
		
				$merge=[];
				$merge[] = [['text' => '‚¨ÖÔ∏è–ù–∞–∑–∞–¥', 'callback_data' => 'admin_back_show_records_channel'], ['text' => '‚§¥Ô∏è–í—ã–π—Ç–∏', 'callback_data' => 'admin_exit_show_records_channel']];
				
				/* $text='–í–≤–µ–¥–∏—Ç–µ ID —Ç–æ–≤–∞—Ä–∞.';
				$this->api->sendMessage([
							'text' => $text,
							'reply_markup' => json_encode( ['force_reply' => true, 'input_field_placeholder' => '–í–≤–µ–¥–∏—Ç–µ ID —Ç–æ–≤–∞—Ä–∞'] ),
							'disable_notification' => TRUE,
							'disable_web_page_preview' => TRUE,
							'parse_mode'=> "HTML"
							]);
						usleep(100000); */
						
				$text='–í–≤–µ–¥–∏—Ç–µ <b>ID —Ç–æ–≤–∞—Ä–∞</b>, —á—Ç–æ–±—ã –æ—Ç–º–µ—Ç–∏—Ç—å –µ–≥–æ –∫–∞–∫ –ø—Ä–æ–¥–∞–Ω–Ω—ã–π.'.$this->pre.'';
				$this->api->sendMessage([
					'text' => $text,
					'reply_markup' => json_encode( ['inline_keyboard'=>$merge]),
					'disable_notification' => TRUE,
					'disable_web_page_preview' => TRUE,
					'parse_mode'=> "HTML"
					]);
				usleep(100000);
			}
			
		}
		else
		{
	
			$text='–í –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç —É –í–∞—Å <b>–Ω–µ—Ç –∑–∞–∫–∞–∑–æ–≤</b>.'.$this->pre.'';
			$this->callbackAnswer( $text, $this->keyboards['inline_admin_records']);
			usleep(100000);
		}
			
	}

		
/////		
	public function cmd_admin_sendsold_records_channel()
	{
	
		$con_sql2=$this->cmd_sql();

		$record=$this->api->textmessage;
		
		
		
		$query=mysqli_query($con_sql2, 'SHOW TABLES LIKE "tabservicebuy%"');
		$con=mysqli_num_rows($query);
		
		if($con!=0)
		{
		
			$a=0;
			$b=0;
			$table=[];
			for($i=0;$i<$con;$i++)
			{
				mysqli_data_seek($query, $i);
				$row[$i]=mysqli_fetch_row($query);
				
				if(mysqli_num_rows(mysqli_query($con_sql2, 'SELECT * FROM '.$row[$i][0].' WHERE messid!="0"'))!=0)
				{
					$a=1;
					if(mysqli_num_rows(mysqli_query($con_sql2, 'SELECT * FROM '.$row[$i][0].' WHERE messid="'.$record.'"'))!=0)
					{
						$b=$b+1;
						$table[]=$row[$i][0];
					}
				}
			}
			
			if($a==0)
			{
				$text='–í –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç —É –í–∞—Å <b>–Ω–µ—Ç –∑–∞–∫–∞–∑–æ–≤</b>.'.$this->pre.'';
		
				$this->api->sendMessage([
				'text' => $text,
				'reply_markup' => json_encode( ['inline_keyboard'=>$this->keyboards['inline_admin_records']]),
				'disable_notification' => TRUE,
				'disable_web_page_preview' => TRUE,
				'parse_mode'=> "HTML"
				]);
				usleep(100000);
			}
			elseif($b==0)
			{
				$merge=[];
				$merge[] = [['text' => '‚¨ÖÔ∏è–ù–∞–∑–∞–¥', 'callback_data' => 'admin_back_show_records_channel'], ['text' => '‚§¥Ô∏è–í—ã–π—Ç–∏', 'callback_data' => 'admin_exit_show_records_channel']];
				
				/* $text='–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –¥—Ä—É–≥–æ–π ID —Ç–æ–≤–∞—Ä–∞.';
				$this->api->sendMessage([
							'text' => $text,
							'reply_markup' => json_encode( ['force_reply' => true, 'input_field_placeholder' => '–í–≤–µ–¥–∏—Ç–µ ID —Ç–æ–≤–∞—Ä–∞'] ),
							'disable_notification' => TRUE,
							'disable_web_page_preview' => TRUE,
							'parse_mode'=> "HTML"
							]);
						usleep(100000); */
						
				$text='–ó–∞–∫–∞–∑–æ–≤ —Å ID —Ç–æ–≤–∞—Ä–∞ <b>‚Ññ'.$record.' –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç</b>.'.PHP_EOL.'–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –¥—Ä—É–≥–æ–π ID —Ç–æ–≤–∞—Ä–∞.'.$this->pre.'';
				$this->api->sendMessage([
					'text' => $text,
					'reply_markup' => json_encode( ['inline_keyboard'=>$merge]),
					'disable_notification' => TRUE,
					'disable_web_page_preview' => TRUE,
					'parse_mode'=> "HTML"
					]);
				usleep(100000);
			}
			elseif($b==1)
			{
				$tabbuy=$table[0];
				$query1=mysqli_query($con_sql2, 'SELECT * FROM '.$tabbuy.' WHERE messid="'.$record.'"');
				usleep(100000);
				$con1=mysqli_num_rows($query1);
				
				
				for($i1=0;$i1<$con1;$i1++)
				{
					mysqli_data_seek($query1, $i1);
					$row1[$i1]=mysqli_fetch_row($query1);
				}
				
				$photo=$row1[0][8];
				$messageid=$row1[0][11];
				$timeold=$row1[0][10];
				$timediff=time()-$timeold;
				
				
				if(preg_match('/;/', $photo)==FALSE)
				{
					if($timediff>172000)
					{
						$text='<b><i>–¢–æ–≤–∞—Ä –ø—Ä–æ–¥–∞–Ω</i></b>'.PHP_EOL.'‚ö†Ô∏è‚ö†Ô∏è‚ö†Ô∏è‚ö†Ô∏è‚ö†Ô∏è‚ö†Ô∏è‚ö†Ô∏è‚ö†Ô∏è‚ö†Ô∏è‚ö†Ô∏è‚ö†Ô∏è‚ö†Ô∏è‚ö†Ô∏è‚ö†Ô∏è‚ö†Ô∏è‚ö†Ô∏è‚ö†Ô∏è‚ö†Ô∏è‚ö†Ô∏è‚ö†Ô∏è';
						$photosold='https://domain.com/photosold.png';
						
						$this->api->editMessageMedia([
						'chat_id' => $this->mainchannel,
						'message_id' => $messageid,
						'media' => json_encode( ['type' => 'photo', 'media' => $photosold]),
						]);
					
						$this->api->editMessageCaption([
						'chat_id' => $this->mainchannel,
						'message_id' => $messageid,
						'caption' => $text,
						'parse_mode' => "HTML",
						]);
						
						$photo=str_replace('https://domain.com', ''.dirname(__FILE__).'', $photo);
						unlink($photo);
						usleep(100000);
					}
					else
					{
						$this->api->deleteMessage([
						'chat_id' => $this->mainchannel,
						'message_id' => $messageid
						]);
						
						$photo=str_replace('https://domain.com', ''.dirname(__FILE__).'', $photo);
						unlink($photo);
						usleep(100000);
					}
				}
				else
				{
					
					$tabservicerecords='tabservicerecords';
					$text='<b><i>–¢–æ–≤–∞—Ä –ø—Ä–æ–¥–∞–Ω</i></b>'.PHP_EOL.'‚ö†Ô∏è‚ö†Ô∏è‚ö†Ô∏è‚ö†Ô∏è‚ö†Ô∏è‚ö†Ô∏è‚ö†Ô∏è‚ö†Ô∏è‚ö†Ô∏è‚ö†Ô∏è‚ö†Ô∏è‚ö†Ô∏è‚ö†Ô∏è‚ö†Ô∏è‚ö†Ô∏è‚ö†Ô∏è‚ö†Ô∏è‚ö†Ô∏è‚ö†Ô∏è‚ö†Ô∏è';
					$photosold='https://domain.com/photosold.png';
					
					if($timediff>172000)
					{
					
						$this->api->editMessageCaption([
						'chat_id' => $this->mainchannel,
						'message_id' => $messageid,
						'caption' => $text,
						'parse_mode' => "HTML",
						]);
						
						
						$query2=mysqli_query($con_sql2, 'SELECT * FROM '.$tabservicerecords.' WHERE record="'.$messageid.'"');
						$con2=mysqli_num_rows($query2);
					
						for($i2=0;$i2<$con2;$i2++)
						{
							mysqli_data_seek($query2, $i2);
							$row2[$i2]=mysqli_fetch_row($query2);
						}
						
						$messageids=explode(';', $row2[0][2]);
						$count1=count($messageids);
						
						for($e=0;$e<$count1;$e++)
						{
							
							if($e==0)
							{
								$this->api->editMessageMedia([
								'chat_id' => $this->mainchannel,
								'message_id' => $messageids[$e],
								'media' => json_encode( ['type' => 'photo', 'media' => $photosold, 'caption' => $text, 'parse_mode' => "HTML" ]),
								]);
							}
							else
							{
								$this->api->editMessageMedia([
								'chat_id' => $this->mainchannel,
								'message_id' => $messageids[$e],
								'media' => json_encode( ['type' => 'photo', 'media' => $photosold]),
								]);
							}
					
						}
						
						$photos=explode(';', $photo);
						$cnt=count($photos);
						
						for($y=0;$y<$cnt;$y++)
						{
							$photos[$y]=str_replace('https://domain.com', ''.dirname(__FILE__).'', $photos[$y]);
							unlink($photos[$y]);
							usleep(100000);
						}
					}
					else
					{
						
						$query2=mysqli_query($con_sql2, 'SELECT * FROM '.$tabservicerecords.' WHERE record="'.$messageid.'"');
						$con2=mysqli_num_rows($query2);
					
						for($i2=0;$i2<$con2;$i2++)
						{
							mysqli_data_seek($query2, $i2);
							$row2[$i2]=mysqli_fetch_row($query2);
						}
						
						$messageids=explode(';', $row2[0][2]);
						$count1=count($messageids);
						
						for($e=0;$e<$count1;$e++)
						{
							$this->api->deleteMessage([
							'chat_id' => $this->mainchannel,
							'message_id' => $messageids[$e]
							]);
							usleep(100000);
						}
						
						$photos=explode(';', $photo);
						$cnt=count($photos);
						
						for($y=0;$y<$cnt;$y++)
						{
							$photos[$y]=str_replace('https://domain.com', ''.dirname(__FILE__).'', $photos[$y]);
							unlink($photos[$y]);
							usleep(100000);
						}
						
					}
					
					mysqli_query($con_sql2, 'DELETE FROM '.$tabservicerecords.' WHERE record="'.$messageid.'"');
					
				}
				

				$chatidseller=$row1[0][13];
				$tabsold='tabservicesold'.$chatidseller.'';
				
				if(mysqli_query($con_sql2, 'SELECT 1 FROM '.$tabsold.' LIMIT 1')==FALSE)
				{
					mysqli_query($con_sql2, 'CREATE TABLE '.$tabsold.' LIKE '.$tabbuy.'');
					usleep(250000);
				}
	
				mysqli_query($con_sql2, 'INSERT INTO '.$tabsold.' (type, cat, gender, brand, size, price, alt, pic, date, time, messid, cond, chatid, buyer, seller) SELECT type, cat, gender, brand, size, price, alt, pic, date, time, messid, cond, chatid, buyer, seller FROM '.$tabbuy.' WHERE messid="'.$record.'"');
				
				$query2=mysqli_query($con_sql2, 'SELECT * FROM '.$tabsold.' WHERE messid="'.$record.'"');
				$con2=mysqli_num_rows($query2);
				usleep(100000);
				
				for($i2=0;$i2<$con2;$i2++)
				{
					mysqli_data_seek($query2, $i2);
					$row2[$i2]=mysqli_fetch_row($query2);
				}
				
				
				//$chatidbuyer=str_replace('tabservicebuy', '', $row[$i][0]);
				$chatidbuyer=$row2[0][14];
				$tabseller='tabmain'.$chatidseller.'';

				$time=time();
				$date=date('d.m.Y');
				
				$query2='UPDATE '.$tabsold.' SET date = REPLACE(date, "'.$row2[0][9].'", "'.$date.'") WHERE messid="'.$record.'"'; 
				$result2=mysqli_query($con_sql2, $query2);
				usleep(100000);

				$query2='UPDATE '.$tabsold.' SET time = REPLACE(time, "'.$row2[0][10].'", "'.$time.'") WHERE messid="'.$record.'"'; 
				$result2=mysqli_query($con_sql2, $query2);
				usleep(100000);
				
				$query2=mysqli_query($con_sql2, 'DELETE FROM '.$tabbuy.' WHERE messid="'.$record.'"');
				usleep(100000);
				
				$query2=mysqli_query($con_sql2, 'DELETE FROM '.$tabseller.' WHERE messid="'.$record.'"');
				usleep(100000);
				
				$query4=mysqli_query($con_sql2, 'SHOW TABLES LIKE "tabservicebuy%"');
				$con4=mysqli_num_rows($query4);
				
				if($con4!=0)
				{
				
					for($i4=0;$i4<$con4;$i4++)
					{
						mysqli_data_seek($query4, $i4);
						$row4[$i4]=mysqli_fetch_row($query4);
						
						if(mysqli_num_rows(mysqli_query($con_sql2, 'SELECT * FROM '.$row4[$i4][0].' WHERE messid="'.$record.'"'))!=0)
						{
							if($row4[$i4][0]!==''.$tabbuy.'')
							{
								$query2=mysqli_query($con_sql2, 'DELETE FROM '.$row4[$i4][0].' WHERE messid="'.$record.'"');
								usleep(100000);
								
								$chatidbuyers=str_replace('tabservicebuy', '', $row4[$i4][0]);
								$chatidbuyers=$this->clean($chatidbuyers);
								
								$text3='–í–∞—à–∞ –∑–∞—è–≤–∫–∞ –Ω–∞ –ø–æ–∫—É–ø–∫—É —Ç–æ–≤–∞—Ä–∞ —Å ID <b>‚Ññ'.$record.'</b> –±—ã–ª–∞ <b>–æ—Ç–º–µ–Ω–µ–Ω–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º</b>.'.PHP_EOL.''.PHP_EOL.'–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –¥–∞–Ω–Ω—ã–π —Ç–æ–≤–∞—Ä –±—ã–ª –∫—É–ø–ª–µ–Ω. –ò–∑–≤–∏–Ω–∏—Ç–µ –∑–∞ –Ω–µ—É–¥–æ–±—Å—Ç–≤–∞.'.$this->pre.'';
								
								$this->api->sendMessage([
								'chat_id' => $chatidbuyers,
								'text' => $text3,
								'reply_markup' => json_encode( ['inline_keyboard'=>$this->keyboards['inline_buy_default']]),
								'parse_mode' => "HTML",
								]);
								usleep(100000);
							}	
						}
						
					}
				}
				
				
				$text='<b>–í—ã –ü–û–î–¢–í–ï–†–î–ò–õ–ò –ø–æ–∫—É–ø–∫—É:</b>'.PHP_EOL.''.PHP_EOL.'–ü–æ–∫—É–ø–∞—Ç–µ–ª—å üë§<b>'.$row2[0][14].'</b>, –ü—Ä–æ–¥–∞–≤–µ—Ü üë§<b>'.$row2[0][15].'</b>, ID —Ç–æ–≤–∞—Ä–∞ <b>‚Ññ'.$record.'</b>.'.PHP_EOL.''.PHP_EOL.'–í—ã –º–æ–∂–µ—Ç–µ –≤–≤–µ—Å—Ç–∏ –Ω–æ–≤—ã–π <b>ID —Ç–æ–≤–∞—Ä–∞</b>, —á—Ç–æ–±—ã –æ—Ç–º–µ—Ç–∏—Ç—å –µ–≥–æ –∫–∞–∫ –ø—Ä–æ–¥–∞–Ω–Ω—ã–π.'.$this->pre.'';
				
				$merge=[];
				$merge[] = [['text' => '‚¨ÖÔ∏è–ù–∞–∑–∞–¥', 'callback_data' => 'admin_back_show_records_channel'], ['text' => '‚§¥Ô∏è–í—ã–π—Ç–∏', 'callback_data' => 'admin_exit_show_records_channel']];
				
				
				$this->api->sendMessage([
					'text' => $text,
					'reply_markup' => json_encode( ['inline_keyboard'=>$merge]),
					'disable_notification' => TRUE,
					'disable_web_page_preview' => TRUE,
					'parse_mode'=> "HTML"
					]);
				usleep(100000);
				
				
				/* $text='–í–≤–µ–¥–∏—Ç–µ ID —Ç–æ–≤–∞—Ä–∞!';
				
				$this->api->sendMessage([
					'text' => $text,
					'reply_markup' => json_encode( ['force_reply' => true, 'input_field_placeholder' => '–í–≤–µ–¥–∏—Ç–µ ID —Ç–æ–≤–∞—Ä–∞'] ),
					'disable_notification' => TRUE,
					'disable_web_page_preview' => TRUE,
					'parse_mode'=> "HTML"
					]);
				usleep(100000); */
				
				
				$text2='–í–∞—à–∞ –∑–∞—è–≤–∫–∞ –Ω–∞ –ø–æ–∫—É–ø–∫—É —Ç–æ–≤–∞—Ä–∞ —Å ID <b>‚Ññ'.$record.'</b> –±—ã–ª–∞ <b>—Å–æ–≥–ª–∞—Å–æ–≤–∞–Ω–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º</b>.'.PHP_EOL.'–í –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è —Å –≤–∞–º–∏ <b>—Å–≤—è–∂–µ—Ç—Å—è –ü—Ä–æ–¥–∞–≤–µ—Ü.</b>'.$this->pre.'';
			
				$this->api->sendMessage([
				
					'chat_id' => $chatidbuyer,
					'text' => $text2,
					'reply_markup' => json_encode( ['inline_keyboard'=>$this->keyboards['inline_buy_default']]),
					'parse_mode' => "HTML",
					]);
				usleep(100000);
			}
			elseif($b>1)
			{
				$merge=$this->cmd_admin_sendsold_records_channel_keyboard($record, $table);
				usleep(100000);
				
				if (array_filter($merge) !== [])
				{
					$merge[] = [['text' => '‚¨ÖÔ∏è–ù–∞–∑–∞–¥', 'callback_data' => 'back_admin_sendsold_records_channel'], ['text' => '‚§¥Ô∏è–í—ã–π—Ç–∏', 'callback_data' => 'exit_admin_sendsold_records_channel']];
					
					$text='–í—ã–±—Ä–∞–Ω–Ω—ã–π —Ç–æ–≤–∞—Ä —Å <b>ID ‚Ññ'.$record.'</b> —Ö–æ—Ç—è—Ç –∫—É–ø–∏—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π. –í—ã–±–µ—Ä–∏—Ç–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, —á—Ç–æ–±—ã <b>–ø—Ä–æ–¥–∞—Ç—å</b> –µ–º—É –¥–∞–Ω–Ω—ã–π —Ç–æ–≤–∞—Ä.'.$this->pre.'';
					
					//$this->callbackAnswer( $text, $merge);
					$this->api->sendMessage([
					'text' => $text,
					'reply_markup' => json_encode( ['inline_keyboard'=>$merge]),
					'disable_notification' => TRUE,
					'disable_web_page_preview' => TRUE,
					'parse_mode'=> "HTML"
					]);
					usleep(100000);
				}
				/* else
				{
					$text='–í –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π <b>–Ω–µ—Ç —Ç–æ–≤–∞—Ä–æ–≤,</b> —Ä–∞–∑–º–µ—â–µ–Ω–Ω—ã—Ö –≤ –∫–∞–Ω–∞–ª–µ.'.PHP_EOL.' –í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ –º–µ–Ω—é —É—Ç–≤–µ—Ä–∂–¥–µ–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π.';
					
					$this->callbackAnswer( $text, $this->keyboards['inline_admin_approvedusers']);
				} */
			}
		}
		else
		{
			$text='–í –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π <b>–Ω–µ—Ç –Ω–∏ –æ–¥–Ω–æ–≥–æ –æ–±—ä—è–≤–ª–µ–Ω–∏—è</b>.'.$this->pre.'';
		
			$this->api->sendMessage([
			'text' => $text,
			'reply_markup' => json_encode( ['inline_keyboard'=>$this->keyboards['inline_admin_main']]),
			'disable_notification' => TRUE,
			'disable_web_page_preview' => TRUE,
			'parse_mode'=> "HTML"
			]);
			usleep(100000);
		}
	}	


////	
	public function callback_back_admin_sendsold_records_channel()
	{
		
		$con_sql2=$this->cmd_sql();
		$tabserviceadmin='tabserviceadmin'.$this->api->chatId.'';
				
		if(mysqli_query($con_sql2, 'SELECT 1 FROM '.$tabserviceadmin.' LIMIT 1'))
		{
			mysqli_query($con_sql2, 'TRUNCATE TABLE '.$tabserviceadmin.'');
			usleep(100000);
		}
		
		
		$text='–í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –≤ –ø–æ–¥–º–µ–Ω—é <b>–û–±—ä—è–≤–ª–µ–Ω–∏—è</b> –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –º–µ–Ω—é –ê–¥–º–∏–Ω.'.$this->pre.'';
		$this->callbackAnswer( $text, $this->keyboards['inline_admin_records']);
		usleep(100000);
		
	}
	
	
////	
	public function callback_exit_admin_sendsold_records_channel()
	{
		
		$con_sql2=$this->cmd_sql();
		$tabserviceadmin='tabserviceadmin'.$this->api->chatId.'';
		
		if(isset($this->api->body['callback_query']["id"]))
		{
			$callback_query_id=$this->api->body['callback_query']["id"];
			$this->api->answerCallbackQuery($callback_query_id);
		}
		
		if(mysqli_query($con_sql2, 'SELECT 1 FROM '.$tabserviceadmin.' LIMIT 1'))
		{
			mysqli_query($con_sql2, 'TRUNCATE TABLE '.$tabserviceadmin.'');
			usleep(100000);
		}
		
		
		$text='–í—ã –≤—ã—à–ª–∏ –≤ <b>–ì–ª–∞–≤–Ω–æ–µ –ú–µ–Ω—é</b>.'.$this->pre.'';
		
		$this->api->sendMessage([
		'text' => $text,
		'reply_markup' => json_encode( ['inline_keyboard'=>$this->keyboards['inline_default_admin']]),
		'disable_notification' => TRUE,
		'disable_web_page_preview' => TRUE,
		'parse_mode'=> "HTML"
		]);
		usleep(100000);
		
	}		

/////
public function cmd_admin_sendsold_records_channel_keyboard($record, $table)
	{
		$record=$record;
		$table=$table;
		
		$cnt=count($table);
		
		$maxbuttons=1;
		$ceil=ceil($cnt/$maxbuttons);
		
		
		
		$include=''.dirname(__FILE__).'/include'.$this->api->chatId.'.php';
		
		if(file_exists($include)==FALSE)
		{
			touch($include);
			
			$insert='<?php
		
		
			class TelegramBotfunc{';
			file_put_contents($include, $insert . PHP_EOL,FILE_APPEND);
			
		}
		else
		{
			$getinclude=file($include);
			unset($getinclude[array_key_last($getinclude)]);
			file_put_contents($include, $getinclude);
		}
		
		$u=0;
		$merge=[];
		
		for($i1=0;$i1<$ceil;$i1++)
		{
			$put=[];
			for($i2=0;$i2<$maxbuttons;$i2++)
			{	
				if(isset($table[$u]))
				{
					$tabbuy=$table[$u];
					$arraybuyers=$table;
					$chatidbuyer=str_replace('tabservicebuy', '', $tabbuy);
					$chatidbuyer=$this->clean($chatidbuyer);
					$fiobuyer=$this->cmd_user_get_fio($chatidbuyer);
					$phonebuyer=$this->cmd_user_get_phone($chatidbuyer);
					$buttext='üë§'.$this->cmd_user_get_fiophone($chatidbuyer).'';
					//$buttext="üë§$fiobuyer";
					$put[]=["text" => "$buttext", "callback_data" => 'adm_sendsold_rec_chan_'.$chatidbuyer.'_'.$record.''];
					
					if(preg_match('/callback_adm_sendsold_rec_chan_'.$chatidbuyer.'_'.$record.'/', file_get_contents($include))==FALSE)
					{
						$insert='
						public function callback_adm_sendsold_rec_chan_'.$chatidbuyer.'_'.$record.'()
						{	
							$bot = new TestBot;
							$bot->api->getWebhookUpdate();
							
							$con_sql2=$bot->cmd_sql();
							$query1=mysqli_query($con_sql2, &#039;SELECT * FROM '.$tabbuy.' WHERE messid="'.$record.'"&#039;);
							usleep(100000);
							$con1=mysqli_num_rows($query1);
							
							
							for($i1=0;$i1<$con1;$i1++)
							{
								mysqli_data_seek($query1, $i1);
								$row1[$i1]=mysqli_fetch_row($query1);
							}
							
							$photo=$row1[0][8];
							$messageid=$row1[0][11];
							$timeold=$row1[0][10];
							$timediff=time()-$timeold;
							
							
							if(preg_match(&#039;/;/&#039;, $photo)==FALSE)
							{
								if($timediff>172000)
								{
									$text="<b><i>–¢–æ–≤–∞—Ä –ø—Ä–æ–¥–∞–Ω</i></b>";
									$photosold=&#039;https://domain.com/photosold.png&#039;;
									
									$bot->api->editMessageMedia([
									&#039;chat_id&#039; => $bot->mainchannel,
									&#039;message_id&#039; => $messageid,
									&#039;media&#039; => json_encode( [&#039;type&#039; => &#039;photo&#039;, &#039;media&#039; => $photosold]),
									]);
								
									$bot->api->editMessageCaption([
									&#039;chat_id&#039; => $bot->mainchannel,
									&#039;message_id&#039; => $messageid,
									&#039;caption&#039; => $text,
									&#039;parse_mode&#039; => "HTML",
									]);
									
									$photo=str_replace(&#039;https://domain.com&#039;, &#039;&#039;.dirname(__FILE__).&#039;&#039;, $photo);
									unlink($photo);
									usleep(100000);
								}
								else
								{
									$bot->api->deleteMessage([
									&#039;chat_id&#039; => $bot->mainchannel,
									&#039;message_id&#039; => $messageid
									]);
									
									$photo=str_replace(&#039;https://domain.com&#039;, &#039;&#039;.dirname(__FILE__).&#039;&#039;, $photo);
									unlink($photo);
									usleep(100000);
								}
							}
							else
							{
								
								$text="<b><i>–¢–æ–≤–∞—Ä –ø—Ä–æ–¥–∞–Ω</i></b>";
								
								$bot->api->editMessageCaption([
								&#039;chat_id&#039; => $bot->mainchannel,
								&#039;message_id&#039; => $messageid,
								&#039;caption&#039; => $text,
								&#039;parse_mode&#039; => "HTML",
								]);
								
								$photos=explode(&#039;;&#039;, $photo);
								$cnt=count($photos);
								
								for($y=0;$y<$cnt;$y++)
								{
									$photos[$y]=str_replace(&#039;https://domain.com&#039;, &#039;&#039;.dirname(__FILE__).&#039;&#039;, $photos[$y]);
									unlink($photos[$y]);
									usleep(100000);
								}
								
							}
							
			
							$chatidseller=$row1[0][13];
							$tabsold=&#039;tabservicesold&#039;.$chatidseller.&#039;&#039;;
							
							if(mysqli_query($con_sql2, &#039;SELECT 1 FROM &#039;.$tabsold.&#039; LIMIT 1&#039;)==FALSE)
							{
								mysqli_query($con_sql2, &#039;CREATE TABLE &#039;.$tabsold.&#039; LIKE '.$tabbuy.'&#039;);
								usleep(250000);
							}
							
							mysqli_query($con_sql2, &#039;INSERT INTO &#039;.$tabsold.&#039; (type, cat, gender, brand, size, price, alt, pic, date, time, messid, cond, chatid, buyer, seller) SELECT type, cat, gender, brand, size, price, alt, pic, date, time, messid, cond, chatid, buyer, seller FROM '.$tabbuy.' WHERE messid="'.$record.'"&#039;);
							
							$query2=mysqli_query($con_sql2, &#039;SELECT * FROM &#039;.$tabsold.&#039; WHERE messid="'.$record.'"&#039;);
							$con2=mysqli_num_rows($query2);
							usleep(100000);
							
							for($i2=0;$i2<$con2;$i2++)
							{
								mysqli_data_seek($query2, $i2);
								$row2[$i2]=mysqli_fetch_row($query2);
							}
							
						
							$tabseller=&#039;tabmain&#039;.$chatidseller.&#039;&#039;;
			
							$time=time();
							$date=date("d.m.Y");
							
							$query2=&#039;UPDATE &#039;.$tabsold.&#039; SET date = REPLACE(date, "&#039;.$row2[0][9].&#039;", "&#039;.$date.&#039;") WHERE messid="'.$record.'"&#039;; 
							$result2=mysqli_query($con_sql2, $query2);
							usleep(100000);
							
							$query2=&#039;UPDATE &#039;.$tabsold.&#039; SET time = REPLACE(time, "&#039;.$row2[0][10].&#039;", "&#039;.$time.&#039;") WHERE messid="'.$record.'"&#039;; 
							$result2=mysqli_query($con_sql2, $query2);
							usleep(100000);
							
							$query2=mysqli_query($con_sql2, &#039;DELETE FROM '.$tabbuy.' WHERE messid="'.$record.'"&#039;);
							usleep(100000);
							
							$query2=mysqli_query($con_sql2, &#039;DELETE FROM &#039;.$tabseller.&#039; WHERE messid="'.$record.'"&#039;);
							usleep(100000);
							
							
							if(isset($bot->api->body[&#039;callback_query&#039;]["id"]))
							{
								$callback_query_id=$bot->api->body[&#039;callback_query&#039;]["id"];
								$bot->api->answerCallbackQuery($callback_query_id);
							}
							
							
							$query4=mysqli_query($con_sql2, &#039;SHOW TABLES LIKE "tabservicebuy%"&#039;);
							$con4=mysqli_num_rows($query4);
							
							if($con4!=0)
							{
							
								for($i4=0;$i4<$con4;$i4++)
								{
									mysqli_data_seek($query4, $i4);
									$row4[$i4]=mysqli_fetch_row($query4);
									
									if(mysqli_num_rows(mysqli_query($con_sql2, &#039;SELECT * FROM &#039;.$row4[$i4][0].&#039; WHERE messid="'.$record.'"&#039;))!=0)
									{
										if($row4[$i4][0]!==&#039;'.$tabbuy.'&#039;)
										{
											$query2=mysqli_query($con_sql2, &#039;DELETE FROM &#039;.$row4[$i4][0].&#039; WHERE messid="'.$record.'"&#039;);
											usleep(100000);
											
											$chatidbuyers=str_replace(&#039;tabservicebuy&#039;, &#039;&#039;, $row4[$i4][0]);
											$chatidbuyers=$bot->clean($chatidbuyers);
											
											$text3=&#039;–í–∞—à–∞ –∑–∞—è–≤–∫–∞ –Ω–∞ –ø–æ–∫—É–ø–∫—É —Ç–æ–≤–∞—Ä–∞ —Å ID <b>‚Ññ'.$record.'</b> –±—ã–ª–∞ <b>–æ—Ç–º–µ–Ω–µ–Ω–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º</b>.&#039;.PHP_EOL.&#039;&#039;.PHP_EOL.&#039;–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –¥–∞–Ω–Ω–æ–≥–æ —Ç–æ–≤–∞—Ä–∞ –Ω–µ—Ç –≤ –Ω–∞–ª–∏—á–∏–∏. –ò–∑–≤–∏–Ω–∏—Ç–µ –∑–∞ –Ω–µ—É–¥–æ–±—Å—Ç–≤–∞.&#039;.$bot->pre.&#039;&#039;;
											
											$bot->api->sendMessage([
											&#039;chat_id&#039; => $chatidbuyers,
											&#039;text&#039; => $text3,
											&#039;reply_markup&#039; => json_encode( [&#039;inline_keyboard&#039;=>$bot->keyboards[&#039;inline_buy_default&#039;]]),
											&#039;parse_mode&#039; => "HTML",
											]);
											usleep(100000);
										}	
									}
									
								}
							}

							
							$text=&#039;<b>–í—ã –ü–û–î–¢–í–ï–†–î–ò–õ–ò –ø–æ–∫—É–ø–∫—É:</b>&#039;.PHP_EOL.&#039;&#039;.PHP_EOL.&#039;–ü–æ–∫—É–ø–∞—Ç–µ–ª—å üë§<b>&#039;.$row2[0][14].&#039;</b>, –ü—Ä–æ–¥–∞–≤–µ—Ü üë§<b>&#039;.$row2[0][15].&#039;</b>, ID —Ç–æ–≤–∞—Ä–∞ <b>‚Ññ'.$record.'</b>.&#039;.PHP_EOL.&#039;&#039;.PHP_EOL.&#039;–í—ã –º–æ–∂–µ—Ç–µ –≤–≤–µ—Å—Ç–∏ –Ω–æ–≤—ã–π <b>ID —Ç–æ–≤–∞—Ä–∞</b>, —á—Ç–æ–±—ã –æ—Ç–º–µ—Ç–∏—Ç—å –µ–≥–æ –∫–∞–∫ –ø—Ä–æ–¥–∞–Ω–Ω—ã–π.&#039;.$bot->pre.&#039;&#039;;
							
							/* $merge=[];
							$merge[] = [[&#039;text&#039; => &#039;‚¨ÖÔ∏è–ù–∞–∑–∞–¥&#039;, &#039;callback_data&#039; => &#039;admin_back_show_records_channel&#039;], [&#039;text&#039; => &#039;‚§¥Ô∏è–í—ã–π—Ç–∏&#039;, &#039;callback_data&#039; => &#039;admin_exit_show_records_channel&#039;]];
							
							
							$bot->api->sendMessage([
								&#039;chat_id&#039; => $chatidbuyer,
								&#039;text&#039; => $text,
								&#039;reply_markup&#039; => json_encode( [&#039;inline_keyboard&#039;=>$merge]),
								&#039;disable_notification&#039; => TRUE,
								&#039;disable_web_page_preview&#039; => TRUE,
								&#039;parse_mode&#039;=> "HTML"
								]);
							usleep(100000);
							
							
							$text=&#039;–í–≤–µ–¥–∏—Ç–µ ID —Ç–æ–≤–∞—Ä–∞!&#039;;
							
							$bot->api->sendMessage([
								&#039;text&#039; => $text,
								&#039;reply_markup&#039; => json_encode( [&#039;force_reply&#039; => true, &#039;input_field_placeholder&#039; => &#039;–í–≤–µ–¥–∏—Ç–µ ID —Ç–æ–≤–∞—Ä–∞&#039;] ),
								&#039;disable_notification&#039; => TRUE,
								&#039;disable_web_page_preview&#039; => TRUE,
								&#039;parse_mode&#039;=> "HTML"
								]);
							usleep(100000); */
							
							
							$bot->api->sendMessage([
								&#039;text&#039; => $text,
								&#039;reply_markup&#039; => json_encode( [&#039;inline_keyboard&#039;=>$bot->keyboards[&#039;inline_admin_records&#039;]]),
								&#039;disable_notification&#039; => TRUE,
								&#039;disable_web_page_preview&#039; => TRUE,
								&#039;parse_mode&#039;=> "HTML"
								]);
							usleep(100000);
							
							
							$text2=&#039;–í–∞—à–∞ –∑–∞—è–≤–∫–∞ –Ω–∞ –ø–æ–∫—É–ø–∫—É —Ç–æ–≤–∞—Ä–∞ —Å ID <b>‚Ññ'.$record.'</b> –±—ã–ª–∞ <b>—Å–æ–≥–ª–∞—Å–æ–≤–∞–Ω–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º</b>.&#039;.PHP_EOL.&#039;–í –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è —Å –≤–∞–º–∏ <b>—Å–≤—è–∂–µ—Ç—Å—è –ü—Ä–æ–¥–∞–≤–µ—Ü.</b>&#039;.$bot->pre.&#039;&#039;;
			
							$bot->api->sendMessage([
					
								&#039;chat_id&#039; => '.$chatidbuyer.',
								&#039;text&#039; => $text2,
								&#039;reply_markup&#039; => json_encode( [&#039;inline_keyboard&#039;=>$bot->keyboards[&#039;inline_buy_default&#039;]]),
								&#039;parse_mode&#039; => "HTML",
								]);
							usleep(100000);
						}';
							
						file_put_contents($include, html_entity_decode($insert, ENT_QUOTES) . PHP_EOL . PHP_EOL,FILE_APPEND);
					}
				}
				
				$u++;	
			}
				
			$merge[]=$put;
			unset($put);
			
		}
		
		$insert='}';
		file_put_contents($include, $insert,FILE_APPEND);
		
		return $merge;
	}



/////	
	public function callback_admin_orders_records_channel()
	{
		
		$con_sql2=$this->cmd_sql();
		$tabserviceadmin='tabserviceadmin'.$this->api->chatId.'';
		
		
		$query=mysqli_query($con_sql2, 'SHOW TABLES LIKE "tabservicebuy%"');
		$con=mysqli_num_rows($query);
		
		if($con!=0)
		{
			
			$a=0;
			
			for($i=0;$i<$con;$i++)
			{
				mysqli_data_seek($query, $i);
				$row[$i]=mysqli_fetch_row($query);
				
				if(mysqli_num_rows(mysqli_query($con_sql2, 'SELECT 1 FROM '.$row[$i][0].' WHERE messid!="0"'))!=0)
				{
					$a=1;
					
					if(mysqli_query($con_sql2, 'SELECT 1 FROM '.$tabserviceadmin.' LIMIT 1')==FALSE)
					{
						mysqli_query($con_sql2, 'CREATE TABLE '.$tabserviceadmin.' (id INT(4) UNSIGNED AUTO_INCREMENT PRIMARY KEY,info VARCHAR(20)) ENGINE = InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;');
						usleep(250000);
						mysqli_query($con_sql2, 'INSERT INTO '.$tabserviceadmin.' (info) VALUES ("orders")');
						usleep(100000);
					}
					else
					{
						if(mysqli_num_rows(mysqli_query($con_sql2, 'SELECT 1 FROM '.$tabserviceadmin.' WHERE id LIKE "%" LIMIT 1'))==0)
						{
							mysqli_query($con_sql2, 'INSERT INTO '.$tabserviceadmin.' (info) VALUES ("orders")');
							usleep(100000);
						}
						else
						{
							mysqli_query($con_sql2, 'TRUNCATE TABLE '.$tabserviceadmin.'');
							usleep(100000);
							mysqli_query($con_sql2, 'INSERT INTO '.$tabserviceadmin.' (info) VALUES ("orders")');
							usleep(100000);
						}
					}
			
					$text='–í—ã–±–∏—Ä–∏—Ç–µ —Å–ø–æ—Å–æ–± –≤—ã–≤–æ–¥–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ <b>—Ç–µ–∫—É—â–∏—Ö –∑–∞–∫–∞–∑–∞—Ö</b>, –Ω–∞–∂–∞–≤ –Ω–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â—É—é –∫–Ω–æ–ø–∫—É'.$this->pre.'';
			
					$this->callbackAnswer( $text, $this->keyboards['inline_admin_orders_records_channel']);
					usleep(100000);
					
					break;
				}
				
			}
			
			if($a==0)
			{
				$text='–í –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç —É –í–∞—Å <b>–Ω–µ—Ç –Ω–∏ –æ–¥–Ω–æ–≥–æ –∑–∞–∫–∞–∑–∞</b>.'.$this->pre.'';
				
				$this->callbackAnswer( $text, $this->keyboards['inline_admin_records']);
				usleep(100000);
			}
			
		}
		else
		{
			$text='–í –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç —É –í–∞—Å <b>–Ω–µ—Ç –Ω–∏ –æ–¥–Ω–æ–≥–æ –∑–∞–∫–∞–∑–∞</b>.'.$this->pre.'';
		
			$this->callbackAnswer( $text, $this->keyboards['inline_admin_records']);
			usleep(100000);
		}

	}


/////
	public function callback_admin_orders_records_channel_display()
	{

		$con_sql2=$this->cmd_sql();
		

		$query=mysqli_query($con_sql2, 'SHOW TABLES LIKE "tabservicebuy%"');
		$con=mysqli_num_rows($query);
		
		if($con!=0)
		{
			for($i=0;$i<$con;$i++)
			{
				mysqli_data_seek($query, $i);
				$row[$i]=mysqli_fetch_row($query);
			
				$tabbuy=$row[$i][0];
				
				$query1=mysqli_query($con_sql2, 'SELECT * FROM '.$tabbuy.'');
				$con1=mysqli_num_rows($query1);
				
				for($i1=0;$i1<$con1;$i1++)
				{
					mysqli_data_seek($query1, $i1);
					$row1[$i1]=mysqli_fetch_row($query1);
					
					$type=$this->convert_rus($row1[$i1][1]);
					$cat=$this->convert_rus($row1[$i1][2]);
					$gender=$this->convert_rus($row1[$i1][3]);
					$cond=$this->convert_rus($row1[$i1][12]);
					
					$caption='üìñ–ö–∞—Ç–µ–≥–æ—Ä–∏—è: &#160;&#160;<b>'.$type.'</b>'.PHP_EOL.'üßæ–í–∏–¥: &#160;&#160;<b>'.$cat.'</b>'.PHP_EOL.'üë®‚Äçüë©‚Äçüë¶–ü–æ–ª: &#160;&#160;<b>'.$gender.'</b>'.PHP_EOL.'üéè–°–æ—Å—Ç–æ—è–Ω–∏–µ: <b>'.$cond.'</b>'.PHP_EOL.'¬ÆÔ∏è–ë—Ä–µ–Ω–¥: &#160;&#160;<b>'.$row1[$i1][4].'</b>'.PHP_EOL.'‚ÜïÔ∏è–†–∞–∑–º–µ—Ä: &#160;&#160;<b>'.$row1[$i1][5].'</b>'.PHP_EOL.'üíµ–¶–µ–Ω–∞: &#160;&#160;<b>'.$row1[$i1][6].'</b>'.PHP_EOL.'üìã–û–ø–∏—Å–∞–Ω–∏–µ: &#160;&#160;'.$row1[$i1][7].''.PHP_EOL.''.PHP_EOL.''.PHP_EOL.'<b>ID —Ç–æ–≤–∞—Ä–∞: '.$row1[$i1][11].'</b>'.PHP_EOL.'–ü—Ä–æ–¥–∞–≤–µ—Ü:<b> '.$row1[$i1][15].'</b>'.PHP_EOL.'–ü–æ–∫—É–ø–∞—Ç–µ–ª—å:<b> '.$row1[$i1][14].'</b>'.PHP_EOL.''.PHP_EOL.'üìÅüìÅüìÅüìÅüìÅüìÅüìÅüìÅüìÅüìÅüìÅüìÅ';
					
					$photo=$row1[$i1][8];
					
					if(preg_match('/;/', $photo)==FALSE)
					{
						$this->api->sendPhoto([
						'photo' => $photo,
						'caption' => $caption,
						'disable_notification' => TRUE,
						'parse_mode' => "HTML"
						]);
						usleep(250000);
					
					}
					else
					{
						$media=[];
						$temp=explode(';', $photo);
						$cnt=count($temp);
						for($o=0;$o<$cnt;$o++)
						{
						
						
							if($o==0)
							{
								$put=['type' => 'photo', 'media' =>  ''.$temp[$o].'', 'caption' => ''.$caption.'', 'parse_mode' => "HTML" ];
							}
							else
							{
								$put=['type' => 'photo', 'media' =>  ''.$temp[$o].'' ];
							}
					
							$media[$o]=$put;
						}
						
						
						$this->api->sendMediaGroup([
						'media' => json_encode($media),
						]);
						usleep(350000);
					}
							
	
				}
			}
				
			$text='–°–≤–µ—Ä—Ö—É –ø–æ–∫–∞–∑–∞–Ω—ã <b>–≤—Å–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –Ω–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –∑–∞–∫–∞–∑—ã.</b>'.PHP_EOL.'–í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ –º–µ–Ω—é <b>–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∑–∞–∫–∞–∑—ã.</b>'.$this->pre.'';
				
			if(isset($this->api->body['callback_query']["id"]))
			{
				$callback_query_id=$this->api->body['callback_query']["id"];
				$this->api->answerCallbackQuery($callback_query_id);
			}
			
			$this->api->sendMessage([
				'text' => $text,
				'reply_markup' => json_encode( ['inline_keyboard'=>$this->keyboards['inline_admin_orders_records_channel']]),
				'disable_notification' => TRUE,
				'disable_web_page_preview' => TRUE,
				'parse_mode'=> "HTML"
				]);
			usleep(100000);
				
		}

		else
		{
			if(isset($this->api->body['callback_query']["id"]))
			{
				$callback_query_id=$this->api->body['callback_query']["id"];
				$this->api->answerCallbackQuery($callback_query_id);
			}
				
			$text='–í –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç —É –í–∞—Å <b>–Ω–µ—Ç –Ω–∏ –æ–¥–Ω–æ–≥–æ –∑–∞–∫–∞–∑–∞</b>.'.$this->pre.'';
		
			$this->api->sendMessage([
			'text' => $text,
			'reply_markup' => json_encode( ['inline_keyboard'=>$this->keyboards['inline_admin_main']]),
			'disable_notification' => TRUE,
			'disable_web_page_preview' => TRUE,
			'parse_mode'=> "HTML"
			]);
			usleep(100000);
		}

	}
	
	
/////	
	public function callback_admin_orders_records_channel_file()
	{
		$con_sql2=$this->cmd_sql();
		
		$query=mysqli_query($con_sql2, 'SHOW TABLES LIKE "tabservicebuy%"');
		$con=mysqli_num_rows($query);
		
		if($con!=0)
		{
			
			require_once(''.dirname(__FILE__).'/pdf/tcpdf.php');
			$pdf = new TCPDF('L', PDF_UNIT, PDF_PAGE_FORMAT, true, 'UTF-8', false);

			$pdf->SetCreator(PDF_CREATOR);
			
			$pdf->SetHeaderData(PDF_HEADER_LOGO, PDF_HEADER_LOGO_WIDTH, PDF_HEADER_TITLE.' 001', PDF_HEADER_STRING, array(0,0,0), array(0,0,0));
			$pdf->setFooterData(array(0,0,0), array(0,0,0));
			
			
			$pdf->setHeaderFont(Array(PDF_FONT_NAME_MAIN, '', PDF_FONT_SIZE_MAIN));
			$pdf->setFooterFont(Array(PDF_FONT_NAME_DATA, '', PDF_FONT_SIZE_DATA));
			$pdf->setPrintHeader(false);
			$pdf->setPrintFooter(false);
			
			$pdf->SetDefaultMonospacedFont(PDF_FONT_MONOSPACED);
			
			$pdf->SetAutoPageBreak(false, PDF_MARGIN_BOTTOM);

			$pdf->setImageScale(PDF_IMAGE_SCALE_RATIO);
			
			if (@file_exists(dirname(__FILE__).'/pdf/lang/eng.php')) {
				require_once(dirname(__FILE__).'/pdf/lang/eng.php');
				$pdf->setLanguageArray($l);
			}
			
			$pdf->SetFont('dejavusans', '', 8, '', true);

			$pdf->AddPage();
			$date=date('d.m.Y');
			$time=date('G:i:s');
			
			$htmladd='
<div style="align: center; font-size: 16px; text-align: center"><b>–ó–∞–∫–∞–∑—ã –Ω–∞ '.$date.' '.$time.'</b></div><br><br>
<table border="1" cellspacing="0">
<tr style="line-height: 50px;">
<td align="center" valign="middle" width="90px"><b>–ö–∞—Ç–µ–≥–æ—Ä–∏—è</b></td>
<td align="center" valign="middle" width="90px"><b>–í–∏–¥</b></td>
<td align="center" valign="middle" width="60px"><b>–ü–æ–ª</b></td>
<td align="center" valign="middle" width="60px"><b>–°–æ—Å—Ç–æ—è–Ω–∏–µ</b></td>
<td align="center" valign="middle" width="90px"><b>–ë—Ä–µ–Ω–¥</b></td>
<td align="center" valign="middle" width="60px"><b>–†–∞–∑–º–µ—Ä</b></td>
<td align="center" valign="middle" width="90px"><b>–¶–µ–Ω–∞</b></td>
<td align="center" valign="middle" width="160px"><b>–û–ø–∏—Å–∞–Ω–∏–µ</b></td>
<td align="center" valign="middle" width="60px"><b>ID —Ç–æ–≤–∞—Ä–∞</b></td>
<td align="center" valign="middle" width="150px"><b>–ü—Ä–æ–¥–∞–≤–µ—Ü</b></td>
<td align="center" valign="middle" width="150px"><b>–ü–æ–∫—É–ø–∞—Ç–µ–ª—å</b></td>
</tr>';

			for($i=0;$i<$con;$i++)
			{
				mysqli_data_seek($query, $i);
				$row[$i]=mysqli_fetch_row($query);
			
				$tabbuy=$row[$i][0];

				$query1=mysqli_query($con_sql2, 'SELECT * FROM '.$tabbuy.'');
				$con1=mysqli_num_rows($query1);
				
				
				
				for($i1=0;$i1<$con1;$i1++)
				{
					mysqli_data_seek($query1, $i1);
					$row1[$i1]=mysqli_fetch_row($query1);
					
					$type=$this->convert_rus($row1[$i1][1]);
					$cat=$this->convert_rus($row1[$i1][2]);
					$gender=$this->convert_rus($row1[$i1][3]);
					$cond=$this->convert_rus($row1[$i1][12]);
					
					
					$htmladd=''.$htmladd.''.PHP_EOL.'<tr>';
				

					$put='<td style="text-align: center; valign: middle; font-size: 10px;">'.$type.'</td>';
					$htmladd=''.$htmladd.''.PHP_EOL.''.$put.'';
					
					$put='<td style="text-align: center; valign: middle; font-size: 10px;">'.$cat.'</td>';
					$htmladd=''.$htmladd.''.PHP_EOL.''.$put.'';
					
					$put='<td style="text-align: center; valign: middle; font-size: 10px;">'.$gender.'</td>';
					$htmladd=''.$htmladd.''.PHP_EOL.''.$put.'';
					
					$put='<td style="text-align: center; valign: middle; font-size: 10px;">'.$cond.'</td>';
					$htmladd=''.$htmladd.''.PHP_EOL.''.$put.'';
					
					$put='<td style="text-align: center; valign: middle; font-size: 10px;">'.$row1[$i1][4].'</td>';
					$htmladd=''.$htmladd.''.PHP_EOL.''.$put.'';
					
					$put='<td style="text-align: center; valign: middle; font-size: 10px;">'.$row1[$i1][5].'</td>';
					$htmladd=''.$htmladd.''.PHP_EOL.''.$put.'';
					
					$put='<td style="text-align: center; valign: middle; font-size: 10px;">'.$row1[$i1][6].' –≥—Ä–Ω</td>';
					$htmladd=''.$htmladd.''.PHP_EOL.''.$put.'';
					
					$put='<td style="text-align: center; valign: middle; font-size: 8px;">'.$row1[$i1][7].'</td>';
					$htmladd=''.$htmladd.''.PHP_EOL.''.$put.'';
					
					$put='<td style="text-align: center; valign: middle; font-size: 10px;">'.$row1[$i1][11].'</td>';
					$htmladd=''.$htmladd.''.PHP_EOL.''.$put.'';
					
					$put='<td style="text-align: center; valign: middle; font-size: 10px;">'.$row1[$i1][15].'</td>';
					$htmladd=''.$htmladd.''.PHP_EOL.''.$put.'';
					
					$put='<td style="text-align: center; valign: middle; font-size: 10px;"><b>'.$row1[$i1][14].'</b></td>';
					$htmladd=''.$htmladd.''.PHP_EOL.''.$put.'';
					
					
					
					$htmladd=''.$htmladd.''.PHP_EOL.'</tr>';
				}
				
			}
			
			$htmladd=''.$htmladd.''.PHP_EOL.'</table>';
			$html = <<<EOD
$htmladd
EOD;
			
			array_map('unlink', glob(''.dirname(__FILE__).'/pdf/orders*.pdf'));
			usleep(250000);
			
			$time=date('G.i.s');
			
			$pdf->writeHTMLCell(0, 0, '', '', $html, 0, 1, 0, true, '', true);
			$pdf->Output(''.dirname(__FILE__).'/pdf/orders_'.$date.'_'.$time.'.pdf', 'F');
			usleep(250000);
			
			$this->api->sendDocument([
				'document' => 'https://domain.com/pdf/orders_'.$date.'_'.$time.'.pdf',
				'disable_notification' => TRUE,
				'parse_mode'=> "HTML"
				]);
			usleep(250000);
			
			
			$text='–í–∞–º –±—ã–ª –≤—ã—Å–ª–∞–Ω —Ñ–∞–π–ª —Å —Ç–µ–∫—É—â–∏–º–∏ –∑–∞–∫–∞–∑–∞–º–∏. –í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ –º–µ–Ω—é <b>–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∑–∞–∫–∞–∑—ã.</b>'.$this->pre.'';
				
			if(isset($this->api->body['callback_query']["id"]))
			{
				$callback_query_id=$this->api->body['callback_query']["id"];
				$this->api->answerCallbackQuery($callback_query_id);
			}
			
			$this->api->sendMessage([
				'text' => $text,
				'reply_markup' => json_encode( ['inline_keyboard'=>$this->keyboards['inline_admin_orders_records_channel']]),
				'disable_notification' => TRUE,
				'disable_web_page_preview' => TRUE,
				'parse_mode'=> "HTML"
				]);
			usleep(100000);
				
		}

		else
		{
			if(isset($this->api->body['callback_query']["id"]))
			{
				$callback_query_id=$this->api->body['callback_query']["id"];
				$this->api->answerCallbackQuery($callback_query_id);
			}
				
			$text='–í –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç —É –í–∞—Å <b>–Ω–µ—Ç –Ω–∏ –æ–¥–Ω–æ–≥–æ –∑–∞–∫–∞–∑–∞</b>.'.$this->pre.'';
		
			$this->api->sendMessage([
			'text' => $text,
			'reply_markup' => json_encode( ['inline_keyboard'=>$this->keyboards['inline_admin_main']]),
			'disable_notification' => TRUE,
			'disable_web_page_preview' => TRUE,
			'parse_mode'=> "HTML"
			]);
			usleep(100000);
		}
	}
	
/////
	public function callback_admin_back_orders_records_channel()
	{
		$con_sql2=$this->cmd_sql();
		$tabserviceadmin='tabserviceadmin'.$this->api->chatId.'';
		
		if(mysqli_query($con_sql2, 'SELECT 1 FROM '.$tabserviceadmin.' LIMIT 1'))
		{
			mysqli_query($con_sql2, 'TRUNCATE TABLE '.$tabserviceadmin.'');
			usleep(100000);
		}
		
		$text='–í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –≤ —Ä–∞–∑–¥–µ–ª <b>–û–±—ä—è–≤–ª–µ–Ω–∏—è.</b>'.$this->pre.'';
		$this->callbackAnswer( $text, $this->keyboards['inline_admin_records']);
		usleep(100000);
	}
	
/////
	public function callback_admin_exit_orders_records_channel()
	{
		$con_sql2=$this->cmd_sql();
		$tabserviceadmin='tabserviceadmin'.$this->api->chatId.'';
		
		if(mysqli_query($con_sql2, 'SELECT 1 FROM '.$tabserviceadmin.' LIMIT 1'))
		{
			mysqli_query($con_sql2, 'TRUNCATE TABLE '.$tabserviceadmin.'');
			usleep(100000);
		}
		
		$text='–í—ã –≤—ã—à–ª–∏ –≤ <b>–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é.</b>'.$this->pre.'';
				
		if(isset($this->api->body['callback_query']["id"]))
		{
			$callback_query_id=$this->api->body['callback_query']["id"];
			$this->api->answerCallbackQuery($callback_query_id);
		}
		
		$this->api->sendMessage([
			'text' => $text,
			'reply_markup' => json_encode( ['inline_keyboard'=>$this->keyboards['inline_default_admin']]),
			'disable_notification' => TRUE,
			'disable_web_page_preview' => TRUE,
			'parse_mode'=> "HTML"
			]);
		usleep(100000);
	}
	


/////	
	public function callback_admin_sold_records_channel()
	{
		
		$con_sql2=$this->cmd_sql();
		$tabserviceadmin='tabserviceadmin'.$this->api->chatId.'';
		
		
		$query=mysqli_query($con_sql2, 'SHOW TABLES LIKE "tabservicesold%"');
		$con=mysqli_num_rows($query);
		
		if($con!=0)
		{
			$a=0;
			
			for($i=0;$i<$con;$i++)
			{
				mysqli_data_seek($query, $i);
				$row[$i]=mysqli_fetch_row($query);
			
				if(mysqli_num_rows(mysqli_query($con_sql2, 'SELECT 1 FROM '.$row[$i][0].' WHERE messid!="0"'))!=0)
				{
			
					$a=1;
					
					if(mysqli_query($con_sql2, 'SELECT 1 FROM '.$tabserviceadmin.' LIMIT 1')==FALSE)
					{
						mysqli_query($con_sql2, 'CREATE TABLE '.$tabserviceadmin.' (id INT(4) UNSIGNED AUTO_INCREMENT PRIMARY KEY,info VARCHAR(20)) ENGINE = InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;');
						usleep(250000);
						mysqli_query($con_sql2, 'INSERT INTO '.$tabserviceadmin.' (info) VALUES ("sold")');
						usleep(100000);
					}
					else
					{
						if(mysqli_num_rows(mysqli_query($con_sql2, 'SELECT 1 FROM '.$tabserviceadmin.' WHERE id LIKE "%" LIMIT 1'))==0)
						{
							mysqli_query($con_sql2, 'INSERT INTO '.$tabserviceadmin.' (info) VALUES ("sold")');
							usleep(100000);
						}
						else
						{
							mysqli_query($con_sql2, 'TRUNCATE TABLE '.$tabserviceadmin.'');
							usleep(100000);
							mysqli_query($con_sql2, 'INSERT INTO '.$tabserviceadmin.' (info) VALUES ("sold")');
							usleep(100000);
						}
					}
				
					$text='–í—ã–±–∏—Ä–∏—Ç–µ —Å–ø–æ—Å–æ–± –≤—ã–≤–æ–¥–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ <b>–∑–∞–≤–µ—Ä—à–µ–Ω–Ω—ã—Ö –ø—Ä–æ–¥–∞–∂–∞—Ö</b>, –Ω–∞–∂–∞–≤ –Ω–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â—É—é –∫–Ω–æ–ø–∫—É'.$this->pre.'';
				
					$this->callbackAnswer( $text, $this->keyboards['inline_admin_sold_records_channel']);
					usleep(100000);
					
					break;
				}
			}
			
			if($a==0)
			{
				$text='–í –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç —É –í–∞—Å <b>–Ω–µ—Ç –Ω–∏ –æ–¥–Ω–æ–π –ø—Ä–æ–¥–∞–∂–∏</b>.'.$this->pre.'';
				
				$this->callbackAnswer( $text, $this->keyboards['inline_admin_records']);
				usleep(100000);
			}
			
		}
		else
		{
			$text='–í –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç —É –í–∞—Å <b>–Ω–µ—Ç –Ω–∏ –æ–¥–Ω–æ–π –ø—Ä–æ–¥–∞–∂–∏</b>.'.$this->pre.'';
				
			$this->callbackAnswer( $text, $this->keyboards['inline_admin_records']);
			usleep(100000);
		}

	}


/////
	public function callback_admin_sold_records_channel_display()
	{

		$con_sql2=$this->cmd_sql();
		

		$query=mysqli_query($con_sql2, 'SHOW TABLES LIKE "tabservicesold%"');
		$con=mysqli_num_rows($query);
		
		if($con!=0)
		{
			for($i=0;$i<$con;$i++)
			{
				mysqli_data_seek($query, $i);
				$row[$i]=mysqli_fetch_row($query);
			
				$tabsold=$row[$i][0];
				
				$query1=mysqli_query($con_sql2, 'SELECT * FROM '.$tabsold.'');
				$con1=mysqli_num_rows($query1);
				
				for($i1=0;$i1<$con1;$i1++)
				{
					mysqli_data_seek($query1, $i1);
					$row1[$i1]=mysqli_fetch_row($query1);
					
					$type=$this->convert_rus($row1[$i1][1]);
					$cat=$this->convert_rus($row1[$i1][2]);
					$gender=$this->convert_rus($row1[$i1][3]);
					$cond=$this->convert_rus($row1[$i1][12]);
					
					$caption=''.PHP_EOL.''.PHP_EOL.'üìñ–ö–∞—Ç–µ–≥–æ—Ä–∏—è: &#160;&#160;<b>'.$type.'</b>'.PHP_EOL.'üßæ–í–∏–¥: &#160;&#160;<b>'.$cat.'</b>'.PHP_EOL.'üë®‚Äçüë©‚Äçüë¶–ü–æ–ª: &#160;&#160;<b>'.$gender.'</b>'.PHP_EOL.'üéè–°–æ—Å—Ç–æ—è–Ω–∏–µ: <b>'.$cond.'</b>'.PHP_EOL.'¬ÆÔ∏è–ë—Ä–µ–Ω–¥: &#160;&#160;<b>'.$row1[$i1][4].'</b>'.PHP_EOL.'‚ÜïÔ∏è–†–∞–∑–º–µ—Ä: &#160;&#160;<b>'.$row1[$i1][5].'</b>'.PHP_EOL.'üíµ–¶–µ–Ω–∞: &#160;&#160;<b>'.$row1[$i1][6].'</b>'.PHP_EOL.'üìã–û–ø–∏—Å–∞–Ω–∏–µ: &#160;&#160;'.$row1[$i1][7].''.PHP_EOL.''.PHP_EOL.''.PHP_EOL.'<b>ID —Ç–æ–≤–∞—Ä–∞: '.$row1[$i1][11].'</b>'.PHP_EOL.'–ü–æ–∫—É–ø–∞—Ç–µ–ª—å:<b> '.$row1[$i1][14].'</b>'.PHP_EOL.'–ü—Ä–æ–¥–∞–≤–µ—Ü:<b> '.$row1[$i1][15].'</b>'.PHP_EOL.''.PHP_EOL.'üìÅüìÅüìÅüìÅüìÅüìÅüìÅüìÅüìÅüìÅüìÅüìÅ';
					
					$photo=$row1[$i1][8];
					
					if(preg_match('/;/', $photo)==FALSE)
					{
						$this->api->sendPhoto([
						'photo' => $photo,
						'caption' => $caption,
						'disable_notification' => TRUE,
						'parse_mode' => "HTML"
						]);
						usleep(250000);
					
					}
					else
					{
						$media=[];
						$temp=explode(';', $photo);
						$cnt=count($temp);
						for($o=0;$o<$cnt;$o++)
						{
						
						
							if($o==0)
							{
								$put=['type' => 'photo', 'media' =>  ''.$temp[$o].'', 'caption' => ''.$caption.'', 'parse_mode' => "HTML" ];
							}
							else
							{
								$put=['type' => 'photo', 'media' =>  ''.$temp[$o].'' ];
							}
					
							$media[$o]=$put;
						}
						
						
						$this->api->sendMediaGroup([
						'media' => json_encode($media),
						]);
						usleep(350000);
					}
							
	
				}
			}
				
			$text='–°–≤–µ—Ä—Ö—É –ø–æ–∫–∞–∑–∞–Ω—ã <b>–≤—Å–µ –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—ã–µ –Ω–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –ø—Ä–æ–¥–∞–∂–∏.</b>'.PHP_EOL.'–í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ –º–µ–Ω—é <b>–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ø—Ä–æ–¥–∞–∂–∏.</b>'.$this->pre.'';
				
			if(isset($this->api->body['callback_query']["id"]))
			{
				$callback_query_id=$this->api->body['callback_query']["id"];
				$this->api->answerCallbackQuery($callback_query_id);
			}
			
			$this->api->sendMessage([
				'text' => $text,
				'reply_markup' => json_encode( ['inline_keyboard'=>$this->keyboards['inline_admin_sold_records_channel']]),
				'disable_notification' => TRUE,
				'disable_web_page_preview' => TRUE,
				'parse_mode'=> "HTML"
				]);
			usleep(100000);
				
		}

		else
		{
			if(isset($this->api->body['callback_query']["id"]))
			{
				$callback_query_id=$this->api->body['callback_query']["id"];
				$this->api->answerCallbackQuery($callback_query_id);
			}
				
			$text='–í –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç —É –í–∞—Å <b>–Ω–µ—Ç –Ω–∏ –æ–¥–Ω–æ–π –∑–∞–≤–µ—Ä—à–µ–Ω–Ω–æ–π –ø—Ä–æ–¥–∞–∂–∏</b>.'.$this->pre.'';
		
			$this->api->sendMessage([
			'text' => $text,
			'reply_markup' => json_encode( ['inline_keyboard'=>$this->keyboards['inline_admin_records']]),
			'disable_notification' => TRUE,
			'disable_web_page_preview' => TRUE,
			'parse_mode'=> "HTML"
			]);
			usleep(100000);
		}

	}
	
	
/////	
	public function callback_admin_sold_records_channel_file()
	{
		$con_sql2=$this->cmd_sql();
		
		$query=mysqli_query($con_sql2, 'SHOW TABLES LIKE "tabservicesold%"');
		$con=mysqli_num_rows($query);
		
		if($con!=0)
		{
			
			require_once(''.dirname(__FILE__).'/pdf/tcpdf.php');
			$pdf = new TCPDF('L', PDF_UNIT, PDF_PAGE_FORMAT, true, 'UTF-8', false);

			$pdf->SetCreator(PDF_CREATOR);
			
			$pdf->SetHeaderData(PDF_HEADER_LOGO, PDF_HEADER_LOGO_WIDTH, PDF_HEADER_TITLE.' 001', PDF_HEADER_STRING, array(0,0,0), array(0,0,0));
			$pdf->setFooterData(array(0,0,0), array(0,0,0));
			
			
			$pdf->setHeaderFont(Array(PDF_FONT_NAME_MAIN, '', PDF_FONT_SIZE_MAIN));
			$pdf->setFooterFont(Array(PDF_FONT_NAME_DATA, '', PDF_FONT_SIZE_DATA));
			$pdf->setPrintHeader(false);
			$pdf->setPrintFooter(false);
			
			$pdf->SetDefaultMonospacedFont(PDF_FONT_MONOSPACED);
			
			$pdf->SetAutoPageBreak(false, PDF_MARGIN_BOTTOM);

			$pdf->setImageScale(PDF_IMAGE_SCALE_RATIO);
			
			if (@file_exists(dirname(__FILE__).'/pdf/lang/eng.php')) {
				require_once(dirname(__FILE__).'/pdf/lang/eng.php');
				$pdf->setLanguageArray($l);
			}
			
			$pdf->SetFont('dejavusans', '', 8, '', true);

			$pdf->AddPage();
			$date=date('d.m.Y');
			$time=date('G:i:s');
			
			
			$htmladd='
<div style="align: center; font-size: 16px; text-align: center"><b>–ü—Ä–æ–¥–∞–∂–∏ –Ω–∞ '.$date.' '.$time.'</b></div><br><br>
<table border="1" cellspacing="0">
<tr style="line-height: 50px;">
<td align="center" valign="middle" width="80px"><b>–ö–∞—Ç–µ–≥–æ—Ä–∏—è</b></td>
<td align="center" valign="middle" width="80px"><b>–í–∏–¥</b></td>
<td align="center" valign="middle" width="60px"><b>–ü–æ–ª</b></td>
<td align="center" valign="middle" width="60px"><b>–°–æ—Å—Ç–æ—è–Ω–∏–µ</b></td>
<td align="center" valign="middle" width="90px"><b>–ë—Ä–µ–Ω–¥</b></td>
<td align="center" valign="middle" width="60px"><b>–†–∞–∑–º–µ—Ä</b></td>
<td align="center" valign="middle" width="90px"><b>–¶–µ–Ω–∞</b></td>
<td align="center" valign="middle" width="130px"><b>–û–ø–∏—Å–∞–Ω–∏–µ</b></td>
<td align="center" valign="middle" width="60px"><b>ID —Ç–æ–≤–∞—Ä–∞</b></td>
<td align="center" valign="middle" width="130px"><b>–ü–æ–∫—É–ø–∞—Ç–µ–ª—å</b></td>
<td align="center" valign="middle" width="130px"><b>–ü—Ä–æ–¥–∞–≤–µ—Ü</b></td>
</tr>';
			
			for($i=0;$i<$con;$i++)
			{
				mysqli_data_seek($query, $i);
				$row[$i]=mysqli_fetch_row($query);
			
				$tabsold=$row[$i][0];

				$query1=mysqli_query($con_sql2, 'SELECT * FROM '.$tabsold.'');
				$con1=mysqli_num_rows($query1);
				
				
				
				for($i1=0;$i1<$con1;$i1++)
				{
					mysqli_data_seek($query1, $i1);
					$row1[$i1]=mysqli_fetch_row($query1);
					
					$type=$this->convert_rus($row1[$i1][1]);
					$cat=$this->convert_rus($row1[$i1][2]);
					$gender=$this->convert_rus($row1[$i1][3]);
					$cond=$this->convert_rus($row1[$i1][12]);
				

					$htmladd=''.$htmladd.''.PHP_EOL.'<tr>';
				

					$put='<td style="text-align: center; valign: middle; font-size: 10px;">'.$type.'</td>';
					$htmladd=''.$htmladd.''.PHP_EOL.''.$put.'';
					
					$put='<td style="text-align: center; valign: middle; font-size: 10px;">'.$cat.'</td>';
					$htmladd=''.$htmladd.''.PHP_EOL.''.$put.'';
					
					$put='<td style="text-align: center; valign: middle; font-size: 10px;">'.$gender.'</td>';
					$htmladd=''.$htmladd.''.PHP_EOL.''.$put.'';
					
					$put='<td style="text-align: center; valign: middle; font-size: 10px;">'.$cond.'</td>';
					$htmladd=''.$htmladd.''.PHP_EOL.''.$put.'';
					
					$put='<td style="text-align: center; valign: middle; font-size: 10px;">'.$row1[$i1][4].'</td>';
					$htmladd=''.$htmladd.''.PHP_EOL.''.$put.'';
					
					$put='<td style="text-align: center; valign: middle; font-size: 10px;">'.$row1[$i1][5].'</td>';
					$htmladd=''.$htmladd.''.PHP_EOL.''.$put.'';
					
					$put='<td style="text-align: center; valign: middle; font-size: 10px;">'.$row1[$i1][6].' –≥—Ä–Ω</td>';
					$htmladd=''.$htmladd.''.PHP_EOL.''.$put.'';
					
					$put='<td style="text-align: center; valign: middle; font-size: 8px;">'.$row1[$i1][7].'</td>';
					$htmladd=''.$htmladd.''.PHP_EOL.''.$put.'';
					
					$put='<td style="text-align: center; valign: middle; font-size: 10px;">'.$row1[$i1][11].'</td>';
					$htmladd=''.$htmladd.''.PHP_EOL.''.$put.'';
					
					$put='<td style="text-align: center; valign: middle; font-size: 10px;">'.$row1[$i1][14].'</td>';
					$htmladd=''.$htmladd.''.PHP_EOL.''.$put.'';
					
					$put='<td style="text-align: center; valign: middle; font-size: 10px;">'.$row1[$i1][15].'</td>';
					$htmladd=''.$htmladd.''.PHP_EOL.''.$put.'';
					
					$htmladd=''.$htmladd.''.PHP_EOL.'</tr>';
				}
				
			}
			
			$htmladd=''.$htmladd.''.PHP_EOL.'</table>';
			$html = <<<EOD
$htmladd
EOD;

			array_map('unlink', glob(''.dirname(__FILE__).'/pdf/sales*.pdf'));
			usleep(250000);
			
			$time=date('G.i.s');
			
			$pdf->writeHTMLCell(0, 0, '', '', $html, 0, 1, 0, true, '', true);
			$pdf->Output(''.dirname(__FILE__).'/pdf/sales_'.$date.'_'.$time.'.pdf', 'F');
			usleep(250000);
			
			$this->api->sendDocument([
				'document' => 'https://domain.com/pdf/sales_'.$date.'_'.$time.'.pdf',
				'disable_notification' => TRUE,
				'parse_mode'=> "HTML"
				]);
			usleep(250000);
			
			
			$text='–í–∞–º –±—ã–ª –≤—ã—Å–ª–∞–Ω —Ñ–∞–π–ª —Å <b>–∑–∞–≤–µ—Ä—à–µ–Ω–Ω—ã–º–∏ –ø—Ä–æ–¥–∞–∂–∞–º–∏</b> –Ω–∞ —Ç–µ–∫—É—â–∏–π –º–æ–º–µ–Ω—Ç.'.PHP_EOL.'–í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ –º–µ–Ω—é <b>–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ø—Ä–æ–¥–∞–∂–∏.</b>'.$this->pre.'';
				
			if(isset($this->api->body['callback_query']["id"]))
			{
				$callback_query_id=$this->api->body['callback_query']["id"];
				$this->api->answerCallbackQuery($callback_query_id);
			}
			
			$this->api->sendMessage([
				'text' => $text,
				'reply_markup' => json_encode( ['inline_keyboard'=>$this->keyboards['inline_admin_sold_records_channel']]),
				'disable_notification' => TRUE,
				'disable_web_page_preview' => TRUE,
				'parse_mode'=> "HTML"
				]);
			usleep(100000);
				
		}

		else
		{
			if(isset($this->api->body['callback_query']["id"]))
			{
				$callback_query_id=$this->api->body['callback_query']["id"];
				$this->api->answerCallbackQuery($callback_query_id);
			}
				
			$text='–í –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç —É –í–∞—Å <b>–Ω–µ—Ç –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—ã—Ö –ø—Ä–æ–¥–∞–∂</b>.'.$this->pre.'';
		
			$this->api->sendMessage([
			'text' => $text,
			'reply_markup' => json_encode( ['inline_keyboard'=>$this->keyboards['inline_admin_main']]),
			'disable_notification' => TRUE,
			'disable_web_page_preview' => TRUE,
			'parse_mode'=> "HTML"
			]);
			usleep(100000);
		}
	}
	
/////
	public function callback_admin_back_sold_records_channel()
	{
		$con_sql2=$this->cmd_sql();
		$tabserviceadmin='tabserviceadmin'.$this->api->chatId.'';
		
		if(mysqli_query($con_sql2, 'SELECT 1 FROM '.$tabserviceadmin.' LIMIT 1'))
		{
			mysqli_query($con_sql2, 'TRUNCATE TABLE '.$tabserviceadmin.'');
			usleep(100000);
		}
		
		$text='–í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –≤ —Ä–∞–∑–¥–µ–ª <b>–û–±—ä—è–≤–ª–µ–Ω–∏—è.</b>'.$this->pre.'';
				
		$this->callbackAnswer( $text, $this->keyboards['inline_admin_records']);
		usleep(100000);
	}
	
/////
	public function callback_admin_exit_sold_records_channel()
	{
		$con_sql2=$this->cmd_sql();
		$tabserviceadmin='tabserviceadmin'.$this->api->chatId.'';
		
		if(mysqli_query($con_sql2, 'SELECT 1 FROM '.$tabserviceadmin.' LIMIT 1'))
		{
			mysqli_query($con_sql2, 'TRUNCATE TABLE '.$tabserviceadmin.'');
			usleep(100000);
		}
		
		$text='–í—ã –≤—ã—à–ª–∏ –≤ <b>–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é.</b>'.$this->pre.'';
				
		if(isset($this->api->body['callback_query']["id"]))
		{
			$callback_query_id=$this->api->body['callback_query']["id"];
			$this->api->answerCallbackQuery($callback_query_id);
		}
		
		$this->api->sendMessage([
			'text' => $text,
			'reply_markup' => json_encode( ['inline_keyboard'=>$this->keyboards['inline_default_admin']]),
			'disable_notification' => TRUE,
			'disable_web_page_preview' => TRUE,
			'parse_mode'=> "HTML"
			]);
		usleep(100000);
	}

	
	
	
	
	
	
	
	
	
	
	
	
	
	








///////////////////////////////////////////////////////////CHANGE////////////////////////////////////////////////////	

	public function callback_sell_change()
	{
		$con_sql2=$this->cmd_sql();
		$tab='tabmain'.$this->api->chatId.'';
		$query1=mysqli_query($con_sql2, 'SELECT 1 FROM '.$tab.' WHERE pic!="0"');
		$con1=mysqli_num_rows($query1);
		if($con1!=0)
		{
			$text='–í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ –º–µ–Ω—é <b>–ò–∑–º–µ–Ω–µ–Ω–∏—Ç—å –æ–±—ä—è–≤–ª–µ–Ω–∏–µ</b>. –í—ã–±–∏—Ä–∏—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–π –í–∞—Å —Ä–∞–∑–¥–µ–ª.'.$this->pre.'';
			$this->callbackAnswer( $text, $this->keyboards['inline_change']);
		}
		else
		{
			$text='–í—ã –µ—â–µ –Ω–µ –¥–æ–±–∞–≤–∏–ª–∏ –Ω–∏ –æ–¥–Ω–æ–≥–æ –æ–±—ä—è–≤–ª–µ–Ω–∏—è!'.PHP_EOL.'–í–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å –º–µ–Ω—é <b>–°–æ–∑–¥–∞—Ç—å –æ–±—ä—è–≤–ª–µ–Ω–∏–µ</b> –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –º–µ–Ω—é –ü—Ä–æ–¥–∞—Ç—å.'.$this->pre.'';
			$this->callbackAnswer( $text, $this->keyboards['inline_sell']);
		}
		
		
	}
	
	
////	
	public function callback_change_back_main()
	{
		
		$text='–í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –≤ —Ä–∞–∑–¥–µ–ª <b>–ü—Ä–æ–¥–∞—Ç—å.</b> –í—ã–±–∏—Ä–∏—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–π –í–∞—Å —Ä–∞–∑–¥–µ–ª.'.$this->pre.'';
		
		$this->callbackAnswer( $text, $this->keyboards['inline_sell']);
		usleep(100000);
	}
	
////	
	public function callback_change_exit_main()
	{
		if($this->cmd_isadmin())
		{
			$text='–í—ã –≤—ã—à–ª–∏ –≤ <b>–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é</b>.'.$this->pre.'';
		
			//$this->callbackAnswer( $text, $this->keyboards['inline_default_admin']);
			
			if(isset($this->api->body['callback_query']["id"]))
			{
				$callback_query_id=$this->api->body['callback_query']["id"];
				$this->api->answerCallbackQuery($callback_query_id);
			}
			
			$this->api->sendMessage([
				'text' => $text,
				'reply_markup' => json_encode( ['inline_keyboard'=>$this->keyboards['inline_default_admin']]),
				'disable_notification' => TRUE,
				'disable_web_page_preview' => TRUE,
				'parse_mode'=> "HTML"
				]);
				usleep(100000);
		}
		else
		{
			$text='–í—ã –≤—ã—à–ª–∏ –≤ <b>–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é</b>.'.$this->pre.'';
		
			//$this->callbackAnswer( $text, $this->keyboards['inline_default']);
			
			if(isset($this->api->body['callback_query']["id"]))
			{
				$callback_query_id=$this->api->body['callback_query']["id"];
				$this->api->answerCallbackQuery($callback_query_id);
			}
			
			$this->api->sendMessage([
				'text' => $text,
				'reply_markup' => json_encode( ['inline_keyboard'=>$this->keyboards['inline_default']]),
				'disable_notification' => TRUE,
				'disable_web_page_preview' => TRUE,
				'parse_mode'=> "HTML"
				]);
				usleep(100000);
		}
	}	



/////	
	public function callback_change_channel_records()
	{
		
		$con_sql2=$this->cmd_sql();
		
		$tabmain='tabmain'.$this->api->chatId.'';
		
		if(mysqli_num_rows(mysqli_query($con_sql2, 'SELECT 1 FROM '.$tabmain.' WHERE messid!="0"'))==0)
		{
			$text='–í –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç —É –í–∞—Å <b>–Ω–µ—Ç –Ω–∏ –æ–¥–Ω–æ–≥–æ –æ–±—ä—è–≤–ª–µ–Ω–∏—è</b>, —Ä–∞–∑–º–µ—â–µ–Ω–Ω–æ–≥–æ –≤ –∫–∞–Ω–∞–ª–µ!'.PHP_EOL.''.PHP_EOL.'–í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ –≥–ª–∞–≤–Ω–æ–º –º–µ–Ω—é <b>–ò–∑–º–µ–Ω–∏—Ç—å –æ–±—ä—è–≤–ª–µ–Ω–∏–µ</b>.'.$this->pre.'';
			$this->callbackAnswer( $text, $this->keyboards['inline_change']);
		}

		else
		{
			
			$merge=$this->cmd_change_channel_records();
			usleep(100000);
			
			if (array_filter($merge) !== [])
			{
				$merge[] = [['text' => '‚¨ÖÔ∏è–ù–∞–∑–∞–¥', 'callback_data' => 'change_back_channel_records'], ['text' => '‚§¥Ô∏è–í—ã–π—Ç–∏', 'callback_data' => 'change_exit_channel_records']];
				
				$text='–í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ —Ä–∞–∑–¥–µ–ª–µ <b>–ú–æ–∏ —Ä–∞–∑–º–µ—â–µ–Ω–Ω—ã–µ –æ–±—ä—è–≤–ª–µ–Ω–∏—è</b>. –í—ã–±–µ—Ä–∏—Ç–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–π ID —Ç–æ–≤–∞—Ä–∞, —á—Ç–æ–±—ã –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –æ–±—ä—è–≤–ª–µ–Ω–∏–µ.'.$this->pre.'';
				$this->callbackAnswer( $text, $merge);
			}
			else
			{
				$text='–í –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç —É –í–∞—Å <b>–Ω–µ—Ç –Ω–∏ –æ–¥–Ω–æ–≥–æ –æ–±—ä—è–≤–ª–µ–Ω–∏—è</b>, —Ä–∞–∑–º–µ—â–µ–Ω–Ω–æ–≥–æ –≤ –∫–∞–Ω–∞–ª–µ!'.PHP_EOL.''.PHP_EOL.'–í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ –≥–ª–∞–≤–Ω–æ–º –º–µ–Ω—é <b>–ò–∑–º–µ–Ω–∏—Ç—å –æ–±—ä—è–≤–ª–µ–Ω–∏–µ</b>.'.$this->pre.'';
				$this->callbackAnswer( $text, $this->keyboards['inline_change']);
			}
			
		}
	
	}
	
	
	
/////
	public function cmd_change_channel_records()
	{
				
		$con_sql2=$this->cmd_sql();
		
		$tabmain='tabmain'.$this->api->chatId.'';
			
			
				$query1=mysqli_query($con_sql2, 'SELECT DISTINCT messid FROM '.$tabmain.' WHERE messid!="0"');
				usleep(100000);
				$con1=mysqli_num_rows($query1);
				
					$table=[];
					
					for($i=0;$i<$con1;$i++)
					{
						mysqli_data_seek($query1, $i);
						$row1[$i]=mysqli_fetch_row($query1);
						$table[]=$row1[$i][0];	
					}
					usleep(100000);
					
					$cnt=count($table);
					$maxbuttons=1;
					$ceil=ceil($cnt/$maxbuttons);
					
					
					
					$include=''.dirname(__FILE__).'/include'.$this->api->chatId.'.php';
					
					if(file_exists($include)==FALSE)
					{
						touch($include);
						
						$insert='<?php
				
				
						class TelegramBotfunc{';
						file_put_contents($include, $insert . PHP_EOL,FILE_APPEND);
						
					}
					else
					{
						$getinclude=file($include);
						unset($getinclude[array_key_last($getinclude)]);
						file_put_contents($include, $getinclude);
					}
					
					$u=0;
					$merge=[];
					
					for($i1=0;$i1<$ceil;$i1++)
					{
						$put=[];
						for($i2=0;$i2<$maxbuttons;$i2++)
						{	
							if(isset($table[$u]))
							{
								//$tabmain='tabmain'.$table[$u].'';
								if(mysqli_num_rows(mysqli_query($con_sql2, 'SELECT DISTINCT id FROM '.$tabmain.' WHERE messid!="0"'))!=0)
								{
									$buttext="ID ‚Ññ$table[$u]";
									$put[]=["text" => "$buttext", "callback_data" => 'chan_chan_charecor_'.$this->api->chatId.'_'.$table[$u].''];
									
									if(preg_match('/callback_chan_chan_charecor_'.$this->api->chatId.'_'.$table[$u].'/', file_get_contents($include))==FALSE)
									{
										$insert='
										public function callback_chan_chan_charecor_'.$this->api->chatId.'_'.$table[$u].'()
										{	
											$bot = new TestBot;
											$bot->api->getWebhookUpdate();
											$callback_query_id=$bot->api->body[&#039;callback_query&#039;]["id"];
											
											$con_sql2=$bot->cmd_sql();
											$tabmain=&#039;tabmain&#039;.$bot->api->chatId.&#039;&#039;;
											$query1=mysqli_query($con_sql2, &#039;SELECT DISTINCT messid FROM &#039;.$tabmain.&#039; WHERE messid!="0"&#039;);
											usleep(100000);
											$con1=mysqli_num_rows($query1);
		
											if($con1!=0)
											{
		
												$query=mysqli_query($con_sql2, &#039;SELECT * FROM &#039;.$tabmain.&#039; WHERE messid="'.$table[$u].'"&#039;);
												usleep(100000);
												$con=mysqli_num_rows($query);
													
												for($i=0;$i<$con;$i++)
												{
													mysqli_data_seek($query, $i);
													$row[$i]=mysqli_fetch_row($query);
												}
												

												$type=$bot->convert_rus($row[0][1]);
												$cat=$bot->convert_rus($row[0][2]);
												$gender=$bot->convert_rus($row[0][3]);
												$cond=$bot->convert_rus($row[0][12]);
												
							
												$caption=&#039;üìñ–ö–∞—Ç–µ–≥–æ—Ä–∏—è: <b>&#039;.$type.&#039;</b>&#039;.PHP_EOL.&#039;üßæ–í–∏–¥: <b>&#039;.$cat.&#039;</b>&#039;.PHP_EOL.&#039;üë®‚Äçüë©‚Äçüë¶–ü–æ–ª: <b>&#039;.$gender.&#039;</b>&#039;.PHP_EOL.&#039;üéè–°–æ—Å—Ç–æ—è–Ω–∏–µ: <b>&#039;.$cond.&#039;</b>&#039;.PHP_EOL.&#039;¬ÆÔ∏è–ë—Ä–µ–Ω–¥: <b>&#039;.$row[0][4].&#039;</b>&#039;.PHP_EOL.&#039;‚ÜïÔ∏è–†–∞–∑–º–µ—Ä: <b>&#039;.$row[0][5].&#039;</b>&#039;.PHP_EOL.&#039;üíµ–¶–µ–Ω–∞: <b>&#039;.$row[0][6].&#039;</b>&#039;.PHP_EOL.&#039;üìã–û–ø–∏—Å–∞–Ω–∏–µ: &#039;.$row[0][7].&#039;&#039;.PHP_EOL.&#039;&#039;.PHP_EOL.&#039;<b>ID —Ç–æ–≤–∞—Ä–∞ ‚Ññ &#039;.$row[0][11].&#039;</b>&#039;;
												
												$photo=$row[0][8];
												
												if(preg_match(&#039;/;/&#039;, $photo)==FALSE)
												{
													$bot->api->sendPhoto([
													&#039;photo&#039; => $photo,
													&#039;caption&#039; => $caption,
													//&#039;reply_markup&#039; => json_encode($bot->keyboards[&#039;default1&#039;]),
													&#039;disable_notification&#039; => TRUE,
													&#039;parse_mode&#039; => "HTML"
													]);
													usleep(250000);
												
												}
												else
												{
													$media=[];
													$temp=explode(&#039;;&#039;, $photo);
													$cnt=count($temp);
													for($o=0;$o<$cnt;$o++)
													{
													
													
														if($o==0)
														{
															$put=[&#039;type&#039; => &#039;photo&#039;, &#039;media&#039; =>  &#039;&#039;.$temp[$o].&#039;&#039;, &#039;caption&#039; => &#039;&#039;.$caption.&#039;&#039;, &#039;parse_mode&#039; => "HTML" ];
														}
														else
														{
															$put=[&#039;type&#039; => &#039;photo&#039;, &#039;media&#039; =>  &#039;&#039;.$temp[$o].&#039;&#039; ];
														}
												
														$media[$o]=$put;
													}
													
													
													$bot->api->sendMediaGroup([
													&#039;media&#039; => json_encode($media),
													]);
													usleep(350000);
												}
					
				
				
												$text=&#039;–°–≤–µ—Ä—Ö—É –ø–æ–∫–∞–∑–∞–Ω–æ –í–∞—à–µ –æ–±—ä—è–≤–ª–µ–Ω–∏–µ —Å <b>ID —Ç–æ–≤–∞—Ä–∞ ‚Ññ'.$table[$u].'</b>.&#039;.PHP_EOL.&#039;&#039;.PHP_EOL.&#039;–í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ –º–µ–Ω—é <b>–ú–æ–∏ —Ä–∞–∑–º–µ—â–µ–Ω–Ω—ã–µ –æ–±—ä—è–≤–ª–µ–Ω–∏—è</b>. –í—ã–±–∏—Ä–∏—Ç–µ ID —Ç–æ–≤–∞—Ä–∞ –Ω–∞ –∫–Ω–æ–ø–∫–∞—Ö —Å–Ω–∏–∑—É, —á—Ç–æ–±—ã –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –Ω–µ–º.&#039;.$bot->pre.&#039;&#039;;
												

												$merge=$bot->cmd_change_channel_records();
												usleep(100000);
												
												if (array_filter($merge) !== [])
												{
												
													$merge[] = [[&#039;text&#039; => &#039;‚¨ÖÔ∏è–ù–∞–∑–∞–¥&#039;, &#039;callback_data&#039; => &#039;change_back_channel_records&#039;], [&#039;text&#039; => &#039;‚§¥Ô∏è–í—ã–π—Ç–∏&#039;, &#039;callback_data&#039; => &#039;change_exit_channel_records&#039;]];
													
													/* $bot->api->answerCallbackQuery($callback_query_id);
													$bot->api->editMessageText([
													&#039;chat_id&#039; => $bot->api->body[&#039;callback_query&#039;][&#039;message&#039;][&#039;chat&#039;]["id"],
													&#039;message_id&#039; => $bot->api->body[&#039;callback_query&#039;][&#039;message&#039;][&#039;message_id&#039;],
													&#039;text&#039; => $text,
													&#039;parse_mode&#039; => "HTML",
													&#039;reply_markup&#039; => json_encode( [&#039;inline_keyboard&#039;=>$merge] ),
													]);
													usleep(100000); */
													
													$bot->api->answerCallbackQuery($callback_query_id);
													$bot->api->sendMessage([
														&#039;text&#039; => $text,
														&#039;reply_markup&#039; => json_encode( [&#039;inline_keyboard&#039;=>$merge]),
														&#039;disable_notification&#039; => TRUE,
														&#039;disable_web_page_preview&#039; => TRUE,
														&#039;parse_mode&#039;=> "HTML"
													]);
													usleep(100000);
													
													
												}
												else
												{
													$text=&#039;–í –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç —É –í–∞—Å <b>–Ω–µ—Ç –Ω–∏ –æ–¥–Ω–æ–≥–æ –æ–±—ä—è–≤–ª–µ–Ω–∏—è</b>, —Ä–∞–∑–º–µ—â–µ–Ω–Ω–æ–≥–æ –≤ –∫–∞–Ω–∞–ª–µ!&#039;.PHP_EOL.&#039;&#039;.PHP_EOL.&#039;–í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ –≥–ª–∞–≤–Ω–æ–º –º–µ–Ω—é <b>–ò–∑–º–µ–Ω–∏—Ç—å –æ–±—ä—è–≤–ª–µ–Ω–∏–µ</b>.&#039;.$bot->pre.&#039;&#039;;
													
												/* 	$bot->api->answerCallbackQuery($callback_query_id);
												
													$bot->api->editMessageText([
													&#039;chat_id&#039; => $bot->api->body[&#039;callback_query&#039;][&#039;message&#039;][&#039;chat&#039;]["id"],
													&#039;message_id&#039; => $bot->api->body[&#039;callback_query&#039;][&#039;message&#039;][&#039;message_id&#039;],
													&#039;text&#039; => $text,
													&#039;parse_mode&#039; => "HTML",
													&#039;reply_markup&#039; => json_encode( [&#039;inline_keyboard&#039;=>$bot->keyboards[&#039;inline_change&#039;]] ),
													]); */
													
													$bot->api->answerCallbackQuery($callback_query_id);
													$bot->api->sendMessage([
														&#039;text&#039; => $text,
														&#039;reply_markup&#039; => json_encode( [&#039;inline_keyboard&#039;=>$merge]),
														&#039;disable_notification&#039; => TRUE,
														&#039;disable_web_page_preview&#039; => TRUE,
														&#039;parse_mode&#039;=> "HTML"
													]);
													usleep(100000);
													
													
												}
											}
											else
											{
												
												$text=&#039;–í –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç —É –í–∞—Å <b>–Ω–µ—Ç –Ω–∏ –æ–¥–Ω–æ–≥–æ –æ–±—ä—è–≤–ª–µ–Ω–∏—è</b>, —Ä–∞–∑–º–µ—â–µ–Ω–Ω–æ–≥–æ –≤ –∫–∞–Ω–∞–ª–µ!&#039;.PHP_EOL.&#039;&#039;.PHP_EOL.&#039;–í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ –≥–ª–∞–≤–Ω–æ–º –º–µ–Ω—é <b>–ò–∑–º–µ–Ω–∏—Ç—å –æ–±—ä—è–≤–ª–µ–Ω–∏–µ</b>.&#039;.$bot->pre.&#039;&#039;;
												$bot->api->answerCallbackQuery($callback_query_id);
												
												$bot->api->editMessageText([
												&#039;chat_id&#039; => $bot->api->body[&#039;callback_query&#039;][&#039;message&#039;][&#039;chat&#039;]["id"],
												&#039;message_id&#039; => $bot->api->body[&#039;callback_query&#039;][&#039;message&#039;][&#039;message_id&#039;],
												&#039;text&#039; => $text,
												&#039;parse_mode&#039; => "HTML",
												&#039;reply_markup&#039; => json_encode( [&#039;inline_keyboard&#039;=>$bot->keyboards[&#039;inline_change&#039;]] ),
												]);
											}
										}';
											
										file_put_contents($include, html_entity_decode($insert, ENT_QUOTES) . PHP_EOL . PHP_EOL,FILE_APPEND);
									}
								}
							}	
							$u++;	
						}
							
						$merge[]=$put;
						unset($put);
						
					}
					
					$insert='}';
					file_put_contents($include, $insert,FILE_APPEND);
					
					return $merge;
			
				
	}
	
////	
	public function callback_change_back_channel_records()
	{
		
		$text='–í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –≤ —Ä–∞–∑–¥–µ–ª <b>–ò–∑–º–µ–Ω–∏—Ç—å –æ–±—ä—è–≤–ª–µ–Ω–∏–µ</b> –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é <b>–ü—Ä–æ–¥–∞—Ç—å.</b>'.$this->pre.'';
		
		$this->callbackAnswer( $text, $this->keyboards['inline_change']);
		usleep(100000);
	}
	
////	
	public function callback_change_exit_channel_records()
	{
		
		if($this->cmd_isadmin())
		{
			
			if(isset($this->api->body['callback_query']["id"]))
			{
				$callback_query_id=$this->api->body['callback_query']["id"];
				$this->api->answerCallbackQuery($callback_query_id);
			}
		
			$text='–í—ã –≤—ã—à–ª–∏ –≤ <b>–ì–ª–∞–≤–Ω–æ–µ –ú–µ–Ω—é</b>.'.$this->pre.'';
			
			$this->api->sendMessage([
			'text' => $text,
			'reply_markup' => json_encode( ['inline_keyboard'=>$this->keyboards['inline_default_admin']]),
			'disable_notification' => TRUE,
			'disable_web_page_preview' => TRUE,
			'parse_mode'=> "HTML"
			]);
			
			
			//$this->callbackAnswer( $text, $this->keyboards['inline_default_admin']);
		}
		else
		{
			if(isset($this->api->body['callback_query']["id"]))
			{
				$callback_query_id=$this->api->body['callback_query']["id"];
				$this->api->answerCallbackQuery($callback_query_id);
			}
		
			$text='–í—ã –≤—ã—à–ª–∏ –≤ <b>–ì–ª–∞–≤–Ω–æ–µ –ú–µ–Ω—é</b>.'.$this->pre.'';
			
			$this->api->sendMessage([
			'text' => $text,
			'reply_markup' => json_encode( ['inline_keyboard'=>$this->keyboards['inline_default']]),
			'disable_notification' => TRUE,
			'disable_web_page_preview' => TRUE,
			'parse_mode'=> "HTML"
			]);
			//$this->callbackAnswer( $text, $this->keyboards['inline_default']);
		}
	}	
/////
/* 	
	public function callback_change_channel_records()
	{
		
		$con_sql2=$this->cmd_sql();
		$tab='tabmain'.$this->api->chatId.'';
		$query1=mysqli_query($con_sql2, 'SELECT 1 FROM '.$tab.' WHERE pic!="0"');
		$con1=mysqli_num_rows($query1);
		
		if($con1!=0)
		{
		
			$query=mysqli_query($con_sql2, 'SELECT * FROM '.$tab.' WHERE messid!="0" ORDER by id ASC');
			usleep(250000);
			$con=mysqli_num_rows($query);
			
			if($con!=0)
			{
			
				for($i=0;$i<$con;$i++)
				{
					mysqli_data_seek($query, $i);
					$row[$i]=mysqli_fetch_row($query);
				}
				usleep(250000);
				
				for($i=0;$i<$con;$i++)
				{
				
					$text='‚ö°Ô∏è‚ö°Ô∏è‚ö°Ô∏è‚ö°Ô∏è‚ö°Ô∏è‚ö°Ô∏è‚ö°Ô∏è‚ö°Ô∏è‚ö°Ô∏è‚ö°Ô∏è‚ö°Ô∏è‚ö°Ô∏è‚ö°Ô∏è‚ö°Ô∏è‚ö°Ô∏è‚ö°Ô∏è‚ö°Ô∏è‚ö°Ô∏è'.PHP_EOL.'<b>ID —Ç–æ–≤–∞—Ä–∞ ‚Ññ '.$row[$i][11].'</b>';
					
					$this->api->sendMessage([
					'text' => $text,
					//'reply_markup' => json_encode($this->keyboards['default1']),
					'disable_notification' => TRUE,
					'disable_web_page_preview' => TRUE,
					'parse_mode'=> "HTML"
					]);
					

					$type=$this->convert_rus($row[$i][1]);
					$cat=$this->convert_rus($row[$i][2]);
					$gender=$this->convert_rus($row[$i][3]);
					$cond=$this->convert_rus($row[$i][12]);
					

					$caption='üìñ–ö–∞—Ç–µ–≥–æ—Ä–∏—è: <b>'.$type.'</b>'.PHP_EOL.'üßæ–í–∏–¥: <b>'.$cat.'</b>'.PHP_EOL.'üë®‚Äçüë©‚Äçüë¶–ü–æ–ª: <b>'.$gender.'</b>'.PHP_EOL.'–°–æ—Å—Ç–æ—è–Ω–∏–µ: <b>'.$cond.'</b>'.PHP_EOL.'¬ÆÔ∏è–ë—Ä–µ–Ω–¥: <b>'.$row[$i][4].'</b>'.PHP_EOL.'‚ÜïÔ∏è–†–∞–∑–º–µ—Ä: <b>'.$row[$i][5].'</b>'.PHP_EOL.'üíµ–¶–µ–Ω–∞: <b>'.$row[$i][6].'</b>'.PHP_EOL.'üìã–û–ø–∏—Å–∞–Ω–∏–µ: '.$row[$i][7].''.PHP_EOL.'<b>ID —Ç–æ–≤–∞—Ä–∞ ‚Ññ '.$row[$i][11].'</b>';
					
					$photo=$row[$i][8];
					
					if(preg_match('/;/', $photo)==FALSE)
					{
						$this->api->sendPhoto([
						'photo' => $photo,
						'caption' => $caption,
						//'reply_markup' => json_encode($this->keyboards['default1']),
						'disable_notification' => TRUE,
						'parse_mode' => "HTML"
						]);
						usleep(250000);
					
					}
					else
					{
						$media=[];
						$temp=explode(';', $photo);
						$cnt=count($temp);
						for($o=0;$o<$cnt;$o++)
						{
						
						
							if($o==0)
							{
								$put=['type' => 'photo', 'media' =>  ''.$temp[$o].'', 'caption' => ''.$caption.'', 'parse_mode' => "HTML" ];
							}
							else
							{
								$put=['type' => 'photo', 'media' =>  ''.$temp[$o].'' ];
							}
					
							$media[$o]=$put;
						}
						
						
						$this->api->sendMediaGroup([
						'media' => json_encode($media),
						]);
						usleep(350000);
					}
					
				}
				
				$text='–°–≤–µ—Ä—Ö—É –ø–æ–∫–∞–∑–∞–Ω—ã –í–∞—à–∏ —Ç–æ–≤–∞—Ä—ã, —Ä–∞–∑–º–µ—â–µ–Ω–Ω—ã–µ –≤ –∫–∞–Ω–∞–ª–µ.'.PHP_EOL.''.PHP_EOL.'–í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ –º–µ–Ω—é <b>–ò–∑–º–µ–Ω–µ–Ω–∏—Ç—å —Ç–æ–≤–∞—Ä</b>. –í—ã–±–∏—Ä–∏—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–π –í–∞—Å —Ä–∞–∑–¥–µ–ª –Ω–∞ –∫–Ω–æ–ø–∫–∞—Ö —Å–Ω–∏–∑—É.';
				
				if(isset($this->api->body['callback_query']["id"]))
				{
					$callback_query_id=$this->api->body['callback_query']["id"];
					$this->api->answerCallbackQuery($callback_query_id);
				}
				
				$this->api->sendMessage([
					'text' => $text,
					'reply_markup' => json_encode( ['inline_keyboard'=>$this->keyboards['inline_change']]),
					'disable_notification' => TRUE,
					'disable_web_page_preview' => TRUE,
					'parse_mode'=> "HTML"
				]);
				
			}
			else
			{
				$text='–£ –í–∞—Å –µ—â–µ –Ω–µ—Ç –Ω–∏ –æ–¥–Ω–æ–≥–æ —Ç–æ–≤–∞—Ä–∞, —Ä–∞–∑–º–µ—â–µ–Ω–Ω–æ–≥–æ –≤ –∫–∞–Ω–∞–ª–µ!'.PHP_EOL.'–í–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å –ø–æ–¥–º–µ–Ω—é –†–∞–∑–º–µ—Å—Ç–∏—Ç—å –≤ –∫–∞–Ω–∞–ª–µ –º–µ–Ω—é –ò–∑–º–µ–Ω–∏—Ç—å –æ–±—ä—è–≤–ª–µ–Ω–∏–µ.';
				$this->callbackAnswer( $text, $this->keyboards['inline_change']);
			}
		}
		else
		{
			$text='–í—ã –µ—â–µ –Ω–µ –¥–æ–±–∞–≤–∏–ª–∏ –Ω–∏ –æ–¥–Ω–æ–≥–æ —Ç–æ–≤–∞—Ä–∞!'.PHP_EOL.'–í–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å –º–µ–Ω—é –î–æ–±–∞–≤–∏—Ç—å —Ç–æ–≤–∞—Ä –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –º–µ–Ω—é –ü—Ä–æ–¥–∞—Ç—å.';
			$this->callbackAnswer( $text, $this->keyboards['inline_sell']);
		}
		//$this->callback_sell_delete();
		
		$this->api->sendMessage([
			'text' => $text,
			'reply_markup' => json_encode( ['inline_keyboard'=>$this->keyboards['inline_delete']]),
			'disable_notification' => TRUE,
			'disable_web_page_preview' => TRUE,
			'parse_mode'=> "HTML"
			]);
	}
 */	
/////




/////	
	public function callback_change_all_records()
	{
		
		$con_sql2=$this->cmd_sql();
		
		$tabmain='tabmain'.$this->api->chatId.'';
		
		if(mysqli_num_rows(mysqli_query($con_sql2, 'SELECT 1 FROM '.$tabmain.' WHERE pic!="0" AND messid="0"'))==0)
		{
			$text='–í –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç —É –í–∞—Å <b>–Ω–µ—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã—Ö –æ–±—ä—è–≤–ª–µ–Ω–∏–π</b> –¥–ª—è —Ä–∞–∑–º–µ—â–µ–Ω–∏—è –≤ –∫–∞–Ω–∞–ª–µ!'.PHP_EOL.''.PHP_EOL.'–í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ –≥–ª–∞–≤–Ω–æ–º –º–µ–Ω—é <b>–ò–∑–º–µ–Ω–∏—Ç—å –æ–±—ä—è–≤–ª–µ–Ω–∏–µ</b>.'.$this->pre.'';
			$this->callbackAnswer( $text, $this->keyboards['inline_change']);
		}

		else
		{
			
			$merge=$this->cmd_change_all_records();
			usleep(100000);
			
			if (array_filter($merge) !== [])
			{
				$merge[] = [['text' => '‚¨ÖÔ∏è–ù–∞–∑–∞–¥', 'callback_data' => 'change_back_channel_records'], ['text' => '‚§¥Ô∏è–í—ã–π—Ç–∏', 'callback_data' => 'change_exit_channel_records']];
				
				$text='–í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ —Ä–∞–∑–¥–µ–ª–µ <b>–ú–æ–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–µ –¥–ª—è –ø—É–±–ª–∏–∫–∞—Ü–∏–∏</b>. –í—ã–±–µ—Ä–∏—Ç–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–π <b>‚Ññ –æ–±—ä—è–≤–ª–µ–Ω–∏—è</b>, —á—Ç–æ–±—ã –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –µ–≥–æ.'.$this->pre.'';
				$this->callbackAnswer( $text, $merge);
			}
			else
			{
				$text='–í –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç —É –í–∞—Å –Ω–µ—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã—Ö –æ–±—ä—è–≤–ª–µ–Ω–∏–π –¥–ª—è –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ –≤ –∫–∞–Ω–∞–ª–µ!'.PHP_EOL.''.PHP_EOL.'–í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ —Ä–∞–∑–¥–µ–ª–µ <b>–ò–∑–º–µ–Ω–∏—Ç—å –æ–±—ä—è–≤–ª–µ–Ω–∏–µ</b>.'.$this->pre.'';
				$this->callbackAnswer( $text, $this->keyboards['inline_change']);
			}
			
		}
	
	}
	
	
	
/////
	public function cmd_change_all_records()
	{
				
		$con_sql2=$this->cmd_sql();
		
		$tabmain='tabmain'.$this->api->chatId.'';
			
			
				$query1=mysqli_query($con_sql2, 'SELECT * FROM '.$tabmain.' WHERE pic!="0" AND messid="0" ORDER by id ASC');
				usleep(100000);
				$con1=mysqli_num_rows($query1);
				
					$table=[];
					
					for($i=0;$i<$con1;$i++)
					{
						mysqli_data_seek($query1, $i);
						$row1[$i]=mysqli_fetch_row($query1);
						$table[]=$row1[$i][0];	
					}
					usleep(100000);
					
					$cnt=count($table);
					$maxbuttons=1;
					$ceil=ceil($cnt/$maxbuttons);
					
					
					$include=''.dirname(__FILE__).'/include'.$this->api->chatId.'.php';
					
					if(file_exists($include)==FALSE)
					{
						touch($include);
						
						$insert='<?php
				
				
						class TelegramBotfunc{';
						file_put_contents($include, $insert . PHP_EOL,FILE_APPEND);
						
					}
					else
					{
						$getinclude=file($include);
						unset($getinclude[array_key_last($getinclude)]);
						file_put_contents($include, $getinclude);
					}
					
					$u=0;
					$merge=[];
					
					for($i1=0;$i1<$ceil;$i1++)
					{
						$put=[];
						for($i2=0;$i2<$maxbuttons;$i2++)
						{	
							if(isset($table[$u]))
							{
								//$tabmain='tabmain'.$table[$u].'';
								if(mysqli_num_rows(mysqli_query($con_sql2, 'SELECT DISTINCT id FROM '.$tabmain.' WHERE pic!="0" AND messid="0"'))!=0)
								{
									$buttext="‚Ññ$table[$u]";
									$put[]=["text" => "$buttext", "callback_data" => 'chan_chan_allrecor_'.$this->api->chatId.'_'.$table[$u].''];
									
									if(preg_match('/callback_chan_chan_allrecor_'.$this->api->chatId.'_'.$table[$u].'/', file_get_contents($include))==FALSE)
									{
										$insert='
										public function callback_chan_chan_allrecor_'.$this->api->chatId.'_'.$table[$u].'()
										{	
											$bot = new TestBot;
											$bot->api->getWebhookUpdate();
											$callback_query_id=$bot->api->body[&#039;callback_query&#039;]["id"];
											
											$con_sql2=$bot->cmd_sql();
											$tabmain=&#039;tabmain&#039;.$bot->api->chatId.&#039;&#039;;
											$query1=mysqli_query($con_sql2, &#039;SELECT DISTINCT id FROM &#039;.$tabmain.&#039; WHERE pic!="0" AND messid="0"&#039;);
											usleep(100000);
											$con1=mysqli_num_rows($query1);
		
											if($con1!=0)
											{
		
												$query=mysqli_query($con_sql2, &#039;SELECT * FROM &#039;.$tabmain.&#039; WHERE id="'.$table[$u].'"&#039;);
												usleep(100000);
												$con=mysqli_num_rows($query);
													
												for($i=0;$i<$con;$i++)
												{
													mysqli_data_seek($query, $i);
													$row[$i]=mysqli_fetch_row($query);
												}
												

												$type=$bot->convert_rus($row[0][1]);
												$cat=$bot->convert_rus($row[0][2]);
												$gender=$bot->convert_rus($row[0][3]);
												$cond=$bot->convert_rus($row[0][12]);
												
							
												$caption=&#039;üìñ–ö–∞—Ç–µ–≥–æ—Ä–∏—è: <b>&#039;.$type.&#039;</b>&#039;.PHP_EOL.&#039;üßæ–í–∏–¥: <b>&#039;.$cat.&#039;</b>&#039;.PHP_EOL.&#039;üë®‚Äçüë©‚Äçüë¶–ü–æ–ª: <b>&#039;.$gender.&#039;</b>&#039;.PHP_EOL.&#039;üéè–°–æ—Å—Ç–æ—è–Ω–∏–µ: <b>&#039;.$cond.&#039;</b>&#039;.PHP_EOL.&#039;¬ÆÔ∏è–ë—Ä–µ–Ω–¥: <b>&#039;.$row[0][4].&#039;</b>&#039;.PHP_EOL.&#039;‚ÜïÔ∏è–†–∞–∑–º–µ—Ä: <b>&#039;.$row[0][5].&#039;</b>&#039;.PHP_EOL.&#039;üíµ–¶–µ–Ω–∞: <b>&#039;.$row[0][6].&#039;</b>&#039;.PHP_EOL.&#039;üìã–û–ø–∏—Å–∞–Ω–∏–µ: &#039;.$row[0][7].&#039;&#039;.PHP_EOL.&#039;&#039;.PHP_EOL.&#039;<b>–û–±—ä—è–≤–ª–µ–Ω–∏–µ ‚Ññ &#039;.$row[0][0].&#039;</b>&#039;;
												
												$photo=$row[0][8];
												
												if(preg_match(&#039;/;/&#039;, $photo)==FALSE)
												{
													$bot->api->sendPhoto([
													&#039;photo&#039; => $photo,
													&#039;caption&#039; => $caption,
													//&#039;reply_markup&#039; => json_encode($bot->keyboards[&#039;default1&#039;]),
													&#039;disable_notification&#039; => TRUE,
													&#039;parse_mode&#039; => "HTML"
													]);
													usleep(250000);
												
												}
												else
												{
													$media=[];
													$temp=explode(&#039;;&#039;, $photo);
													$cnt=count($temp);
													for($o=0;$o<$cnt;$o++)
													{
													
													
														if($o==0)
														{
															$put=[&#039;type&#039; => &#039;photo&#039;, &#039;media&#039; =>  &#039;&#039;.$temp[$o].&#039;&#039;, &#039;caption&#039; => &#039;&#039;.$caption.&#039;&#039;, &#039;parse_mode&#039; => "HTML" ];
														}
														else
														{
															$put=[&#039;type&#039; => &#039;photo&#039;, &#039;media&#039; =>  &#039;&#039;.$temp[$o].&#039;&#039; ];
														}
												
														$media[$o]=$put;
													}
													
													
													$bot->api->sendMediaGroup([
													&#039;media&#039; => json_encode($media),
													]);
													usleep(350000);
												}
					
				
				
												$text=&#039;–°–≤–µ—Ä—Ö—É –ø–æ–∫–∞–∑–∞–Ω–æ –í–∞—à–µ –æ–±—ä—è–≤–ª–µ–Ω–∏–µ <b>‚Ññ'.$table[$u].'</b> –¥–ª—è –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ –≤ –∫–∞–Ω–∞–ª–µ.&#039;.PHP_EOL.&#039;&#039;.PHP_EOL.&#039;–í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ –º–µ–Ω—é <b>–ú–æ–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–µ –¥–ª—è –ø—É–±–ª–∏–∫–∞—Ü–∏–∏</b>. –í—ã–±–∏—Ä–∏—Ç–µ ‚Ññ –æ–±—ä—è–≤–ª–µ–Ω–∏—è –Ω–∞ –∫–Ω–æ–ø–∫–∞—Ö —Å–Ω–∏–∑—É, —á—Ç–æ–±—ã –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –Ω–µ–º.&#039;.$bot->pre.&#039;&#039;;
												

												$merge=$bot->cmd_change_all_records();
												usleep(100000);
												
												if (array_filter($merge) !== [])
												{
												
													$merge[] = [[&#039;text&#039; => &#039;‚¨ÖÔ∏è–ù–∞–∑–∞–¥&#039;, &#039;callback_data&#039; => &#039;change_back_channel_records&#039;], [&#039;text&#039; => &#039;‚§¥Ô∏è–í—ã–π—Ç–∏&#039;, &#039;callback_data&#039; => &#039;change_exit_channel_records&#039;]];
													
													/* $bot->api->answerCallbackQuery($callback_query_id);
													$bot->api->editMessageText([
													&#039;chat_id&#039; => $bot->api->body[&#039;callback_query&#039;][&#039;message&#039;][&#039;chat&#039;]["id"],
													&#039;message_id&#039; => $bot->api->body[&#039;callback_query&#039;][&#039;message&#039;][&#039;message_id&#039;],
													&#039;text&#039; => $text,
													&#039;parse_mode&#039; => "HTML",
													&#039;reply_markup&#039; => json_encode( [&#039;inline_keyboard&#039;=>$merge] ),
													]);
													usleep(100000); */
													
													$bot->api->answerCallbackQuery($callback_query_id);
													$bot->api->sendMessage([
														&#039;text&#039; => $text,
														&#039;reply_markup&#039; => json_encode( [&#039;inline_keyboard&#039;=>$merge]),
														&#039;disable_notification&#039; => TRUE,
														&#039;disable_web_page_preview&#039; => TRUE,
														&#039;parse_mode&#039;=> "HTML"
													]);
													usleep(100000);
												}
												else
												{
													$text=&#039;–°–≤–µ—Ä—Ö—É –ø–æ–∫–∞–∑–∞–Ω–æ –í–∞—à–µ –æ–±—ä—è–≤–ª–µ–Ω–∏–µ <b>‚Ññ'.$table[$u].'</b> –¥–ª—è –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ –≤ –∫–∞–Ω–∞–ª–µ.&#039;.PHP_EOL.&#039;&#039;.PHP_EOL.&#039;–í –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç —É –í–∞—Å –Ω–µ—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã—Ö –æ–±—ä—è–≤–ª–µ–Ω–∏–π –¥–ª—è –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ –≤ –∫–∞–Ω–∞–ª–µ!&#039;.PHP_EOL.&#039;&#039;.PHP_EOL.&#039;–í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ –≥–ª–∞–≤–Ω–æ–º –º–µ–Ω—é <b>–ò–∑–º–µ–Ω–∏—Ç—å –æ–±—ä—è–≤–ª–µ–Ω–∏–µ</b>.&#039;.$bot->pre.&#039;&#039;;
													
													/* $bot->api->answerCallbackQuery($callback_query_id);
													$bot->api->editMessageText([
													&#039;chat_id&#039; => $bot->api->body[&#039;callback_query&#039;][&#039;message&#039;][&#039;chat&#039;]["id"],
													&#039;message_id&#039; => $bot->api->body[&#039;callback_query&#039;][&#039;message&#039;][&#039;message_id&#039;],
													&#039;text&#039; => $text,
													&#039;parse_mode&#039; => "HTML",
													&#039;reply_markup&#039; => json_encode( [&#039;inline_keyboard&#039;=>$bot->keyboards[&#039;inline_change&#039;]] ),
													]); */
													
													$bot->api->answerCallbackQuery($callback_query_id);
													$bot->api->sendMessage([
														&#039;text&#039; => $text,
														&#039;reply_markup&#039; => json_encode( [&#039;inline_keyboard&#039;=>$merge]),
														&#039;disable_notification&#039; => TRUE,
														&#039;disable_web_page_preview&#039; => TRUE,
														&#039;parse_mode&#039;=> "HTML"
													]);
													usleep(100000);
												}
											}
											else
											{
												
												$text=&#039;–í –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç —É –í–∞—Å –Ω–µ—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã—Ö –æ–±—ä—è–≤–ª–µ–Ω–∏–π –¥–ª—è –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ –≤ –∫–∞–Ω–∞–ª–µ!&#039;.PHP_EOL.&#039;&#039;.PHP_EOL.&#039;–í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ –≥–ª–∞–≤–Ω–æ–º –º–µ–Ω—é <b>–ò–∑–º–µ–Ω–∏—Ç—å –æ–±—ä—è–≤–ª–µ–Ω–∏–µ</b>.&#039;.$bot->pre.&#039;&#039;;
												$bot->api->answerCallbackQuery($callback_query_id);
												
												$bot->api->editMessageText([
												&#039;chat_id&#039; => $bot->api->body[&#039;callback_query&#039;][&#039;message&#039;][&#039;chat&#039;]["id"],
												&#039;message_id&#039; => $bot->api->body[&#039;callback_query&#039;][&#039;message&#039;][&#039;message_id&#039;],
												&#039;text&#039; => $text,
												&#039;parse_mode&#039; => "HTML",
												&#039;reply_markup&#039; => json_encode( [&#039;inline_keyboard&#039;=>$bot->keyboards[&#039;inline_change&#039;]] ),
												]);
											}
										}';
											
										file_put_contents($include, html_entity_decode($insert, ENT_QUOTES) . PHP_EOL . PHP_EOL,FILE_APPEND);
									}
								}
							}	
							$u++;	
						}
							
						$merge[]=$put;
						unset($put);
						
					}
					
					$insert='}';
					file_put_contents($include, $insert,FILE_APPEND);
					
					return $merge;
			
				
	}




/* 
	public function callback_change_all_records()
	{
		
		$con_sql2=$this->cmd_sql();
		$tab='tabmain'.$this->api->chatId.'';
		$query1=mysqli_query($con_sql2, 'SELECT 1 FROM '.$tab.' WHERE pic!="0" AND messid="0"');
		$con1=mysqli_num_rows($query1);
		
		if($con1!=0)
		{
		
			$query=mysqli_query($con_sql2, 'SELECT * FROM '.$tab.' WHERE pic!="0" AND messid="0" ORDER by id ASC');
			usleep(250000);
			$con=mysqli_num_rows($query);
				
			for($i=0;$i<$con;$i++)
			{
				mysqli_data_seek($query, $i);
				$row[$i]=mysqli_fetch_row($query);
			}
			usleep(250000);
			
			
			$text='‚ö°Ô∏è‚ö°Ô∏è‚ö°Ô∏è‚ö°Ô∏è‚ö°Ô∏è‚ö°Ô∏è‚ö°Ô∏è‚ö°Ô∏è‚ö°Ô∏è‚ö°Ô∏è‚ö°Ô∏è‚ö°Ô∏è‚ö°Ô∏è‚ö°Ô∏è‚ö°Ô∏è‚ö°Ô∏è‚ö°Ô∏è‚ö°Ô∏è'.PHP_EOL.''.PHP_EOL.'';
			$this->api->sendMessage([
				'text' => $text,
				'disable_notification' => TRUE,
				'disable_web_page_preview' => TRUE,
				'parse_mode'=> "HTML"
			]);
			
			for($i=0;$i<$con;$i++)
			{
			
				$text='<b>–û–±—ä—è–≤–ª–µ–Ω–∏–µ ‚Ññ'.$row[$i][0].'</b>';
				
				$this->api->sendMessage([
				'text' => $text,
				//'reply_markup' => json_encode($this->keyboards['default1']),
				'disable_notification' => TRUE,
				'disable_web_page_preview' => TRUE,
				'parse_mode'=> "HTML"
				]);
				
				$type=$this->convert_rus($row[$con-1][1]);
				$cat=$this->convert_rus($row[$con-1][2]);
				$gender=$this->convert_rus($row[$con-1][3]);
				$cond=$this->convert_rus($row[$con-1][12]);
				
				
				$caption='üìñ–ö–∞—Ç–µ–≥–æ—Ä–∏—è: <b>'.$type.'</b>'.PHP_EOL.'üßæ–í–∏–¥: <b>'.$cat.'</b>'.PHP_EOL.'üë®‚Äçüë©‚Äçüë¶–ü–æ–ª: <b>'.$gender.'</b>'.PHP_EOL.'–°–æ—Å—Ç–æ—è–Ω–∏–µ: <b>'.$cond.'</b>'.PHP_EOL.'¬ÆÔ∏è–ë—Ä–µ–Ω–¥: <b>'.$row[$con-1][4].'</b>'.PHP_EOL.'‚ÜïÔ∏è–†–∞–∑–º–µ—Ä: <b>'.$row[$con-1][5].'</b>'.PHP_EOL.'üíµ–¶–µ–Ω–∞: <b>'.$row[$con-1][6].'</b>'.PHP_EOL.'üìã–û–ø–∏—Å–∞–Ω–∏–µ: '.$row[$con-1][7].''.PHP_EOL.''.PHP_EOL.'<b>–û–±—ä—è–≤–ª–µ–Ω–∏–µ ‚Ññ'.$row[$i][0].'</b>';
				
				$photo=$row[$i][8];
				
				if(preg_match('/;/', $photo)==FALSE)
				{
					$this->api->sendPhoto([
					'photo' => $photo,
					'caption' => $caption,
					//'reply_markup' => json_encode($this->keyboards['default1']),
					'disable_notification' => TRUE,
					'parse_mode' => "HTML"
					]);
					usleep(250000);
				
				}
				else
				{
					$media=[];
					$temp=explode(';', $photo);
					$cnt=count($temp);
					for($o=0;$o<$cnt;$o++)
					{
					
					
						if($o==0)
						{
							$put=['type' => 'photo', 'media' =>  ''.$temp[$o].'', 'caption' => ''.$caption.'', 'parse_mode' => "HTML" ];
						}
						else
						{
							$put=['type' => 'photo', 'media' =>  ''.$temp[$o].'' ];
						}
				
						$media[$o]=$put;
					}
					
					
					$this->api->sendMediaGroup([
					'media' => json_encode($media),
					]);
					usleep(350000);
				}
			}
			
			if(isset($this->api->body['callback_query']["id"]))
				{
					$callback_query_id=$this->api->body['callback_query']["id"];
					$this->api->answerCallbackQuery($callback_query_id);
				}
			
			
			$text=''.PHP_EOL.''.PHP_EOL.'–°–≤–µ—Ä—Ö—É –ø–æ–∫–∞–∑–∞–Ω—ã –≤—Å–µ –í–∞—à–∏ —Ç–æ–≤–∞—Ä—ã, –∫–æ—Ç–æ—Ä—ã–µ –Ω–µ —Ä–∞–∑–º–µ—â–µ–Ω—ã –≤ –∫–∞–Ω–∞–ª–µ.'.PHP_EOL.''.PHP_EOL.'–í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ –ø–æ–¥–º–µ–Ω—é –ò–∑–º–µ–Ω–∏—Ç—å –æ–±—ä—è–≤–ª–µ–Ω–∏–µ –º–µ–Ω—é –ü—Ä–æ–¥–∞—Ç—å —Ç–æ–≤–∞—Ä.';
			$this->api->sendMessage([
				'text' => $text,
				'reply_markup' => json_encode( ['inline_keyboard'=>$this->keyboards['inline_change']]),
				'disable_notification' => TRUE,
				'disable_web_page_preview' => TRUE,
				'parse_mode'=> "HTML"
			]);
		}
		else
		{
			$text='–£ –í–∞—Å –Ω–µ—Ç –Ω–∏ –æ–¥–Ω–æ–≥–æ —Ç–æ–≤–∞—Ä–∞, –∫–æ—Ç–æ—Ä—ã–π –Ω–µ —Ä–∞–∑–º–µ—â–µ–Ω –≤ –∫–∞–Ω–∞–ª–µ. –í–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å –º–µ–Ω—é –û—Ç–ø—Ä–∞–≤–∏—Ç—å –≤ –∫–∞–Ω–∞–ª –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –º–µ–Ω—é –ò–∑–º–µ–Ω–∏—Ç—å –æ–±—ä—è–≤–ª–µ–Ω–∏–µ.';
			$this->callbackAnswer( $text, $this->keyboards['inline_change']);
		}
	
		
	}

 */

/////	
/* 	public function callback_change_delete_records_channel()
	{
		
		$con_sql2=$this->cmd_sql();
		
		$tabmain='tabmain'.$this->api->chatId.'';
		
		if(mysqli_num_rows(mysqli_query($con_sql2, 'SELECT 1 FROM '.$tabmain.' WHERE pic!="0" AND messid!="0"'))==0)
		{
			$text='–í –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç —É –í–∞—Å –Ω–µ—Ç –Ω–∏ –æ–¥–Ω–æ–≥–æ —Ç–æ–≤–∞—Ä–∞, —Ä–∞–∑–º–µ—â–µ–Ω–Ω–æ–≥–æ –≤ –∫–∞–Ω–∞–ª–µ!'.PHP_EOL.''.PHP_EOL.'–í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ –≥–ª–∞–≤–Ω–æ–º –º–µ–Ω—é <b>–ò–∑–º–µ–Ω–∏—Ç—å –æ–±—ä—è–≤–ª–µ–Ω–∏–µ</b>.';
			$this->callbackAnswer( $text, $this->keyboards['inline_change']);
		}

		else
		{
			
			$merge=$this->cmd_change_delete_records_channel();
			usleep(100000);
			
			if (array_filter($merge) !== [])
			{
				$merge[] = [['text' => '‚¨ÖÔ∏è–ù–∞–∑–∞–¥', 'callback_data' => 'change_back_delete_records'], ['text' => '‚§¥Ô∏è–í—ã–π—Ç–∏', 'callback_data' => 'change_exit_delete_records']];
				
				$text='–í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ <b>–£–¥–∞–ª–∏—Ç—å —Ç–æ–≤–∞—Ä—ã –≤ –∫–∞–Ω–∞–ª–µ</b>. –í—ã–±–µ—Ä–∏—Ç–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–π ID —Ç–æ–≤–∞—Ä–∞ ‚Ññ, —á—Ç–æ–±—ã —É–¥–∞–ª–∏—Ç—å –µ–≥–æ.';
				$this->callbackAnswer( $text, $merge);
			}
			else
			{
				$text='–í –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç —É –í–∞—Å <b>–Ω–µ—Ç –Ω–∏ –æ–¥–Ω–æ–≥–æ —Ç–æ–≤–∞—Ä–∞</b>, —Ä–∞–∑–º–µ—â–µ–Ω–Ω–æ–≥–æ –≤ –∫–∞–Ω–∞–ª–µ!'.PHP_EOL.''.PHP_EOL.'–í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ –≥–ª–∞–≤–Ω–æ–º –º–µ–Ω—é <b>–ò–∑–º–µ–Ω–∏—Ç—å –æ–±—ä—è–≤–ª–µ–Ω–∏–µ</b>.';
				$this->callbackAnswer( $text, $this->keyboards['inline_change']);
			}
			
		}
	
	}

 */
////	
	public function callback_change_back_delete_records()
	{
		
		$text='–í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –≤ –ø–æ–¥–º–µ–Ω—é <b>–ò–∑–º–µ–Ω–∏—Ç—å –æ–±—ä—è–≤–ª–µ–Ω–∏–µ</b> –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é –ü—Ä–æ–¥–∞—Ç—å.'.$this->pre.'';
		
		$this->callbackAnswer( $text, $this->keyboards['inline_change']);
		usleep(100000);
	}
	
////	
	public function callback_change_exit_delete_records()
	{
		
		if($this->cmd_isadmin())
		{
			$text='–í—ã –≤—ã—à–ª–∏ –≤ <b>–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é</b>.'.$this->pre.'';
			//$this->callbackAnswer( $text, $this->keyboards['inline_default_admin']);
			
			if(isset($this->api->body['callback_query']["id"]))
			{
				$callback_query_id=$this->api->body['callback_query']["id"];
				$this->api->answerCallbackQuery($callback_query_id);
			}
			
			$this->api->sendMessage([
				'text' => $text,
				'reply_markup' => json_encode( ['inline_keyboard'=>$this->keyboards['inline_default_admin']]),
				'disable_notification' => TRUE,
				'disable_web_page_preview' => TRUE,
				'parse_mode'=> "HTML"
				]);
				usleep(100000);
		}
		else
		{
			$text='–í—ã –≤—ã—à–ª–∏ –≤ <b>–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é</b>.'.$this->pre.'';
			//$this->callbackAnswer( $text, $this->keyboards['inline_default']);
			
			if(isset($this->api->body['callback_query']["id"]))
			{
				$callback_query_id=$this->api->body['callback_query']["id"];
				$this->api->answerCallbackQuery($callback_query_id);
			}
			
			$this->api->sendMessage([
				'text' => $text,
				'reply_markup' => json_encode( ['inline_keyboard'=>$this->keyboards['inline_default']]),
				'disable_notification' => TRUE,
				'disable_web_page_preview' => TRUE,
				'parse_mode'=> "HTML"
				]);
				usleep(100000);
		}
	}	


/* 
/////
	public function cmd_change_delete_records_channel()
	{
				
		$con_sql2=$this->cmd_sql();
		
		$tabmain='tabmain'.$this->api->chatId.'';
			
			
				$query1=mysqli_query($con_sql2, 'SELECT DISTINCT messid FROM '.$tabmain.' WHERE messid!="0"');
				usleep(100000);
				$con1=mysqli_num_rows($query1);
				
					$table=[];
					
					for($i=0;$i<$con1;$i++)
					{
						mysqli_data_seek($query1, $i);
						$row1[$i]=mysqli_fetch_row($query1);
						$table[]=$row1[$i][0];	
					}
					usleep(100000);
					
					$cnt=count($table);
					$maxbuttons=1;
					$ceil=ceil($cnt/$maxbuttons);
					
					
					
					$include=''.dirname(__FILE__).'/include'.$this->api->chatId.'.php';
					
					if(file_exists($include)==FALSE)
					{
						touch($include);
						
						$insert='<?php
				
				
						class TelegramBotfunc{';
						file_put_contents($include, $insert . PHP_EOL,FILE_APPEND);
						
					}
					else
					{
						$getinclude=file($include);
						unset($getinclude[array_key_last($getinclude)]);
						file_put_contents($include, $getinclude);
					}
					
					$u=0;
					$merge=[];
					
					for($i1=0;$i1<$ceil;$i1++)
					{
						$put=[];
						for($i2=0;$i2<$maxbuttons;$i2++)
						{	
							if(isset($table[$u]))
							{
								//$tabmain='tabmain'.$table[$u].'';
								if(mysqli_num_rows(mysqli_query($con_sql2, 'SELECT DISTINCT id FROM '.$tabmain.' WHERE messid!="0"'))!=0)
								{
									$buttext="$table[$u]";
									$put[]=["text" => "$buttext", "callback_data" => 'cha_del_rec_chan_'.$this->api->chatId.'_'.$table[$u].''];
									
									if(preg_match('/callback_cha_del_rec_chan_'.$this->api->chatId.'_'.$table[$u].'/', file_get_contents($include))==FALSE)
									{
										$insert='
										public function callback_cha_del_rec_chan_'.$this->api->chatId.'_'.$table[$u].'()
										{	
											$bot = new TestBot;
											$bot->api->getWebhookUpdate();
											$callback_query_id=$bot->api->body[&#039;callback_query&#039;]["id"];
											
											$con_sql2=$bot->cmd_sql();
											$tabmain=&#039;tabmain&#039;.$bot->api->chatId.&#039;&#039;;
											$query1=mysqli_query($con_sql2, &#039;SELECT DISTINCT messid FROM &#039;.$tabmain.&#039; WHERE messid!="0"&#039;);
											usleep(100000);
											$con1=mysqli_num_rows($query1);
		
											if($con1!=0)
											{
		
												$query=mysqli_query($con_sql2, &#039;SELECT * FROM &#039;.$tabmain.&#039; WHERE messid="'.$table[$u].'"&#039;);
												usleep(100000);
												$con=mysqli_num_rows($query);
													
												for($i=0;$i<$con;$i++)
												{
													mysqli_data_seek($query, $i);
													$row[$i]=mysqli_fetch_row($query);
												}
												

												$messageid=$row[0][11];
												$timeold=$row[0][10];
												$timediff=time()-$timeold;
												
												//if($timediff>172000)
												//{
													$text="<b><i>–¢–æ–≤–∞—Ä —É–¥–∞–ª–µ–Ω</i></b>";
												
													$bot->api->editMessageCaption([
													&#039;chat_id&#039; => $bot->mainchannel,
													&#039;message_id&#039; => $messageid,
													&#039;caption&#039; => $text,
													&#039;parse_mode&#039; => "HTML",
													//&#039;reply_markup&#039; => json_encode( [&#039;inline_keyboard&#039;=>$merge] ),
													]);
												//}
												else
												{
													$bot->api->deleteMessage([
													&#039;chat_id&#039; => $bot->mainchannel,
													&#039;message_id&#039; => $messageid
													]);
												}
												
												
												$query=mysqli_query($con_sql2, &#039;DELETE FROM &#039;.$tabmain.&#039; WHERE messid="'.$table[$u].'"&#039;);
												usleep(100000);
												
												
												$text=&#039;–í—ã–±—Ä–∞–Ω–Ω—ã–π ID —Ç–æ–≤–∞—Ä–∞ <b>‚Ññ'.$table[$u].'</b> —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω –∏–∑ –∫–∞–Ω–∞–ª–∞.&#039;.PHP_EOL.&#039;&#039;.PHP_EOL.&#039;–í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ –ø–æ–¥–º–µ–Ω—é <b>–£–¥–∞–ª–∏—Ç—å —Ç–æ–≤–∞—Ä –∏–∑ –∫–∞–Ω–∞–ª–∞</b>. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–∏—Ä–∏—Ç–µ ID —Ç–æ–≤–∞—Ä–∞, —á—Ç–æ–±—ã —É–¥–∞–ª–∏—Ç—å –µ–≥–æ.&#039;;
												

												$merge=$bot->cmd_change_delete_records_channel();
												usleep(100000);
												
												if (array_filter($merge) !== [])
												{
												
													$merge[] = [[&#039;text&#039; => &#039;‚¨ÖÔ∏è–ù–∞–∑–∞–¥&#039;, &#039;callback_data&#039; => &#039;change_back_delete_records&#039;], [&#039;text&#039; => &#039;‚§¥Ô∏è–í—ã–π—Ç–∏&#039;, &#039;callback_data&#039; => &#039;change_exit_delete_records&#039;]];
													
													$bot->api->answerCallbackQuery($callback_query_id);
													$bot->api->editMessageText([
													&#039;chat_id&#039; => $bot->api->body[&#039;callback_query&#039;][&#039;message&#039;][&#039;chat&#039;]["id"],
													&#039;message_id&#039; => $bot->api->body[&#039;callback_query&#039;][&#039;message&#039;][&#039;message_id&#039;],
													&#039;text&#039; => $text,
													&#039;parse_mode&#039; => "HTML",
													&#039;reply_markup&#039; => json_encode( [&#039;inline_keyboard&#039;=>$merge] ),
													]);
													usleep(100000);
												}
												else
												{
													$text=&#039;–í—ã–±—Ä–∞–Ω–Ω—ã–π ID —Ç–æ–≤–∞—Ä–∞ <b>‚Ññ'.$table[$u].'</b> —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω –∏–∑ –∫–∞–Ω–∞–ª–∞.&#039;.PHP_EOL.&#039;&#039;.PHP_EOL.&#039;–í –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç —É –í–∞—Å –Ω–µ—Ç –Ω–∏ –æ–¥–Ω–æ–≥–æ —Ç–æ–≤–∞—Ä–∞, —Ä–∞–∑–º–µ—â–µ–Ω–Ω–æ–≥–æ –≤ –∫–∞–Ω–∞–ª–µ!&#039;.PHP_EOL.&#039;&#039;.PHP_EOL.&#039;–í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ –≥–ª–∞–≤–Ω–æ–º –º–µ–Ω—é <b>–ò–∑–º–µ–Ω–∏—Ç—å –æ–±—ä—è–≤–ª–µ–Ω–∏–µ</b>.&#039;;
													
													$bot->api->answerCallbackQuery($callback_query_id);
												
													$bot->api->editMessageText([
													&#039;chat_id&#039; => $bot->api->body[&#039;callback_query&#039;][&#039;message&#039;][&#039;chat&#039;]["id"],
													&#039;message_id&#039; => $bot->api->body[&#039;callback_query&#039;][&#039;message&#039;][&#039;message_id&#039;],
													&#039;text&#039; => $text,
													&#039;parse_mode&#039; => "HTML",
													&#039;reply_markup&#039; => json_encode( [&#039;inline_keyboard&#039;=>$bot->keyboards[&#039;inline_change&#039;]] ),
													]);
												}
											}
											else
											{
												
												$text=&#039;–í—ã–±—Ä–∞–Ω–Ω—ã–π ID —Ç–æ–≤–∞—Ä–∞ <b>‚Ññ'.$table[$u].'</b> —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω –∏–∑ –∫–∞–Ω–∞–ª–∞.&#039;.PHP_EOL.&#039;–í –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç —É –í–∞—Å –Ω–µ—Ç –Ω–∏ –æ–¥–Ω–æ–≥–æ —Ç–æ–≤–∞—Ä–∞, —Ä–∞–∑–º–µ—â–µ–Ω–Ω–æ–≥–æ –≤ –∫–∞–Ω–∞–ª–µ!&#039;.PHP_EOL.&#039;&#039;.PHP_EOL.&#039;–í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ –≥–ª–∞–≤–Ω–æ–º –º–µ–Ω—é <b>–ò–∑–º–µ–Ω–∏—Ç—å –æ–±—ä—è–≤–ª–µ–Ω–∏–µ</b>.&#039;;
												$bot->api->answerCallbackQuery($callback_query_id);
												
												$bot->api->editMessageText([
												&#039;chat_id&#039; => $bot->api->body[&#039;callback_query&#039;][&#039;message&#039;][&#039;chat&#039;]["id"],
												&#039;message_id&#039; => $bot->api->body[&#039;callback_query&#039;][&#039;message&#039;][&#039;message_id&#039;],
												&#039;text&#039; => $text,
												&#039;parse_mode&#039; => "HTML",
												&#039;reply_markup&#039; => json_encode( [&#039;inline_keyboard&#039;=>$bot->keyboards[&#039;inline_change&#039;]] ),
												]);
											}
										}';
											
										file_put_contents($include, html_entity_decode($insert, ENT_QUOTES) . PHP_EOL . PHP_EOL,FILE_APPEND);
									}
								}
							}	
							$u++;	
						}
							
						$merge[]=$put;
						unset($put);
						
					}
					
					$insert='}';
					file_put_contents($include, $insert,FILE_APPEND);
					
					return $merge;
			
				
	} */







/////	
	public function callback_change_delete_records_other()
	{
		
		$con_sql2=$this->cmd_sql();
		
		$tabmain='tabmain'.$this->api->chatId.'';
		
		if(mysqli_num_rows(mysqli_query($con_sql2, 'SELECT 1 FROM '.$tabmain.' WHERE pic!="0" AND messid="0"'))==0)
		{
			$text='–í –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç —É –í–∞—Å <b>–Ω–µ—Ç –Ω–∏ –æ–¥–Ω–æ–≥–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω–æ–≥–æ –æ–±—ä—è–≤–ª–µ–Ω–∏—è</b> –¥–ª—è –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ –≤ –∫–∞–Ω–∞–ª–µ!'.PHP_EOL.''.PHP_EOL.'–í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ –≥–ª–∞–≤–Ω–æ–º –º–µ–Ω—é <b>–ò–∑–º–µ–Ω–∏—Ç—å –æ–±—ä—è–≤–ª–µ–Ω–∏–µ</b>.'.$this->pre.'';
			$this->callbackAnswer( $text, $this->keyboards['inline_change']);
		}

		else
		{
			
			$merge=$this->cmd_change_delete_records_other();
			usleep(100000);
			
			if (array_filter($merge) !== [])
			{
				$merge[] = [['text' => '‚¨ÖÔ∏è–ù–∞–∑–∞–¥', 'callback_data' => 'change_back_delete_records'], ['text' => '‚§¥Ô∏è–í—ã–π—Ç–∏', 'callback_data' => 'change_exit_delete_records']];
				
				$text='–í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ —Ä–∞–∑–¥–µ–ª–µ <b>–£–¥–∞–ª–∏—Ç—å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–µ –¥–ª—è –ø—É–±–ª–∏–∫–∞—Ü–∏–∏.</b> –í—ã–±–µ—Ä–∏—Ç–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ–µ –æ–±—ä—è–≤–ª–µ–Ω–∏–µ, —á—Ç–æ–±—ã —É–¥–∞–ª–∏—Ç—å –µ–≥–æ.'.$this->pre.'';
				$this->callbackAnswer( $text, $merge);
			}
			else
			{
				$text='–í –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç —É –í–∞—Å <b>–Ω–µ—Ç –Ω–∏ –æ–¥–Ω–æ–≥–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω–æ–≥–æ –æ–±—ä—è–≤–ª–µ–Ω–∏—è</b> –¥–ª—è –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ –≤ –∫–∞–Ω–∞–ª–µ!'.PHP_EOL.''.PHP_EOL.'–í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ –≥–ª–∞–≤–Ω–æ–º –º–µ–Ω—é <b>–ò–∑–º–µ–Ω–∏—Ç—å –æ–±—ä—è–≤–ª–µ–Ω–∏–µ</b>.'.$this->pre.'';
				$this->callbackAnswer( $text, $this->keyboards['inline_change']);
			}
			
		}
	
	}




/////
	public function cmd_change_delete_records_other()
	{
				
		$con_sql2=$this->cmd_sql();
		
		$tabmain='tabmain'.$this->api->chatId.'';
			
			
				$query1=mysqli_query($con_sql2, 'SELECT DISTINCT id FROM '.$tabmain.' WHERE pic!="0" AND messid="0"');
				usleep(100000);
				$con1=mysqli_num_rows($query1);
				
					$table=[];
					
					for($i=0;$i<$con1;$i++)
					{
						mysqli_data_seek($query1, $i);
						$row1[$i]=mysqli_fetch_row($query1);
						$table[]=$row1[$i][0];	
					}
					usleep(100000);
					
					$cnt=count($table);
					$maxbuttons=1;
					$ceil=ceil($cnt/$maxbuttons);
					
					
					
					$include=''.dirname(__FILE__).'/include'.$this->api->chatId.'.php';
					
					if(file_exists($include)==FALSE)
					{
						touch($include);
						
						$insert='<?php
				
				
						class TelegramBotfunc{';
						file_put_contents($include, $insert . PHP_EOL,FILE_APPEND);
						
					}
					else
					{
						$getinclude=file($include);
						unset($getinclude[array_key_last($getinclude)]);
						file_put_contents($include, $getinclude);
					}
					
					$u=0;
					$merge=[];
					
					for($i1=0;$i1<$ceil;$i1++)
					{
						$put=[];
						for($i2=0;$i2<$maxbuttons;$i2++)
						{	
							if(isset($table[$u]))
							{
								//$tabmain='tabmain'.$table[$u].'';
								if(mysqli_num_rows(mysqli_query($con_sql2, 'SELECT DISTINCT id FROM '.$tabmain.' WHERE pic!="0" AND messid="0"'))!=0)
								{
									$buttext="‚Ññ$table[$u]";
									$put[]=["text" => "$buttext", "callback_data" => 'change_del_rec_other_'.$this->api->chatId.'_'.$table[$u].''];
									
									if(preg_match('/callback_change_del_rec_other_'.$this->api->chatId.'_'.$table[$u].'/', file_get_contents($include))==FALSE)
									{
										$insert='
										public function callback_change_del_rec_other_'.$this->api->chatId.'_'.$table[$u].'()
										{	
											$bot = new TestBot;
											$bot->api->getWebhookUpdate();
											$callback_query_id=$bot->api->body[&#039;callback_query&#039;]["id"];
											
											$con_sql2=$bot->cmd_sql();
											$tabmain=&#039;tabmain&#039;.$bot->api->chatId.&#039;&#039;;
											$tabserviceask=&#039;tabserviceask&#039;.$bot->api->chatId.&#039;&#039;;
											$query1=mysqli_query($con_sql2, &#039;SELECT DISTINCT id FROM &#039;.$tabmain.&#039; WHERE pic!="0" AND messid="0"&#039;);
											usleep(100000);
											$con1=mysqli_num_rows($query1);
		
											if($con1!=0)
											{
		

												$query=mysqli_query($con_sql2, &#039;DELETE FROM &#039;.$tabmain.&#039; WHERE id="'.$table[$u].'"&#039;);
												usleep(100000);
												
												$query=mysqli_query($con_sql2, &#039;DELETE FROM &#039;.$tabserviceask.&#039; WHERE record="'.$table[$u].'"&#039;);
												usleep(100000);
												
												
												$text=&#039;–í—ã–±—Ä–∞–Ω–Ω–æ–µ <b>–æ–±—ä—è–≤–ª–µ–Ω–∏–µ ‚Ññ'.$table[$u].'</b> —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω–æ.&#039;.PHP_EOL.&#039;&#039;.PHP_EOL.&#039;–í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ —Ä–∞–∑–¥–µ–ª–µ <b>–£–¥–∞–ª–∏—Ç—å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–µ –¥–ª—è –ø—É–±–ª–∏–∫–∞—Ü–∏–∏</b>. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–∏—Ä–∏—Ç–µ –æ–±—ä—è–≤–ª–µ–Ω–∏–µ, —á—Ç–æ–±—ã —É–¥–∞–ª–∏—Ç—å –µ–≥–æ.&#039;.$bot->pre.&#039;&#039;;
												

												$merge=$bot->cmd_change_delete_records_other();
												usleep(100000);
												
												if (array_filter($merge) !== [])
												{
												
													$merge[] = [[&#039;text&#039; => &#039;‚¨ÖÔ∏è–ù–∞–∑–∞–¥&#039;, &#039;callback_data&#039; => &#039;change_back_delete_records&#039;], [&#039;text&#039; => &#039;‚§¥Ô∏è–í—ã–π—Ç–∏&#039;, &#039;callback_data&#039; => &#039;change_exit_delete_records&#039;]];
													
													$bot->api->answerCallbackQuery($callback_query_id);
													$bot->api->editMessageText([
													&#039;chat_id&#039; => $bot->api->body[&#039;callback_query&#039;][&#039;message&#039;][&#039;chat&#039;]["id"],
													&#039;message_id&#039; => $bot->api->body[&#039;callback_query&#039;][&#039;message&#039;][&#039;message_id&#039;],
													&#039;text&#039; => $text,
													&#039;parse_mode&#039; => "HTML",
													&#039;reply_markup&#039; => json_encode( [&#039;inline_keyboard&#039;=>$merge] ),
													]);
													usleep(100000);
												}
												else
												{
													$text=&#039;–í—ã–±—Ä–∞–Ω–Ω–æ–µ <b>–æ–±—ä—è–≤–ª–µ–Ω–∏–µ ‚Ññ'.$table[$u].'</b> —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω–æ.&#039;.PHP_EOL.&#039;&#039;.PHP_EOL.&#039;–í –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç —É –í–∞—Å <b>–Ω–µ—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã—Ö –æ–±—ä—è–≤–ª–µ–Ω–∏–π</b> –¥–ª—è –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ –≤ –∫–∞–Ω–∞–ª–µ!&#039;.PHP_EOL.&#039;&#039;.PHP_EOL.&#039;–í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ —Ä–∞–∑–¥–µ–ª–µ <b>–ò–∑–º–µ–Ω–∏—Ç—å –æ–±—ä—è–≤–ª–µ–Ω–∏–µ</b>.&#039;.$bot->pre.&#039;&#039;;
													
													$bot->api->answerCallbackQuery($callback_query_id);
												
													$bot->api->editMessageText([
													&#039;chat_id&#039; => $bot->api->body[&#039;callback_query&#039;][&#039;message&#039;][&#039;chat&#039;]["id"],
													&#039;message_id&#039; => $bot->api->body[&#039;callback_query&#039;][&#039;message&#039;][&#039;message_id&#039;],
													&#039;text&#039; => $text,
													&#039;parse_mode&#039; => "HTML",
													&#039;reply_markup&#039; => json_encode( [&#039;inline_keyboard&#039;=>$bot->keyboards[&#039;inline_change&#039;]] ),
													]);
												}
											}
											else
											{
												
												$text=&#039;–í –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç —É –í–∞—Å <b>–Ω–µ—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã—Ö –æ–±—ä—è–≤–ª–µ–Ω–∏–π</b> –¥–ª—è –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ –≤ –∫–∞–Ω–∞–ª–µ!&#039;.PHP_EOL.&#039;&#039;.PHP_EOL.&#039;–í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ —Ä–∞–∑–¥–µ–ª–µ <b>–ò–∑–º–µ–Ω–∏—Ç—å –æ–±—ä—è–≤–ª–µ–Ω–∏–µ</b>.&#039;.$bot->pre.&#039;&#039;;
												$bot->api->answerCallbackQuery($callback_query_id);
												
												$bot->api->editMessageText([
												&#039;chat_id&#039; => $bot->api->body[&#039;callback_query&#039;][&#039;message&#039;][&#039;chat&#039;]["id"],
												&#039;message_id&#039; => $bot->api->body[&#039;callback_query&#039;][&#039;message&#039;][&#039;message_id&#039;],
												&#039;text&#039; => $text,
												&#039;parse_mode&#039; => "HTML",
												&#039;reply_markup&#039; => json_encode( [&#039;inline_keyboard&#039;=>$bot->keyboards[&#039;inline_change&#039;]] ),
												]);
											}
										}';
											
										file_put_contents($include, html_entity_decode($insert, ENT_QUOTES) . PHP_EOL . PHP_EOL,FILE_APPEND);
									}
								}
							}	
							$u++;	
						}
							
						$merge[]=$put;
						unset($put);
						
					}
					
					$insert='}';
					file_put_contents($include, $insert,FILE_APPEND);
					
					return $merge;
			
				
	}



/////	
	public function callback_change_askadmin_send_channel()
	{
		
		$con_sql2=$this->cmd_sql();
		$tab='tabmain'.$this->api->chatId.'';
		$query1=mysqli_query($con_sql2, 'SELECT * FROM '.$tab.' WHERE messid="0" AND pic!="0" ORDER by id ASC');
		$con1=mysqli_num_rows($query1);
		
		if($con1!=0)
		{
		
			$merge=$this->cmd_change_askadmin_send_channel();
			usleep(100000);
			
			if (array_filter($merge) !== [])
			{
				
				$merge[] = [['text' => '‚¨ÖÔ∏è–ù–∞–∑–∞–¥', 'callback_data' => 'change_back_askadmin_send_channel'], ['text' => '‚§¥Ô∏è–í—ã–π—Ç–∏', 'callback_data' => 'change_exit_askadmin_send_channel']];
				$text='–í—ã–±–∏—Ä–∏—Ç–µ –æ–±—ä—è–≤–ª–µ–Ω–∏–µ, –∫–æ—Ç–æ—Ä–æ–µ –≤—ã —Ö–æ—Ç–∏—Ç–µ <b>–æ–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å –≤ –∫–∞–Ω–∞–ª–µ</b>, –Ω–∞–∂–∞–≤ –Ω–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â—É—é –∫–Ω–æ–ø–∫—É —Å–Ω–∏–∑—É.'.$this->pre.'';
				
				/* if(isset($this->api->body['callback_query']["id"]))
				{
					$callback_query_id=$this->api->body['callback_query']["id"];
					$this->api->answerCallbackQuery($callback_query_id);
				
				}
				
				$this->api->sendMessage([
					'text' => $text,
					'reply_markup' => json_encode( ['inline_keyboard'=>$merge]),
					'disable_notification' => TRUE,
					'disable_web_page_preview' => TRUE,
					'parse_mode'=> "HTML"
				]); */
				
				$this->callbackAnswer( $text, $merge);
			}
			else
			{
				$text='–í –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç —É –í–∞—Å <b>–Ω–µ—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã—Ö –æ–±—ä—è–≤–ª–µ–Ω–∏–π</b> –¥–ª—è –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ –≤ –∫–∞–Ω–∞–ª–µ!'.PHP_EOL.'–í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ —Ä–∞–∑–¥–µ–ª–µ <b>–ò–∑–º–µ–Ω–∏—Ç—å –æ–±—ä—è–≤–ª–µ–Ω–∏–µ</b>.'.$this->pre.'';
				
				$this->callbackAnswer( $text, $this->keyboards['inline_change']);
				
				
			}
		}
		else
		{
			$text='–í –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç —É –í–∞—Å <b>–Ω–µ—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã—Ö –æ–±—ä—è–≤–ª–µ–Ω–∏–π</b> –¥–ª—è –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ –≤ –∫–∞–Ω–∞–ª–µ!'.PHP_EOL.'–í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ —Ä–∞–∑–¥–µ–ª–µ <b>–ò–∑–º–µ–Ω–∏—Ç—å –æ–±—ä—è–≤–ª–µ–Ω–∏–µ</b>.'.$this->pre.'';
			$this->callbackAnswer( $text, $this->keyboards['inline_change']);
		}

		
	}
	


/////
	public function cmd_change_askadmin_send_channel()
	{
				
		$con_sql2=$this->cmd_sql();
		
		$tabmain='tabmain'.$this->api->chatId.'';
		$tabserviceask='tabserviceask'.$this->api->chatId.'';
				
				if(mysqli_query($con_sql2, 'SELECT 1 FROM '.$tabserviceask.' LIMIT 1'))
				{
					if(mysqli_num_rows(mysqli_query($con_sql2, 'SELECT 1 FROM '.$tabserviceask.' WHERE id LIKE "%" LIMIT 1'))!=0)
					{
						$query1=mysqli_query($con_sql2, 'SELECT DISTINCT record FROM '.$tabserviceask.' WHERE id LIKE "%"');
						usleep(100000);
						$con1=mysqli_num_rows($query1);
				
						$tabletemp=[];
					
						for($i=0;$i<$con1;$i++)
						{
							mysqli_data_seek($query1, $i);
							$row1[$i]=mysqli_fetch_row($query1);
							$tabletemp[]=$row1[$i][0];	
						}
						usleep(100000);
					}
				}	
				
				$cntu=count($tabletemp);
				
				
				$query1=mysqli_query($con_sql2, 'SELECT DISTINCT id FROM '.$tabmain.' WHERE messid="0" AND pic!="0"');
				usleep(100000);
				$con1=mysqli_num_rows($query1);
				
					$table=[];
					
					for($i=0;$i<$con1;$i++)
					{
						mysqli_data_seek($query1, $i);
						$row1[$i]=mysqli_fetch_row($query1);
						
						//if(in_array($row1[$i][0], array_values($tabletemp))==FALSE)
						//$search=array_search($row1[$i][0], $tabletemp);
						//unset($puttemp[$search]);
						//$cntu=count($tabletemp);
						//if($this->cmd_arraysearch($tabletemp, $row1[$i][0])==FALSE)
						//if(array_search($row1[$i][0], $tabletemp))	
						//if(preg_match('/'.$row1[$i][0].'/', $tabletemp)==FALSE)
							
						if(in_array($row1[$i][0], $tabletemp)==FALSE)
						{
						
							/* $this->api->sendMessage([
							'text' => "fgfsghfsg fsghsfgh",
							'disable_notification' => TRUE,
							'disable_web_page_preview' => TRUE,
							'parse_mode'=> "HTML"
							]); */
							$table[]=$row1[$i][0];
						}
							
					}
					usleep(100000);
					
					$cnt=count($table);
					$maxbuttons=1;
					$ceil=ceil($cnt/$maxbuttons);
					
					
					
					$include=''.dirname(__FILE__).'/include'.$this->api->chatId.'.php';
					
					if(file_exists($include)==FALSE)
					{
						touch($include);
						
						$insert='<?php
				
				
						class TelegramBotfunc{';
						file_put_contents($include, $insert . PHP_EOL,FILE_APPEND);
						
					}
					else
					{
						$getinclude=file($include);
						unset($getinclude[array_key_last($getinclude)]);
						file_put_contents($include, $getinclude);
					}
					
					$u=0;
					$merge=[];
					
					for($i1=0;$i1<$ceil;$i1++)
					{
						$put=[];
						for($i2=0;$i2<$maxbuttons;$i2++)
						{	
							if(isset($table[$u]))
							{
								//$tabmain='tabmain'.$table[$u].'';
								if(mysqli_num_rows(mysqli_query($con_sql2, 'SELECT DISTINCT id FROM '.$tabmain.' WHERE messid="0" AND pic!="0"'))!=0)
								{
									$buttext="‚Ññ$table[$u]";
									$put[]=["text" => "$buttext", "callback_data" => 'chan_se_chan_'.$this->api->chatId.'_'.$table[$u].''];
									
									if(preg_match('/callback_chan_se_chan_'.$this->api->chatId.'_'.$table[$u].'/', file_get_contents($include))==FALSE)
									{
										$insert='
										public function callback_chan_se_chan_'.$this->api->chatId.'_'.$table[$u].'()
										{	
											$bot = new TestBot;
											$bot->api->getWebhookUpdate();
										
											
											$con_sql2=$bot->cmd_sql();
											$tabmain=&#039;tabmain&#039;.$bot->api->chatId.&#039;&#039;;
											
											if(mysqli_num_rows(mysqli_query($con_sql2, &#039;SELECT 1 FROM &#039;.$tabmain.&#039; WHERE pic!="0" AND messid="0"&#039;))!=0)
											{
											
												$query1=mysqli_query($con_sql2, &#039;SELECT DISTINCT id FROM &#039;.$tabmain.&#039; WHERE messid="0" AND pic!="0"&#039;);
												usleep(100000);
												$con1=mysqli_num_rows($query1);
		
												if($con1!=0)
												{
													
													if(mysqli_query($con_sql2, &#039;SELECT 1 FROM '.$tabserviceask.' LIMIT 1&#039;)==FALSE)
													{
														mysqli_query($con_sql2, &#039;CREATE TABLE '.$tabserviceask.' (id INT(4) UNSIGNED AUTO_INCREMENT PRIMARY KEY,record VARCHAR(20)) ENGINE = InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;&#039;);
														usleep(250000);
													}
														
													
														$query1=mysqli_query($con_sql2, &#039;SELECT DISTINCT record FROM '.$tabserviceask.' WHERE id LIKE "%"&#039;);
														usleep(100000);
														$con1=mysqli_num_rows($query1);
												
														$tabletemp=[];
													
														for($i=0;$i<$con1;$i++)
														{
															mysqli_data_seek($query1, $i);
															$row1[$i]=mysqli_fetch_row($query1);
															$tabletemp[]=$row1[$i][0];	
														}
														
														if(in_array('.$table[$u].', $tabletemp)==FALSE)
														{
															mysqli_query($con_sql2, &#039;INSERT INTO '.$tabserviceask.' (record) VALUES ("'.$table[$u].'")&#039;);
															usleep(100000);
															
															
															$userfio=$bot->cmd_user_get_fio($bot->api->chatId);
															$userphone=$bot->cmd_user_get_phone($bot->api->chatId);
														
															$text=&#039;–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å üë§<b>&#039;.$userfio.&#039; (&#039;.$userphone.&#039;)</b> –¥–æ–±–∞–≤–∏–ª –æ–±—ä—è–≤–ª–µ–Ω–∏–µ <b>‚Ññ'.$table[$u].'</b> –¥–ª—è —Ä–∞–∑–º–µ—â–µ–Ω–∏—è –≤ –∫–∞–Ω–∞–ª–µ. –ß—Ç–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ —Å–¥–µ–ª–∞—Ç—å —Å –¥–∞–Ω–Ω—ã–º –æ–±—ä—è–≤–ª–µ–Ω–∏–µ–º?&#039;.$bot->pre.&#039;&#039;;
															
															$bot->api->sendMessage([
															&#039;chat_id&#039; => $bot->chatidadmin,
															&#039;text&#039; => $text,
															&#039;parse_mode&#039; => "HTML",
															&#039;reply_markup&#039; => json_encode( [&#039;inline_keyboard&#039;=>$bot->keyboards[&#039;inline_ask_admin_channel&#039;]]),
															]);
															
															
															
															$text=&#039;–í—ã —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–∏–ª–∏ –í–∞—à–µ –æ–±—ä—è–≤–ª–µ–Ω–∏–µ <b>‚Ññ'.$table[$u].'</b> –Ω–∞ <b>–º–æ–¥–µ—Ä–∞—Ü–∏—é –∞–¥–º–∏–Ω—É</b>. –í–∞–º –ø—Ä–∏–¥–µ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞—Ö.&#039;.PHP_EOL.&#039;&#039;.PHP_EOL.&#039;–ú–æ–∂–µ—Ç–µ –≤—ã–±—Ä–∞—Ç—å –µ—â–µ –æ–¥–Ω–æ –æ–±—ä—è–≤–ª–µ–Ω–∏–µ, —á—Ç–æ–±—ã –æ–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å –µ–≥–æ –≤ –∫–∞–Ω–∞–ª–µ.&#039;.$bot->pre.&#039;&#039;;
															
															$merge=$bot->cmd_change_askadmin_send_channel();
			
															usleep(100000);
															
															if (array_filter($merge) !== [])
															{
															
																$merge[] = [[&#039;text&#039; => &#039;‚¨ÖÔ∏è–ù–∞–∑–∞–¥&#039;, &#039;callback_data&#039; => &#039;change_back_askadmin_send_channel&#039;], [&#039;text&#039; => &#039;‚§¥Ô∏è–í—ã–π—Ç–∏&#039;, &#039;callback_data&#039; => &#039;change_exit_askadmin_send_channel&#039;]];
																
																if(isset($bot->api->body[&#039;callback_query&#039;]["id"]))
																{
																	$callback_query_id=$bot->api->body[&#039;callback_query&#039;]["id"];
																	$bot->api->answerCallbackQuery($callback_query_id);
																}
																	
																$bot->api->sendMessage([
																&#039;text&#039; => $text,
																&#039;parse_mode&#039; => "HTML",
																&#039;reply_markup&#039; => json_encode( [&#039;inline_keyboard&#039;=>$merge]),
																]);
															}
															else
															{
																$text=&#039;–í—ã —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–∏–ª–∏ –í–∞—à–µ –æ–±—ä—è–≤–ª–µ–Ω–∏–µ <b>‚Ññ'.$table[$u].'</b> –Ω–∞ <b>–º–æ–¥–µ—Ä–∞—Ü–∏—é –∞–¥–º–∏–Ω—É</b>. –í–∞–º –ø—Ä–∏–¥–µ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞—Ö.&#039;.PHP_EOL.&#039;–£ –í–∞—Å –±–æ–ª—å—à–µ –Ω–µ—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã—Ö –æ–±—ä—è–≤–ª–µ–Ω–∏–π –¥–ª—è –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ –≤ –∫–∞–Ω–∞–ª–µ!&#039;.PHP_EOL.&#039;&#039;.PHP_EOL.&#039;–í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ —Ä–∞–∑–¥–µ–ª–µ <b>–ò–∑–º–µ–Ω–∏—Ç—å –æ–±—ä—è–≤–ª–µ–Ω–∏–µ</b>.&#039;.$bot->pre.&#039;&#039;;
													
																if(isset($bot->api->body[&#039;callback_query&#039;]["id"]))
																{
																	$callback_query_id=$bot->api->body[&#039;callback_query&#039;]["id"];
																	$bot->api->answerCallbackQuery($callback_query_id);
																}
															
																$bot->api->editMessageText([
																&#039;chat_id&#039; => $bot->api->body[&#039;callback_query&#039;][&#039;message&#039;][&#039;chat&#039;]["id"],
																&#039;message_id&#039; => $bot->api->body[&#039;callback_query&#039;][&#039;message&#039;][&#039;message_id&#039;],
																&#039;text&#039; => $text,
																&#039;parse_mode&#039; => "HTML",
																&#039;reply_markup&#039; => json_encode( [&#039;inline_keyboard&#039;=>$bot->keyboards[&#039;inline_change&#039;]] ),
																]);
															}
														}
														else
														{
															$text=&#039;–í—ã —É–∂–µ –æ—Ç–ø—Ä–∞–≤–∏–ª–∏ –¥–∞–Ω–Ω–æ–µ –æ–±—ä—è–≤–ª–µ–Ω–∏–µ –Ω–∞ –º–æ–¥–µ—Ä–∞—Ü–∏—é –∞–¥–º–∏–Ω—É. –ò–º–µ–π—Ç–µ —Ç–µ—Ä–ø–µ–Ω–∏–µ!&#039;.$bot->pre.&#039;&#039;;
												
															if(isset($bot->api->body[&#039;callback_query&#039;]["id"]))
															{
																$callback_query_id=$bot->api->body[&#039;callback_query&#039;]["id"];
																$bot->api->answerCallbackQuery($callback_query_id);
															}
												
															$bot->api->editMessageText([
															&#039;chat_id&#039; => $bot->api->body[&#039;callback_query&#039;][&#039;message&#039;][&#039;chat&#039;]["id"],
															&#039;message_id&#039; => $bot->api->body[&#039;callback_query&#039;][&#039;message&#039;][&#039;message_id&#039;],
															&#039;text&#039; => $text,
															&#039;parse_mode&#039; => "HTML",
															&#039;reply_markup&#039; => json_encode( [&#039;inline_keyboard&#039;=>$bot->keyboards[&#039;inline_change&#039;]] ),
															]);
														}
													

												}
												else
												{
													$text=&#039;–£ –í–∞—Å –±–æ–ª—å—à–µ –Ω–µ—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã—Ö –æ–±—ä—è–≤–ª–µ–Ω–∏–π –¥–ª—è –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ –≤ –∫–∞–Ω–∞–ª–µ!&#039;.PHP_EOL.&#039; –í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ —Ä–∞–∑–¥–µ–ª–µ <b>–ò–∑–º–µ–Ω–∏—Ç—å –æ–±—ä—è–≤–ª–µ–Ω–∏–µ</b>.&#039;.$bot->pre.&#039;&#039;;
													
													if(isset($bot->api->body[&#039;callback_query&#039;]["id"]))
													{
														$callback_query_id=$bot->api->body[&#039;callback_query&#039;]["id"];
														$bot->api->answerCallbackQuery($callback_query_id);
													}
												
													$bot->api->editMessageText([
													&#039;chat_id&#039; => $bot->api->body[&#039;callback_query&#039;][&#039;message&#039;][&#039;chat&#039;]["id"],
													&#039;message_id&#039; => $bot->api->body[&#039;callback_query&#039;][&#039;message&#039;][&#039;message_id&#039;],
													&#039;text&#039; => $text,
													&#039;parse_mode&#039; => "HTML",
													&#039;reply_markup&#039; => json_encode( [&#039;inline_keyboard&#039;=>$bot->keyboards[&#039;inline_change&#039;]] ),
													]);
												}
											}
											else
											{
												
												$text=&#039;–£ –í–∞—Å –±–æ–ª—å—à–µ –Ω–µ—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã—Ö –æ–±—ä—è–≤–ª–µ–Ω–∏–π –¥–ª—è –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ –≤ –∫–∞–Ω–∞–ª–µ!&#039;.PHP_EOL.&#039; –í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ —Ä–∞–∑–¥–µ–ª–µ <b>–ò–∑–º–µ–Ω–∏—Ç—å –æ–±—ä—è–≤–ª–µ–Ω–∏–µ</b>.&#039;.$bot->pre.&#039;&#039;;
												
												if(isset($bot->api->body[&#039;callback_query&#039;]["id"]))
												{
													$callback_query_id=$bot->api->body[&#039;callback_query&#039;]["id"];
													$bot->api->answerCallbackQuery($callback_query_id);
												}
												
												$bot->api->editMessageText([
												&#039;chat_id&#039; => $bot->api->body[&#039;callback_query&#039;][&#039;message&#039;][&#039;chat&#039;]["id"],
												&#039;message_id&#039; => $bot->api->body[&#039;callback_query&#039;][&#039;message&#039;][&#039;message_id&#039;],
												&#039;text&#039; => $text,
												&#039;parse_mode&#039; => "HTML",
												&#039;reply_markup&#039; => json_encode( [&#039;inline_keyboard&#039;=>$bot->keyboards[&#039;inline_change&#039;]] ),
												]);
											}
										}';
											
										file_put_contents($include, html_entity_decode($insert, ENT_QUOTES) . PHP_EOL . PHP_EOL,FILE_APPEND);
									}
								}
							}	
							$u++;	
						}
							
						$merge[]=$put;
						unset($put);
						
					}
					
					$insert='}';
					file_put_contents($include, $insert,FILE_APPEND);
					
					return $merge;
			
				
	}
	

////	
	public function callback_change_back_askadmin_send_channel()
	{
		
		$text='–í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –≤ —Ä–∞–∑–¥–µ–ª <b>–ò–∑–º–µ–Ω–∏—Ç—å –æ–±—ä—è–≤–ª–µ–Ω–∏–µ</b> –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é <b>–ü—Ä–æ–¥–∞—Ç—å</b>.'.$this->pre.'';
		
		$this->callbackAnswer( $text, $this->keyboards['inline_change']);
		usleep(100000);
	}
	
////	
	public function callback_change_exit_askadmin_send_channel()
	{
		
		if($this->cmd_isadmin())
		{
			$text='–í—ã –≤—ã—à–ª–∏ –≤ <b>–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é</b>.'.$this->pre.'';
			//$this->callbackAnswer( $text, $this->keyboards['inline_default_admin']);
			
			if(isset($this->api->body['callback_query']["id"]))
			{
				$callback_query_id=$this->api->body['callback_query']["id"];
				$this->api->answerCallbackQuery($callback_query_id);
			}
			
			$this->api->sendMessage([
				'text' => $text,
				'reply_markup' => json_encode( ['inline_keyboard'=>$this->keyboards['inline_default_admin']]),
				'disable_notification' => TRUE,
				'disable_web_page_preview' => TRUE,
				'parse_mode'=> "HTML"
				]);
				usleep(100000);
		}
		else
		{
			$text='–í—ã –≤—ã—à–ª–∏ –≤ <b>–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é</b>.'.$this->pre.'';
			//$this->callbackAnswer( $text, $this->keyboards['inline_default']);
			
			if(isset($this->api->body['callback_query']["id"]))
			{
				$callback_query_id=$this->api->body['callback_query']["id"];
				$this->api->answerCallbackQuery($callback_query_id);
			}
			
			$this->api->sendMessage([
				'text' => $text,
				'reply_markup' => json_encode( ['inline_keyboard'=>$this->keyboards['inline_default']]),
				'disable_notification' => TRUE,
				'disable_web_page_preview' => TRUE,
				'parse_mode'=> "HTML"
				]);
				usleep(100000);
		}
	}		

	
	
	
	
	


















/////	
/* 	public function callback_change_send_channel()
	{
		
		$con_sql2=$this->cmd_sql();
		$tab='tabmain'.$this->api->chatId.'';
		$query1=mysqli_query($con_sql2, 'SELECT * FROM '.$tab.' WHERE messid="0" AND pic!="0" ORDER by id ASC');
		$con1=mysqli_num_rows($query1);
		
		if($con1!=0)
		{
		
			$merge=$this->cmd_change_send_channel();
			usleep(100000);
			
			if (array_filter($merge) !== [])
			{
				
				$merge[] = [['text' => '‚¨ÖÔ∏è–ù–∞–∑–∞–¥', 'callback_data' => 'change_back_send_channel'], ['text' => '‚§¥Ô∏è–í—ã–π—Ç–∏', 'callback_data' => 'change_exit_send_channel']];
				$text='–í—ã–±–∏—Ä–∏—Ç–µ –æ–±—ä—è–≤–ª–µ–Ω–∏–µ, –∫–æ—Ç–æ—Ä–æ–µ –≤—ã —Ö–æ—Ç–∏—Ç–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –≤ –∫–∞–Ω–∞–ª, –Ω–∞–∂–∞–≤ –Ω–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â—É—é –∫–Ω–æ–ø–∫—É —Å–Ω–∏–∑—É.';
				
				if(isset($this->api->body['callback_query']["id"]))
				{
					$callback_query_id=$this->api->body['callback_query']["id"];
					$this->api->answerCallbackQuery($callback_query_id);
				
				}
				
				$this->api->sendMessage([
					'text' => $text,
					'reply_markup' => json_encode( ['inline_keyboard'=>$merge]),
					'disable_notification' => TRUE,
					'disable_web_page_preview' => TRUE,
					'parse_mode'=> "HTML"
				]);
				
				$this->callbackAnswer( $text, $merge);
			}
			else
			{
				$text='–í –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç —É –í–∞—Å –Ω–µ—Ç –æ–±—ä—è–≤–ª–µ–Ω–∏–π –¥–ª—è —Ä–∞–∑–º–µ—â–µ–Ω–∏—è –≤ –∫–∞–Ω–∞–ª–µ!'.PHP_EOL.'–í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ –≥–ª–∞–≤–Ω–æ–º –º–µ–Ω—é <b>–ò–∑–º–µ–Ω–∏—Ç—å –æ–±—ä—è–≤–ª–µ–Ω–∏–µ</b>.';
				
				$this->callbackAnswer( $text, $this->keyboards['inline_change']);
				
				
			}
		}
		else
		{
			$text='–í –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç —É –í–∞—Å –Ω–µ—Ç –æ–±—ä—è–≤–ª–µ–Ω–∏–π –¥–ª—è —Ä–∞–∑–º–µ—â–µ–Ω–∏—è –≤ –∫–∞–Ω–∞–ª–µ!'.PHP_EOL.'–í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ –≥–ª–∞–≤–Ω–æ–º –º–µ–Ω—é <b>–ò–∑–º–µ–Ω–∏—Ç—å –æ–±—ä—è–≤–ª–µ–Ω–∏–µ</b>.';
			$this->callbackAnswer( $text, $this->keyboards['inline_change']);
		}

		
	}
	

////	
	public function callback_change_back_send_channel()
	{
		
		$text='–í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –≤ –ø–æ–¥–º–µ–Ω—é –ò–∑–º–µ–Ω–∏—Ç—å –æ–±—ä—è–≤–ª–µ–Ω–∏–µ –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é –ü—Ä–æ–¥–∞—Ç—å.';
		
		$this->callbackAnswer( $text, $this->keyboards['inline_change']);
		usleep(100000);
	}
	
////	
	public function callback_change_exit_send_channel()
	{
		
		if($this->cmd_isadmin())
		{
			$text='–í—ã –≤—ã—à–ª–∏ –≤ <b>–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é</b>.';
			//$this->callbackAnswer( $text, $this->keyboards['inline_default_admin']);
			
			if(isset($this->api->body['callback_query']["id"]))
			{
				$callback_query_id=$this->api->body['callback_query']["id"];
				$this->api->answerCallbackQuery($callback_query_id);
			}
			
			$this->api->sendMessage([
				'text' => $text,
				'reply_markup' => json_encode( ['inline_keyboard'=>$this->keyboards['inline_default_admin']]),
				'disable_notification' => TRUE,
				'disable_web_page_preview' => TRUE,
				'parse_mode'=> "HTML"
				]);
				usleep(100000);
		}
		else
		{
			$text='–í—ã –≤—ã—à–ª–∏ –≤ <b>–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é</b>.';
			//$this->callbackAnswer( $text, $this->keyboards['inline_default']);
			
			if(isset($this->api->body['callback_query']["id"]))
			{
				$callback_query_id=$this->api->body['callback_query']["id"];
				$this->api->answerCallbackQuery($callback_query_id);
			}
			
			$this->api->sendMessage([
				'text' => $text,
				'reply_markup' => json_encode( ['inline_keyboard'=>$this->keyboards['inline_default']]),
				'disable_notification' => TRUE,
				'disable_web_page_preview' => TRUE,
				'parse_mode'=> "HTML"
				]);
				usleep(100000);
		}
	}		

	
/////
	public function cmd_change_send_channel()
	{
				
		$con_sql2=$this->cmd_sql();
		
		$tabmain='tabmain'.$this->api->chatId.'';
			
			
				$query1=mysqli_query($con_sql2, 'SELECT DISTINCT id FROM '.$tabmain.' WHERE messid="0" AND pic!="0"');
				usleep(100000);
				$con1=mysqli_num_rows($query1);
				
					$table=[];
					
					for($i=0;$i<$con1;$i++)
					{
						mysqli_data_seek($query1, $i);
						$row1[$i]=mysqli_fetch_row($query1);
						$table[]=$row1[$i][0];	
					}
					usleep(100000);
					
					$cnt=count($table);
					$maxbuttons=1;
					$ceil=ceil($cnt/$maxbuttons);
					
					
					
					$include=''.dirname(__FILE__).'/include'.$this->api->chatId.'.php';
					
					if(file_exists($include)==FALSE)
					{
						touch($include);
						
						$insert='<?php
				
				
						class TelegramBotfunc{';
						file_put_contents($include, $insert . PHP_EOL,FILE_APPEND);
						
					}
					else
					{
						$getinclude=file($include);
						unset($getinclude[array_key_last($getinclude)]);
						file_put_contents($include, $getinclude);
					}
					
					$u=0;
					$merge=[];
					
					for($i1=0;$i1<$ceil;$i1++)
					{
						$put=[];
						for($i2=0;$i2<$maxbuttons;$i2++)
						{	
							if(isset($table[$u]))
							{
								//$tabmain='tabmain'.$table[$u].'';
								if(mysqli_num_rows(mysqli_query($con_sql2, 'SELECT DISTINCT id FROM '.$tabmain.' WHERE messid="0" AND pic!="0"'))!=0)
								{
									$buttext="$table[$u]";
									$put[]=["text" => "$buttext", "callback_data" => "change_send_channel_$table[$u]"];
									
									if(preg_match('/callback_change_send_channel_'.$table[$u].'/', file_get_contents($include))==FALSE)
									{
										$insert='
										public function callback_change_send_channel_'.$table[$u].'()
										{	
											$bot = new TestBot;
											$bot->api->getWebhookUpdate();
											$callback_query_id=$bot->api->body[&#039;callback_query&#039;]["id"];
											
											$con_sql2=$bot->cmd_sql();
											$tabmain=&#039;tabmain&#039;.$bot->api->chatId.&#039;&#039;;
											
											if(mysqli_num_rows(mysqli_query($con_sql2, &#039;SELECT 1 FROM &#039;.$tabmain.&#039; WHERE pic!="0"&#039;))!=0)
											{
											
												$query1=mysqli_query($con_sql2, &#039;SELECT DISTINCT id FROM &#039;.$tabmain.&#039; WHERE messid="0" AND pic!="0"&#039;);
												usleep(100000);
												$con1=mysqli_num_rows($query1);
		
												if($con1!=0)
												{
													
													$query=mysqli_query($con_sql2, &#039;SELECT * FROM &#039;.$tabmain.&#039; WHERE id="'.$table[$u].'"&#039;);
													usleep(100000);
													$con=mysqli_num_rows($query);
													
													for($i=0;$i<$con;$i++)
													{
														mysqli_data_seek($query, $i);
														$row[$i]=mysqli_fetch_row($query);
													}
													usleep(250000);
													
													$mainchannel=$bot->mainchannel;
													
													$arraybuttons=$bot->arraybuttonstype;
													$arraycallback=$bot->arraycallbacktype;
													
													$count=count($arraycallback);
													
													for($y=0;$y<$count;$y++)
													{
														if($row[0][1]==$arraycallback[$y])
														{
															$type=$arraybuttons[$y];
															break;
														}
													}
													

													if($row[0][1]==&#039;clothes&#039;)
													{
														$arraybuttons=$bot->arraybuttonsclothes;
														$arraycallback=$bot->arraycallbackclothes;
													}
													elseif($row[0][1]==&#039;shoes&#039;)
													{
														$arraybuttons=$bot->arraybuttonsshoes;
														$arraycallback=$bot->arraycallbackshoes;
													}
													elseif($row[0][1]==&#039;accessories&#039;)
													{
														$arraybuttons=$bot->arraybuttonsaccessories;
														$arraycallback=$bot->arraycallbackaccessories;
													}
													elseif($row[0][1]==&#039;toys&#039;)
													{
														$arraybuttons=$bot->arraybuttonstoys;
														$arraycallback=$bot->arraycallbacktoys;
													}
													
													$count=count($arraycallback);
													
													for($y=0;$y<$count;$y++)
													{
														if($row[0][2]==$arraycallback[$y])
														{
															$cat=$arraybuttons[$y];
															break;
														}
													}
													
													
													$arraybuttons=$bot->arraybuttonsgender;
													$arraycallback=$bot->arraycallbackgender;
													
													$count=count($arraycallback);
													
													for($y=0;$y<$count;$y++)
													{
														if($row[0][3]==$arraycallback[$y])
														{
															$gender=$arraybuttons[$y];
															break;
														}
													}
													
													$text=&#039;‚ùáÔ∏è‚ùáÔ∏è‚ùáÔ∏è‚ùáÔ∏è‚ùáÔ∏è‚ùáÔ∏è‚ùáÔ∏è‚ùáÔ∏è‚ùáÔ∏è‚ùáÔ∏è‚ùáÔ∏è‚ùáÔ∏è‚ùáÔ∏è‚ùáÔ∏è‚ùáÔ∏è‚ùáÔ∏è‚ùáÔ∏è‚ùáÔ∏è‚ùáÔ∏è‚ùáÔ∏è&#039;;
													$bot->api->sendMessage([
													&#039;chat_id&#039; => $mainchannel,
													&#039;text&#039; => $text,
													&#039;disable_notification&#039; => TRUE,
													&#039;disable_web_page_preview&#039; => TRUE,
													&#039;parse_mode&#039;=> &#039;HTML&#039;
													]);
													
													$userid=$bot->api->chatId;
													
													$caption=&#039;&#039;.PHP_EOL.&#039;&#039;.PHP_EOL.&#039;üìñ–ö–∞—Ç–µ–≥–æ—Ä–∏—è: &#160;&#160;<b>&#039;.$type.&#039;</b>&#039;.PHP_EOL.&#039;üßæ–í–∏–¥: &#160;&#160;<b>&#039;.$cat.&#039;</b>&#039;.PHP_EOL.&#039;üë®‚Äçüë©‚Äçüë¶–ü–æ–ª: &#160;&#160;<b>&#039;.$gender.&#039;</b>&#039;.PHP_EOL.&#039;¬ÆÔ∏è–ë—Ä–µ–Ω–¥: &#160;&#160;<b>&#039;.$row[0][4].&#039;</b>&#039;.PHP_EOL.&#039;‚ÜïÔ∏è–†–∞–∑–º–µ—Ä: &#160;&#160;<b>&#039;.$row[0][5].&#039;</b>&#039;.PHP_EOL.&#039;üíµ–¶–µ–Ω–∞: &#160;&#160;<b>&#039;.$row[0][6].&#039;</b>&#039;.PHP_EOL.&#039;üìã–û–ø–∏—Å–∞–Ω–∏–µ: &#160;&#160;&#039;.$row[0][7].&#039;&#039;.PHP_EOL.&#039;&#039;.PHP_EOL.&#039;&#039;.PHP_EOL.&#039;&#039;.PHP_EOL.&#039;<i>id –ø—Ä–æ–¥–∞–≤—Ü–∞:&#039;.$userid.&#039;</i>&#039;.PHP_EOL.&#039;&#039;.PHP_EOL.&#039;üìÅüìÅüìÅüìÅüìÅüìÅüìÅüìÅüìÅüìÅüìÅüìÅ&#039;.PHP_EOL.&#039;&#039;;
													
													$photo=$row[0][8];
				
													if(preg_match(&#039;/;/&#039;, $photo)==FALSE)
													{
														$result=json_decode($bot->api->sendPhoto([
														&#039;chat_id&#039; => $mainchannel,
														&#039;photo&#039; => $photo,
														&#039;caption&#039; => $caption,
														&#039;disable_notification&#039; => TRUE,
														&#039;parse_mode&#039; => "HTML"
														]), true);
														
														$messageid=$result[&#039;result&#039;][&#039;message_id&#039;];
													}
													else
													{
														$media=[];
														$temp=explode(&#039;;&#039;, $photo);
														$cnt=count($temp);
														for($o=0;$o<$cnt;$o++)
														{
														
														
															if($o==0)
															{
																$put=[&#039;type&#039; => &#039;photo&#039;, &#039;media&#039; =>  &#039;&#039;.$temp[$o].&#039;&#039;, &#039;caption&#039; => &#039;&#039;.$caption.&#039;&#039;, &#039;parse_mode&#039; => "HTML" ];
															}
															else
															{
																$put=[&#039;type&#039; => &#039;photo&#039;, &#039;media&#039; =>  &#039;&#039;.$temp[$o].&#039;&#039; ];
															}
													
															$media[$o]=$put;
														}
														
														

														$result=json_decode($bot->api->sendMediaGroup([
														&#039;chat_id&#039; => $mainchannel,
														&#039;media&#039; => json_encode($media),
														]), true);
														
														$messageid=$result[&#039;result&#039;][0][&#039;message_id&#039;];
													}
				
													$date=$bot->api->chatId;
													$time=time();
													
													$query2=&#039;UPDATE &#039;.$tabmain.&#039; SET date = REPLACE(date, "&#039;.$row[0][9].&#039;", "&#039;.$date.&#039;") WHERE id="'.$table[$u].'"&#039;; 
													$result2=mysqli_query($con_sql2, $query2);
													
													$query2=&#039;UPDATE &#039;.$tabmain.&#039; SET time = REPLACE(time, "&#039;.$row[0][10].&#039;", "&#039;.$time.&#039;") WHERE id="'.$table[$u].'"&#039;; 
													$result2=mysqli_query($con_sql2, $query2);
													
													$query2=&#039;UPDATE &#039;.$tabmain.&#039; SET messid = REPLACE(messid, "&#039;.$row[0][11].&#039;", "&#039;.$messageid.&#039;") WHERE id="'.$table[$u].'"&#039;; 
													$result2=mysqli_query($con_sql2, $query2);
													
													
													$caption1=&#039;&#039;.PHP_EOL.&#039;&#039;.PHP_EOL.&#039;üìñ–ö–∞—Ç–µ–≥–æ—Ä–∏—è: &#160;&#160;<b>&#039;.$type.&#039;</b>&#039;.PHP_EOL.&#039;üßæ–í–∏–¥: &#160;&#160;<b>&#039;.$cat.&#039;</b>&#039;.PHP_EOL.&#039;üë®‚Äçüë©‚Äçüë¶–ü–æ–ª: &#160;&#160;<b>&#039;.$gender.&#039;</b>&#039;.PHP_EOL.&#039;¬ÆÔ∏è–ë—Ä–µ–Ω–¥: &#160;&#160;<b>&#039;.$row[0][4].&#039;</b>&#039;.PHP_EOL.&#039;‚ÜïÔ∏è–†–∞–∑–º–µ—Ä: &#160;&#160;<b>&#039;.$row[0][5].&#039;</b>&#039;.PHP_EOL.&#039;üíµ–¶–µ–Ω–∞: &#160;&#160;<b>&#039;.$row[0][6].&#039;</b>&#039;.PHP_EOL.&#039;üìã–û–ø–∏—Å–∞–Ω–∏–µ: &#160;&#160;&#039;.$row[0][7].&#039;&#039;.PHP_EOL.&#039;&#039;.PHP_EOL.&#039;&#039;.PHP_EOL.&#039;&#039;.PHP_EOL.&#039;<i>id –ø—Ä–æ–¥–∞–≤—Ü–∞: &#039;.$userid.&#039;</i>&#039;.PHP_EOL.&#039;<i>ID —Ç–æ–≤–∞—Ä–∞: &#039;.$messageid.&#039;</i>&#039;.PHP_EOL.&#039;&#039;.PHP_EOL.&#039;üìÅüìÅüìÅüìÅüìÅüìÅüìÅüìÅüìÅüìÅüìÅüìÅ&#039;.PHP_EOL.&#039;&#039;;
													
													$bot->api->editMessageCaption([
														&#039;chat_id&#039; => $bot->mainchannel,
														&#039;message_id&#039; => $messageid,
														&#039;caption&#039; => $caption1,
														&#039;parse_mode&#039; => "HTML",
														]);
													
													
													
													$text=&#039;–í—ã–±—Ä–∞–Ω–Ω–æ–µ –æ–±—ä—è–≤–ª–µ–Ω–∏–µ ‚Ññ'.$table[$u].' —É—Å–ø–µ—à–Ω–æ —Ä–∞–∑–º–µ—â–µ–Ω–æ –≤ –∫–∞–Ω–∞–ª–µ —Å ID &#039;.$messageid.&#039;.&#039;.PHP_EOL.&#039;–í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ –ø–æ–¥–º–µ–Ω—é –†–∞–∑–º–µ—Å—Ç–∏—Ç—å –≤ –∫–∞–Ω–∞–ª–µ –º–µ–Ω—é –ò–∑–º–µ–Ω–∏—Ç—å –æ–±—ä—è–≤–ª–µ–Ω–∏—è. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–∏—Ä–∏—Ç–µ –æ–±—ä—è–≤–ª–µ–Ω–∏–µ, —á—Ç–æ–±—ã –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –µ–µ –≤ –∫–∞–Ω–∞–ª.&#039;;
												
													$merge=$bot->cmd_change_send_channel();
													usleep(100000);
													
													if (array_filter($merge) !== [])
													{
													
														$merge[] = [[&#039;text&#039; => &#039;‚¨ÖÔ∏è–ù–∞–∑–∞–¥&#039;, &#039;callback_data&#039; => &#039;change_back_send_channel&#039;], [&#039;text&#039; => &#039;‚§¥Ô∏è–í—ã–π—Ç–∏&#039;, &#039;callback_data&#039; => &#039;change_exit_send_channel&#039;]];
														
														if(isset($bot->api->body[&#039;callback_query&#039;]["id"]))
														{
															$callback_query_id=$bot->api->body[&#039;callback_query&#039;]["id"];
															$bot->api->answerCallbackQuery($callback_query_id);
														}
														
														$bot->api->editMessageText([
														&#039;chat_id&#039; => $bot->api->body[&#039;callback_query&#039;][&#039;message&#039;][&#039;chat&#039;]["id"],
														&#039;message_id&#039; => $bot->api->body[&#039;callback_query&#039;][&#039;message&#039;][&#039;message_id&#039;],
														&#039;text&#039; => $text,
														&#039;parse_mode&#039; => "HTML",
														&#039;reply_markup&#039; => json_encode( [&#039;inline_keyboard&#039;=>$merge] ),
														]);
														usleep(100000);
													}
													else
													{
														$text=&#039;–í—ã–±—Ä–∞–Ω–Ω–æ–µ –æ–±—ä—è–≤–ª–µ–Ω–∏–µ ‚Ññ'.$table[$u].' —É—Å–ø–µ—à–Ω–æ —Ä–∞–∑–º–µ—â–µ–Ω–æ –≤ –∫–∞–Ω–∞–ª–µ —Å ID &#039;.$messageid.&#039;.&#039;.PHP_EOL.&#039;–í –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç —É –í–∞—Å –Ω–µ—Ç –Ω–∏ –æ–¥–Ω–æ–≥–æ –æ–±—ä—è–≤–ª–µ–Ω–∏—è –¥–ª—è —Ä–∞–∑–º–µ—â–µ–Ω–∏—è –≤ –∫–∞–Ω–∞–ª!&#039;.PHP_EOL.&#039;&#039;.PHP_EOL.&#039;–í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ –≥–ª–∞–≤–Ω–æ–º –º–µ–Ω—é <b>–ò–∑–º–µ–Ω–∏—Ç—å –æ–±—ä—è–≤–ª–µ–Ω–∏–µ</b>.&#039;;
											
														if(isset($bot->api->body[&#039;callback_query&#039;]["id"]))
														{
															$callback_query_id=$bot->api->body[&#039;callback_query&#039;]["id"];
															$bot->api->answerCallbackQuery($callback_query_id);
														}
													
														$bot->api->editMessageText([
														&#039;chat_id&#039; => $bot->api->body[&#039;callback_query&#039;][&#039;message&#039;][&#039;chat&#039;]["id"],
														&#039;message_id&#039; => $bot->api->body[&#039;callback_query&#039;][&#039;message&#039;][&#039;message_id&#039;],
														&#039;text&#039; => $text,
														&#039;parse_mode&#039; => "HTML",
														&#039;reply_markup&#039; => json_encode( [&#039;inline_keyboard&#039;=>$bot->keyboards[&#039;inline_change&#039;]] ),
														]);
													}
												
												}
												else
												{
													$text=&#039;–í –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç —É –í–∞—Å –Ω–µ—Ç –Ω–∏ –æ–¥–Ω–æ–≥–æ –æ–±—ä—è–≤–ª–µ–Ω–∏—è –¥–ª—è —Ä–∞–∑–º–µ—â–µ–Ω–∏—è –≤ –∫–∞–Ω–∞–ª!&#039;.PHP_EOL.&#039; –í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ –≥–ª–∞–≤–Ω–æ–º –º–µ–Ω—é <b>–ò–∑–º–µ–Ω–∏—Ç—å –æ–±—ä—è–≤–ª–µ–Ω–∏–µ</b>.&#039;;
													
													if(isset($bot->api->body[&#039;callback_query&#039;]["id"]))
														{
															$callback_query_id=$bot->api->body[&#039;callback_query&#039;]["id"];
															$bot->api->answerCallbackQuery($callback_query_id);
														}
												
													$bot->api->editMessageText([
													&#039;chat_id&#039; => $bot->api->body[&#039;callback_query&#039;][&#039;message&#039;][&#039;chat&#039;]["id"],
													&#039;message_id&#039; => $bot->api->body[&#039;callback_query&#039;][&#039;message&#039;][&#039;message_id&#039;],
													&#039;text&#039; => $text,
													&#039;parse_mode&#039; => "HTML",
													&#039;reply_markup&#039; => json_encode( [&#039;inline_keyboard&#039;=>$bot->keyboards[&#039;inline_change&#039;]] ),
													]);
												}
											}
											else
											{
												
												$text=&#039;–í –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç —É –í–∞—Å <b>–Ω–µ—Ç –Ω–∏ –æ–¥–Ω–æ–≥–æ –æ–±—ä—è–≤–ª–µ–Ω–∏—è</b> –¥–ª—è —Ä–∞–∑–º–µ—â–µ–Ω–∏—è –≤ –∫–∞–Ω–∞–ª!&#039;.PHP_EOL.&#039; –í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ –≥–ª–∞–≤–Ω–æ–º –º–µ–Ω—é <b>–ò–∑–º–µ–Ω–∏—Ç—å –æ–±—ä—è–≤–ª–µ–Ω–∏–µ</b>.&#039;;
												
												if(isset($bot->api->body[&#039;callback_query&#039;]["id"]))
														{
															$callback_query_id=$bot->api->body[&#039;callback_query&#039;]["id"];
															$bot->api->answerCallbackQuery($callback_query_id);
														}
												
												$bot->api->editMessageText([
												&#039;chat_id&#039; => $bot->api->body[&#039;callback_query&#039;][&#039;message&#039;][&#039;chat&#039;]["id"],
												&#039;message_id&#039; => $bot->api->body[&#039;callback_query&#039;][&#039;message&#039;][&#039;message_id&#039;],
												&#039;text&#039; => $text,
												&#039;parse_mode&#039; => "HTML",
												&#039;reply_markup&#039; => json_encode( [&#039;inline_keyboard&#039;=>$bot->keyboards[&#039;inline_change&#039;]] ),
												]);
											}
										}';
											
										file_put_contents($include, html_entity_decode($insert, ENT_QUOTES) . PHP_EOL . PHP_EOL,FILE_APPEND);
									}
								}
							}	
							$u++;	
						}
							
						$merge[]=$put;
						unset($put);
						
					}
					
					$insert='}';
					file_put_contents($include, $insert,FILE_APPEND);
					
					return $merge;
			
				
	}
	





/////	
	public function callback_change_send_sold()
	{
		
		$con_sql2=$this->cmd_sql();
		
		$tabmain='tabmain'.$this->api->chatId.'';
		
		if(mysqli_num_rows(mysqli_query($con_sql2, 'SELECT 1 FROM '.$tabmain.' WHERE pic!="0" AND messid!="0"'))==0)
		{
			$text='–í –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç —É –í–∞—Å <b>–Ω–µ—Ç –Ω–∏ –æ–¥–Ω–æ–≥–æ —Ç–æ–≤–∞—Ä–∞</b>, —Ä–∞–∑–º–µ—â–µ–Ω–Ω–æ–≥–æ –≤ –∫–∞–Ω–∞–ª–µ!'.PHP_EOL.''.PHP_EOL.'–í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ –≥–ª–∞–≤–Ω–æ–º –º–µ–Ω—é <b>–ò–∑–º–µ–Ω–∏—Ç—å –æ–±—ä—è–≤–ª–µ–Ω–∏–µ</b>.';
			$this->callbackAnswer( $text, $this->keyboards['inline_change']);
		}

		else
		{
			
			$merge=$this->cmd_change_send_sold();
			usleep(100000);
			
			if (array_filter($merge) !== [])
			{
				$merge[] = [['text' => '‚¨ÖÔ∏è–ù–∞–∑–∞–¥', 'callback_data' => 'change_back_delete_records'], ['text' => '‚§¥Ô∏è–í—ã–π—Ç–∏', 'callback_data' => 'change_exit_delete_records']];
				
				$text='–í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ <b>–û—Ç–º–µ—Ç–∏—Ç—å –ø—Ä–æ–¥–∞–∂—É</b>. –í—ã–±–µ—Ä–∏—Ç–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ–µ –æ–±—ä—è–≤–ª–µ–Ω–∏–µ, —á—Ç–æ–±—ã –æ—Ç–º–µ—Ç–∏—Ç—å –ø—Ä–æ–¥–∞–∂—É.';
				$this->callbackAnswer( $text, $merge);
			}
			else
			{
				$text='–í –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç —É –í–∞—Å <b>–Ω–µ—Ç –Ω–∏ –æ–¥–Ω–æ–≥–æ —Ç–æ–≤–∞—Ä–∞</b>, —Ä–∞–∑–º–µ—â–µ–Ω–Ω–æ–≥–æ –≤ –∫–∞–Ω–∞–ª–µ!'.PHP_EOL.''.PHP_EOL.'–í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ –≥–ª–∞–≤–Ω–æ–º –º–µ–Ω—é <b>–ò–∑–º–µ–Ω–∏—Ç—å –æ–±—ä—è–≤–ª–µ–Ω–∏–µ</b>.';
				$this->callbackAnswer( $text, $this->keyboards['inline_change']);
			}
			
		}
	
	}





/////
	public function cmd_change_send_sold()
	{
				
		$con_sql2=$this->cmd_sql();
		
		$tabmain='tabmain'.$this->api->chatId.'';
			
			
				$query1=mysqli_query($con_sql2, 'SELECT DISTINCT messid FROM '.$tabmain.' WHERE pic!="0" AND messid!="0"');
				usleep(100000);
				$con1=mysqli_num_rows($query1);
				
					$table=[];
					
					for($i=0;$i<$con1;$i++)
					{
						mysqli_data_seek($query1, $i);
						$row1[$i]=mysqli_fetch_row($query1);
						$table[]=$row1[$i][0];	
					}
					usleep(100000);
					
					$cnt=count($table);
					$maxbuttons=1;
					$ceil=ceil($cnt/$maxbuttons);
					
					
					
					$include=''.dirname(__FILE__).'/include'.$this->api->chatId.'.php';
					
					if(file_exists($include)==FALSE)
					{
						touch($include);
						
						$insert='<?php
				
				
						class TelegramBotfunc{';
						file_put_contents($include, $insert . PHP_EOL,FILE_APPEND);
						
					}
					else
					{
						$getinclude=file($include);
						unset($getinclude[array_key_last($getinclude)]);
						file_put_contents($include, $getinclude);
					}
					
					$u=0;
					$merge=[];
					
					for($i1=0;$i1<$ceil;$i1++)
					{
						$put=[];
						for($i2=0;$i2<$maxbuttons;$i2++)
						{	
							if(isset($table[$u]))
							{
								//$tabmain='tabmain'.$table[$u].'';
								if(mysqli_num_rows(mysqli_query($con_sql2, 'SELECT DISTINCT id FROM '.$tabmain.' WHERE pic!="0" AND messid!="0"'))!=0)
								{
									$buttext="$table[$u]";
									$put[]=["text" => "$buttext", "callback_data" => "change_send_sold_$table[$u]"];
									
									if(preg_match('/callback_change_send_sold_'.$table[$u].'/', file_get_contents($include))==FALSE)
									{
										$insert='
										public function callback_change_send_sold_'.$table[$u].'()
										{	
											$bot = new TestBot;
											$bot->api->getWebhookUpdate();
											$callback_query_id=$bot->api->body[&#039;callback_query&#039;]["id"];
											
											$con_sql2=$bot->cmd_sql();
											$tabmain=&#039;tabmain&#039;.$bot->api->chatId.&#039;&#039;;
											$query1=mysqli_query($con_sql2, &#039;SELECT DISTINCT messid FROM &#039;.$tabmain.&#039; WHERE pic!="0" AND messid!="0"&#039;);
											usleep(100000);
											$con1=mysqli_num_rows($query1);
		
											if($con1!=0)
											{
		
												$query=mysqli_query($con_sql2, &#039;SELECT * FROM &#039;.$tabmain.&#039; WHERE messid="'.$table[$u].'"&#039;);
												usleep(100000);
												$con=mysqli_num_rows($query);
													
												for($i=0;$i<$con;$i++)
												{
													mysqli_data_seek($query, $i);
													$row[$i]=mysqli_fetch_row($query);
												}
												

												$messageid=$row[0][11];
												$timeold=$row[0][10];
												$timediff=time()-$timeold;
												
												//if($timediff>172000)
												//{
													$text="<b><i>–¢–æ–≤–∞—Ä –ø—Ä–æ–¥–∞–Ω</i></b>";
												
													$bot->api->editMessageCaption([
													&#039;chat_id&#039; => $bot->mainchannel,
													&#039;message_id&#039; => $messageid,
													&#039;caption&#039; => $text,
													&#039;parse_mode&#039; => "HTML",
													//&#039;reply_markup&#039; => json_encode( [&#039;inline_keyboard&#039;=>$merge] ),
													]);
												//}
												else
												{
													$bot->api->deleteMessage([
													&#039;chat_id&#039; => $bot->mainchannel,
													&#039;message_id&#039; => $messageid
													]);
												}
												
												
												$tabsold=&#039;tabservicesold&#039;;
												if(mysqli_query($con_sql2, &#039;SELECT 1 FROM &#039;.$tabsold.&#039; LIMIT 1&#039;)==FALSE)
												{
													$query1=&#039;CREATE TABLE &#039;.$tabsold.&#039; (id INT(4) UNSIGNED AUTO_INCREMENT PRIMARY KEY,type VARCHAR(20), cat VARCHAR(20), gender VARCHAR(20), brand VARCHAR(30), size VARCHAR(30), price NUMERIC(7,0), alt VARCHAR(512), pic VARCHAR(512), date VARCHAR(20), time VARCHAR(20), messid VARCHAR(20), cond VARCHAR(20), chatid VARCHAR(20)) ENGINE = InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;&#039;;
													$result1=mysqli_query($con_sql2, $query1);
													usleep(250000);

												}
												
												mysqli_query($con_sql2, &#039;INSERT INTO &#039;.$tabsold.&#039; (type, cat, gender, brand, size, price, alt, pic, date, time, messid, cond, chatid) SELECT type, cat, gender, brand, size, price, alt, pic, date, time, messid, cond, chatid FROM &#039;.$tabmain.&#039; WHERE messid="'.$table[$u].'"&#039;);
												
												$query1=mysqli_query($con_sql2, &#039;SELECT * FROM &#039;.$tabsold.&#039; WHERE id LIKE "%" ORDER by id ASC&#039;);
												$con1=mysqli_num_rows($query1);
												usleep(100000);
				
												for($i1=0;$i1<$con1;$i1++)
												{
													mysqli_data_seek($query1, $i1);
													$row1[$i1]=mysqli_fetch_row($query1);
												}
												
												$date=$bot->api->chatId;
												$time=time();
												
												$query1=&#039;UPDATE &#039;.$tabsold.&#039; SET date = REPLACE(date, "&#039;.$row1[$con1-1][9].&#039;", "&#039;.$date.&#039;") WHERE id="&#039;.$row1[$con1-1][0].&#039;"&#039;; 
												$result1=mysqli_query($con_sql2, $query1);
												
												$query1=&#039;UPDATE &#039;.$tabsold.&#039; SET time = REPLACE(time, "&#039;.$row1[$con1-1][10].&#039;", "&#039;.$time.&#039;") WHERE id="&#039;.$row1[$con1-1][0].&#039;"&#039;; 
												$result1=mysqli_query($con_sql2, $query1);
												
												
												$query=mysqli_query($con_sql2, &#039;DELETE FROM &#039;.$tabmain.&#039; WHERE messid="'.$table[$u].'"&#039;);
												usleep(100000);
												
												
												$text=&#039;–í—ã–±—Ä–∞–Ω–Ω—ã–π ID —Ç–æ–≤–∞—Ä–∞ <b>‚Ññ'.$table[$u].'</b> —É—Å–ø–µ—à–Ω–æ –æ—Ç–º–µ—á–µ–Ω –∫–∞–∫ –ø—Ä–æ–¥–∞–Ω—ã–π.&#039;.PHP_EOL.&#039;&#039;.PHP_EOL.&#039;–í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ –ø–æ–¥–º–µ–Ω—é <b>–û—Ç–º–µ—Ç–∏—Ç—å –ø—Ä–æ–¥–∞–∂—É</b>. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–∏—Ä–∏—Ç–µ ID —Ç–æ–≤–∞—Ä–∞, —á—Ç–æ–±—ã <b>–æ—Ç–º–µ—Ç–∏—Ç—å –ø—Ä–æ–¥–∞–∂—É</b>.&#039;;
												

												$merge=$bot->cmd_change_send_sold();
												usleep(100000);
												
												if (array_filter($merge) !== [])
												{
												
													$merge[] = [[&#039;text&#039; => &#039;‚¨ÖÔ∏è–ù–∞–∑–∞–¥&#039;, &#039;callback_data&#039; => &#039;change_back_delete_records&#039;], [&#039;text&#039; => &#039;‚§¥Ô∏è–í—ã–π—Ç–∏&#039;, &#039;callback_data&#039; => &#039;change_exit_delete_records&#039;]];
													
													$bot->api->answerCallbackQuery($callback_query_id);
													$bot->api->editMessageText([
													&#039;chat_id&#039; => $bot->api->body[&#039;callback_query&#039;][&#039;message&#039;][&#039;chat&#039;]["id"],
													&#039;message_id&#039; => $bot->api->body[&#039;callback_query&#039;][&#039;message&#039;][&#039;message_id&#039;],
													&#039;text&#039; => $text,
													&#039;parse_mode&#039; => "HTML",
													&#039;reply_markup&#039; => json_encode( [&#039;inline_keyboard&#039;=>$merge] ),
													]);
													usleep(100000);
												}
												else
												{
													$text=&#039;–í—ã–±—Ä–∞–Ω–Ω—ã–π ID —Ç–æ–≤–∞—Ä–∞ <b>‚Ññ'.$table[$u].'</b> —É—Å–ø–µ—à–Ω–æ –æ—Ç–º–µ—á–µ–Ω –∫–∞–∫ –ø—Ä–æ–¥–∞–Ω—ã–π.&#039;.PHP_EOL.&#039;&#039;.PHP_EOL.&#039;–í –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç —É –í–∞—Å –Ω–µ—Ç –Ω–∏ –æ–¥–Ω–æ–≥–æ —Ç–æ–≤–∞—Ä–∞, —Ä–∞–∑–º–µ—â–µ–Ω–Ω–æ–≥–æ –≤ –∫–∞–Ω–∞–ª–µ!&#039;.PHP_EOL.&#039;&#039;.PHP_EOL.&#039;–í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ –≥–ª–∞–≤–Ω–æ–º –º–µ–Ω—é <b>–ò–∑–º–µ–Ω–∏—Ç—å –æ–±—ä—è–≤–ª–µ–Ω–∏–µ</b>.&#039;;
													
													$bot->api->answerCallbackQuery($callback_query_id);
												
													$bot->api->editMessageText([
													&#039;chat_id&#039; => $bot->api->body[&#039;callback_query&#039;][&#039;message&#039;][&#039;chat&#039;]["id"],
													&#039;message_id&#039; => $bot->api->body[&#039;callback_query&#039;][&#039;message&#039;][&#039;message_id&#039;],
													&#039;text&#039; => $text,
													&#039;parse_mode&#039; => "HTML",
													&#039;reply_markup&#039; => json_encode( [&#039;inline_keyboard&#039;=>$bot->keyboards[&#039;inline_change&#039;]] ),
													]);
												}
											}
											else
											{
												
												$text=&#039;–í—ã–±—Ä–∞–Ω–Ω—ã–π ID —Ç–æ–≤–∞—Ä–∞ <b>‚Ññ'.$table[$u].'</b> —É—Å–ø–µ—à–Ω–æ –æ—Ç–º–µ—á–µ–Ω –∫–∞–∫ –ø—Ä–æ–¥–∞–Ω—ã–π.&#039;.PHP_EOL.&#039;–í –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç —É –í–∞—Å –Ω–µ—Ç –Ω–∏ –æ–¥–Ω–æ–≥–æ —Ç–æ–≤–∞—Ä–∞, —Ä–∞–∑–º–µ—â–µ–Ω–Ω–æ–≥–æ –≤ –∫–∞–Ω–∞–ª–µ!&#039;.PHP_EOL.&#039;&#039;.PHP_EOL.&#039;–í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ –≥–ª–∞–≤–Ω–æ–º –º–µ–Ω—é <b>–ò–∑–º–µ–Ω–∏—Ç—å –æ–±—ä—è–≤–ª–µ–Ω–∏–µ</b>.&#039;;
												$bot->api->answerCallbackQuery($callback_query_id);
												
												$bot->api->editMessageText([
												&#039;chat_id&#039; => $bot->api->body[&#039;callback_query&#039;][&#039;message&#039;][&#039;chat&#039;]["id"],
												&#039;message_id&#039; => $bot->api->body[&#039;callback_query&#039;][&#039;message&#039;][&#039;message_id&#039;],
												&#039;text&#039; => $text,
												&#039;parse_mode&#039; => "HTML",
												&#039;reply_markup&#039; => json_encode( [&#039;inline_keyboard&#039;=>$bot->keyboards[&#039;inline_change&#039;]] ),
												]);
											}
										}';
											
										file_put_contents($include, html_entity_decode($insert, ENT_QUOTES) . PHP_EOL . PHP_EOL,FILE_APPEND);
									}
								}
							}	
							$u++;	
						}
							
						$merge[]=$put;
						unset($put);
						
					}
					
					$insert='}';
					file_put_contents($include, $insert,FILE_APPEND);
					
					return $merge;
			
				
	}	
	 */


///////////////////////////////////////////////////////////////////////PHOTO////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////
/* 
	public function cmd_sell_add_photo_main()
	{
		
		$con_sql2=$this->cmd_sql();
		$tabserviceadd='tabserviceadd'.$this->api->chatId.'';
		$tabservicetime='tabservicetime'.$this->api->chatId.'';
		$tabmain='tabmain'.$this->api->chatId.'';
		$tabtemp='tabtempphoto'.$this->api->chatId.'';
		$time=time();
		
		$query=mysqli_query($con_sql2, 'SELECT * FROM '.$tabmain.' WHERE id LIKE "%" ORDER by id ASC');
		usleep(250000);
		$con=mysqli_num_rows($query);
		
			for($i=0;$i<$con;$i++)
			{
				mysqli_data_seek($query, $i);
				$row[$i]=mysqli_fetch_row($query);
			}
					 
			mysqli_query($con_sql2, 'UPDATE '.$tabmain.' SET time = REPLACE(time, "'.$row[$con-1][10].'", "'.$time.'") WHERE id="'.$row[$con-1][0].'"');
			usleep(100000);
			
			if($row[$con-1][8]!="0")
			{
				
				if(mysqli_query($con_sql2, 'SELECT 1 FROM '.$tabtemp.' LIMIT 1')==FALSE)
				{
				
					mysqli_query($con_sql2, 'CREATE TABLE '.$tabtemp.' (id INT(4) UNSIGNED AUTO_INCREMENT PRIMARY KEY,info VARCHAR(1)) ENGINE = InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;');
					usleep(100000);
					
					mysqli_query($con_sql2, 'INSERT INTO '.$tabtemp.' (info) VALUES ("1")');
					usleep(100000);
					
					$text='<b>–•–æ—Ç–∏—Ç–µ –¥–æ–±–∞–≤–∏—Ç—å –µ—â–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏?</b>';
					
						$this->api->sendMessage([
						'text' => $text,
						'disable_notification' => TRUE,
						'reply_markup' => json_encode( ['inline_keyboard'=>$this->keyboards['inline_photo']]),
						'disable_web_page_preview' => TRUE,
						'parse_mode'=> "HTML"
						]);
						
				}
				else
				{						
					if(mysqli_num_rows(mysqli_query($con_sql2, 'SELECT 1 FROM '.$tabtemp.' WHERE id="1" LIMIT 1'))==0)
					{
						mysqli_query($con_sql2, 'INSERT INTO '.$tabtemp.' (info) VALUES ("1")');
						usleep(100000);
						
						$text='<b>–•–æ—Ç–∏—Ç–µ –¥–æ–±–∞–≤–∏—Ç—å –µ—â–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏?</b>';
					
						$this->api->sendMessage([
						'text' => $text,
						'disable_notification' => TRUE,
						'reply_markup' => json_encode( ['inline_keyboard'=>$this->keyboards['inline_photo']]),
						'disable_web_page_preview' => TRUE,
						'parse_mode'=> "HTML"
						]);

					}
				}

			}
			else
			{
				if(mysqli_query($con_sql2, 'SELECT 1 FROM '.$tabserviceadd.' LIMIT 1')==FALSE)
				{
					mysqli_query($con_sql2, 'CREATE TABLE '.$tabserviceadd.' (id INT(4) UNSIGNED AUTO_INCREMENT PRIMARY KEY,info VARCHAR(10)) ENGINE = InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;');
					usleep(100000);
					
					mysqli_query($con_sql2, 'INSERT INTO '.$tabserviceadd.' (info) VALUES ("photo")');
					usleep(100000);
				}
				else
				{
					if(mysqli_num_rows(mysqli_query($con_sql2, 'SELECT 1 FROM '.$tabserviceadd.' WHERE id="1" LIMIT 1'))==0)
					{
						
						mysqli_query($con_sql2, 'INSERT INTO '.$tabserviceadd.' (info) VALUES ("photo")');
						usleep(100000);
					}
					else
					{
						$query1=mysqli_query($con_sql2, 'SELECT * FROM '.$tabserviceadd.' WHERE id="1"');
						usleep(100000);
						$con1=mysqli_num_rows($query1);
						
						for($i1=0;$i1<$con1;$i1++)
						{
							mysqli_data_seek($query1, $i1);
							$row1[$i1]=mysqli_fetch_row($query1);
						}
						usleep(100000);
										
						$query2='UPDATE '.$tabserviceadd.' SET info = REPLACE(info, "'.$row1[0][1].'", "photo") WHERE id="'.$row1[0][0].'"'; 
						mysqli_query($con_sql2, $query2);
					}
				
				}
				
				
				
				if(mysqli_query($con_sql2, 'SELECT 1 FROM '.$tabtemp.' LIMIT 1')==FALSE)
				{
					mysqli_query($con_sql2, 'CREATE TABLE '.$tabtemp.' (id INT(4) UNSIGNED AUTO_INCREMENT PRIMARY KEY,info VARCHAR(1)) ENGINE = InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;');
					usleep(100000);
				}
				
				
				$alt=$row[$con-1][7];
				
		
				$text='–í—ã —É–∫–∞–∑–∞–ª–∏ –æ–ø–∏—Å–∞–Ω–∏–µ: '.$alt.''.PHP_EOL.''.PHP_EOL.'–ü—Ä–∏—à–ª–∏—Ç–µ <b>—Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é —Ç–æ–≤–∞—Ä–∞</b> —á–µ—Ä–µ–∑ —Å–∫—Ä–µ–ø–∫—É —Å–ª–µ–≤–∞ –æ—Ç –æ–∫–Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏—è. <b>–§–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –ø—Ä–∏—Å—ã–ª–∞—Ç—å –ø–æ –æ–¥–Ω–æ–π</b> (–≤—Å–µ–≥–æ –∂–µ–ª–∞—Ç–µ–ª—å–Ω–æ 3-5 —à—Ç. –≤ —Ä–∞–∑–Ω—ã—Ö —Ä–∞–∫—É—Ä—Å–∞—Ö)üëá';
				
				$merge=[];
				$merge[] = [['text' => '‚¨ÖÔ∏è–ù–∞–∑–∞–¥', 'callback_data' => 'back_sell_add_photo'], ['text' => '‚§¥Ô∏è–í—ã–π—Ç–∏', 'callback_data' => 'exit_sell_add_photo']];
				
				
				$text='–ü—Ä–∏—à–ª–∏—Ç–µ <b>—Ñ–æ—Ç–æ —Ç–æ–≤–∞—Ä–∞</b>';
				$this->api->sendMessage([
					'text' => $text,
					'reply_markup' => json_encode( ['force_reply' => true, 'input_field_placeholder' => '–ü—Ä–∏—à–ª–∏—Ç–µ —Ñ–æ—Ç–æ'] ),
					'disable_notification' => TRUE,
					'disable_web_page_preview' => TRUE,
					'parse_mode'=> "HTML"
					]);
					usleep(250000);
					
				$this->api->sendMessage([
					'text' => $text,
					'reply_markup' => json_encode( ['inline_keyboard'=>$merge]),
					'disable_notification' => TRUE,
					'disable_web_page_preview' => TRUE,
					'parse_mode'=> "HTML"
					]);

			}
			
			
			if(mysqli_query($con_sql2, 'SELECT 1 FROM '.$tabservicetime.' LIMIT 1')==FALSE)
			{
				mysqli_query($con_sql2, 'CREATE TABLE '.$tabservicetime.' (id INT(4) UNSIGNED AUTO_INCREMENT PRIMARY KEY,info VARCHAR(1)) ENGINE = InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;');
				usleep(100000);
			}
			else
			{
				mysqli_query($con_sql2, 'DROP TABLE '.$tabservicetime.'');
				usleep(100000);
			}

	}


 */
 
 
	public function cmd_sell_add_photo_main()
	{
		
		$con_sql2=$this->cmd_sql();
		$tabserviceadd='tabserviceadd'.$this->api->chatId.'';
		$tabmain='tabmain'.$this->api->chatId.'';
		$tabtemp='tabtempphoto'.$this->api->chatId.'';
		
		
		$query=mysqli_query($con_sql2, 'SELECT * FROM '.$tabmain.' WHERE id LIKE "%" ORDER by id ASC');
		usleep(250000);
		$con=mysqli_num_rows($query);
		
			for($i=0;$i<$con;$i++)
			{
				mysqli_data_seek($query, $i);
				$row[$i]=mysqli_fetch_row($query);
			}
		
			if($row[$con-1][8]!="0")
			{
				
				if(mysqli_query($con_sql2, 'SELECT 1 FROM '.$tabtemp.' LIMIT 1')==FALSE)
				{
				
					mysqli_query($con_sql2, 'CREATE TABLE '.$tabtemp.' (id INT(4) UNSIGNED AUTO_INCREMENT PRIMARY KEY,info VARCHAR(1)) ENGINE = InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;');
					usleep(100000);
					
					mysqli_query($con_sql2, 'INSERT INTO '.$tabtemp.' (info) VALUES ("1")');
					usleep(100000);
					
					$text='<b>–•–æ—Ç–∏—Ç–µ –¥–æ–±–∞–≤–∏—Ç—å –µ—â–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏?</b>'.$this->pre.'';
					
					$this->api->sendMessage([
					'text' => $text,
					'disable_notification' => TRUE,
					'reply_markup' => json_encode( ['inline_keyboard'=>$this->keyboards['inline_photo']]),
					'disable_web_page_preview' => TRUE,
					'parse_mode'=> "HTML"
					]);
						
				}
				else
				{						
					if(mysqli_num_rows(mysqli_query($con_sql2, 'SELECT 1 FROM '.$tabtemp.' WHERE id="1" LIMIT 1'))==0)
					{
						mysqli_query($con_sql2, 'INSERT INTO '.$tabtemp.' (info) VALUES ("1")');
						usleep(100000);
						
						$text='<b>–•–æ—Ç–∏—Ç–µ –¥–æ–±–∞–≤–∏—Ç—å –µ—â–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏?</b>'.$this->pre.'';
					
						$this->api->sendMessage([
						'text' => $text,
						'disable_notification' => TRUE,
						'reply_markup' => json_encode( ['inline_keyboard'=>$this->keyboards['inline_photo']]),
						'disable_web_page_preview' => TRUE,
						'parse_mode'=> "HTML"
						]);

					}
				}

			}
			else
			{
				if(mysqli_query($con_sql2, 'SELECT 1 FROM '.$tabserviceadd.' LIMIT 1')==FALSE)
				{
					mysqli_query($con_sql2, 'CREATE TABLE '.$tabserviceadd.' (id INT(4) UNSIGNED AUTO_INCREMENT PRIMARY KEY,info VARCHAR(10)) ENGINE = InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;');
					usleep(100000);
					
					mysqli_query($con_sql2, 'INSERT INTO '.$tabserviceadd.' (info) VALUES ("photo")');
					usleep(100000);
				}
				else
				{
					mysqli_query($con_sql2, 'TRUNCATE TABLE '.$tabserviceadd.'');
					usleep(100000);
					
					mysqli_query($con_sql2, 'INSERT INTO '.$tabserviceadd.' (info) VALUES ("photo")');
					usleep(100000);
				}
				
				

				if(mysqli_query($con_sql2, 'SELECT 1 FROM '.$tabtemp.' LIMIT 1')==FALSE)
				{
					mysqli_query($con_sql2, 'CREATE TABLE '.$tabtemp.' (id INT(4) UNSIGNED AUTO_INCREMENT PRIMARY KEY,info VARCHAR(1)) ENGINE = InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;');
					usleep(100000);
				}
				
				
				$alt=$row[$con-1][7];
				
		
				$text='–í—ã —É–∫–∞–∑–∞–ª–∏ –æ–ø–∏—Å–∞–Ω–∏–µ: '.$alt.''.PHP_EOL.''.PHP_EOL.'–ü—Ä–∏—à–ª–∏—Ç–µ <b>—Ñ–æ—Ç–æ —Ç–æ–≤–∞—Ä–∞</b> —á–µ—Ä–µ–∑ —Å–∫—Ä–µ–ø–∫—É —Å–ª–µ–≤–∞ –æ—Ç –æ–∫–Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏—è (–≤—Å–µ–≥–æ –∂–µ–ª–∞—Ç–µ–ª—å–Ω–æ 3-5 —à—Ç. –≤ —Ä–∞–∑–Ω—ã—Ö —Ä–∞–∫—É—Ä—Å–∞—Ö)üëá'.$this->pre.'';
				
				$merge=[];
				$merge[] = [['text' => '‚¨ÖÔ∏è–ù–∞–∑–∞–¥', 'callback_data' => 'back_sell_add_photo'], ['text' => '‚§¥Ô∏è–í—ã–π—Ç–∏', 'callback_data' => 'exit_sell_add_photo']];
				
				$this->api->sendMessage([
					'text' => $text,
					'reply_markup' => json_encode( ['inline_keyboard'=>$merge]),
					'disable_notification' => TRUE,
					'disable_web_page_preview' => TRUE,
					'parse_mode'=> "HTML"
					]);
			}

	}


//////
/* 
	public function cmd_sell_add_useraction_photos()
	{
		
		$con_sql2=$this->cmd_sql();

		$tabmain='tabmain'.$this->api->chatId.'';
		$tabserviceadd='tabserviceadd'.$this->api->chatId.'';
		$tabservicetime='tabservicetime'.$this->api->chatId.'';	
		$tabservicetemp='tabservicetemp'.$this->api->chatId.'';			
		$tabtemp='tabtempphoto'.$this->api->chatId.'';
		
		$query=mysqli_query($con_sql2, 'SELECT * FROM '.$tabserviceadd.' WHERE id="1"');
		//$query=mysqli_query($con_sql2, 'SELECT 1 FROM '.$tabserviceadd.'');
		$con=mysqli_num_rows($query);
		//usleep(250000);
			
		for($i=0;$i<$con;$i++)
		{
			mysqli_data_seek($query, $i);
			$row[$i]=mysqli_fetch_row($query);
		}
		//usleep(100000);
			
		$info=$row[0][1];
			
		if($info=='photo')
		{
			$query=mysqli_query($con_sql2, 'SELECT * FROM '.$tabmain.' WHERE id LIKE "%" ORDER by id ASC');
			//usleep(250000);
			$con=mysqli_num_rows($query);
			
			for($i=0;$i<$con;$i++)
			{
				mysqli_data_seek($query, $i);
				$row[$i]=mysqli_fetch_row($query);
			}
			//usleep(250000);
			
			$timeold=$row[$con-1][10];
			$timenew=$this->api->body['message']['date'];
			

			if(($timenew-$timeold)<3)
			{

				mysqli_query($con_sql2, 'TRUNCATE TABLE '.$tabtemp.'');
				//usleep(250000);
				
				$query3=mysqli_query($con_sql2, 'SELECT * FROM '.$tabservicetemp.' WHERE id="1"');
				$con3=mysqli_num_rows($query3);
				//usleep(250000);
					
				for($i3=0;$i3<$con3;$i3++)
				{
					mysqli_data_seek($query3, $i3);
					$row3[$i3]=mysqli_fetch_row($query3);
				}
				//usleep(100000);
					
				$info3=$row3[0][1];
				
				$this->api->deleteMessage([
				'message_id' => $info3
				]);
				
				mysqli_query($con_sql2, 'DROP TABLE '.$tabservicetemp.'');
				//usleep(250000);
				
				//mysqli_query($con_sql2, 'TRUNCATE TABLE '.$tabservicetime.'');
				//usleep(250000);
				
				mysqli_query($con_sql2, 'UPDATE '.$tabmain.' SET pic = REPLACE(pic, "'.$row[$con-1][8].'", "0") WHERE id="'.$row[$con-1][0].'"');
				
				
				if(mysqli_num_rows(mysqli_query($con_sql2, 'SELECT 1 FROM '.$tabservicetime.' WHERE id="1" LIMIT 1'))==0)
				{
					
					mysqli_query($con_sql2, 'INSERT INTO '.$tabservicetime.' (info) VALUES ("1")');
					//usleep(250000);
					$text='–í—ã –ø—Ä–∏—Å–ª–∞–ª–∏ <b>–Ω–µ–¥–æ–ø—É—Å—Ç–∏–º–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ñ–æ—Ç–æ</b>, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø—Ä–∏—à–ª–∏—Ç–µ –æ–¥–Ω–æ —Ñ–æ—Ç–æüëá';
						
						
					$this->api->sendMessage([
					'text' => $text,
					'disable_notification' => TRUE,
					//'reply_markup' => json_encode( ['inline_keyboard'=>$this->keyboards['inline_photo']]),
					'disable_web_page_preview' => TRUE,
					'parse_mode'=> "HTML"
					]);
				}
				
				if($row[$con-1][8]!="0")
				{
					if(preg_match('/;/', $row[$con-1][8])==FALSE)
					{
						$photos=$row[$con-1][8];
						$photos=str_replace('https://domain.com', ''.dirname(__FILE__).'', $photos);
						unlink($photos);
						//usleep(100000);
					}
					else
					{
						$photos=explode(';', $row[$con-1][8]);
						$cnt=count($photos);
						
						for($y=0;$y<$cnt;$y++)
						{
							$photos[$y]=str_replace('https://domain.com', ''.dirname(__FILE__).'', $photos[$y]);
							unlink($photos[$y]);
							//usleep(100000);
						}
					}
					
					
				}
			}
			else
			{
			
				if($this->api->getFile($this->api->body['message']['photo'])==FALSE)
				{
					$this->api->sendMessage([
					'text' => "–ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫...",
					'disable_notification' => TRUE,
					'disable_web_page_preview' => TRUE,
					'parse_mode'=> "HTML"
					]);
					//usleep(250000);
				}
				
				$filesdir1=''.dirname(__FILE__).'/filestemp'.$this->api->chatId.'/';
				
				
				if($this->api->changePhoto($filesdir1))
				{
					//usleep(250000);
				}
				
				$filesdir2=''.dirname(__FILE__).'/photos'.$this->api->chatId.'/';
				$files=glob(''.$filesdir2.'*.*');
				$filename1=''.end($files).'';
				$filename1=preg_replace('/.*\//', '', $filename1);
				$filedir1=str_replace(''.dirname(__FILE__).'', 'https://domain.com', $filesdir2);
				$photo="$filedir1$filename1";
				
				
				
				$query=mysqli_query($con_sql2, 'SELECT * FROM '.$tabmain.' WHERE id LIKE "%" ORDER by id ASC');
				//usleep(250000);
				$con=mysqli_num_rows($query);

				for($i=0;$i<$con;$i++)
				{
					mysqli_data_seek($query, $i);
					$row[$i]=mysqli_fetch_row($query);
				}
				//usleep(250000);
				
				if($row[$con-1][8]=="0")
				{
					$photoreplace=''.$photo.'';
				}
				else
				{
					$photoreplace=''.$row[$con-1][8].';'.$photo.'';
				}
					
				
				mysqli_query($con_sql2, 'UPDATE '.$tabmain.' SET pic = REPLACE(pic, "'.$row[$con-1][8].'", "'.$photoreplace.'") WHERE id="'.$row[$con-1][0].'"');
				//usleep(250000);
					
				
				mysqli_query($con_sql2, 'UPDATE '.$tabmain.' SET time = REPLACE(time, "'.$row[$con-1][10].'", "'.time().'") WHERE id="'.$row[$con-1][0].'"');
				//usleep(250000);
				
					if(mysqli_num_rows(mysqli_query($con_sql2, 'SELECT 1 FROM '.$tabtemp.' WHERE id="1" LIMIT 1'))==0)
					{
						mysqli_query($con_sql2, 'INSERT INTO '.$tabtemp.' (info) VALUES ("1")');
						//usleep(250000);

						$text='–•–æ—Ç–∏—Ç–µ –¥–æ–±–∞–≤–∏—Ç—å –µ—â–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏?';
					
						$result=$this->api->sendMessage([
						'text' => $text,
						'disable_notification' => TRUE,
						'reply_markup' => json_encode( ['inline_keyboard'=>$this->keyboards['inline_photo']]),
						'disable_web_page_preview' => TRUE,
						'parse_mode'=> "HTML"
						]);
						
						$result=json_decode($result, true);
						$messageid=$result['result']['message_id'];
						
						if(mysqli_query($con_sql2, 'SELECT 1 FROM '.$tabservicetemp.' LIMIT 1')==FALSE)
						{
							mysqli_query($con_sql2, 'CREATE TABLE '.$tabservicetemp.' (id INT(4) UNSIGNED AUTO_INCREMENT PRIMARY KEY,info VARCHAR(15)) ENGINE = InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;');
							//usleep(250000);
							
							mysqli_query($con_sql2, 'INSERT INTO '.$tabservicetemp.' (info) VALUES ("'.$messageid.'")');
							//usleep(150000);
						}
						else
						{
							mysqli_query($con_sql2, 'TRUNCATE TABLE '.$tabservicetemp.'');
							//usleep(250000);
							
							mysqli_query($con_sql2, 'INSERT INTO '.$tabservicetemp.' (info) VALUES ("'.$messageid.'")');
							//usleep(150000);
						}
					}
				
			}	

		}	

	}

 */



//////
	public function cmd_sell_add_useraction_photos()
	{
		
		$con_sql2=$this->cmd_sql();

		$tabmain='tabmain'.$this->api->chatId.'';
		$tabserviceadd='tabserviceadd'.$this->api->chatId.'';	
		$tabtemp='tabtempphoto'.$this->api->chatId.'';
		
		$query=mysqli_query($con_sql2, 'SELECT * FROM '.$tabmain.' WHERE id LIKE "%" ORDER by id ASC');
		usleep(100000);
		$con=mysqli_num_rows($query);
		
		for($i=0;$i<$con;$i++)
		{
			mysqli_data_seek($query, $i);
			$row[$i]=mysqli_fetch_row($query);
		}
				

		if($this->api->getFile($this->api->body['message']['photo'])==FALSE)
		{
			$this->api->sendMessage([
			'text' => "–ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫...",
			'disable_notification' => TRUE,
			'disable_web_page_preview' => TRUE,
			'parse_mode'=> "HTML"
			]);
		}
		
		$filesdir1=''.dirname(__FILE__).'/filestemp'.$this->api->chatId.'/';
		
		if($this->api->changePhoto($filesdir1))
		{
			usleep(100000);
		}
		
		$filesdir2=''.dirname(__FILE__).'/photos'.$this->api->chatId.'/';
		$files=glob(''.$filesdir2.'*.*');
		$filename1=''.end($files).'';
		$filename1=preg_replace('/.*\//', '', $filename1);
		$filedir1=str_replace(''.dirname(__FILE__).'', 'https://domain.com', $filesdir2);
		$photo="$filedir1$filename1";
		
		if($row[$con-1][8]=="0")
		{
			$photoreplace=''.$photo.'';
		}
		else
		{
			$photoreplace=''.$row[$con-1][8].';'.$photo.'';
		}
			
		$query1='UPDATE '.$tabmain.' SET pic = REPLACE(pic, "'.$row[$con-1][8].'", "'.$photoreplace.'") WHERE id="'.$row[$con-1][0].'"'; 
		mysqli_query($con_sql2, $query1);
		usleep(100000);
			
		
		
		if(mysqli_query($con_sql2, 'SELECT 1 FROM '.$tabtemp.' LIMIT 1'))
		{
			if(mysqli_num_rows(mysqli_query($con_sql2, 'SELECT 1 FROM '.$tabtemp.' WHERE id="1" LIMIT 1'))==0)
			{
				mysqli_query($con_sql2, 'INSERT INTO '.$tabtemp.' (info) VALUES ("1")');
				usleep(100000);

				$text='<b>–•–æ—Ç–∏—Ç–µ –¥–æ–±–∞–≤–∏—Ç—å –µ—â–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏?</b>'.$this->pre.'';
			
				$this->api->sendMessage([
				'text' => $text,
				'disable_notification' => TRUE,
				'reply_markup' => json_encode( ['inline_keyboard'=>$this->keyboards['inline_photo']]),
				'disable_web_page_preview' => TRUE,
				'parse_mode'=> "HTML"
				]);
			}
	
		}
		else
		{						
			mysqli_query($con_sql2, 'CREATE TABLE '.$tabtemp.' (id INT(4) UNSIGNED AUTO_INCREMENT PRIMARY KEY,info VARCHAR(1)) ENGINE = InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;');
			usleep(100000);
			
			mysqli_query($con_sql2, 'INSERT INTO '.$tabtemp.' (info) VALUES ("1")');
			usleep(100000);
			
			$text='<b>–•–æ—Ç–∏—Ç–µ –¥–æ–±–∞–≤–∏—Ç—å –µ—â–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏?</b>'.$this->pre.'';
			
			$this->api->sendMessage([
			'text' => $text,
			'disable_notification' => TRUE,
			'reply_markup' => json_encode( ['inline_keyboard'=>$this->keyboards['inline_photo']]),
			'disable_web_page_preview' => TRUE,
			'parse_mode'=> "HTML"
			]);
		}

	}





////	
/* 	public function callback_back_sell_add_photo()
	{
		
		$con_sql2=$this->cmd_sql();
		$tab='tabmain'.$this->api->chatId.'';

		$tabtemp='tabtempphoto'.$this->api->chatId.'';
		$tabservicetime='tabservicetime'.$this->api->chatId.'';
		$tabservicetemp='tabservicetemp'.$this->api->chatId.'';
		
		mysqli_query($con_sql2, 'DROP TABLE '.$tabservicetime.'');
		usleep(100000);
			
		mysqli_query($con_sql2, 'DROP TABLE '.$tabservicetemp.'');
		usleep(100000);
		//if(mysqli_query($con_sql2, 'SELECT 1 FROM '.$tabtemp.' LIMIT 1'))
		//{
			mysqli_query($con_sql2, 'DROP TABLE '.$tabtemp.'');
			usleep(100000);
		//}
		

		if(isset($this->api->body['callback_query']["id"]))
		{
			$callback_query_id=$this->api->body['callback_query']["id"];
			$this->api->answerCallbackQuery($callback_query_id);
		}
			
			$this->cmd_sell_add_alt_main();
		
	}
 */

/////
	public function callback_back_sell_add_photo()
	{
		$con_sql2=$this->cmd_sql();
		
		$tab='tabmain'.$this->api->chatId.'';

		$tabtemp='tabtempphoto'.$this->api->chatId.'';
		
		mysqli_query($con_sql2, 'TRUNCATE TABLE '.$tabtemp.'');
		usleep(100000);
		
		if(isset($this->api->body['callback_query']["id"]))
		{
			$callback_query_id=$this->api->body['callback_query']["id"];
			$this->api->answerCallbackQuery($callback_query_id);
		}


		$this->cmd_sell_add_alt_main();
	}



////	
/* 	public function callback_exit_sell_add_photo()
	{
		$con_sql2=$this->cmd_sql();
		$tabtemp='tabtempphoto'.$this->api->chatId.'';
		$tabserviceadd='tabserviceadd'.$this->api->chatId.'';
		$tabservicetime='tabservicetime'.$this->api->chatId.'';
		$tabservicetemp='tabservicetemp'.$this->api->chatId.'';
		$tab='tabmain'.$this->api->chatId.'';
		
		//if(mysqli_query($con_sql2, 'SELECT 1 FROM '.$tabtemp.' LIMIT 1'))
		//{
			mysqli_query($con_sql2, 'DROP TABLE '.$tabtemp.'');
			usleep(100000);
		//}	
		
		//if(mysqli_query($con_sql2, 'SELECT 1 FROM '.$tabserviceadd.' LIMIT 1'))
		//{
			mysqli_query($con_sql2, 'DROP TABLE '.$tabserviceadd.'');
			usleep(100000);
		//}	
		
		mysqli_query($con_sql2, 'DROP TABLE '.$tabservicetime.'');
		usleep(100000);
		
		mysqli_query($con_sql2, 'DROP TABLE '.$tabservicetemp.'');
		usleep(100000);
			
		
		$query=mysqli_query($con_sql2, 'SELECT * FROM '.$tab.' WHERE id LIKE "%" ORDER by id ASC');
		usleep(100000);
		$con=mysqli_num_rows($query);
	
	
		
			for($i=0;$i<$con;$i++)
			{
				mysqli_data_seek($query, $i);
				$row[$i]=mysqli_fetch_row($query);
			}
			

			if($row[$con-1][8]!="0")
			{
				if(preg_match('/;/', $row[$con-1][8])==FALSE)
				{
					$photos=$row[$con-1][8];
					$photos=str_replace('https://domain.com', ''.dirname(__FILE__).'', $photos);
					unlink($photos);
					usleep(100000);
				}
				else
				{
					$photos=explode(';', $row[$con-1][8]);
					$cnt=count($photos);
					
					for($y=0;$y<$cnt;$y++)
					{
						$photos[$y]=str_replace('https://domain.com', ''.dirname(__FILE__).'', $photos[$y]);
						unlink($photos[$y]);
						usleep(100000);
					}
				}
				
				$query1='UPDATE '.$tab.' SET pic = REPLACE(pic, "'.$row[$con-1][8].'", "0") WHERE id="'.$row[$con-1][0].'"'; 
				$result1=mysqli_query($con_sql2, $query1);
			}
		
		
		$filesdir1=''.dirname(__FILE__).'/filestemp'.$this->api->chatId.'/';
		$files=glob(''.$filesdir1.'*.*');
		$cnt2=count($files);
		for($o2=0;$o2<$cnt2;$o2++)
		{
			unlink($files[$o2]);
			usleep(100000);
		}
		
		
		if($this->cmd_isadmin())
		{
			$text='–í—ã –≤—ã—à–ª–∏ –≤ <b>–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é</b>.';
			
			if(isset($this->api->body['callback_query']["id"]))
			{
				$callback_query_id=$this->api->body['callback_query']["id"];
				$this->api->answerCallbackQuery($callback_query_id);
			}
			
			$this->api->sendMessage([
				'text' => $text,
				'reply_markup' => json_encode( ['inline_keyboard'=>$this->keyboards['inline_default_admin']]),
				'disable_notification' => TRUE,
				'disable_web_page_preview' => TRUE,
				'parse_mode'=> "HTML"
				]);
			usleep(100000);
		}
		else
		{
			$text='–í—ã –≤—ã—à–ª–∏ –≤ <b>–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é</b>.';
						
			if(isset($this->api->body['callback_query']["id"]))
			{
				$callback_query_id=$this->api->body['callback_query']["id"];
				$this->api->answerCallbackQuery($callback_query_id);
			}
			
			$this->api->sendMessage([
				'text' => $text,
				'reply_markup' => json_encode( ['inline_keyboard'=>$this->keyboards['inline_default']]),
				'disable_notification' => TRUE,
				'disable_web_page_preview' => TRUE,
				'parse_mode'=> "HTML"
				]);
			usleep(100000);
		}
		
		
	}
 */
 
 
 
 
////	
	public function callback_exit_sell_add_photo()
	{
		$con_sql2=$this->cmd_sql();
		$tabtemp='tabtempphoto'.$this->api->chatId.'';
		$tabserviceadd='tabserviceadd'.$this->api->chatId.'';
		$tabmain='tabmain'.$this->api->chatId.'';
		
		mysqli_query($con_sql2, 'TRUNCATE TABLE '.$tabtemp.'');
		usleep(100000);
		
		mysqli_query($con_sql2, 'TRUNCATE TABLE '.$tabserviceadd.'');
		usleep(100000);
		

		$query=mysqli_query($con_sql2, 'SELECT * FROM '.$tabmain.' WHERE id LIKE "%" ORDER by id ASC');
		usleep(100000);
		$con=mysqli_num_rows($query);
	
		for($i=0;$i<$con;$i++)
		{
			mysqli_data_seek($query, $i);
			$row[$i]=mysqli_fetch_row($query);
		}
		
		
		if($row[$con-1][8]!="0")
		{
			if(preg_match('/;/', $row[$con-1][8])==FALSE)
			{
				$photos=$row[$con-1][8];
				$photos=str_replace('https://domain.com', ''.dirname(__FILE__).'', $photos);
				unlink($photos);
				
			}
			else
			{
				$photos=explode(';', $row[$con-1][8]);
				$cnt=count($photos);
				
				for($y=0;$y<$cnt;$y++)
				{
					$photos[$y]=str_replace('https://domain.com', ''.dirname(__FILE__).'', $photos[$y]);
					unlink($photos[$y]);
					
				}
			}
			
			$query1='UPDATE '.$tabmain.' SET pic = REPLACE(pic, "'.$row[$con-1][8].'", "0") WHERE id="'.$row[$con-1][0].'"'; 
			$result1=mysqli_query($con_sql2, $query1);
		}
		

		if($this->cmd_isadmin())
		{
			$text='–í—ã –≤—ã—à–ª–∏ –≤ <b>–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é</b>.'.$this->pre.'';
			
			if(isset($this->api->body['callback_query']["id"]))
			{
				$callback_query_id=$this->api->body['callback_query']["id"];
				$this->api->answerCallbackQuery($callback_query_id);
			}
			
			$this->api->sendMessage([
				'text' => $text,
				'reply_markup' => json_encode( ['inline_keyboard'=>$this->keyboards['inline_default_admin']]),
				'disable_notification' => TRUE,
				'disable_web_page_preview' => TRUE,
				'parse_mode'=> "HTML"
				]);
		}
		else
		{
			$text='–í—ã –≤—ã—à–ª–∏ –≤ <b>–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é</b>.'.$this->pre.'';
						
			if(isset($this->api->body['callback_query']["id"]))
			{
				$callback_query_id=$this->api->body['callback_query']["id"];
				$this->api->answerCallbackQuery($callback_query_id);
			}
			
			$this->api->sendMessage([
				'text' => $text,
				'reply_markup' => json_encode( ['inline_keyboard'=>$this->keyboards['inline_default']]),
				'disable_notification' => TRUE,
				'disable_web_page_preview' => TRUE,
				'parse_mode'=> "HTML"
				]);
		}
		
		
	}
	
	
////	
/* 	public function callback_change_sell_add_photo()
	{
		
		$con_sql2=$this->cmd_sql();
		$tab='tabmain'.$this->api->chatId.'';

		$tabtemp='tabtempphoto'.$this->api->chatId.'';
		$tabservicetime='tabservicetime'.$this->api->chatId.'';
		$tabservicetemp='tabservicetemp'.$this->api->chatId.'';
		
		mysqli_query($con_sql2, 'DROP TABLE '.$tabservicetime.'');
		usleep(100000);
			
		mysqli_query($con_sql2, 'DROP TABLE '.$tabservicetemp.'');
		usleep(100000);
		//if(mysqli_query($con_sql2, 'SELECT 1 FROM '.$tabtemp.' LIMIT 1'))
		//{
			mysqli_query($con_sql2, 'DROP TABLE '.$tabtemp.'');
			usleep(100000);
		//}
		
		$query=mysqli_query($con_sql2, 'SELECT * FROM '.$tab.' WHERE id LIKE "%" ORDER by id ASC');
		usleep(100000);
		$con=mysqli_num_rows($query);
					
			for($i=0;$i<$con;$i++)
			{
				mysqli_data_seek($query, $i);
				$row[$i]=mysqli_fetch_row($query);
			}
			
					
			if($row[$con-1][8]!="0")
			{
				if(preg_match('/;/', $row[$con-1][8])==FALSE)
				{
					$photos=$row[$con-1][8];
					$photos=str_replace('https://domain.com', ''.dirname(__FILE__).'', $photos);
					unlink($photos);
					//usleep(100000);
				}
				else
				{
					$photos=explode(';', $row[$con-1][8]);
					$cnt=count($photos);
					
					for($y=0;$y<$cnt;$y++)
					{
						$photos[$y]=str_replace('https://domain.com', ''.dirname(__FILE__).'', $photos[$y]);
						unlink($photos[$y]);
						//usleep(100000);
					}
				}
				
				$query1='UPDATE '.$tab.' SET pic = REPLACE(pic, "'.$row[$con-1][8].'", "0") WHERE id="'.$row[$con-1][0].'"'; 
				$result1=mysqli_query($con_sql2, $query1);
			}
			
			$filesdir1=''.dirname(__FILE__).'/filestemp'.$this->api->chatId.'/';
			$files=glob(''.$filesdir1.'*.*');
			$cnt2=count($files);
			for($o2=0;$o2<$cnt2;$o2++)
			{
				unlink($files[$o2]);
				//usleep(100000);
			}
		
			if(isset($this->api->body['callback_query']["id"]))
			{
				$callback_query_id=$this->api->body['callback_query']["id"];
				$this->api->answerCallbackQuery($callback_query_id);
			}
			

			$this->cmd_sell_add_photo_main();
		
	}

 */
 
 
 
////	
	public function callback_change_sell_add_photo()
	{
		$this->api->sendChatAction([
		'action'=> 'upload_photo'
		]);
		sleep(5);
		$this->api->sendChatAction([
		'action'=> 'upload_photo'
		]);
		sleep(5);
		$con_sql2=$this->cmd_sql();
		$tab='tabmain'.$this->api->chatId.'';

		$tabtemp='tabtempphoto'.$this->api->chatId.'';

		mysqli_query($con_sql2, 'TRUNCATE TABLE '.$tabtemp.'');
		usleep(100000);
		
		$query=mysqli_query($con_sql2, 'SELECT * FROM '.$tab.' WHERE id LIKE "%" ORDER by id ASC');
		usleep(100000);
		$con=mysqli_num_rows($query);
					
		for($i=0;$i<$con;$i++)
		{
			mysqli_data_seek($query, $i);
			$row[$i]=mysqli_fetch_row($query);
		}
		
		
		if($row[$con-1][8]!="0")
		{
			if(preg_match('/;/', $row[$con-1][8])==FALSE)
			{
				$photos=$row[$con-1][8];
				$photos=str_replace('https://domain.com', ''.dirname(__FILE__).'', $photos);
				unlink($photos);
			}
			else
			{
				$photos=explode(';', $row[$con-1][8]);
				$cnt=count($photos);
				
				for($y=0;$y<$cnt;$y++)
				{
					$photos[$y]=str_replace('https://domain.com', ''.dirname(__FILE__).'', $photos[$y]);
					unlink($photos[$y]);
				}
			}
			
			$query1='UPDATE '.$tab.' SET pic = REPLACE(pic, "'.$row[$con-1][8].'", "0") WHERE id="'.$row[$con-1][0].'"'; 
			$result1=mysqli_query($con_sql2, $query1);
		}
		
		if(isset($this->api->body['callback_query']["id"]))
		{
			$callback_query_id=$this->api->body['callback_query']["id"];
			$this->api->answerCallbackQuery($callback_query_id);
		}
		
		
		$this->cmd_sell_add_photo_main();	
	}


/////
/* 
public function callback_inline_photo_yes()
	{
		$con_sql2=$this->cmd_sql();
		$tabtemp='tabtempphoto'.$this->api->chatId.'';
		$tabservicetime='tabservicetime'.$this->api->chatId.'';
		$tabservicetemp='tabservicetemp'.$this->api->chatId.'';
		
		if(isset($this->api->body['callback_query']["id"]))
		{
			$callback_query_id=$this->api->body['callback_query']["id"];
			$this->api->answerCallbackQuery($callback_query_id);
		}
		
		mysqli_query($con_sql2, 'DROP TABLE '.$tabservicetime.'');
		usleep(100000);
		
		$query=mysqli_query($con_sql2, 'SELECT * FROM '.$tabservicetemp.' WHERE id="1"');
		usleep(250000);
		$con=mysqli_num_rows($query);

		for($i=0;$i<$con;$i++)
		{
			mysqli_data_seek($query, $i);
			$row[$i]=mysqli_fetch_row($query);
		}
		
		$info=$row[0][1];
				
		$this->api->deleteMessage([
		'message_id' => $info
		]);
		
		mysqli_query($con_sql2, 'DROP TABLE '.$tabservicetemp.'');
		usleep(100000);
		
		//if(mysqli_query($con_sql2, 'SELECT 1 FROM '.$tabtemp.' LIMIT 1'))
		//{
			mysqli_query($con_sql2, 'DROP TABLE '.$tabtemp.'');
			usleep(100000);
		//}
		else
		{
			if(mysqli_num_rows(mysqli_query($con_sql2, 'SELECT 1 FROM '.$tabtemp.' WHERE id LIKE "%" LIMIT 1'))!=0)
			{
				mysqli_query($con_sql2, 'TRUNCATE TABLE '.$tabtemp.'');
				usleep(250000);
			}
			else
			{
				mysqli_query($con_sql2, 'TRUNCATE TABLE '.$tabtemp.'');
				usleep(250000);
			}
		}
		
		$text="–ü—Ä–∏—à–ª–∏—Ç–µ <b>–µ—â–µ –æ–¥–Ω–æ —Ñ–æ—Ç–æ —Ç–æ–≤–∞—Ä–∞</b> —á–µ—Ä–µ–∑ —Å–∫—Ä–µ–ø–∫—É —Å–ª–µ–≤–∞ –æ—Ç –æ–∫–Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏—èüëá";
		$this->api->sendMessage([
		'text' => $text,
		//'reply_markup' => json_encode( ['force_reply' => true, 'input_field_placeholder' => '–ü—Ä–∏—à–ª–∏—Ç–µ –µ—â–µ —Ñ–æ—Ç–æ —Ç–æ–≤–∞—Ä–∞'] ),
		'disable_notification' => TRUE,
		'disable_web_page_preview' => TRUE,
		'parse_mode'=> "HTML"
		]);
		

	}
	 */



/////
	public function callback_inline_photo_yes()
	{
		$this->api->sendChatAction([
		'action'=> 'upload_photo'
		]);
		sleep(5);
		$this->api->sendChatAction([
		'action'=> 'upload_photo'
		]);
		sleep(5);
		
		$con_sql2=$this->cmd_sql();
		$tabtemp='tabtempphoto'.$this->api->chatId.'';
		
		if(isset($this->api->body['callback_query']["id"]))
		{
			$callback_query_id=$this->api->body['callback_query']["id"];
			$this->api->answerCallbackQuery($callback_query_id);
		}
		
		mysqli_query($con_sql2, 'TRUNCATE TABLE '.$tabtemp.'');
		usleep(100000);
		
		
		$text='–ü—Ä–∏—à–ª–∏—Ç–µ <b>–µ—â–µ —Ñ–æ—Ç–æ —Ç–æ–≤–∞—Ä–∞</b> —á–µ—Ä–µ–∑ —Å–∫—Ä–µ–ø–∫—É —Å–ª–µ–≤–∞ –æ—Ç –æ–∫–Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏—èüëá'.$this->pre.'';
		$this->api->sendMessage([
		'text' => $text,
		'disable_notification' => TRUE,
		'disable_web_page_preview' => TRUE,
		'parse_mode'=> "HTML"
		]);
		

	}

	
/////
/* 	public function callback_inline_photo_no()
	{
		$con_sql2=$this->cmd_sql();
		$tabtemp='tabtempphoto'.$this->api->chatId.'';
		$tabserviceadd='tabserviceadd'.$this->api->chatId.'';
		$tabservicetime='tabservicetime'.$this->api->chatId.'';
		$tabservicetemp='tabservicetemp'.$this->api->chatId.'';
		
		if(isset($this->api->body['callback_query']["id"]))
		{
			$callback_query_id=$this->api->body['callback_query']["id"];
			$this->api->answerCallbackQuery($callback_query_id);
		}
		
		//if(mysqli_query($con_sql2, 'SELECT 1 FROM '.$tabtemp.' LIMIT 1'))
		//{
			mysqli_query($con_sql2, 'DROP TABLE '.$tabtemp.'');
			usleep(100000);
		//}	
		
		//if(mysqli_query($con_sql2, 'SELECT 1 FROM '.$tabserviceadd.' LIMIT 1'))
		//{
			mysqli_query($con_sql2, 'DROP TABLE '.$tabserviceadd.'');
			usleep(100000);
		//}	
		
		mysqli_query($con_sql2, 'DROP TABLE '.$tabservicetime.'');
		usleep(100000);
		
		$query=mysqli_query($con_sql2, 'SELECT * FROM '.$tabservicetemp.' WHERE id="1"');
		usleep(250000);
		$con=mysqli_num_rows($query);

		for($i=0;$i<$con;$i++)
		{
			mysqli_data_seek($query, $i);
			$row[$i]=mysqli_fetch_row($query);
		}
		
		$info=$row[0][1];
				
		$this->api->deleteMessage([
		'message_id' => $info
		]);
		
		mysqli_query($con_sql2, 'DROP TABLE '.$tabservicetemp.'');
		usleep(100000);

		$this->cmd_sell_add_useraction_photos_complete();	
	}
 */



/////
	public function callback_inline_photo_no()
	{
		$this->api->sendChatAction([
		'action'=> 'upload_photo'
		]);
		sleep(5);
		$this->api->sendChatAction([
		'action'=> 'upload_photo'
		]);
		sleep(5);
		$this->api->sendChatAction([
		'action'=> 'upload_photo'
		]);
		sleep(4);
		//sleep(14);
		$con_sql2=$this->cmd_sql();
		$tabtemp='tabtempphoto'.$this->api->chatId.'';
		$tabserviceadd='tabserviceadd'.$this->api->chatId.'';
				
		if(isset($this->api->body['callback_query']["id"]))
		{
			$callback_query_id=$this->api->body['callback_query']["id"];
			$this->api->answerCallbackQuery($callback_query_id);
		}
		
		mysqli_query($con_sql2, 'TRUNCATE TABLE '.$tabtemp.'');
		usleep(100000);
		
		mysqli_query($con_sql2, 'TRUNCATE TABLE '.$tabserviceadd.'');
		usleep(100000);


		$this->cmd_sell_add_useraction_photos_complete();	
	}


//////
	public function cmd_sell_add_useraction_photos_complete()
	{
		
		$con_sql2=$this->cmd_sql();

		$tabmain='tabmain'.$this->api->chatId.'';

		$query=mysqli_query($con_sql2, 'SELECT * FROM '.$tabmain.' WHERE id LIKE "%" ORDER by id ASC');
		usleep(100000);
		$con=mysqli_num_rows($query);
	
		
		for($i=0;$i<$con;$i++)
		{
			mysqli_data_seek($query, $i);
			$row[$i]=mysqli_fetch_row($query);
		}
		usleep(100000);
		
		$date=date("d.m.Y");
		$time=time();
		
		$query2='UPDATE '.$tabmain.' SET date = REPLACE(date, "'.$row[$con-1][9].'", "'.$date.'") WHERE id="'.$row[$con-1][0].'"'; 
		$result2=mysqli_query($con_sql2, $query2);
		usleep(100000);
		$query2='UPDATE '.$tabmain.' SET time = REPLACE(time, "'.$row[$con-1][10].'", "'.$time.'") WHERE id="'.$row[$con-1][0].'"'; 
		$result2=mysqli_query($con_sql2, $query2);
		usleep(100000);
		$query2='UPDATE '.$tabmain.' SET chatid = REPLACE(chatid, "'.$row[$con-1][13].'", "'.$this->api->chatId.'") WHERE id="'.$row[$con-1][0].'"'; 
		$result2=mysqli_query($con_sql2, $query2);
		usleep(100000);
		/* $text='<b>–û–±—ä—è–≤–ª–µ–Ω–∏–µ ‚Ññ'.$row[$con-1][0].'</b>';
		
		$this->api->sendMessage([
		'text' => $text,
		'disable_notification' => TRUE,
		'disable_web_page_preview' => TRUE,
		'parse_mode'=> 'HTML'
		]);
		usleep(100000); */
		
						
		$type=$this->convert_rus($row[$con-1][1]);
		$cat=$this->convert_rus($row[$con-1][2]);
		$gender=$this->convert_rus($row[$con-1][3]);
		$cond=$this->convert_rus($row[$con-1][12]);
		
		$caption='<b>–û–±—ä—è–≤–ª–µ–Ω–∏–µ ‚Ññ'.$row[$con-1][0].'</b>'.PHP_EOL.''.PHP_EOL.'üìñ–ö–∞—Ç–µ–≥–æ—Ä–∏—è: <b>'.$type.'</b>'.PHP_EOL.'üßæ–í–∏–¥: <b>'.$cat.'</b>'.PHP_EOL.'üë®‚Äçüë©‚Äçüë¶–ü–æ–ª: <b>'.$gender.'</b>'.PHP_EOL.'üéè–°–æ—Å—Ç–æ—è–Ω–∏–µ: <b>'.$cond.'</b>'.PHP_EOL.'¬ÆÔ∏è–ë—Ä–µ–Ω–¥: <b>'.$row[$con-1][4].'</b>'.PHP_EOL.'‚ÜïÔ∏è–†–∞–∑–º–µ—Ä: <b>'.$row[$con-1][5].'</b>'.PHP_EOL.'üíµ–¶–µ–Ω–∞: <b>'.$row[$con-1][6].'</b>'.PHP_EOL.'üìã–û–ø–∏—Å–∞–Ω–∏–µ: '.$row[$con-1][7].'';
		
		$photo=$row[$con-1][8];
		
		
		
		
		if(preg_match('/;/', $photo)==FALSE)
		{
			$this->api->sendPhoto([
			'photo' => $photo,
			'caption' => $caption,
			'disable_notification' => TRUE,
			'parse_mode' => "HTML"
			]);
			
		usleep(100000);
		}
		else
		{
			$media=[];
			$temp=explode(';', $photo);
			$cnt=count($temp);
			for($o=0;$o<$cnt;$o++)
			{
			
			
				if($o==0)
				{
					$put=['type' => 'photo', 'media' =>  ''.$temp[$o].'', 'caption' => ''.$caption.'', 'parse_mode' => "HTML" ];
				}
				else
				{
					$put=['type' => 'photo', 'media' =>  ''.$temp[$o].'' ];
				}
		
				$media[$o]=$put;
			}
			
			
			$this->api->sendMediaGroup([
			'media' => json_encode($media),
			]);
			usleep(100000);
		}
		
		
		$text='–°–ø–∞—Å–∏–±–æ! –í–∞—à–µ –æ–±—ä—è–≤–ª–µ–Ω–∏–µ <b>‚Ññ'.$row[$con-1][0].' —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω–æ!</b>'.PHP_EOL.''.PHP_EOL.'–°–≤–µ—Ä—Ö—É –≤—ã –≤–∏–¥–∏—Ç–µ, –∫–∞–∫ –æ–±—ä—è–≤–ª–µ–Ω–∏–µ –±—É–¥–µ—Ç –≤—ã–≥–ª—è–¥–µ—Ç—å –≤ –∫–∞–Ω–∞–ª–µ. –ï—Å–ª–∏ –í—ã —É–∫–∞–∑–∞–ª–∏ –Ω–µ–≤–µ—Ä–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ, –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É <b>–£–¥–∞–ª–∏—Ç—å –æ–±—ä—è–≤–ª–µ–Ω–∏–µ</b> –∏ –Ω–∞—á–Ω–∏—Ç–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –∑–∞–Ω–æ–≤–æ.'.PHP_EOL.''.PHP_EOL.'–ï—Å–ª–∏ –≤—Å–µ —É–∫–∞–∑–∞–Ω–æ –≤–µ—Ä–Ω–æ, –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É <b>–û—Ç–ø—Ä–∞–≤–∏—Ç—å –≤ –∫–∞–Ω–∞–ª.</b> –ü—Ä–∏ —ç—Ç–æ–º –æ–±—ä—è–≤–ª–µ–Ω–∏–µ –±—É–¥–µ—Ç <b>–æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –Ω–∞ –º–æ–¥–µ—Ä–∞—Ü–∏—é</b>. –í —Å–ª—É—á–∞–µ —É—Å–ø–µ—à–Ω–æ–π –º–æ–¥–µ—Ä–∞—Ü–∏–∏, –í–∞—à–µ –æ–±—ä—è–≤–ª–µ–Ω–∏–µ –±—É–¥–µ—Ç —Ä–∞–∑–º–µ—â–µ–Ω–æ –≤ –∫–∞–Ω–∞–ª–µ. <b>–í–∞–º –ø—Ä–∏–π–¥–µ—Ç —Å–ª—É–∂–µ–±–Ω–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞—Ö.</b>'.$this->pre.'';
		
		$this->api->sendMessage([
		'text' => $text,
		'reply_markup' => json_encode( ['inline_keyboard'=>$this->keyboards['inline_sell_moderate']]),
		'disable_notification' => TRUE,
		'disable_web_page_preview' => TRUE,
		'parse_mode'=> "HTML"
		]);

	}


/////
public function callback_inline_add_send_moderate()
	{
		
		$userfio=$this->cmd_user_get_fio($this->api->chatId);
		$userphone=$this->cmd_user_get_phone($this->api->chatId);
		$text1=$this->api->textmessage;
		
		preg_match_all('/‚Ññ.*—É—Å–ø–µ—à–Ω–æ/', $text1, $out2);
		
		$record=preg_replace('/‚Ññ/', '', $out2[0][0]);
		$record=preg_replace('/—É—Å–ø–µ—à–Ω–æ/', '', $record);
		$record=$this->clean($record);
		
		$con_sql2=$this->cmd_sql();
		$tabserviceask='tabserviceask'.$this->api->chatId.'';
		
		if(mysqli_query($con_sql2, 'SELECT 1 FROM '.$tabserviceask.' LIMIT 1')==FALSE)
		{
			mysqli_query($con_sql2, 'CREATE TABLE '.$tabserviceask.' (id INT(4) UNSIGNED AUTO_INCREMENT PRIMARY KEY,record VARCHAR(20)) ENGINE = InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;');
			usleep(250000);
		}
		
		
		$query1=mysqli_query($con_sql2, 'SELECT DISTINCT record FROM '.$tabserviceask.' WHERE id LIKE "%"');
		usleep(100000);
		$con1=mysqli_num_rows($query1);
		
		$tabletemp=[];
		
		for($i=0;$i<$con1;$i++)
		{
			mysqli_data_seek($query1, $i);
			$row1[$i]=mysqli_fetch_row($query1);
			$tabletemp[]=$row1[$i][0];	
		}
		
		if(in_array($record, $tabletemp)==FALSE)
		{
			mysqli_query($con_sql2, 'INSERT INTO '.$tabserviceask.' (record) VALUES ("'.$record.'")');
			usleep(100000);

			if(isset($this->api->body['callback_query']["id"]))
			{
				$callback_query_id=$this->api->body['callback_query']["id"];
				$this->api->answerCallbackQuery($callback_query_id);
			}
			
			
			$text='–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å üë§<b>'.$userfio.' ('.$userphone.')</b> –¥–æ–±–∞–≤–∏–ª –æ–±—ä—è–≤–ª–µ–Ω–∏–µ <b>‚Ññ'.$record.'</b> –¥–ª—è —Ä–∞–∑–º–µ—â–µ–Ω–∏—è –≤ –∫–∞–Ω–∞–ª–µ. –ß—Ç–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ —Å–¥–µ–ª–∞—Ç—å —Å –¥–∞–Ω–Ω—ã–º –æ–±—ä—è–≤–ª–µ–Ω–∏–µ–º?'.$this->pre.'';
			$this->api->sendMessage([
				'chat_id' => $this->chatidadmin,
				'text' => $text,
				'parse_mode' => "HTML",
				'reply_markup' => json_encode( ['inline_keyboard'=>$this->keyboards['inline_ask_admin_channel']]),
				]);
			
			$text='–í—ã —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–∏–ª–∏ –í–∞—à–µ –æ–±—ä—è–≤–ª–µ–Ω–∏–µ <b>‚Ññ'.$record.'</b> –Ω–∞ <b>–º–æ–¥–µ—Ä–∞—Ü–∏—é –∞–¥–º–∏–Ω—É</b>. –í–∞–º –ø—Ä–∏–¥–µ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞—Ö.'.$this->pre.'';
			
			$this->api->editMessageText([
				'chat_id' => $this->api->body['callback_query']['message']['chat']["id"],
				'message_id' => $this->api->body['callback_query']['message']['message_id'],
				'text' => $text,
				'parse_mode' => "HTML",
				'reply_markup' => json_encode( ['inline_keyboard'=>$this->keyboards['inline_sell']]),
			]);
			usleep(100000);
				
			/* $this->api->sendMessage([
			'text' => $text,
			'parse_mode' => "HTML",
			'reply_markup' => json_encode( ['inline_keyboard'=>$this->keyboards['inline_sell']]),
			]); */
		}
		else
		{
			$text='–í—ã —É–∂–µ –æ—Ç–ø—Ä–∞–≤–∏–ª–∏ –¥–∞–Ω–Ω–æ–µ –æ–±—ä—è–≤–ª–µ–Ω–∏–µ <b>‚Ññ'.$record.'</b> –Ω–∞ <b>–º–æ–¥–µ—Ä–∞—Ü–∏—é –∞–¥–º–∏–Ω—É</b>. –ò–º–µ–π—Ç–µ —Ç–µ—Ä–ø–µ–Ω–∏–µ!'.$this->pre.'';
			
			if(isset($this->api->body['callback_query']["id"]))
			{
				$callback_query_id=$this->api->body['callback_query']["id"];
				$this->api->answerCallbackQuery($callback_query_id);
			}
			
			$this->api->editMessageText([
			'chat_id' => $this->api->body['callback_query']['message']['chat']["id"],
			'message_id' => $this->api->body['callback_query']['message']['message_id'],
			'text' => $text,
			'parse_mode' => "HTML",
			'reply_markup' => json_encode( ['inline_keyboard'=>$this->keyboards['inline_sell']] ),
			]);
		}
	}


/////
public function callback_inline_add_send_delete()
	{
		
		$userfio=$this->cmd_user_get_fio($this->api->chatId);
		$userphone=$this->cmd_user_get_phone($this->api->chatId);
		$text1=$this->api->textmessage;
		
		preg_match_all('/‚Ññ.*—É—Å–ø–µ—à–Ω–æ/', $text1, $out2);
		
		$record=preg_replace('/‚Ññ/', '', $out2[0][0]);
		$record=preg_replace('/—É—Å–ø–µ—à–Ω–æ/', '', $record);
		$record=$this->clean($record);

		$con_sql2=$this->cmd_sql();
		$tabtemp='tabtempphoto'.$this->api->chatId.'';
		$tabserviceadd='tabserviceadd'.$this->api->chatId.'';
		$tabmain='tabmain'.$this->api->chatId.'';
				
		//if(mysqli_query($con_sql2, 'SELECT 1 FROM '.$tabtemp.' LIMIT 1'))
		//{
			mysqli_query($con_sql2, 'TRUNCATE TABLE '.$tabtemp.'');
			usleep(250000);
		//}	
		
		//if(mysqli_query($con_sql2, 'SELECT 1 FROM '.$tabserviceadd.' LIMIT 1'))
		//{
			mysqli_query($con_sql2, 'TRUNCATE TABLE '.$tabserviceadd.'');
			usleep(250000);
		//}	
		
		$query=mysqli_query($con_sql2, 'SELECT * FROM '.$tabmain.' WHERE id="'.$record.'"');
		$con=mysqli_num_rows($query);
				
		for($i=0;$i<$con;$i++)
		{
			mysqli_data_seek($query, $i);
			$row[$i]=mysqli_fetch_row($query);
		}
			
		mysqli_query($con_sql2, 'UPDATE '.$tabmain.' SET pic = REPLACE(pic, "'.$row[0][8].'", "0") WHERE id="'.$record.'"');
		usleep(250000);
		
		//mysqli_query($con_sql2, 'DELETE FROM '.$tabmain.' WHERE id="'.$record.'"');
		//usleep(100000);
				
		$text='–í–∞—à–µ –æ–±—ä—è–≤–ª–µ–Ω–∏–µ –±—ã–ª–æ —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω–æ. –í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ –ø–æ–¥–º–µ–Ω—é <b>–ü—Ä–æ–¥–∞—Ç—å</b>.'.$this->pre.'';
		$this->callbackAnswer( $text, $this->keyboards['inline_sell']);
	}
	

/////
public function callback_inline_add_send_later()
	{
		
		$userfio=$this->cmd_user_get_fio($this->api->chatId);
		$userphone=$this->cmd_user_get_phone($this->api->chatId);
		$text1=$this->api->textmessage;
		
		preg_match_all('/‚Ññ.*—É—Å–ø–µ—à–Ω–æ/', $text1, $out2);
		
		$record=preg_replace('/‚Ññ/', '', $out2[0][0]);
		$record=preg_replace('/—É—Å–ø–µ—à–Ω–æ/', '', $record);
		$record=$this->clean($record);

		$con_sql2=$this->cmd_sql();
		$tabtemp='tabtempphoto'.$this->api->chatId.'';
		$tabserviceadd='tabserviceadd'.$this->api->chatId.'';
		$tabmain='tabmain'.$this->api->chatId.'';
				
		//if(mysqli_query($con_sql2, 'SELECT 1 FROM '.$tabtemp.' LIMIT 1'))
		//{
			mysqli_query($con_sql2, 'TRUNCATE TABLE '.$tabtemp.'');
			usleep(250000);
		//}	
		
		if(mysqli_query($con_sql2, 'SELECT 1 FROM '.$tabserviceadd.' LIMIT 1'))
		{
			mysqli_query($con_sql2, 'TRUNCATE TABLE '.$tabserviceadd.'');
			usleep(250000);
		}	

		$text='–í–∞—à–µ –æ–±—ä—è–≤–ª–µ–Ω–∏–µ <b>‚Ññ'.$record.'</b> –±—ã–ª–æ —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–æ. –í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ —Ä–∞–∑–¥–µ–ª–µ <b>–ü—Ä–æ–¥–∞—Ç—å</b>.'.$this->pre.'';
		$this->callbackAnswer( $text, $this->keyboards['inline_sell']);
	}


///////////////////////////////////////////////////////////////////////
/////	
	public function cmd_default(){
		$this->api->sendMessage( '–î–∞–Ω–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞ –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è'.$this->pre.'' );
	}
	
/////	
	public function cmd_default1(){
		$this->api->sendMessage( '–¢–∞–∫–∏–µ –¥–∞–Ω–Ω—ã–µ –Ω–µ –ø—Ä–∏–Ω–∏–º–∞—é—Ç—Å—è'.$this->pre.'' );
	}
	
/////	
	public function cmd_sell_add_adminaction_text()
	{
		
		$con_sql2=$this->cmd_sql();

		$tabserviceadmin='tabserviceadmin'.$this->api->chatId.'';
		$tabserviceadd='tabserviceadd'.$this->api->chatId.'';
		
		if(mysqli_num_rows(mysqli_query($con_sql2, 'SELECT 1 FROM '.$tabserviceadmin.' WHERE id LIKE "%" LIMIT 1'))!=0)
		{
			
			$query=mysqli_query($con_sql2, 'SELECT * FROM '.$tabserviceadmin.' WHERE id LIKE "%"');
			usleep(100000);
			$con=mysqli_num_rows($query);
			usleep(50000);
			
				
			for($i=0;$i<$con;$i++)
			{
				mysqli_data_seek($query, $i);
				usleep(50000);
				$row[$i]=mysqli_fetch_row($query);
				usleep(50000);
			}
			
			$info=$row[0][1];
			
			if($info=='show')
			{
				$this->cmd_admin_show_records_channel();
			}
			elseif($info=='delete')
			{
				$this->cmd_admin_delete_records_channel();
			}
			elseif($info=='sendsold')
			{
				$this->cmd_admin_sendsold_records_channel();
			}
			elseif($info=='orders')
			{
				$this->cmd_admin_orders_records_channel();
			}
			elseif($info=='sold')
			{
				$this->cmd_admin_sold_records_channel();
			}
		}		
		elseif(mysqli_num_rows(mysqli_query($con_sql2, 'SELECT 1 FROM '.$tabserviceadd.' WHERE id LIKE "%" LIMIT 1'))!=0)
		{
			$query=mysqli_query($con_sql2, 'SELECT * FROM '.$tabserviceadd.' WHERE id LIKE "%"');
			usleep(100000);
			$con=mysqli_num_rows($query);
			usleep(50000);
			
			for($i=0;$i<$con;$i++)
			{
				mysqli_data_seek($query, $i);
				usleep(50000);
				$row[$i]=mysqli_fetch_row($query);
				usleep(50000);
			}
			
			$info=$row[0][1];
			
			if($info=='brand')
			{
				$this->cmd_sell_add_brand();
			}
			elseif($info=='size')
			{
				$this->cmd_sell_add_size();
			}
			elseif($info=='price')
			{
				$this->cmd_sell_add_price();
			}
			elseif($info=='alt')
			{
				$this->cmd_sell_add_alt();
			}
		}
		else
		{
			$this->cmd_default();
		}

	}



/////
	public function cmd_sell_add_useraction_text()
	{
		
		$con_sql2=$this->cmd_sql();
		$tabmain='tabmain'.$this->api->chatId.'';
		$tabserviceadd='tabserviceadd'.$this->api->chatId.'';
		$tabservicefio='tabservicefio'.$this->api->chatId.'';
		$tabserviceuser='tabserviceuser'.$this->api->chatId.'';
		
		if(mysqli_query($con_sql2, 'SELECT 1 FROM '.$tabservicefio.' LIMIT 1'))
		{
			$this->cmd_admin_add_fio();
		}

	}


/////
/* 	public function cmd_sell_add_useraction_text()
	{
		
		$con_sql2=$this->cmd_sql();
		$tabmain='tabmain'.$this->api->chatId.'';
		$tabserviceadd='tabserviceadd'.$this->api->chatId.'';
		$tabservicefio='tabservicefio'.$this->api->chatId.'';
		$tabserviceuser='tabserviceuser'.$this->api->chatId.'';
		
		if(mysqli_query($con_sql2, 'SELECT 1 FROM '.$tabservicefio.' LIMIT 1'))
		{
			$this->cmd_admin_add_fio();
		}
		else
		{
			if(mysqli_query($con_sql2, 'SELECT 1 FROM '.$tabserviceuser.' LIMIT 1'))
			{
				if(mysqli_num_rows(mysqli_query($con_sql2, 'SELECT 1 FROM '.$tabserviceuser.' WHERE id LIKE "%" LIMIT 1'))!=0)
				{
					$query=mysqli_query($con_sql2, 'SELECT * FROM '.$tabserviceuser.' WHERE id LIKE "%"');
					usleep(100000);
					$con=mysqli_num_rows($query);
					usleep(50000);
					
					$row=[];
					for($i=0;$i<$con;$i++)
					{
						mysqli_data_seek($query, $i);
						usleep(50000);
						$row[$i]=mysqli_fetch_row($query);
						usleep(50000);
					}
					
					
					$info=$row[0][1];
					
					if($info=='byrecordid')
					{
						$this->cmd_byrecordid_default_buy();
					}
					
				}
				elseif(mysqli_query($con_sql2, 'SELECT 1 FROM '.$tabserviceadd.' LIMIT 1'))
				{
				
					if(mysqli_num_rows(mysqli_query($con_sql2, 'SELECT 1 FROM '.$tabserviceadd.' WHERE id LIKE "%" LIMIT 1'))!=0)
					{
						$query=mysqli_query($con_sql2, 'SELECT * FROM '.$tabserviceadd.' WHERE id LIKE "%" ORDER by id ASC');
						usleep(100000);
						$con=mysqli_num_rows($query);
						usleep(50000);
						
						for($i=0;$i<$con;$i++)
						{
							mysqli_data_seek($query, $i);
							usleep(50000);
							$row[$i]=mysqli_fetch_row($query);
							usleep(50000);
						}
						
						$info=$row[0][1];
						
						if($info=='brand')
						{
							$this->cmd_sell_add_brand();
						}
						elseif($info=='size')
						{
							$this->cmd_sell_add_size();
						}
						elseif($info=='price')
						{
							$this->cmd_sell_add_price();
						}
						elseif($info=='alt')
						{
							$this->cmd_sell_add_alt();
						}
					}
					else
					{
						$this->cmd_default();
					}
				}
				else
				{
					$this->cmd_default();
				}
			}
			elseif(mysqli_query($con_sql2, 'SELECT 1 FROM '.$tabserviceadd.' LIMIT 1'))
			{
			
				if(mysqli_num_rows(mysqli_query($con_sql2, 'SELECT 1 FROM '.$tabserviceadd.' WHERE id LIKE "%" LIMIT 1'))!=0)
				{
					$query=mysqli_query($con_sql2, 'SELECT * FROM '.$tabserviceadd.' WHERE id LIKE "%" ORDER by id ASC');
					usleep(100000);
					$con=mysqli_num_rows($query);
					usleep(50000);
					
					for($i=0;$i<$con;$i++)
					{
						mysqli_data_seek($query, $i);
						usleep(50000);
						$row[$i]=mysqli_fetch_row($query);
						usleep(50000);
					}
					
					$info=$row[0][1];
					
					if($info=='brand')
					{
						$this->cmd_sell_add_brand();
					}
					elseif($info=='size')
					{
						$this->cmd_sell_add_size();
					}
					elseif($info=='price')
					{
						$this->cmd_sell_add_price();
					}
					elseif($info=='alt')
					{
						$this->cmd_sell_add_alt();
					}
				}
				else
				{
					$this->cmd_default();
				}
			}
			else
			{
				$this->cmd_default();
			}
		
		}

	} */

///////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////
/* 	function callbackAnswer( $text, $keyboard ){
		$this->api->answerCallbackQuery( $this->result['callback_query']["id"] );
		$this->api->editMessageText([
			'chat_id' => $this->result['callback_query']['message']['chat']["id"],
			'message_id' => $this->result['callback_query']['message']['message_id'],
			'text' => $text,
			'parse_mode' => "HTML",
			'reply_markup' => json_encode( ['inline_keyboard'=>$keyboard] ),
		//	'resize_keyboard' => true,
		//	'one_time_keyboard' => true
		]);
	} */	
	
	public function callbackAnswer( $text, $keyboard ){
		$this->api->answerCallbackQuery( $this->result['callback_query']["id"] );
				
		$this->api->editMessageText([
			'chat_id' => $this->result['callback_query']['message']['chat']["id"],
			'message_id' => $this->result['callback_query']['message']['message_id'],
			'text' => $text,
			'parse_mode' => "HTML",
			'reply_markup' => json_encode( ['inline_keyboard'=>$keyboard] ),
		]);
	}
	
/////	
	public function callbackAnswer1( $text, $keyboard ){

		$this->api->answerCallbackQuery([
			'callback_query_id' => $this->result['callback_query']["id"],
			'text' => $text,
			'show_alert' => false,
		]);
		
		$this->api->sendMessage([
			'text'=> $text,
			'reply_markup' => json_encode( ['inline_keyboard'=>$keyboard]),
			'parse_mode'=> "HTML",
			'disable_notification' => TRUE,
			'disable_web_page_preview' => TRUE,
			]);
			
		$id=$this->api->messageid;
		
		$this->api->deleteMessage($id);
	}	

	
/////	
	public function callbackAnswer2( $text, $keyboard ){
		
		
		$this->api->answerCallbackQuery([
			'callback_query_id' => $this->result['callback_query']["id"],
			'text' => $text,
			'reply_markup' => json_encode( ['inline_keyboard'=>$keyboard]),
			//'show_alert' => true
		]);
		
		$id=$this->api->messageid;
		
		$this->api->deleteMessage($id);
	}	
	
/////	
	public function callbackAnswer3( $text ){

		$this->api->answerCallbackQuery([
			'callback_query_id' => $this->api->body['callback_query']["id"],
			'text' => $text,
			'parse_mode'=> "HTML"
		]);
	}	


/////	
	public function callbackAnswer4( $text, $keyboard ){

		$this->api->answerCallbackQuery([
			'callback_query_id' => $this->result['callback_query']["id"],
			'text' => '–í—ã–±–æ—Ä–∫–∞ –≥–æ—Ç–æ–≤–∞!',
			'show_alert' => false,
		]);
		
		$this->api->sendMessage([
			'text'=> $text,
			'reply_markup' => json_encode( ['inline_keyboard'=>$keyboard]),
			'parse_mode'=> "HTML",
			'disable_notification' => TRUE,
			'disable_web_page_preview' => TRUE,
			]);

	}

/////
	public function callbackAnswer5( $text ){
		$this->api->answerCallbackQuery([
			'callback_query_id' => $this->result['callback_query']["id"],
			'text' => $text,
			//'reply_markup' => json_encode( ['inline_keyboard'=>$keyboard]),
			//'show_alert' => true
		]);
		
		$id=$this->api->messageid;
		
		$this->api->deleteMessage($id);
		
	}		
	
	
/////
	public function callbackAnswer6( $text ){
		$this->api->answerCallbackQuery([
			'callback_query_id' => $this->result['callback_query']["id"],
			//'text' => $text,
			//'reply_markup' => json_encode( ['inline_keyboard'=>$keyboard]),
			//'show_alert' => true
		]);
		
		$id=$this->api->messageid;
		
		$this->api->deleteMessage($id);
		
		$this->api->sendMessage([
			'text'=> $text,
			'parse_mode'=> "HTML",
			'disable_notification' => TRUE,
			'disable_web_page_preview' => TRUE,
			]);
		
	}

///
	public function mailing( $message, $userIdList, $params = null ){
		$errors = false;
		for( $i=0; $i < count($userIdList); $i++ ){
			$defaults = [
					'chat_id' => $userIdList[$i],
					'text' => $message,
					'parse_mode'=> "HTML"
				];
			$params = is_array( $params ) ? array_merge( $params, $defaults ) : $defaults;
			try{
				$this->api->sendMessage( $params );
			}
			catch( Exception $e ){
				if( !is_array( $errors ) ){
					$errors = array();
				}
				$errors[] = $userIdList[$i];
			}
		}
		return $errors;
	}
	

/////	
	public function getChat( $params ){
		if( !is_array( $params ) ){
			$params = ['chat_id' => $params];
		}
		return $this->api->call("getChat", $params);
	}
		
////////

    public function __construct( $token = null ){
		if( !isset( $this->token ) && !isset( $token ) ){
			$this->showWebhookForm();
		}
		if( !isset( $this->token ) && isset( $token ) ){
			$this->token = $token;
		}
		$this->api = new TelegramBotApi( $this->token );		
		
		if( $this->proxy ){
			$this->api->proxy = $this->proxy;
		}
	
		/* if(class_exists('TelegramBotfunc'))
		{
			$this->func = new TelegramBotfunc();
			
		} */
		
		$this->api->debug = true;
		//$this->api->debug = false;
	}

///
	public function replyCommand(){
		
		$this->result = $this->api->getWebhookUpdate();
		
		if( !empty($this->result) )
		{
			
			if( isset( $this->result['callback_query'] ) )
			{
				$this->callCallback();
			}
			else
			{
				$this->callCommand();
			}
		}
		else
		{
			echo "good";
			exit;
		}
	}


///	
	public function callCallback()
	{
		
		if(file_exists(''.dirname(__FILE__).'/include'.$this->api->chatId.'.php'))
		{
			require_once(''.dirname(__FILE__).'/include'.$this->api->chatId.'.php');
		}

		if(class_exists('TelegramBotfunc'))
		{
			$this->func = new TelegramBotfunc();
		}
		
		$query = explode(" ", $this->result['callback_query']['data'] );
		$cmd = "callback_{$query[0]}";
		//if(preg_match('/'.$this->api->chatId.'/', file_get_contents(''.dirname(__FILE__).'/usersapproved.txt')))
		if(preg_match('/'.$this->api->chatId.'/', file_get_contents(''.dirname(__FILE__).'/usersall.txt')))
		{
			if( method_exists( $this, $cmd ) )
			{
				$this->$cmd( $this->result['callback_query']['data'] );
			}
			elseif( method_exists( $this->func, $cmd ) )
			{
				$this->func->$cmd( $this->result['callback_query']['data'] );
			}
			else
			{
				$this->callback_default( $this->result['callback_query']['data'] );
			}
		}
		else
		{
			
			$tabserviceusers='tabserviceusers';
			$tabservicebanned='tabservicebanned';
			
			if($this->cmd_sql_searchchatidtable($tabservicebanned, $this->api->chatId)==FALSE)
			{
				
				if($this->cmd_sql_searchchatidtable($tabserviceusers, $this->api->chatId))
				{
					if( method_exists( $this, $cmd ) )
					{
						$this->$cmd( $this->result['callback_query']['data'] );
					}
					elseif( method_exists( $this->func, $cmd ) )
					{
						$this->func->$cmd( $this->result['callback_query']['data'] );
					}
					else
					{
						$this->callback_default( $this->result['callback_query']['data'] );
					}
				}
			}
		}
	}



	
///
/* 	public function callCommand()
	{
		if($this->result["message"])
		{
			
			$tabserviceapproved='tabserviceapproved';
			$tabservicewant='tabservicewant';
			$tabservicebanned='tabservicebanned';
			$tabserviceusers='tabserviceusers';
			
			if($this->cmd_isadmin())
			{
				
				$con_sql2=$this->cmd_sql();
				
				$tabserviceadmin='tabserviceadmin'.$this->api->chatId.'';	
				$query=mysqli_query($con_sql2, 'SELECT * FROM '.$tabserviceadmin.' WHERE id="1"');
				usleep(250000);
				$con=mysqli_num_rows($query);
				usleep(50000);
				
				$row=[];
				for($i=0;$i<$con;$i++)
				{
					mysqli_data_seek($query, $i);
					usleep(50000);
					$row[$i]=mysqli_fetch_row($query);
					usleep(50000);
				}
				
				$info=$row[0][1];
				
				if($info=='message')
				{
					$this->cmd_admin_sendmessageapprovedusers();
				}
				elseif($this->result["message"]["text"])
				{
					$text=$this->result["message"]["text"];
					$cmd=$this->getCommand($text);
					if($cmd)
					{
						$this->$cmd();
					}
					else
					{
						$this->cmd_sell_add_adminaction_text();
					}
				}
				elseif($this->result["message"]["photo"])
				{
				
					$tabserviceadd='tabserviceadd'.$this->api->chatId.'';	

					$query=mysqli_query($con_sql2, 'SELECT * FROM '.$tabserviceadd.' WHERE id="1"');
					usleep(100000);
					$con=mysqli_num_rows($query);
					usleep(50000);
					
					$row=[];
					for($i=0;$i<$con;$i++)
					{
						mysqli_data_seek($query, $i);
						usleep(50000);
						$row[$i]=mysqli_fetch_row($query);
						usleep(50000);
					}
						
					$info=$row[0][1];
						
					if($info=='photo')
					{
						$this->cmd_sell_add_useraction_photos();
					}
				}
				else
				{
					$this->cmd_default1();
				}
				
			}
			else
			{
				//if(preg_match('/'.$this->api->chatId.'/', file_get_contents(''.dirname(__FILE__).'/usersapproved.txt')))
				if(preg_match('/'.$this->api->chatId.'/', file_get_contents(''.dirname(__FILE__).'/usersall.txt')))
				{
						
					$tabserviceadd='tabserviceadd'.$this->api->chatId.'';	
					$tabservicefio='tabservicefio'.$this->api->chatId.'';
					$tabserviceuser='tabserviceuser'.$this->api->chatId.'';
					$tabservicetime='tabservicetime'.$this->api->chatId.'';
							
					$con_sql2=$this->cmd_sql();
					
					if(mysqli_query($con_sql2, 'SELECT 1 FROM '.$tabservicefio.' LIMIT 1'))
					{
						if($this->result["message"]["text"])
						{
							$this->cmd_admin_add_fio();
						}
						else
						{
							$this->cmd_admin_text_error();
						}
						
					}
					//elseif(mysqli_query($con_sql2, 'SELECT 1 FROM '.$tabserviceadd.' LIMIT 1'))
					//{
						elseif(mysqli_num_rows(mysqli_query($con_sql2, 'SELECT 1 FROM '.$tabserviceadd.' WHERE id="1" LIMIT 1'))!=0)
						{
							
							$query=mysqli_query($con_sql2, 'SELECT * FROM '.$tabserviceadd.' WHERE id="1"');
							//usleep(100000);
							$con=mysqli_num_rows($query);
							//usleep(50000);
							
							$row=[];
							for($i=0;$i<$con;$i++)
							{
								mysqli_data_seek($query, $i);
								//usleep(50000);
								$row[$i]=mysqli_fetch_row($query);
								//usleep(50000);
							}
								
							$info=$row[0][1];
							
							if($info=='photo')
							{
								
								$query1=mysqli_query($con_sql2, 'SELECT * FROM '.$tabservicetime.' WHERE id="1"');
								
								$con1=mysqli_num_rows($query1);
							
								$row1=[];
								for($i1=0;$i1<$con1;$i1++)
								{
									mysqli_data_seek($query1, $i1);
									//usleep(50000);
									$row1[$i1]=mysqli_fetch_row($query1);
									//usleep(50000);
								}
									
								$info1=$row1[0][1];
								
								if($info1!="1")
								{
									if($this->result["message"]["photo"])
									{
										$this->cmd_sell_add_useraction_photos();
									}
									else
									{
										$this->cmd_admin_photo_error();
									}
								}
								else
								{
									mysqli_query($con_sql2, 'TRUNCATE TABLE '.$tabservicetime.'');
									exit;
								}
							}
							else
							{
								if($this->result["message"]["text"])
								{
									if($info=='brand')
									{
										$this->cmd_sell_add_brand();
									}
									elseif($info=='size')
									{
										$this->cmd_sell_add_size();
									}
									elseif($info=='price')
									{
										$this->cmd_sell_add_price();
									}
									elseif($info=='alt')
									{
										$this->cmd_sell_add_alt();
									}
								}
								else
								{
									$this->cmd_admin_text_error();
								}
							}
						}
					//}
					//elseif(mysqli_query($con_sql2, 'SELECT 1 FROM '.$tabserviceuser.' LIMIT 1'))
					//{
						elseif(mysqli_num_rows(mysqli_query($con_sql2, 'SELECT 1 FROM '.$tabserviceuser.' WHERE id="1" LIMIT 1'))!=0)
						{
							$query=mysqli_query($con_sql2, 'SELECT * FROM '.$tabserviceuser.' WHERE id="1"');
							//usleep(100000);
							$con=mysqli_num_rows($query);
							//usleep(50000);
							
							$row=[];
							for($i=0;$i<$con;$i++)
							{
								mysqli_data_seek($query, $i);
								//usleep(50000);
								$row[$i]=mysqli_fetch_row($query);
								//usleep(50000);
							}
							
							
							$info=$row[0][1];
							if($this->result["message"]["text"])
							{
								if($info=='byrecordid')
								{
									$this->cmd_byrecordid_default_buy();
								}
							}
							else
							{
								$this->cmd_admin_text_error();
							}
						}
					//}
					elseif($this->result["message"]["text"])
					{
						
						
						$text=$this->result["message"]["text"];
						
						$cmd=$this->getCommand($text);
						if($cmd)
						{
							$this->$cmd();
						}
						else
						{
							$this->cmd_default();
						}
					}
					else
					{
						$this->cmd_default1();
					}

				}
				//elseif(preg_match('/'.$this->api->chatId.'/', file_get_contents(''.dirname(__FILE__).'/usersbanned.txt')))
				elseif($this->cmd_sql_searchchatidtable($tabservicebanned, $this->api->chatId))
				{
					//$text='–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –í—ã –∑–∞–±–∞–Ω–µ–Ω—ã –∞–¥–º–∏–Ω–æ–º!';
					//$this->api->sendMessage( $text );
				}
				//elseif(preg_match('/'.$this->api->chatId.'/', file_get_contents(''.dirname(__FILE__).'/userswant.txt')))
				elseif($this->cmd_sql_searchchatidtable($tabservicewant, $this->api->chatId))
				{
					$text='–í—ã —É–∂–µ –æ—Ç–ø—Ä–∞–≤–∏–ª–∏ –∑–∞–ø—Ä–æ—Å –∞–¥–º–∏–Ω—É! –ü–æ—Ç–µ—Ä–ø–∏—Ç–µ –Ω–µ–º–Ω–æ–≥–æ!';
					$this->api->sendMessage( $text );
				}
				elseif($this->result["message"]["contact"]["phone_number"])
				{
					$this->cmd_admin_add_phone();
				}
				else
				{
					$text=$this->result["message"]["text"];
						$cmd=$this->getCommand($text);
						if($cmd)
						{
							$this->$cmd();
						}
						else
						{
							
							$this->cmd_sell_add_useraction_text();
							if(mysqli_query($con_sql2, 'SELECT 1 FROM '.$tabservicefio.' LIMIT 1'))
							{
								if($this->result["message"]["text"])
								{
									$this->cmd_admin_add_fio();
								}
								else
								{
									$this->cmd_admin_text_error();
								}
							}
						}
					//$this->cmd_sell_add_useraction_text();
					//$this->cmd_start();
					$this->api->sendMessage([
				'text' => "nfgnfgfgn",
				'disable_notification' => TRUE,
				'disable_web_page_preview' => TRUE,
				'parse_mode'=> "HTML"
				]);
				}
			}
			
		}
		
	}
 */



///
	public function callCommand()
	{
		if($this->result["message"])
		{
			
			$tabserviceapproved='tabserviceapproved';
			$tabservicewant='tabservicewant';
			$tabservicebanned='tabservicebanned';
			$tabserviceusers='tabserviceusers';
			
			if($this->cmd_isadmin())
			{
				
				$con_sql2=$this->cmd_sql();
				$tabserviceadd='tabserviceadd'.$this->api->chatId.'';	
				$tabserviceuser='tabserviceuser'.$this->api->chatId.'';
				$tabserviceadmin='tabserviceadmin'.$this->api->chatId.'';
				
				if(mysqli_num_rows(mysqli_query($con_sql2, 'SELECT 1 FROM '.$tabserviceadmin.' WHERE id="1" LIMIT 1'))!=0)
				{					
					$query=mysqli_query($con_sql2, 'SELECT * FROM '.$tabserviceadmin.' WHERE id="1"');
					$con=mysqli_num_rows($query);
					
					$row=[];
					for($i=0;$i<$con;$i++)
					{
						mysqli_data_seek($query, $i);
						$row[$i]=mysqli_fetch_row($query);
					}
					
					$info=$row[0][1];
					
					if($info=='message')
					{
						$this->cmd_admin_sendmessageapprovedusers();
					}
					elseif($info=='show')
					{
						$this->cmd_admin_show_records_channel();
					}
					elseif($info=='delete')
					{
						$this->cmd_admin_delete_records_channel();
					}
					elseif($info=='sendsold')
					{
						$this->cmd_admin_sendsold_records_channel();
					}
					elseif($info=='orders')
					{
						$this->cmd_admin_orders_records_channel();
					}
					elseif($info=='sold')
					{
						$this->cmd_admin_sold_records_channel();
					}
				}
				elseif(mysqli_num_rows(mysqli_query($con_sql2, 'SELECT 1 FROM '.$tabserviceadd.' WHERE id="1" LIMIT 1'))!=0)
				{
					
					$query=mysqli_query($con_sql2, 'SELECT * FROM '.$tabserviceadd.' WHERE id="1"');
					$con=mysqli_num_rows($query);
					
					$row=[];
					for($i=0;$i<$con;$i++)
					{
						mysqli_data_seek($query, $i);
						$row[$i]=mysqli_fetch_row($query);
					}
						
					$info=$row[0][1];
					
					if($info=='photo')
					{
						if($this->result["message"]["photo"])
						{
							$this->cmd_sell_add_useraction_photos();
						}
						/* else
						{
							$this->cmd_admin_photo_error();
						} */
					}
					else
					{
						if($this->result["message"]["text"])
						{
							if($info=='brand')
							{
								$this->cmd_sell_add_brand();
							}
							elseif($info=='size')
							{
								$this->cmd_sell_add_size();
							}
							elseif($info=='price')
							{
								$this->cmd_sell_add_price();
							}
							elseif($info=='alt')
							{
								$this->cmd_sell_add_alt();
							}
						}
						else
						{
							$this->cmd_admin_text_error();
						}
					}
				}
				elseif(mysqli_num_rows(mysqli_query($con_sql2, 'SELECT 1 FROM '.$tabserviceuser.' WHERE id="1" LIMIT 1'))!=0)
				{
					$query=mysqli_query($con_sql2, 'SELECT * FROM '.$tabserviceuser.' WHERE id="1"');
					$con=mysqli_num_rows($query);
				
					$row=[];
					for($i=0;$i<$con;$i++)
					{
						mysqli_data_seek($query, $i);
						$row[$i]=mysqli_fetch_row($query);
					}
					
					$info=$row[0][1];
					
					if($this->result["message"]["text"])
					{
						if($info=='byrecordid')
						{
							$this->cmd_byrecordid_default_buy();
						}
					}
					else
					{
						$this->cmd_admin_text_error();
					}
				}
				elseif($this->result["message"]["text"])
				{
				
					$text=$this->result["message"]["text"];
					
					$cmd=$this->getCommand($text);
					if($cmd)
					{
						$this->$cmd();
					}
				}
				else
				{
					$this->cmd_default();
				}
				
			}
			else
			{
				if(preg_match('/'.$this->api->chatId.'/', file_get_contents(''.dirname(__FILE__).'/usersall.txt')))
				{
						
					$tabserviceadd='tabserviceadd'.$this->api->chatId.'';	
					$tabservicefio='tabservicefio'.$this->api->chatId.'';
					$tabserviceuser='tabserviceuser'.$this->api->chatId.'';
												
					$con_sql2=$this->cmd_sql();
					
					if(mysqli_query($con_sql2, 'SELECT 1 FROM '.$tabservicefio.' LIMIT 1'))
					{
						if($this->result["message"]["text"])
						{
							$this->cmd_admin_add_fio();
						}
						else
						{
							$this->cmd_admin_text_error();
						}
						
					}
					elseif(mysqli_num_rows(mysqli_query($con_sql2, 'SELECT 1 FROM '.$tabserviceadd.' WHERE id="1" LIMIT 1'))!=0)
					{
						
						$query=mysqli_query($con_sql2, 'SELECT * FROM '.$tabserviceadd.' WHERE id="1"');
						$con=mysqli_num_rows($query);
						
						$row=[];
						for($i=0;$i<$con;$i++)
						{
							mysqli_data_seek($query, $i);
							$row[$i]=mysqli_fetch_row($query);
						}
							
						$info=$row[0][1];
						
						if($info=='photo')
						{
							if($this->result["message"]["photo"])
							{
								$this->cmd_sell_add_useraction_photos();
							}
							/* else
							{
								$this->cmd_admin_photo_error();
							} */
						}
						else
						{
							if($this->result["message"]["text"])
							{
								if($info=='brand')
								{
									$this->cmd_sell_add_brand();
								}
								elseif($info=='size')
								{
									$this->cmd_sell_add_size();
								}
								elseif($info=='price')
								{
									$this->cmd_sell_add_price();
								}
								elseif($info=='alt')
								{
									$this->cmd_sell_add_alt();
								}
							}
							else
							{
								$this->cmd_admin_text_error();
							}
						}
					}
					elseif(mysqli_num_rows(mysqli_query($con_sql2, 'SELECT 1 FROM '.$tabserviceuser.' WHERE id="1" LIMIT 1'))!=0)
					{
						$query=mysqli_query($con_sql2, 'SELECT * FROM '.$tabserviceuser.' WHERE id="1"');
						$con=mysqli_num_rows($query);
					
						$row=[];
						for($i=0;$i<$con;$i++)
						{
							mysqli_data_seek($query, $i);
							$row[$i]=mysqli_fetch_row($query);
						}
						
						$info=$row[0][1];
						
						if($this->result["message"]["text"])
						{
							if($info=='byrecordid')
							{
								$this->cmd_byrecordid_default_buy();
							}
						}
						else
						{
							$this->cmd_admin_text_error();
						}
					}
					elseif($this->result["message"]["text"])
					{

						$text=$this->result["message"]["text"];
						
						$cmd=$this->getCommand($text);
						if($cmd)
						{
							$this->$cmd();
						}
					}
				}
				elseif($this->cmd_sql_searchchatidtable($tabservicebanned, $this->api->chatId))
				{	
				}
				elseif($this->cmd_sql_searchchatidtable($tabservicewant, $this->api->chatId))
				{
					$text='–í—ã —É–∂–µ –æ—Ç–ø—Ä–∞–≤–∏–ª–∏ –∑–∞–ø—Ä–æ—Å –∞–¥–º–∏–Ω—É! –ü–æ—Ç–µ—Ä–ø–∏—Ç–µ –Ω–µ–º–Ω–æ–≥–æ!'.$this->pre.'';
					$this->api->sendMessage( $text );
				}
				elseif($this->result["message"]["contact"]["phone_number"])
				{
					$this->cmd_admin_add_phone();
				}
				else
				{
					
					$text=$this->result["message"]["text"];
					$cmd=$this->getCommand($text);
					if($cmd)
					{
						$this->$cmd();
					}
					else
					{
						$this->cmd_sell_add_useraction_text();
					}
				}
			}
		}
	}
	
	
/////
public function cmd_admin_text_error()
{
	
	$tabserviceadd='tabserviceadd'.$this->api->chatId.'';	
	$tabservicefio='tabservicefio'.$this->api->chatId.'';
	$tabserviceuser='tabserviceuser'.$this->api->chatId.'';
			
	$con_sql2=$this->cmd_sql();
	
	if(mysqli_num_rows(mysqli_query($con_sql2, 'SELECT 1 FROM '.$tabserviceadd.' WHERE id="1" LIMIT 1'))!=0)
	{
		
		$query=mysqli_query($con_sql2, 'SELECT * FROM '.$tabserviceadd.' WHERE id="1"');
		usleep(100000);
		$con=mysqli_num_rows($query);
		usleep(50000);
		
		$row=[];
		for($i=0;$i<$con;$i++)
		{
			mysqli_data_seek($query, $i);
			usleep(50000);
			$row[$i]=mysqli_fetch_row($query);
			usleep(50000);
		}
			
		$info=$row[0][1];
		
		if($info=='brand')
		{
			$text='–í—ã –ø—Ä–∏—Å–ª–∞–ª–∏ –¥–∞–Ω–Ω—ã–µ –Ω–µ–≤–µ—Ä–Ω–æ–≥–æ —Ç–∏–ø–∞! –ü—Ä–∏–Ω–∏–º–∞–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ —Ç–µ–∫—Å—Ç.'.$this->pre.'';
			$this->api->sendMessage([
			'text' => $text,
			'disable_notification' => TRUE,
			'disable_web_page_preview' => TRUE,
			'parse_mode'=> "HTML"
			]);
			
			$this->cmd_sell_add_brand_main();
			
		}
		elseif($info=='size')
		{
			$text='–í—ã –ø—Ä–∏—Å–ª–∞–ª–∏ –¥–∞–Ω–Ω—ã–µ –Ω–µ–≤–µ—Ä–Ω–æ–≥–æ —Ç–∏–ø–∞! –ü—Ä–∏–Ω–∏–º–∞–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ —Ç–µ–∫—Å—Ç.'.$this->pre.'';
			$this->api->sendMessage([
			'text' => $text,
			'disable_notification' => TRUE,
			'disable_web_page_preview' => TRUE,
			'parse_mode'=> "HTML"
			]);
			
			$this->cmd_sell_add_size_main();
		}
		elseif($info=='price')
		{
			$text='–í—ã –ø—Ä–∏—Å–ª–∞–ª–∏ –¥–∞–Ω–Ω—ã–µ –Ω–µ–≤–µ—Ä–Ω–æ–≥–æ —Ç–∏–ø–∞! –ü—Ä–∏–Ω–∏–º–∞—é—Ç—Å—è —Ç–æ–ª—å–∫–æ —Ü–∏—Ñ—Ä—ã.'.$this->pre.'';
			$this->api->sendMessage([
			'text' => $text,
			'disable_notification' => TRUE,
			'disable_web_page_preview' => TRUE,
			'parse_mode'=> "HTML"
			]);
			
			$this->cmd_sell_add_price_main();
		}
		elseif($info=='alt')
		{
			$text='–í—ã –ø—Ä–∏—Å–ª–∞–ª–∏ –¥–∞–Ω–Ω—ã–µ –Ω–µ–≤–µ—Ä–Ω–æ–≥–æ —Ç–∏–ø–∞! –ü—Ä–∏–Ω–∏–º–∞–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ —Ç–µ–∫—Å—Ç.'.$this->pre.'';
			$this->api->sendMessage([
			'text' => $text,
			'disable_notification' => TRUE,
			'disable_web_page_preview' => TRUE,
			'parse_mode'=> "HTML"
			]);
			
			$this->cmd_sell_add_alt_main();
		}
	}
	elseif(mysqli_num_rows(mysqli_query($con_sql2, 'SELECT 1 FROM '.$tabserviceuser.' WHERE id LIKE "%" LIMIT 1'))!=0)
	{
		$query=mysqli_query($con_sql2, 'SELECT * FROM '.$tabserviceuser.' WHERE id LIKE "%"');
		usleep(100000);
		$con=mysqli_num_rows($query);
		usleep(50000);
		
		$row=[];
		for($i=0;$i<$con;$i++)
		{
			mysqli_data_seek($query, $i);
			usleep(50000);
			$row[$i]=mysqli_fetch_row($query);
			usleep(50000);
		}
		
		
		$info=$row[0][1];
		
		if($info=='byrecordid')
		{
			
			$text='–í—ã –ø—Ä–∏—Å–ª–∞–ª–∏ –¥–∞–Ω–Ω—ã–µ –Ω–µ–≤–µ—Ä–Ω–æ–≥–æ —Ç–∏–ø–∞! –ü—Ä–∏–Ω–∏–º–∞–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ —Ç–µ–∫—Å—Ç.'.$this->pre.'';
			$this->api->sendMessage([
			'text' => $text,
			'disable_notification' => TRUE,
			'disable_web_page_preview' => TRUE,
			'parse_mode'=> "HTML"
			]);
			
			$text='–í–≤–µ–¥–∏—Ç–µ <b>ID —Ç–æ–≤–∞—Ä–∞</b>, —á—Ç–æ–±—ã –∑–∞–∫–∞–∑–∞—Ç—å –µ–≥–æ.'.$this->pre.'';
			$merge=[];
			$merge[] = [['text' => '‚¨ÖÔ∏è–ù–∞–∑–∞–¥', 'callback_data' => 'back_byrecordid_default_buy'], ['text' => '‚§¥Ô∏è–í—ã–π—Ç–∏', 'callback_data' => 'exit_byrecordid_default_buy']];
			
			
			$this->api->sendMessage([
				'text' => $text,
				'reply_markup' => json_encode( ['inline_keyboard'=>$merge]),
				'disable_notification' => TRUE,
				'disable_web_page_preview' => TRUE,
				'parse_mode'=> "HTML"
				]);
			usleep(100000);
		}
	}
	
		
}

/////
public function cmd_admin_photo_error()
{
	$text='–í—ã –ø—Ä–∏—Å–ª–∞–ª–∏ –¥–∞–Ω–Ω—ã–µ –Ω–µ–≤–µ—Ä–Ω–æ–≥–æ —Ç–∏–ø–∞! –ü—Ä–∏–Ω–∏–º–∞—é—Ç—Å—è —Ç–æ–ª—å–∫–æ —Ñ–æ—Ç–æ!'.$this->pre.'';
	$this->api->sendMessage([
	'text' => $text,
	'disable_notification' => TRUE,
	'disable_web_page_preview' => TRUE,
	'parse_mode'=> "HTML"
	]);
	
	$merge=[];
	$merge[] = [['text' => '‚¨ÖÔ∏è–ù–∞–∑–∞–¥', 'callback_data' => 'back_sell_add_photo'], ['text' => '‚§¥Ô∏è–í—ã–π—Ç–∏', 'callback_data' => 'exit_sell_add_photo']];
	
	$text='–ü—Ä–∏—à–ª–∏—Ç–µ —Ñ–æ—Ç–æ —Ç–æ–≤–∞—Ä–∞ —á–µ—Ä–µ–∑ —Å–∫—Ä–µ–ø–∫—É —Å–ª–µ–≤–∞ –æ—Ç –æ–∫–Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏—è (–∂–µ–ª–∞—Ç–µ–ª—å–Ω–æ 3-5 —à—Ç. –≤ —Ä–∞–∑–Ω—ã—Ö —Ä–∞–∫—É—Ä—Å–∞—Ö)üëá'.$this->pre.'';
	$this->api->sendMessage([
		'text' => $text,
		'reply_markup' => json_encode( ['inline_keyboard'=>$merge]),
		'disable_notification' => TRUE,
		'disable_web_page_preview' => TRUE,
		'parse_mode'=> "HTML"
		]);
		usleep(250000);
}
	
/* public function callCommand()
	{
		if($this->result["message"])
		{
			
			$tabserviceapproved='tabserviceapproved';
			$tabservicewant='tabservicewant';
			$tabservicebanned='tabservicebanned';
			$tabserviceusers='tabserviceusers';
			
			if($this->cmd_isadmin())
			{
				
				$con_sql2=$this->cmd_sql();
				
				$tabserviceadmin='tabserviceadmin'.$this->api->chatId.'';	
				$query=mysqli_query($con_sql2, 'SELECT * FROM '.$tabserviceadmin.' WHERE id LIKE "%"');
				usleep(250000);
				$con=mysqli_num_rows($query);
				usleep(50000);
				
				$row=[];
				for($i=0;$i<$con;$i++)
				{
					mysqli_data_seek($query, $i);
					usleep(50000);
					$row[$i]=mysqli_fetch_row($query);
					usleep(50000);
				}
				
				$info=$row[0][1];
				
				if($info=='message')
				{
					$this->cmd_admin_sendmessageapprovedusers();
				}
				elseif($this->result["message"]["text"])
				{
					$text=$this->result["message"]["text"];
					$cmd=$this->getCommand($text);
					if($cmd)
					{
						$this->$cmd();
					}
					else
					{
						$this->cmd_sell_add_adminaction_text();
					}
				}
				elseif($this->result["message"]["photo"])
				{
				
					$tabserviceadd='tabserviceadd'.$this->api->chatId.'';	

					$query=mysqli_query($con_sql2, 'SELECT * FROM '.$tabserviceadd.' WHERE id LIKE "%"');
					usleep(100000);
					$con=mysqli_num_rows($query);
					usleep(50000);
					
					$row=[];
					for($i=0;$i<$con;$i++)
					{
						mysqli_data_seek($query, $i);
						usleep(50000);
						$row[$i]=mysqli_fetch_row($query);
						usleep(50000);
					}
						
					$info=$row[0][1];
						
					if($info=='photo')
					{
						$this->cmd_sell_add_useraction_photos();
					}
				}
				else
				{
					$this->cmd_default1();
				}
				
			}
			else
			{
				if(preg_match('/'.$this->api->chatId.'/', file_get_contents(''.dirname(__FILE__).'/usersapproved.txt')))
				{
					
					if($this->result["message"]["text"])
					{
						$text=$this->result["message"]["text"];
						$cmd=$this->getCommand($text);
						if($cmd)
						{
							$this->$cmd();
						}
						else
						{
							$this->cmd_sell_add_useraction_text();
						}
						
					}
					elseif($this->result["message"]["photo"])
					{
						$con_sql2=$this->cmd_sql();
					
						$tabserviceadd='tabserviceadd'.$this->api->chatId.'';	
						
						$query=mysqli_query($con_sql2, 'SELECT * FROM '.$tabserviceadd.' WHERE id LIKE "%"');
						usleep(100000);
						$con=mysqli_num_rows($query);
						usleep(50000);
						
						$row=[];
						for($i=0;$i<$con;$i++)
						{
							mysqli_data_seek($query, $i);
							usleep(50000);
							$row[$i]=mysqli_fetch_row($query);
							usleep(50000);
						}
							
						$info=$row[0][1];
							
						if($info=='photo')
						{
							$this->cmd_sell_add_useraction_photos();
						}
					}
					else
					{
						$this->cmd_default1();
					}
				}
				//elseif(preg_match('/'.$this->api->chatId.'/', file_get_contents(''.dirname(__FILE__).'/usersbanned.txt')))
				elseif($this->cmd_sql_searchchatidtable($tabservicebanned, $this->api->chatId))
				{
					//$text='–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –í—ã –∑–∞–±–∞–Ω–µ–Ω—ã –∞–¥–º–∏–Ω–æ–º!';
					//$this->api->sendMessage( $text );
				}
				//elseif(preg_match('/'.$this->api->chatId.'/', file_get_contents(''.dirname(__FILE__).'/userswant.txt')))
				elseif($this->cmd_sql_searchchatidtable($tabservicewant, $this->api->chatId))
				{
					$text='–í—ã —É–∂–µ –æ—Ç–ø—Ä–∞–≤–∏–ª–∏ –∑–∞–ø—Ä–æ—Å –∞–¥–º–∏–Ω—É! –ü–æ—Ç–µ—Ä–ø–∏—Ç–µ –Ω–µ–º–Ω–æ–≥–æ!';
					$this->api->sendMessage( $text );
				}
				elseif($this->result["message"]["contact"]["phone_number"])
				{
					$this->cmd_admin_add_phone();
				}
				else
				{
					$text=$this->result["message"]["text"];
						$cmd=$this->getCommand($text);
						if($cmd)
						{
							$this->$cmd();
						}
						else
						{
							$this->cmd_sell_add_useraction_text();
						}
					//$this->cmd_sell_add_useraction_text();
					//$this->cmd_start();
					$this->api->sendMessage([
				'text' => "nfgnfgfgn",
				'disable_notification' => TRUE,
				'disable_web_page_preview' => TRUE,
				'parse_mode'=> "HTML"
				]);
				}
			}
			
		}
		
	} */
///
	public function callback_default( $query ){
		$this->api->answerCallbackQuery( [
			'callback_query_id' => $this->result['callback_query']["id"],
			'text' => "Action \"{$query}\" is not working now.",
			'show_alert' => true
		] );
	}
	
	

	
///
	public function getCommand( $text ){
		if( isset( $this->bot_name ) && strpos( $text, $this->bot_name ) ){
		$text = str_replace( $this->bot_name, "", $text );
		}
		$text = explode(" ", $text );
		$text = $text[0];
		if( $text && array_key_exists( $text, $this->commands ) && method_exists( $this, $this->commands[$text] ) ){
			return $this->commands[$text];
		}
		return false;
	}
	

}


///////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
class TelegramBotApi{

	const VERSION = '1.2';

	protected $apiToken = null;

	protected $apiUrl = "https://api.telegram.org/bot";

	public $chatId = null;

	public $debug = false;

	public $proxy = "";

    public function __construct( $token = null ){
		if( isset( $token ) ){
			$this->apiToken = $token;
		}
		else{
            throw new Exception('Required "token" not supplied in construct');
		}
	}

/////
	public function setWebhook( $bot_url ){
		return $this->call("setWebhook", ['url' => $bot_url] );
	}

/////	
	public function getWebhookUpdate(){
		$body = json_decode(file_get_contents('php://input'), true);
		$this->body = $body;
		if(isset($body["message"]["chat"]["id"]))
		{
			$this->chatId = $body["message"]["chat"]["id"];
			$this->message = $body["message"];
			$this->messageid = $body["message"]["message_id"];
			$this->firstname = $body["message"]["chat"]["first_name"];
			$this->lastname = $body["message"]["chat"]["last_name"];
			
			if( isset( $body["message"]["chat"]["username"] ) )
			{
				$this->username = $body["message"]["chat"]["username"];
			}
			if( isset( $body["message"]["text"] ) )
			{
				$this->textmessage = $body["message"]["text"];
			}
			
			
			//@file_put_contents( "log.txt", "call" . PHP_EOL, FILE_APPEND );
			

		}
		elseif(isset($body['callback_query']["message"]["chat"]["id"]))
		{
			$this->chatId = $body['callback_query']["message"]["chat"]["id"];
			$this->message = $body['callback_query']["message"];
			$this->messageid = $body['callback_query']["message"]["message_id"];
			$this->firstname = $body['callback_query']["message"]["chat"]["first_name"];
			$this->lastname = $body['callback_query']["message"]["chat"]["last_name"];
			
			if( isset( $body['callback_query']["message"]["chat"]["username"] ) )
			{
				$this->username = $body['callback_query']["message"]["chat"]["username"];
			}
			if( isset( $body['callback_query']["message"]["text"] ) )
			{
				$this->textmessage = $body['callback_query']["message"]["text"];
			}
			
			//@file_put_contents( "log.txt", "callback" . PHP_EOL, FILE_APPEND );
		}

		if( $this->debug )
			{
				@file_put_contents( "log.txt", print_r( $body, 1 ) . PHP_EOL, FILE_APPEND );
			}

		return $body;
	}


/////
	public function sendChatAction( $params ){
		if( !isset( $params['chat_id'] ) && isset( $this->chatId ) ){
			$params['chat_id'] = $this->chatId;
		}
		return $this->call("sendChatAction", $params);
	}
	
/////
	public function editMessageText( $params ){
		if( !isset( $params['chat_id'] ) && isset( $this->chatId ) ){
			$params['chat_id'] = $this->chatId;
		}
		return $this->call("editMessageText", $params);
	}

/////
	public function editMessageReplyMarkup( $params ){
		if( !isset( $params['chat_id'] ) && isset( $this->chatId ) ){
			$params['chat_id'] = $this->chatId;
		}
		return $this->call("editMessageReplyMarkup", $params);
	}	
	
/////
	public function editMessageCaption( $params ){
		if( !isset( $params['chat_id'] ) && isset( $this->chatId ) ){
			$params['chat_id'] = $this->chatId;
		}
		return $this->call("editMessageCaption", $params);
	}
	
/////
	public function editMessageMedia( $params ){
		if( !isset( $params['chat_id'] ) && isset( $this->chatId ) ){
			$params['chat_id'] = $this->chatId;
		}
		return $this->call("editMessageMedia", $params);
	}
	
/////
	public function deleteMessage( $params ){
		if( !is_array( $params ) ){
			$params = [ 'message_id' => $params ];
		}
		if( !isset( $params['chat_id'] ) && isset( $this->chatId ) ){
			$params['chat_id'] = $this->chatId;
		}
		return $this->call("deleteMessage", $params);
	}

/////
	public function answerCallbackQuery( $params ){
		if( !is_array( $params ) ){
			$params = ['callback_query_id' => $params];
		}
		return $this->call("answerCallbackQuery", $params);
	}

/////
	public function copyMessage( $params ){	
	if( !isset( $params['from_chat_id'] ) && isset( $this->chatId ) ){
			$params['from_chat_id'] = $this->chatId;
		}
		
	return $this->call("copyMessage", $params);
	}
	
/////
	public function sendAudio( $params, $caption = null ){
		if( is_string( $params ) ){
			$params = ['audio' => $params];
		}
		if( !isset( $params['chat_id'] ) && isset( $this->chatId ) ){
			$params['chat_id'] = $this->chatId;
		}
		if( !isset( $params['caption'] ) && isset( $caption ) ){
			$params['caption'] = $caption;
		}
		return $this->call("sendAudio", $params);
	}

/////
	public function sendDocument( $params, $caption = null ){
		if( is_string( $params ) ){
			$params = ['document' => $params];
		}
		if( !isset( $params['chat_id'] ) && isset( $this->chatId ) ){
			$params['chat_id'] = $this->chatId;
		}
		if( !isset( $params['caption'] ) && isset( $caption ) ){
			$params['caption'] = $caption;
		}
		return $this->call("sendDocument", $params);
	}
	
/////
	public function sendMediaGroup( $params, $caption = null ){
		
		if( is_string( $params ) ){
			$params = ['media' => $params];
		}
		if( !isset( $params['chat_id'] ) && isset( $this->chatId ) ){
			$params['chat_id'] = $this->chatId;
		}
		if( !isset( $params['caption'] ) && isset( $caption ) ){
			$params['caption'] = $caption;
		}
		return $this->call("sendMediaGroup", $params);
	}

/////
	public function getFile($data)
    {
		$file_id = $data[count($data) - 1]['file_id'];
		$file_path = $this->getFilePath($file_id);
		usleep(250000);
        return $this->copyFile($file_path);
    }
	
/////	
	public function getFiles($data)
    {
		$cnt=count($data);
		for($i=0;$i<$cnt;$i++)
		{
			$file_id = $data[$i]['file_id'];
			$file_path = $this->getFilePath($file_id);
			usleep(250000);
			return $this->copyFile($file_path);
		}
    }
	
/////
	public function getFilePath( $params ){
		if( is_string( $params ) ){
			$params = ['file_id' => $params];
		}
		return $this->call("getFile", $params);
	}
	
/////
    public function copyFile($file_path) 
	{
		
		$file_path=json_decode($file_path, TRUE);
		
		$file_path=$file_path['result']['file_path'];
			
		$file_from_tgrm = "https://api.telegram.org/file/bot".$this->apiToken."/".$file_path;
		$local_path=preg_replace('/.*\//', '', $file_path);
		$local_path=preg_replace('/^\h*\v+/m', '', $local_path);
		$local_path=preg_replace('/^[ \t]+|[ \t]+$/m', '', $local_path);
		$local_path=preg_replace('/\A[ \t]*\r?\n|\r?\n[ \t]*\Z/m', '', $local_path);
		$local_path=ltrim($local_path);
		$local_path=rtrim($local_path);
		$local_path=preg_replace('/\s{2,}/', ' ', $local_path);
		
		$filen=preg_replace('/\..*/', '', $local_path);
		$fileo=preg_replace('/.*\./', '', $local_path);
		$time=time();
		$temp=$this->generate(10);
		if(file_exists(''.dirname(__FILE__).'/filestemp'.$this->chatId.'/')==FALSE) { mkdir(''.dirname(__FILE__).'/filestemp'.$this->chatId.'/'); }
		usleep(250000);
		return copy($file_from_tgrm, ''.dirname(__FILE__).'/filestemp'.$this->chatId.'/'.$time.'_'.$temp.'.'.$fileo.'');
    } 

///////////////////
///////////////////
/////
	public function sendMessage( $params ){
		if( is_string( $params ) ){
			$params = ['text' => $params];
		}
		if( !isset( $params['chat_id'] ) && isset( $this->chatId ) ){
			$params['chat_id'] = $this->chatId;
		}
		/* if( isset( $params['chat_id'] ) && isset( $this->chatId ) ){
			$params['chat_id'] = $this->chatId;
		} */
		return $this->call("sendMessage", $params);
	}

/////	
	public function sendPhoto( $params, $caption = null ){
		
		if( is_string( $params ) ){
			$params = ['photo' => $params];
		}
		if( !isset( $params['chat_id'] ) && isset( $this->chatId ) ){
			$params['chat_id'] = $this->chatId;
		}
		if( !isset( $params['caption'] ) && isset( $caption ) ){
			$params['caption'] = $caption;
		}
		return $this->call("sendPhoto", $params);
	}
	
///// 
   public function changePhoto($filesdir1) 
	{
		
		$files=glob(''.$filesdir1.'*.*');
		$filename1=''.end($files).'';
		$file_path=$filename1;
		
		if(preg_match('/png/', $file_path))
		{
			$img=ImageCreateFromPng($file_path);
		}
		
		if(preg_match('/webp/', $file_path))
		{
			$img=ImageCreateFromWebp($file_path);
		}
		
		if(preg_match('/gif/', $file_path))
		{
			$img=ImageCreateFromGif($file_path);
		}
		
		if(preg_match('/jpg/', $file_path) OR preg_match('/jpeg/', $file_path))
		{
			$img=ImageCreateFromJpeg($file_path);
		}
		
		unlink($file_path);
		
		
		$filelogo=''.dirname(__FILE__).'/logo.png';
		$imglogo=ImageCreateFromPNG($filelogo);
		$width1=imagesx($imglogo);
		$height1=imagesy($imglogo);
		$cft1=$width1/$height1;
				
		$mainx=imagesx($img);
		$mainy=imagesy($img);
		$percents=25;
		
			
		if($mainx>$mainy)
		{
		$w=floor($mainx*$percents/100);
		$h=floor($w/$cft1);
		}
		
		if($mainx<$mainy)
		{
		$h=floor($mainy*$percents/100);
		$w=floor($h*$cft1);
		}
		
		if($mainx==$mainy)
		{
		$w=floor($mainx*$percents/100);
		$h=floor($w/$cft1);
		}
		
	
		$im1=imagecreateTRUEcolor($w,$h);
		imagealphablending($im1, false);
		imagesavealpha($im1,TRUE);
		$transparent=imagecolorallocatealpha($im1, 255, 255, 255, 127);
		imagefilledrectangle($im1, 0, 0, $w, $h, $transparent);
		imagecopyresampled($im1,$imglogo,0,0,0,0,$w,$h,imagesx($imglogo),imagesy($imglogo));
		usleep(250000);
		$width2=imagesx($im1);
		$height2=imagesy($im1);
		
		$wborder=5;
		$hborder=5;
		
		//$difwidth2=$mainx-$width2-35;
		$difwidth=mt_rand(floor($mainx*$wborder/100), (floor($mainx*$wborder/100)+15));
		$difheight=mt_rand(floor($mainy*$hborder/100), (floor($mainy*$hborder/100)+15));
		$difwidth2=$difwidth;
		$difheight2=$mainy-$height2-$difheight;
		$difwidth3=$mainx-$width2-$difwidth;
		$difheight3=$mainy-(2*$height2);
		$difheight4=$mainy-0.9*$mainy;
		
		$img1=imagecreateTRUEcolor($mainx, $mainy);
		$white=imagecolorallocate($img1, 255, 255, 255);
		imagefilledrectangle($img1, 0, 0, $mainx, $mainy, $white);
	
		imagecopy($img1, $img, 0, 0, 0, 0, $mainx, $mainy);
		imagecopy($img1, $im1, $difwidth2, $difheight4, 0, 0, $width2, $height2);
		usleep(250000);
		$time=time();
		$temp=$this->generate(10);
		
		if(file_exists(''.dirname(__FILE__).'/photos'.$this->chatId.'/')==FALSE) { mkdir(''.dirname(__FILE__).'/photos'.$this->chatId.'/'); }
		usleep(250000);
		
		return imagejpeg($img1, ''.dirname(__FILE__).'/photos'.$this->chatId.'/'.$time.'_'.$temp.'.jpg', 85);
		
    }
	
	/////
	public function generate($length1) 
	{
		$include_chars1 = "abcdefghijklmnopqrstuvwxyz";
		$charLength1 = strlen($include_chars1);
		$randomString1 = '';
		for($i1=0;$i1< $length1;$i1++) 
		{
			$randomString1 .= $include_chars1 [rand(0, $charLength1 - 1)];
		}
		return $randomString1;
	}
	
	
	/**
	 * Run api request
	 *
	 * @param string  $api_method  Method to be called.
	 * @param array   $params    (Optional) Array of parameters
	 *
	 * @link https://core.telegram.org/bots/api#available-methods
	 */
/////////////
	public function call( $api_method = null, $params = null ){
		if( !$api_method ){
            throw new Exception('Required "api_method" not supplied for call()');
		}

		$query = "{$this->apiUrl}{$this->apiToken}/{$api_method}";
		if( is_array( $params ) ){
			$query .= "?" . http_build_query( $params );
		}

		if( $this->debug ){
			@file_put_contents( "log.txt", $query . "\n", FILE_APPEND );
		}

		$context = $this->getStreamContext();

		ini_set('display_errors' , 1 );
		error_reporting(E_ERROR | E_WARNING | E_PARSE);
		ob_start();
		$result = file_get_contents( $query, false, $context );
		$decoded = $result ? @json_decode( $result, 1 ) : [];
		$err = ob_get_clean();
		if( !$result || !$decoded['ok'] ){
			if( $this->debug ){
				@file_put_contents( "log.txt", "Api request fail - {$err}\n {$result}\n", FILE_APPEND );
			}
            throw new Exception("Api request fail. Message: {$decoded['description']}. Query was: {$query}");
		}

		return $result;

	}

	/**
	 * Building stream context with or without proxy
	 *
	 * @return resource stream link
	 */
/////////////
	private function getStreamContext(){
		$stream_options = [
				'http' => [
					'method'  => 'POST',
					'ignore_errors' => '1'
					]
				];
		if( $this->proxy ){
			$stream_options = [
				'http' => [
					"method"  => "POST",
					"timeout" => 20,
					'ignore_errors' => '1',
					"proxy"   => $this->proxy,
					'request_fulluri' => True
				]
			]; 
		}
		if( $this->debug ){
			@file_put_contents( "log.txt", print_r( $stream_options, 1 ) . "\n", FILE_APPEND );
		}
		return stream_context_create( $stream_options );
	}

}




class TestBot extends TelegramBot
{
	protected $token = "xxxxxxxxxxxxxxxxxxxxxxxxx";
}



$bot = new TestBot();
/* if(file_exists(''.dirname(__FILE__).'/include'.$bot->api->chatId.'.php'))
{
	include_once(''.dirname(__FILE__).'/include'.$bot->api->chatId.'.php');
}	
 */

$bot->replyCommand();

